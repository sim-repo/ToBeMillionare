//
//  OnboardKit.swift
//  Millionare
//
//  Created by Igor Ivanov on 04.09.2020.
//  Copyright Â© 2020 None. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class OnboardKit : NSObject {

    //// Cache

    private struct Cache {
        static let gradientColor: UIColor = UIColor(red: 0.071, green: 0.306, blue: 0.937, alpha: 1.000)
        static let gradientColor2: UIColor = UIColor(red: 0.870, green: 0.000, blue: 1.000, alpha: 1.000)
        static let gradientColor3: UIColor = UIColor(red: 0.082, green: 0.627, blue: 1.000, alpha: 1.000)
        static let mainBackground: UIColor = UIColor(red: 0.141, green: 0.082, blue: 0.424, alpha: 1.000)
        static let primaryTextColor: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        static let honeycombesStrokeColor1: UIColor = UIColor(red: 0.000, green: 0.820, blue: 1.000, alpha: 1.000)
        static let markPGradientColor4: UIColor = UIColor(red: 0.988, green: 0.671, blue: 0.208, alpha: 0.500)
        static let gradientColor6: UIColor = UIColor(red: 0.145, green: 0.102, blue: 0.498, alpha: 1.000)
        static let gradientColor7: UIColor = UIColor(red: 0.224, green: 0.176, blue: 0.624, alpha: 1.000)
        static let lighting: UIColor = UIColor(red: 0.094, green: 0.114, blue: 0.847, alpha: 1.000)
        static let cubeConture: UIColor = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1.000)
        static let spaceship_floorColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        static let spaceship_floorColor2: UIColor = UIColor(red: 0.204, green: 0.127, blue: 0.752, alpha: 1.000)
        static let paint0_linear: CGGradient = CGGradient(colorsSpace: nil, colors: [OnboardKit.gradientColor.cgColor, OnboardKit.gradientColor2.cgColor, OnboardKit.gradientColor3.cgColor] as CFArray, locations: [0, 0.5, 1])!
        static let button_linear: CGGradient = CGGradient(colorsSpace: nil, colors: [OnboardKit.gradientColor6.cgColor, OnboardKit.gradientColor7.cgColor] as CFArray, locations: [0, 1])!
    }

    //// Colors

    @objc dynamic public class var gradientColor: UIColor { return Cache.gradientColor }
    @objc dynamic public class var gradientColor2: UIColor { return Cache.gradientColor2 }
    @objc dynamic public class var gradientColor3: UIColor { return Cache.gradientColor3 }
    @objc dynamic public class var mainBackground: UIColor { return Cache.mainBackground }
    @objc dynamic public class var primaryTextColor: UIColor { return Cache.primaryTextColor }
    @objc dynamic public class var honeycombesStrokeColor1: UIColor { return Cache.honeycombesStrokeColor1 }
    @objc dynamic public class var markPGradientColor4: UIColor { return Cache.markPGradientColor4 }
    @objc dynamic public class var gradientColor6: UIColor { return Cache.gradientColor6 }
    @objc dynamic public class var gradientColor7: UIColor { return Cache.gradientColor7 }
    @objc dynamic public class var lighting: UIColor { return Cache.lighting }
    @objc dynamic public class var cubeConture: UIColor { return Cache.cubeConture }
    @objc dynamic public class var spaceship_floorColor: UIColor { return Cache.spaceship_floorColor }
    @objc dynamic public class var spaceship_floorColor2: UIColor { return Cache.spaceship_floorColor2 }

    //// Gradients

    @objc dynamic public class var paint0_linear: CGGradient { return Cache.paint0_linear }
    @objc dynamic public class var button_linear: CGGradient { return Cache.button_linear }

    //// Drawing Methods

    @objc dynamic public class func drawSpaceshipDiscreteAnimationLayer2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 375, height: 812), resizing: ResizingBehavior = .aspectFit, circlesMove: CGFloat = 1, circlesLight: CGFloat = 0, discPathsSmoothAnimation: CGFloat = 0, discPathOpacityOffset: CGFloat = 0.1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 375, height: 812), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 375, y: resizedFrame.height / 812)


        //// Color Declarations
        let discPathColor2 = UIColor(red: 0.686, green: 0.022, blue: 0.958, alpha: 0.003)
        let discPathColor = UIColor(red: 0.883, green: 0.075, blue: 0.251, alpha: 0.395)
        let background = UIColor(red: 0.047, green: 0.049, blue: 0.299, alpha: 1.000)
        let primary = UIColor(red: 0.000, green: 0.902, blue: 0.922, alpha: 1.000)
        let spaceshipLight3Color = UIColor(red: 0.000, green: 0.941, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let discPath = CGGradient(colorsSpace: nil, colors: [discPathColor.cgColor, discPathColor2.cgColor] as CFArray, locations: [0, 1])!
        let spaceship_light_3 = CGGradient(colorsSpace: nil, colors: [spaceshipLight3Color.cgColor, spaceshipLight3Color.blended(withFraction: 0.5, of: UIColor.clear).cgColor, UIColor.clear.cgColor] as CFArray, locations: [0, 0.49, 0.86])!
        let clear_color = CGGradient(colorsSpace: nil, colors: [UIColor.clear.cgColor, UIColor.clear.cgColor] as CFArray, locations: [0, 1])!

        //// Variable Declarations
        let bigCircleExprY: CGFloat = 700 * circlesMove + 600 * (1 - circlesMove)
        let midCircle2ExprY: CGFloat = 740 * circlesMove + 810 * (1 - circlesMove)
        let circleLight1 = circlesLight > 0.01 && circlesLight <= 0.2 ? primary : background
        let circleLight2 = circlesLight > 0.2 && circlesLight <= 0.4 ? primary : background
        let circleLight3 = circlesLight > 0.4 && circlesLight <= 0.6 ? primary : background
        let circleLight4 = circlesLight > 0.6 && circlesLight <= 0.8 ? primary : background
        let circleLight5 = circlesLight > 0.8 && circlesLight <= 0.99 ? primary : background
        let circleLightGlow4 = circlesLight > 0.6 && circlesLight <= 0.8 ? spaceship_light_3 : clear_color
        let circleLightGlow5 = circlesLight > 0.4 && circlesLight <= 0.6 ? spaceship_light_3 : clear_color
        let circleLightGlow2 = circlesLight > 0.2 && circlesLight <= 0.4 ? spaceship_light_3 : clear_color
        let circleLightGlow1 = circlesLight > 0.01 && circlesLight <= 0.2 ? spaceship_light_3 : clear_color
        let circleLightGlow3 = circlesLight > 0.8 && circlesLight <= 0.99 ? spaceship_light_3 : clear_color
        let smallLights = circlesLight > 0 && circlesLight <= 0.5 ? primary : background
        let smallLightsGlow = circlesLight > 0 && circlesLight <= 0.5 ? spaceship_light_3 : clear_color
        let disc1PathOpacityExpr: CGFloat = discPathsSmoothAnimation < 0.1 ? discPathsSmoothAnimation * 20 : (discPathsSmoothAnimation > 0.5 - discPathOpacityOffset && discPathsSmoothAnimation <= 0.6 - discPathOpacityOffset ? (0.6 - discPathOpacityOffset - discPathsSmoothAnimation) * 20 : (discPathsSmoothAnimation > 0.6 - discPathOpacityOffset ? 0 : 1))
        let disc2PathOpacityExpr: CGFloat = discPathsSmoothAnimation < 0.2 || discPathsSmoothAnimation > 0.7 - discPathOpacityOffset ? 0 : (discPathsSmoothAnimation > 0.1 && discPathsSmoothAnimation <= 0.2 ? (discPathsSmoothAnimation - 0.1) * 20 : (discPathsSmoothAnimation > 0.6 - discPathOpacityOffset && discPathsSmoothAnimation <= 0.7 - discPathOpacityOffset ? (0.7 - discPathOpacityOffset - discPathsSmoothAnimation) * 20 : 1))
        let disc3PathOpacityExpr: CGFloat = discPathsSmoothAnimation < 0.3 || discPathsSmoothAnimation > 0.8 - discPathOpacityOffset ? 0 : (discPathsSmoothAnimation > 0.2 && discPathsSmoothAnimation <= 0.3 ? (discPathsSmoothAnimation - 0.2) * 20 : (discPathsSmoothAnimation > 0.7 - discPathOpacityOffset && discPathsSmoothAnimation <= 0.8 - discPathOpacityOffset ? (0.8 - discPathOpacityOffset - discPathsSmoothAnimation) * 20 : 1))
        let disc4PathOpacityExpr: CGFloat = discPathsSmoothAnimation < 0.4 || discPathsSmoothAnimation > 0.9 - discPathOpacityOffset ? 0 : (discPathsSmoothAnimation > 0.3 && discPathsSmoothAnimation <= 0.4 ? (discPathsSmoothAnimation - 0.3) * 20 : (discPathsSmoothAnimation > 0.8 - discPathOpacityOffset && discPathsSmoothAnimation <= 0.9 - discPathOpacityOffset ? (0.9 - discPathOpacityOffset - discPathsSmoothAnimation) * 20 : 1))

        //// Group 7
        context.saveGState()
        context.translateBy(x: 69, y: 49)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 3
        context.saveGState()
        context.translateBy(x: 383.79, y: (midCircle2ExprY + 85.1586652334))



        //// Oval 14 Drawing
        let oval14Path = UIBezierPath(ovalIn: CGRect(x: 179.94, y: 99.8, width: 6, height: 4.72))
        smallLights.setFill()
        oval14Path.fill()


        //// Oval 15 Drawing
        context.saveGState()
        context.translateBy(x: 108.21, y: 91.03)
        context.rotate(by: 8 * CGFloat.pi/180)

        let oval15Path = UIBezierPath(ovalIn: CGRect(x: -3.14, y: -2.38, width: 6, height: 4.46))
        smallLights.setFill()
        oval15Path.fill()

        context.restoreGState()


        //// Oval 16 Drawing
        context.saveGState()
        context.translateBy(x: 60.21, y: 67.82)
        context.rotate(by: 25 * CGFloat.pi/180)

        let oval16Path = UIBezierPath(ovalIn: CGRect(x: -3.03, y: -2.4, width: 6, height: 4.65))
        smallLights.setFill()
        oval16Path.fill()

        context.restoreGState()


        //// Oval 17 Drawing
        context.saveGState()
        context.translateBy(x: 32.04, y: 34.84)
        context.rotate(by: 65.5 * CGFloat.pi/180)

        let oval17Path = UIBezierPath(ovalIn: CGRect(x: -2.87, y: -1.66, width: 6, height: 3.18))
        smallLights.setFill()
        oval17Path.fill()

        context.restoreGState()


        //// Oval 18 Drawing
        context.saveGState()
        context.translateBy(x: 255.83, y: 92.55)
        context.rotate(by: -10.5 * CGFloat.pi/180)

        let oval18Path = UIBezierPath(ovalIn: CGRect(x: -3.04, y: -2.16, width: 6, height: 4.17))
        smallLights.setFill()
        oval18Path.fill()

        context.restoreGState()


        //// Oval 19 Drawing
        context.saveGState()
        context.translateBy(x: 310.02, y: 66.56)
        context.rotate(by: -34 * CGFloat.pi/180)

        let oval19Path = UIBezierPath(ovalIn: CGRect(x: -2.92, y: -2.1, width: 6, height: 3.85))
        smallLights.setFill()
        oval19Path.fill()

        context.restoreGState()


        //// Oval 20 Drawing
        context.saveGState()
        context.translateBy(x: 337.08, y: 33.27)
        context.rotate(by: -63.28 * CGFloat.pi/180)

        let oval20Path = UIBezierPath(ovalIn: CGRect(x: -3.16, y: -1.61, width: 6, height: 3.1))
        smallLights.setFill()
        oval20Path.fill()

        context.restoreGState()


        //// Glow 18 Drawing
        context.saveGState()
        context.translateBy(x: 231.6, y: 90.04)
        context.rotate(by: -18.61 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow18Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 55, height: 38.32))
        context.saveGState()
        glow18Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: 21.91, y: 13.06), startRadius: 4.44,
            endCenter: CGPoint(x: 23.76, y: 20.02), endRadius: 12.39,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 19 Drawing
        context.saveGState()
        context.translateBy(x: 285.65, y: 61.83)
        context.rotate(by: -18.61 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow19Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 55, height: 38.32))
        context.saveGState()
        glow19Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: 21.91, y: 13.06), startRadius: 2.97,
            endCenter: CGPoint(x: 23.76, y: 20.02), endRadius: 10.45,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 20 Drawing
        context.saveGState()
        context.translateBy(x: 338.17, y: 33.53)
        context.rotate(by: -50.11 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow20Path = UIBezierPath(ovalIn: CGRect(x: -21.86, y: -12.64, width: 55, height: 38.32))
        context.saveGState()
        glow20Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: 0.06, y: 0.43), startRadius: 2.97,
            endCenter: CGPoint(x: 1.91, y: 7.39), endRadius: 10.45,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 14 Drawing
        context.saveGState()
        context.translateBy(x: 188.86, y: 110.4)
        context.rotate(by: -0.61 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow14Path = UIBezierPath(ovalIn: CGRect(x: -28.11, y: -19.66, width: 55, height: 38.32))
        context.saveGState()
        glow14Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: -6.2, y: -6.6), startRadius: 4.44,
            endCenter: CGPoint(x: -4.35, y: 0.36), endRadius: 12.39,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 15 Drawing
        context.saveGState()
        context.translateBy(x: 108.55, y: 102.19)
        context.rotate(by: 35.89 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow15Path = UIBezierPath(ovalIn: CGRect(x: -28.11, y: -19.66, width: 55, height: 38.32))
        context.saveGState()
        glow15Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: -6.2, y: -6.6), startRadius: 4.44,
            endCenter: CGPoint(x: -4.35, y: 0.36), endRadius: 12.39,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 16 Drawing
        context.saveGState()
        context.translateBy(x: 58.03, y: 78.48)
        context.rotate(by: 47.39 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow16Path = UIBezierPath(ovalIn: CGRect(x: -28.11, y: -19.66, width: 55, height: 38.32))
        context.saveGState()
        glow16Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: -6.2, y: -6.6), startRadius: 4.44,
            endCenter: CGPoint(x: -4.35, y: 0.36), endRadius: 12.39,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 17 Drawing
        context.saveGState()
        context.translateBy(x: 23.93, y: 43.25)
        context.rotate(by: 78.39 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow17Path = UIBezierPath(ovalIn: CGRect(x: -28.11, y: -19.66, width: 55, height: 38.32))
        context.saveGState()
        glow17Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: -6.2, y: -6.6), startRadius: 4.44,
            endCenter: CGPoint(x: -4.35, y: 0.36), endRadius: 12.39,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: 306.29, y: (bigCircleExprY + 209.663352932))



        //// Oval 13 Drawing
        context.saveGState()
        context.translateBy(x: 24.36, y: 30.51)
        context.rotate(by: 44.33 * CGFloat.pi/180)

        let oval13Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 20, height: 8))
        circleLight1.setFill()
        oval13Path.fill()

        context.restoreGState()


        //// Oval 12 Drawing
        context.saveGState()
        context.translateBy(x: 114.43, y: 84.2)
        context.rotate(by: 19.5 * CGFloat.pi/180)

        let oval12Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 24.26, height: 9.21))
        circleLight2.setFill()
        oval12Path.fill()

        context.restoreGState()


        //// Oval 11 Drawing
        context.saveGState()
        context.translateBy(x: 496.98, y: 29.52)
        context.rotate(by: -47.21 * CGFloat.pi/180)

        let oval11Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 20.97, height: 7.28))
        circleLight5.setFill()
        oval11Path.fill()

        context.restoreGState()


        //// Oval 5 Drawing
        let oval5Path = UIBezierPath(ovalIn: CGRect(x: 251.68, y: 107.5, width: 27, height: 10))
        circleLight3.setFill()
        oval5Path.fill()


        //// Oval 6 Drawing
        context.saveGState()
        context.translateBy(x: 399.59, y: 87.51)
        context.rotate(by: -21.21 * CGFloat.pi/180)

        let oval6Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 24, height: 9))
        circleLight4.setFill()
        oval6Path.fill()

        context.restoreGState()


        //// Glow 4 Drawing
        context.saveGState()
        context.translateBy(x: 389.71, y: 89.54)
        context.rotate(by: -18.61 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow4Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 55, height: 38.32))
        context.saveGState()
        glow4Path.addClip()
        context.drawRadialGradient(circleLightGlow4,
            startCenter: CGPoint(x: 21.91, y: 13.06), startRadius: 12.48,
            endCenter: CGPoint(x: 23.76, y: 20.02), endRadius: 31.68,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 5 Drawing
        context.saveGState()
        context.translateBy(x: 268.38, y: 114.64)

        context.saveGState()
        context.setAlpha(0.4)

        let glow5Path = UIBezierPath(ovalIn: CGRect(x: -29.54, y: -23.27, width: 54.85, height: 52.65))
        context.saveGState()
        glow5Path.addClip()
        context.drawRadialGradient(circleLightGlow5,
            startCenter: CGPoint(x: -5.39, y: 0.36), startRadius: 6.74,
            endCenter: CGPoint(x: -5.38, y: 8.59), endRadius: 28.63,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 12 Drawing
        context.saveGState()
        context.translateBy(x: 126.89, y: 94.62)

        context.saveGState()
        context.setAlpha(0.4)

        let glow12Path = UIBezierPath(ovalIn: CGRect(x: -29.54, y: -23.27, width: 54.85, height: 52.65))
        context.saveGState()
        glow12Path.addClip()
        context.drawRadialGradient(circleLightGlow2,
            startCenter: CGPoint(x: -5.39, y: 0.36), startRadius: 6.74,
            endCenter: CGPoint(x: -5.38, y: 8.59), endRadius: 28.63,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 13 Drawing
        context.saveGState()
        context.translateBy(x: 29.54, y: 42.25)

        context.saveGState()
        context.setAlpha(0.4)

        let glow13Path = UIBezierPath(ovalIn: CGRect(x: -29.54, y: -23.27, width: 54.85, height: 52.65))
        context.saveGState()
        glow13Path.addClip()
        context.drawRadialGradient(circleLightGlow1,
            startCenter: CGPoint(x: -5.39, y: 0.36), startRadius: 6.74,
            endCenter: CGPoint(x: -5.38, y: 8.59), endRadius: 28.63,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 11 Drawing
        context.saveGState()
        context.translateBy(x: 487.08, y: 36.56)
        context.rotate(by: -41.65 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow11Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 55, height: 38.32))
        context.saveGState()
        glow11Path.addClip()
        context.drawRadialGradient(circleLightGlow3,
            startCenter: CGPoint(x: 21.91, y: 13.06), startRadius: 12.48,
            endCenter: CGPoint(x: 23.76, y: 20.02), endRadius: 31.68,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// layer_1_19
        context.saveGState()
        context.setAlpha(disc4PathOpacityExpr)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: 116.64, y: 466.68))
        bezier17Path.addLine(to: CGPoint(x: 453.82, y: 265))
        bezier17Path.addLine(to: CGPoint(x: 437.82, y: 296))
        bezier17Path.addLine(to: CGPoint(x: 437.82, y: 334))
        bezier17Path.addLine(to: CGPoint(x: 116.64, y: 529.91))
        bezier17Path.addLine(to: CGPoint(x: 116.64, y: 466.68))
        context.saveGState()
        bezier17Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 285.23, y: 265), end: CGPoint(x: 285.23, y: 529.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier17Path.lineWidth = 0.1
        bezier17Path.stroke()


        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier18Path.lineWidth = 0.1
        bezier18Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_17
        context.saveGState()
        context.setAlpha(disc3PathOpacityExpr)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 21 Drawing
        let bezier21Path = UIBezierPath()
        bezier21Path.move(to: CGPoint(x: 138.64, y: 480.68))
        bezier21Path.addLine(to: CGPoint(x: 475.82, y: 279))
        bezier21Path.addLine(to: CGPoint(x: 459.82, y: 310))
        bezier21Path.addLine(to: CGPoint(x: 459.82, y: 348))
        bezier21Path.addLine(to: CGPoint(x: 138.64, y: 543.91))
        bezier21Path.addLine(to: CGPoint(x: 138.64, y: 480.68))
        context.saveGState()
        bezier21Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 307.23, y: 279), end: CGPoint(x: 307.23, y: 543.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier21Path.lineWidth = 0.1
        bezier21Path.stroke()


        //// Bezier 22 Drawing
        let bezier22Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier22Path.lineWidth = 0.1
        bezier22Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_15
        context.saveGState()
        context.setAlpha(disc2PathOpacityExpr)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 25 Drawing
        let bezier25Path = UIBezierPath()
        bezier25Path.move(to: CGPoint(x: 158.64, y: 495.68))
        bezier25Path.addLine(to: CGPoint(x: 495.82, y: 294))
        bezier25Path.addLine(to: CGPoint(x: 479.82, y: 325))
        bezier25Path.addLine(to: CGPoint(x: 479.82, y: 363))
        bezier25Path.addLine(to: CGPoint(x: 158.64, y: 558.91))
        bezier25Path.addLine(to: CGPoint(x: 158.64, y: 495.68))
        context.saveGState()
        bezier25Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 327.23, y: 294), end: CGPoint(x: 327.23, y: 558.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier25Path.lineWidth = 0.1
        bezier25Path.stroke()


        //// Bezier 26 Drawing
        let bezier26Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier26Path.lineWidth = 0.1
        bezier26Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_13
        context.saveGState()
        context.setAlpha(disc1PathOpacityExpr)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 29 Drawing
        let bezier29Path = UIBezierPath()
        bezier29Path.move(to: CGPoint(x: 181.64, y: 507.68))
        bezier29Path.addLine(to: CGPoint(x: 518.82, y: 306))
        bezier29Path.addLine(to: CGPoint(x: 502.82, y: 337))
        bezier29Path.addLine(to: CGPoint(x: 502.82, y: 375))
        bezier29Path.addLine(to: CGPoint(x: 181.64, y: 570.91))
        bezier29Path.addLine(to: CGPoint(x: 181.64, y: 511.4))
        bezier29Path.addLine(to: CGPoint(x: 181.64, y: 507.68))
        context.saveGState()
        bezier29Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 350.23, y: 306), end: CGPoint(x: 350.23, y: 570.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier29Path.lineWidth = 0.1
        bezier29Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardBkgView_65(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 896), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 896), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 896)



        //// Image Declarations
        let profileBkg = UIImage(named: "profileBkg.png")!

        //// Picture Drawing
        context.saveGState()
        context.translateBy(x: -40.76, y: -38.75)
        context.scaleBy(x: 0.25, y: 0.25)

        let picturePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 2025, height: 4034))
        context.saveGState()
        picturePath.addClip()
        context.translateBy(x: 0, y: 0)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -profileBkg.size.height)
        context.draw(profileBkg.cgImage!, in: CGRect(x: 0, y: 0, width: profileBkg.size.width, height: profileBkg.size.height))
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardHoloView(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 896), resizing: ResizingBehavior = .aspectFit, moveToOnboard: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 896), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 896)


        //// Color Declarations
        let paint0_linear4Color = UIColor(red: 0.068, green: 0.008, blue: 0.523, alpha: 1.000)
        let paint0_linear4Color2 = UIColor(red: 0.249, green: 0.209, blue: 0.952, alpha: 1.000)
        let color = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 0.000)

        //// Gradient Declarations
        let paint0_linear4 = CGGradient(colorsSpace: nil, colors: [paint0_linear4Color.cgColor, paint0_linear4Color.blended(withFraction: 0.5, of: paint0_linear4Color2).cgColor, paint0_linear4Color2.cgColor] as CFArray, locations: [0, 0.51, 1])!

        //// Image Declarations
        let spaceshipHolo2 = UIImage(named: "spaceshipHolo2.png")!

        //// Variable Declarations
        let expression4: CGFloat = 15 * moveToOnboard

        //// Picture Drawing
        context.saveGState()
        context.translateBy(x: 143, y: 98)
        context.scaleBy(x: 0.2, y: 0.2)

        let picturePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 643, height: 891))
        context.saveGState()
        picturePath.addClip()
        context.translateBy(x: 0, y: 0)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -spaceshipHolo2.size.height)
        context.draw(spaceshipHolo2.cgImage!, in: CGRect(x: 0, y: 0, width: spaceshipHolo2.size.width, height: spaceshipHolo2.size.height))
        context.restoreGState()

        context.restoreGState()


        //// Group
        //// Mask Drawing
        context.saveGState()
        context.scaleBy(x: 1, y: expression4)

        let maskPath = UIBezierPath()
        maskPath.move(to: CGPoint(x: 0, y: 108.71))
        maskPath.addCurve(to: CGPoint(x: 64.61, y: 82.44), controlPoint1: CGPoint(x: 0, y: 108.71), controlPoint2: CGPoint(x: 17.39, y: 69.97))
        maskPath.addCurve(to: CGPoint(x: 192.28, y: 156.6), controlPoint1: CGPoint(x: 111.82, y: 94.91), controlPoint2: CGPoint(x: 136.24, y: 151.4))
        maskPath.addCurve(to: CGPoint(x: 288.79, y: 103.25), controlPoint1: CGPoint(x: 248.33, y: 161.81), controlPoint2: CGPoint(x: 233.44, y: 110.85))
        maskPath.addCurve(to: CGPoint(x: 414, y: 126.21), controlPoint1: CGPoint(x: 344.14, y: 95.66), controlPoint2: CGPoint(x: 414, y: 126.21))
        maskPath.addLine(to: CGPoint(x: 414, y: -0))
        maskPath.addLine(to: CGPoint(x: 0, y: -0))
        maskPath.addLine(to: CGPoint(x: 0, y: 108.71))
        maskPath.close()
        context.saveGState()
        maskPath.addClip()
        context.drawLinearGradient(paint0_linear4, start: CGPoint(x: 207, y: -0), end: CGPoint(x: 207, y: 156.98), options: [])
        context.restoreGState()

        context.restoreGState()


        //// Mask 4 Drawing
        context.saveGState()
        context.translateBy(x: 0, y: 31.58)
        context.scaleBy(x: 1, y: 1.6)

        let mask4Path = UIBezierPath()
        mask4Path.move(to: CGPoint(x: 0, y: 78.63))
        mask4Path.addCurve(to: CGPoint(x: 51.38, y: 48.96), controlPoint1: CGPoint(x: 0, y: 78.63), controlPoint2: CGPoint(x: 4.26, y: 49.09))
        mask4Path.addCurve(to: CGPoint(x: 194.98, y: 115.98), controlPoint1: CGPoint(x: 98.51, y: 48.82), controlPoint2: CGPoint(x: 140.99, y: 115.75))
        mask4Path.addCurve(to: CGPoint(x: 301.67, y: 68.04), controlPoint1: CGPoint(x: 248.97, y: 116.21), controlPoint2: CGPoint(x: 237.91, y: 68.31))
        mask4Path.addCurve(to: CGPoint(x: 414, y: 89.33), controlPoint1: CGPoint(x: 365.43, y: 67.76), controlPoint2: CGPoint(x: 414, y: 89.33))
        mask4Path.addLine(to: CGPoint(x: 409.92, y: 538.58))
        mask4Path.addLine(to: CGPoint(x: 0, y: 538.35))
        mask4Path.addLine(to: CGPoint(x: 0, y: 78.63))
        mask4Path.close()
        color.setFill()
        mask4Path.fill()

        context.restoreGState()




        //// Text Drawing
        let textRect = CGRect(x: 47.33, y: 320.39, width: 330.02, height: 137.14)
        let textTextContent = "1/4: Ð¡Ð¾Ð±ÐµÑÐ¸ÑÐµ ÑÐ°Ð·Ð±Ð¸ÑÑÐ¹ Ð·Ð¾Ð½Ð´ Ð·Ð° 30 ÑÐµÐ°Ð»ÑÐ½ÑÑ Ð´Ð½ÐµÐ¹, Ð·Ð°ÑÐ°Ð±Ð°ÑÑÐ²Ð°Ñ Ð² Ð¸Ð³ÑÐµ Ð¾ÑÐºÐ¸."
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .left
        let textFontAttributes = [
            .font: UIFont(name: "Play", size: 18)!,
            .foregroundColor: UIColor.white,
            .paragraphStyle: textStyle,
        ] as [NSAttributedString.Key: Any]

        let textTextHeight: CGFloat = textTextContent.boundingRect(with: CGSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: textRect)
        textTextContent.draw(in: CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardBkgView_47(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 375, height: 667), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 375, height: 667), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 375, y: resizedFrame.height / 667)



        //// Image Declarations
        let profileBkg = UIImage(named: "profileBkg.png")!

        //// Picture Drawing
        context.saveGState()
        context.translateBy(x: -34.31, y: -34.77)
        context.scaleBy(x: 0.22, y: 0.22)

        let picturePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 2041.4, height: 4001.53))
        context.saveGState()
        picturePath.addClip()
        context.translateBy(x: 0, y: 0)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -profileBkg.size.height)
        context.draw(profileBkg.cgImage!, in: CGRect(x: 0, y: 0, width: profileBkg.size.width, height: profileBkg.size.height))
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardSpaceship2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 896), resizing: ResizingBehavior = .aspectFit, spreadWings: CGFloat = 1, disc1PathOpacity: CGFloat = 0, disc1Move: CGFloat = 0, disc2PathOpacity: CGFloat = 0, disc2Move: CGFloat = 0, disc3PathOpacity: CGFloat = 0, disc3Move: CGFloat = 0, disc4PathOpacity: CGFloat = 0, disc4Move: CGFloat = 0, arc1Move: CGFloat = 0, arc2Move: CGFloat = 0, arc3Move: CGFloat = 0, arc4Move: CGFloat = 0, circlesMove: CGFloat = 1, redCubeMove: CGFloat = 0, redCubePathOpacity: CGFloat = 0, redCube2Move: CGFloat = 0, redCubePath2Opacity: CGFloat = 0, button1Opacity: CGFloat = 0, towerLightOpacity: CGFloat = 0, rayOpacity: CGFloat = 0, redCube3PathOpacity: CGFloat = 0, redCube3Move: CGFloat = 0, discPassLight1: CGFloat = 0, discPassLight2: CGFloat = 0, discPassLight3: CGFloat = 0, discPassLight4: CGFloat = 0, antennaMove1: CGFloat = 0, antennaMove2: CGFloat = 0, spaceDustMove: CGFloat = 0, onboardAnimation: CGFloat = 0.9, onboardOffset: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 896), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 896)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 414, resizedFrame.height / 896)


        //// Color Declarations
        let wingsColor = UIColor(red: 0.000, green: 0.203, blue: 1.000, alpha: 0.797)
        let wingsColor2 = UIColor(red: 0.129, green: 0.127, blue: 0.140, alpha: 0.752)
        let wingPlastineColor2 = UIColor(red: 0.022, green: 0.015, blue: 0.218, alpha: 1.000)
        let wingPlastine2Color = UIColor(red: 0.082, green: 0.481, blue: 0.490, alpha: 1.000)
        let wingPlastineColor = UIColor(red: 0.000, green: 0.902, blue: 0.922, alpha: 1.000)
        let discPathColor2 = UIColor(red: 0.686, green: 0.022, blue: 0.958, alpha: 0.003)
        let discPathColor = UIColor(red: 0.883, green: 0.075, blue: 0.251, alpha: 0.395)
        let cubePathColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.294)
        let discCircle1Color2 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let gradientColor106 = UIColor(red: 0.109, green: 0.339, blue: 0.728, alpha: 1.000)
        let darkPrimary = UIColor(red: 0.128, green: 0.449, blue: 0.479, alpha: 1.000)
        let background = UIColor(red: 0.047, green: 0.049, blue: 0.299, alpha: 1.000)
        let gradientColor107 = UIColor(red: 0.024, green: 0.709, blue: 0.982, alpha: 1.000)
        let cubePathColor2 = UIColor(red: 0.543, green: 0.110, blue: 0.742, alpha: 0.404)
        let discCircle1Color = UIColor(red: 0.407, green: 0.063, blue: 0.165, alpha: 1.000)
        let primary = UIColor(red: 0.000, green: 0.902, blue: 0.922, alpha: 1.000)
        let spaceshipLightColor = UIColor(red: 0.110, green: 0.725, blue: 0.860, alpha: 0.411)
        let spaceshipLightColor2 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.359)
        let spaceshipLight2Color = UIColor(red: 0.987, green: 0.000, blue: 0.000, alpha: 0.323)
        let spaceshipLight2Color2 = UIColor(red: 0.143, green: 0.030, blue: 0.896, alpha: 0.000)
        let spaceshipLight6Color = UIColor(red: 0.454, green: 0.005, blue: 1.000, alpha: 0.741)
        let spaceshipLight6Color2 = UIColor(red: 0.042, green: 0.048, blue: 0.097, alpha: 0.000)
        let fillColor3 = UIColor(red: 0.441, green: 0.163, blue: 0.479, alpha: 1.000)
        let fillColor6 = UIColor(red: 0.508, green: 0.272, blue: 0.539, alpha: 1.000)
        let fillColor7 = UIColor(red: 0.386, green: 0.081, blue: 0.221, alpha: 1.000)
        let fillColor8 = UIColor(red: 0.726, green: 0.154, blue: 0.391, alpha: 1.000)
        let fillColor9 = UIColor(red: 0.642, green: 0.135, blue: 0.350, alpha: 1.000)
        let fillColor10 = UIColor(red: 0.260, green: 0.518, blue: 0.664, alpha: 1.000)
        let discCircle2Color = UIColor(red: 0.490, green: 0.109, blue: 0.775, alpha: 1.000)
        let discCircle3Color = UIColor(red: 0.374, green: 0.170, blue: 1.000, alpha: 1.000)
        let discCircle4Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Gradient Declarations
        let wings = CGGradient(colorsSpace: nil, colors: [wingsColor.cgColor, wingsColor.blended(withFraction: 0.5, of: wingsColor2).cgColor, wingsColor2.cgColor] as CFArray, locations: [0, 0.29, 0.98])!
        let wingPlastine2 = CGGradient(colorsSpace: nil, colors: [wingPlastine2Color.cgColor, wingPlastine2Color.blended(withFraction: 0.5, of: wingPlastineColor2).cgColor, wingPlastineColor2.cgColor] as CFArray, locations: [0, 0.22, 1])!
        let wingPlastine = CGGradient(colorsSpace: nil, colors: [wingPlastineColor.cgColor, wingPlastineColor.blended(withFraction: 0.5, of: wingPlastineColor2).cgColor, wingPlastineColor2.cgColor] as CFArray, locations: [0, 0.36, 1])!
        let discPath = CGGradient(colorsSpace: nil, colors: [discPathColor.cgColor, discPathColor2.cgColor] as CFArray, locations: [0, 1])!
        let arc = CGGradient(colorsSpace: nil, colors: [gradientColor107.cgColor, gradientColor106.cgColor] as CFArray, locations: [0, 1])!
        let cubePath = CGGradient(colorsSpace: nil, colors: [cubePathColor.cgColor, cubePathColor2.cgColor] as CFArray, locations: [0, 1])!
        let discCircle1 = CGGradient(colorsSpace: nil, colors: [discCircle1Color.cgColor, discCircle1Color2.cgColor] as CFArray, locations: [0, 0.99])!
        let discCircle2 = CGGradient(colorsSpace: nil, colors: [discCircle2Color.cgColor, discCircle1Color2.cgColor] as CFArray, locations: [0, 0.99])!
        let discCircle3 = CGGradient(colorsSpace: nil, colors: [discCircle3Color.cgColor, discCircle1Color2.cgColor] as CFArray, locations: [0, 0.99])!
        let discCircle4 = CGGradient(colorsSpace: nil, colors: [discCircle4Color.cgColor, discCircle1Color2.cgColor] as CFArray, locations: [0, 0.99])!
        let spaceshipLight = CGGradient(colorsSpace: nil, colors: [UIColor.clear.cgColor, UIColor.clear.blended(withFraction: 0.5, of: spaceshipLightColor2).cgColor, spaceshipLightColor2.cgColor, spaceshipLightColor2.blended(withFraction: 0.5, of: spaceshipLightColor).cgColor, spaceshipLightColor.cgColor] as CFArray, locations: [0, 0.21, 0.39, 0.73, 1])!
        let spaceshipLight2 = CGGradient(colorsSpace: nil, colors: [spaceshipLight2Color.cgColor, spaceshipLight2Color2.cgColor] as CFArray, locations: [0, 1])!
        let spaceshipLight6 = CGGradient(colorsSpace: nil, colors: [spaceshipLight6Color.cgColor, spaceshipLight6Color.blended(withFraction: 0.5, of: spaceshipLight6Color2).cgColor, spaceshipLight6Color2.cgColor] as CFArray, locations: [0, 0.39, 0.58])!

        //// Shadow Declarations
        let shadow3 = NSShadow()
        shadow3.shadowColor = OnboardKit.gradientColor2
        shadow3.shadowOffset = CGSize(width: 0, height: 0)
        shadow3.shadowBlurRadius = 5
        let cubeShadow = NSShadow()
        cubeShadow.shadowColor = OnboardKit.cubeConture
        cubeShadow.shadowOffset = CGSize(width: 0, height: 0)
        cubeShadow.shadowBlurRadius = 4

        //// Image Declarations
        let layer4_2 = UIImage(named: "layer4_2.png")!
        let layer4_1 = UIImage(named: "layer4_1.png")!
        let layer_4_3 = UIImage(named: "layer_4_3.png")!
        let layer10 = UIImage(named: "layer10.png")!
        let layer11 = UIImage(named: "layer11.png")!
        let layer12 = UIImage(named: "layer12.png")!
        let layer9 = UIImage(named: "layer9.png")!
        let layer_6_1 = UIImage(named: "layer_6_1.png")!
        let layer_6_2 = UIImage(named: "layer_6_2.png")!

        //// Variable Declarations
        let plate3ExprX: CGFloat = 1166 * spreadWings + (1 - spreadWings) * 818
        let plate3ExprY: CGFloat = 323 * spreadWings + (1 - spreadWings) * 265
        let plate2ExprX: CGFloat = 991 * spreadWings + (1 - spreadWings) * 818
        let plate2ExprY: CGFloat = 295 * spreadWings + (1 - spreadWings) * 265
        let plate4ExprX: CGFloat = 0 + (1 - spreadWings) * 326
        let plate4ExprY: CGFloat = 0 + (1 - spreadWings) * 52
        let plate5ExprX: CGFloat = 158 * spreadWings + (1 - spreadWings) * 326
        let plate5ExprY: CGFloat = 24 * spreadWings + (1 - spreadWings) * 52
        let disc1ExprX: CGFloat = 545 * disc1Move + 230 * (1 - disc1Move)
        let disc1ExprY: CGFloat = 316 * disc1Move + 508 * (1 - disc1Move)
        let disc2ExprX: CGFloat = 526 * disc2Move + 210 * (1 - disc2Move)
        let disc2ExprY: CGFloat = 298 * disc2Move + 492 * (1 - disc2Move)
        let disc3ExprX: CGFloat = 508 * disc3Move + 190 * (1 - disc3Move)
        let disc3ExprY: CGFloat = 288 * disc3Move + 480 * (1 - disc3Move)
        let disc4ExprX: CGFloat = 486 * disc4Move + 168 * (1 - disc4Move)
        let disc4ExprY: CGFloat = 274 * disc4Move + 466 * (1 - disc4Move)
        let arc1ExprX: CGFloat = 452 * arc1Move + 112 * (1 - arc1Move)
        let arc1ExprY: CGFloat = 518 * arc1Move + 766 * (1 - arc1Move)
        let arc2ExprX: CGFloat = 512 * arc2Move + 314 * (1 - arc2Move)
        let arc2ExprY: CGFloat = 626 * arc2Move + 922 * (1 - arc2Move)
        let arc3ExprX: CGFloat = 716 * arc3Move + 1034 * (1 - arc3Move)
        let arc3ExprY: CGFloat = 530 * arc3Move + 766 * (1 - arc3Move)
        let arc4ExprX: CGFloat = 782 * arc4Move + 1068 * (1 - arc4Move)
        let arc4ExprY: CGFloat = 562 * arc4Move + 662 * (1 - arc4Move)
        let bigCircleExprY: CGFloat = 700 * circlesMove + 600 * (1 - circlesMove)
        let midCircle2ExprY: CGFloat = 740 * circlesMove + 810 * (1 - circlesMove)
        let smallCircle3ExprY: CGFloat = 810 * circlesMove + 820 * (1 - circlesMove)
        let redCubeExprX: CGFloat = 578 * redCubeMove + 88 * (1 - redCubeMove)
        let redCubeExprY: CGFloat = 406 * redCubeMove + 424 * (1 - redCubeMove)
        let redCube2ExprX: CGFloat = 690 * redCube2Move + 1058 * (1 - redCube2Move)
        let redCube2ExprY: CGFloat = 404 * redCube2Move + 404 * (1 - redCube2Move)
        let redCube3ExprX: CGFloat = 720 * redCube3Move + 896 * (1 - redCube3Move)
        let redCube3ExprY: CGFloat = 578 * redCube3Move + 686 * (1 - redCube3Move)
        let antennaRotationPhase1: CGFloat = 180 * antennaMove1
        let antennaRotationPhase2: CGFloat = 180 * antennaMove2
        let spaceDustExprY: CGFloat = 700 * spaceDustMove + 860 * (1 - spaceDustMove)
        let spaceshipMovingExp: CGFloat = onboardAnimation < 0.1 ? 200 : (onboardAnimation >= 0.1 && onboardAnimation <= 0.2 ? 200 + (onboardAnimation - 0.1) * 360 : 200 + (0.2 - 0.1) * 360)
        let spaceshipOpacity2: CGFloat = onboardAnimation >= 0.8 && onboardAnimation <= 1 ? 1 : 0
        let scaleSpacehipExp: CGFloat = onboardAnimation <= 0.1 ? 0.07 * (1.1 - onboardAnimation) : (onboardAnimation <= 0.2 + onboardOffset ? 0.07 : (onboardAnimation >= 0.2 + onboardOffset && onboardAnimation <= 0.5 + onboardOffset ? (0.5 - onboardAnimation + onboardOffset) * (1.0 / (0.5 - 0.2)) * 0.07 : 0))

        //// Group 7
        context.saveGState()
        context.translateBy(x: spaceshipMovingExp, y: 328.19)
        context.scaleBy(x: scaleSpacehipExp, y: scaleSpacehipExp)

        context.setAlpha(spaceshipOpacity2)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 8
        context.saveGState()
        context.translateBy(x: 15.9, y: (spaceDustExprY - 2235.61941964))

        context.setAlpha(rayOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Oval 39 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval39Path = UIBezierPath(ovalIn: CGRect(x: 49.34, y: 265.33, width: 2, height: 4))
        UIColor.white.setFill()
        oval39Path.fill()

        context.restoreGState()


        //// Oval 40 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval40Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 261.52, width: 3, height: 4))
        UIColor.white.setFill()
        oval40Path.fill()

        context.restoreGState()


        //// Oval 41 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval41Path = UIBezierPath(ovalIn: CGRect(x: 33, y: 329.21, width: 2, height: 5))
        UIColor.white.setFill()
        oval41Path.fill()

        context.restoreGState()


        //// Oval 42 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval42Path = UIBezierPath(ovalIn: CGRect(x: 75.34, y: 318.33, width: 3, height: 5))
        UIColor.white.setFill()
        oval42Path.fill()

        context.restoreGState()


        //// Oval 43 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval43Path = UIBezierPath(ovalIn: CGRect(x: 61.8, y: 435.59, width: 3, height: 4))
        UIColor.white.setFill()
        oval43Path.fill()

        context.restoreGState()


        //// Oval 44 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval44Path = UIBezierPath(ovalIn: CGRect(x: 21.14, y: 410.35, width: 1, height: 4))
        UIColor.white.setFill()
        oval44Path.fill()

        context.restoreGState()


        //// Oval 45 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval45Path = UIBezierPath(ovalIn: CGRect(x: 91.24, y: 560.64, width: 2, height: 4))
        UIColor.white.setFill()
        oval45Path.fill()

        context.restoreGState()


        //// Oval 46 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval46Path = UIBezierPath(ovalIn: CGRect(x: 110.34, y: 387.33, width: 2, height: 7))
        UIColor.white.setFill()
        oval46Path.fill()

        context.restoreGState()


        //// Oval 47 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval47Path = UIBezierPath(ovalIn: CGRect(x: 100.48, y: 267.14, width: 3, height: 6))
        UIColor.white.setFill()
        oval47Path.fill()

        context.restoreGState()


        //// Oval 48 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval48Path = UIBezierPath(ovalIn: CGRect(x: 31.26, y: 528.71, width: 2, height: 5))
        UIColor.white.setFill()
        oval48Path.fill()

        context.restoreGState()


        //// Oval 49 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval49Path = UIBezierPath(ovalIn: CGRect(x: 137.34, y: 441.33, width: 2, height: 7))
        UIColor.white.setFill()
        oval49Path.fill()

        context.restoreGState()


        //// Oval 50 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval50Path = UIBezierPath(ovalIn: CGRect(x: 59.89, y: 140.07, width: 2, height: 4))
        UIColor.white.setFill()
        oval50Path.fill()

        context.restoreGState()


        //// Oval 51 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval51Path = UIBezierPath(ovalIn: CGRect(x: 22.09, y: 88.14, width: 2, height: 5))
        UIColor.white.setFill()
        oval51Path.fill()

        context.restoreGState()


        //// Oval 52 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval52Path = UIBezierPath(ovalIn: CGRect(x: 117.34, y: 303.33, width: 3, height: 4))
        UIColor.white.setFill()
        oval52Path.fill()

        context.restoreGState()


        //// Oval 53 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval53Path = UIBezierPath(ovalIn: CGRect(x: 121.59, y: 59, width: 2, height: 5))
        UIColor.white.setFill()
        oval53Path.fill()

        context.restoreGState()


        //// Oval 54 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval54Path = UIBezierPath(ovalIn: CGRect(x: 21.21, y: 184.2, width: 1, height: 5))
        UIColor.white.setFill()
        oval54Path.fill()

        context.restoreGState()


        //// Oval 55 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval55Path = UIBezierPath(ovalIn: CGRect(x: 126.87, y: 166.16, width: 2, height: 7))
        UIColor.white.setFill()
        oval55Path.fill()

        context.restoreGState()


        //// Oval 56 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval56Path = UIBezierPath(ovalIn: CGRect(x: 152.34, y: 374.33, width: 3, height: 4))
        UIColor.white.setFill()
        oval56Path.fill()

        context.restoreGState()


        //// Oval 57 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval57Path = UIBezierPath(ovalIn: CGRect(x: 59.34, y: 254.33, width: 2, height: 4))
        UIColor.white.setFill()
        oval57Path.fill()

        context.restoreGState()


        //// Oval 58 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval58Path = UIBezierPath(ovalIn: CGRect(x: 10, y: 249.52, width: 3, height: 5))
        UIColor.white.setFill()
        oval58Path.fill()

        context.restoreGState()


        //// Oval 59 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval59Path = UIBezierPath(ovalIn: CGRect(x: 43, y: 318.21, width: 2, height: 5))
        UIColor.white.setFill()
        oval59Path.fill()

        context.restoreGState()


        //// Oval 60 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval60Path = UIBezierPath(ovalIn: CGRect(x: 85.34, y: 259.33, width: 3, height: 5))
        UIColor.white.setFill()
        oval60Path.fill()

        context.restoreGState()


        //// Oval 61 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval61Path = UIBezierPath(ovalIn: CGRect(x: 71.8, y: 375.59, width: 3, height: 5))
        UIColor.white.setFill()
        oval61Path.fill()

        context.restoreGState()


        //// Oval 62 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval62Path = UIBezierPath(ovalIn: CGRect(x: 31.14, y: 351.35, width: 1, height: 4))
        UIColor.white.setFill()
        oval62Path.fill()

        context.restoreGState()


        //// Oval 63 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval63Path = UIBezierPath(ovalIn: CGRect(x: 101.24, y: 500.64, width: 2, height: 5))
        UIColor.white.setFill()
        oval63Path.fill()

        context.restoreGState()


        //// Oval 64 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval64Path = UIBezierPath(ovalIn: CGRect(x: 120.34, y: 328.33, width: 2, height: 7))
        UIColor.white.setFill()
        oval64Path.fill()

        context.restoreGState()


        //// Oval 65 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval65Path = UIBezierPath(ovalIn: CGRect(x: 110.48, y: 208.14, width: 3, height: 6))
        UIColor.white.setFill()
        oval65Path.fill()

        context.restoreGState()


        //// Oval 66 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval66Path = UIBezierPath(ovalIn: CGRect(x: 41.26, y: 469.71, width: 2, height: 5))
        UIColor.white.setFill()
        oval66Path.fill()

        context.restoreGState()


        //// Oval 67 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval67Path = UIBezierPath(ovalIn: CGRect(x: 147.34, y: 382.33, width: 2, height: 6))
        UIColor.white.setFill()
        oval67Path.fill()

        context.restoreGState()


        //// Oval 68 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval68Path = UIBezierPath(ovalIn: CGRect(x: 69.89, y: 80.07, width: 2, height: 5))
        UIColor.white.setFill()
        oval68Path.fill()

        context.restoreGState()


        //// Oval 69 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval69Path = UIBezierPath(ovalIn: CGRect(x: 32.09, y: 29.14, width: 2, height: 5))
        UIColor.white.setFill()
        oval69Path.fill()

        context.restoreGState()


        //// Oval 70 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval70Path = UIBezierPath(ovalIn: CGRect(x: 127.34, y: 244.33, width: 3, height: 4))
        UIColor.white.setFill()
        oval70Path.fill()

        context.restoreGState()


        //// Oval 71 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval71Path = UIBezierPath(ovalIn: CGRect(x: 131.59, y: 0, width: 2, height: 4))
        UIColor.white.setFill()
        oval71Path.fill()

        context.restoreGState()


        //// Oval 72 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval72Path = UIBezierPath(ovalIn: CGRect(x: 31.21, y: 125.2, width: 1, height: 5))
        UIColor.white.setFill()
        oval72Path.fill()

        context.restoreGState()


        //// Oval 73 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval73Path = UIBezierPath(ovalIn: CGRect(x: 136.87, y: 107.16, width: 2, height: 7))
        UIColor.white.setFill()
        oval73Path.fill()

        context.restoreGState()


        //// Oval 74 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval74Path = UIBezierPath(ovalIn: CGRect(x: 162.34, y: 315.33, width: 3, height: 4))
        UIColor.white.setFill()
        oval74Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 4
        context.saveGState()
        context.setAlpha(rayOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Oval 21 Drawing
        let oval21Path = UIBezierPath(ovalIn: CGRect(x: 61.24, y: -1329.63, width: 3, height: 3))
        UIColor.white.setFill()
        oval21Path.fill()


        //// Oval 22 Drawing
        let oval22Path = UIBezierPath(ovalIn: CGRect(x: 4.9, y: -1331.44, width: 3, height: 3))
        UIColor.white.setFill()
        oval22Path.fill()


        //// Oval 23 Drawing
        let oval23Path = UIBezierPath(ovalIn: CGRect(x: 41.89, y: -1292.75, width: 3, height: 3))
        UIColor.white.setFill()
        oval23Path.fill()


        //// Oval 24 Drawing
        let oval24Path = UIBezierPath(ovalIn: CGRect(x: 91.24, y: -1299.63, width: 3, height: 3))
        UIColor.white.setFill()
        oval24Path.fill()


        //// Oval 25 Drawing
        let oval25Path = UIBezierPath(ovalIn: CGRect(x: 75.7, y: -1233.37, width: 3, height: 3))
        UIColor.white.setFill()
        oval25Path.fill()


        //// Oval 26 Drawing
        let oval26Path = UIBezierPath(ovalIn: CGRect(x: 28.04, y: -1247.61, width: 3, height: 3))
        UIColor.white.setFill()
        oval26Path.fill()


        //// Oval 27 Drawing
        let oval27Path = UIBezierPath(ovalIn: CGRect(x: 109.14, y: -1163.32, width: 3, height: 3))
        UIColor.white.setFill()
        oval27Path.fill()


        //// Oval 28 Drawing
        let oval28Path = UIBezierPath(ovalIn: CGRect(x: 131.24, y: -1259.63, width: 3, height: 3))
        UIColor.white.setFill()
        oval28Path.fill()


        //// Oval 29 Drawing
        let oval29Path = UIBezierPath(ovalIn: CGRect(x: 119.38, y: -1327.82, width: 3, height: 3))
        UIColor.white.setFill()
        oval29Path.fill()


        //// Oval 30 Drawing
        let oval30Path = UIBezierPath(ovalIn: CGRect(x: 40.16, y: -1181.24, width: 3, height: 3))
        UIColor.white.setFill()
        oval30Path.fill()


        //// Oval 31 Drawing
        let oval31Path = UIBezierPath(ovalIn: CGRect(x: 161.24, y: -1229.63, width: 3, height: 3))
        UIColor.white.setFill()
        oval31Path.fill()


        //// Oval 32 Drawing
        let oval32Path = UIBezierPath(ovalIn: CGRect(x: 72.79, y: -1399.89, width: 3, height: 3))
        UIColor.white.setFill()
        oval32Path.fill()


        //// Oval 33 Drawing
        let oval33Path = UIBezierPath(ovalIn: CGRect(x: 29.98, y: -1428.81, width: 3, height: 3))
        UIColor.white.setFill()
        oval33Path.fill()


        //// Oval 34 Drawing
        let oval34Path = UIBezierPath(ovalIn: CGRect(x: 139.24, y: -1307.63, width: 3, height: 3))
        UIColor.white.setFill()
        oval34Path.fill()


        //// Oval 35 Drawing
        let oval35Path = UIBezierPath(ovalIn: CGRect(x: 143.49, y: -1444.96, width: 3, height: 3))
        UIColor.white.setFill()
        oval35Path.fill()


        //// Oval 36 Drawing
        let oval36Path = UIBezierPath(ovalIn: CGRect(x: 28.11, y: -1374.76, width: 3, height: 3))
        UIColor.white.setFill()
        oval36Path.fill()


        //// Oval 37 Drawing
        let oval37Path = UIBezierPath(ovalIn: CGRect(x: 148.77, y: -1383.8, width: 3, height: 3))
        UIColor.white.setFill()
        oval37Path.fill()


        //// Oval 38 Drawing
        let oval38Path = UIBezierPath(ovalIn: CGRect(x: 179.24, y: -1267.63, width: 3, height: 3))
        UIColor.white.setFill()
        oval38Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_42 Drawing
        context.saveGState()
        context.setAlpha(rayOpacity)

        let layer_1_42Path = UIBezierPath()
        layer_1_42Path.move(to: CGPoint(x: 41.76, y: -1495.62))
        layer_1_42Path.addLine(to: CGPoint(x: -66.24, y: -1062.62))
        layer_1_42Path.addLine(to: CGPoint(x: 246.76, y: -1062.62))
        layer_1_42Path.addLine(to: CGPoint(x: 152.76, y: -1495.62))
        layer_1_42Path.addLine(to: CGPoint(x: 41.76, y: -1495.62))
        layer_1_42Path.close()
        context.saveGState()
        layer_1_42Path.addClip()
        context.drawLinearGradient(spaceshipLight, start: CGPoint(x: 90.26, y: -1062.62), end: CGPoint(x: 90.26, y: -1495.62), options: [])
        context.restoreGState()

        context.restoreGState()


        //// layer_1_40 Drawing
        let layer_1_40Rect = CGRect(x: -28.24, y: (smallCircle3ExprY - 1941.94754464), width: 255, height: 152)
        let layer_1_40Path = UIBezierPath(rect: layer_1_40Rect)
        context.saveGState()
        layer_1_40Path.addClip()
        context.translateBy(x: floor(layer_1_40Rect.minX + 0.5), y: floor(layer_1_40Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer12.size.height)
        context.draw(layer12.cgImage!, in: CGRect(x: 0, y: 0, width: layer12.size.width, height: layer12.size.height))
        context.restoreGState()


        //// Group 3
        context.saveGState()
        context.translateBy(x: -61, y: (midCircle2ExprY - 2245.61941964))



        //// layer_1_39 Drawing
        let layer_1_39Path = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 317, height: 191))
        context.saveGState()
        layer_1_39Path.addClip()
        context.translateBy(x: 0, y: 0)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer11.size.height)
        context.draw(layer11.cgImage!, in: CGRect(x: 0, y: 0, width: layer11.size.width, height: layer11.size.height))
        context.restoreGState()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: -179.63, y: (bigCircleExprY - 2247.28348214))



        //// layer_1_41 Drawing
        let layer_1_41Path = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 551, height: 331))
        context.saveGState()
        layer_1_41Path.addClip()
        context.translateBy(x: 0, y: 0)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer10.size.height)
        context.draw(layer10.cgImage!, in: CGRect(x: 0, y: 0, width: layer10.size.width, height: layer10.size.height))
        context.restoreGState()



        context.restoreGState()


        //// layer_1_38 Drawing
        let layer_1_38Path = UIBezierPath(rect: CGRect(x: -130.24, y: -1895.62, width: 452, height: 269))
        context.saveGState()
        layer_1_38Path.addClip()
        context.translateBy(x: -130, y: -1896)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer_4_3.size.height)
        context.draw(layer_4_3.cgImage!, in: CGRect(x: 0, y: 0, width: layer_4_3.size.width, height: layer_4_3.size.height))
        context.restoreGState()


        //// layer_1_37 Drawing
        let layer_1_37Path = UIBezierPath(rect: CGRect(x: -130.24, y: -1815.62, width: 453, height: 339))
        context.saveGState()
        layer_1_37Path.addClip()
        context.translateBy(x: -130, y: -1816)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer9.size.height)
        context.draw(layer9.cgImage!, in: CGRect(x: 0, y: 0, width: layer9.size.width, height: layer9.size.height))
        context.restoreGState()


        //// layer_1_36
        context.saveGState()
        context.translateBy(x: (arc4ExprX - 580.638062984), y: (arc4ExprY - 2247.09402902))



        //// Bezier 57 Drawing
        let bezier57Path = UIBezierPath()
        bezier57Path.move(to: CGPoint(x: 123.77, y: 0))
        bezier57Path.addCurve(to: CGPoint(x: 56.6, y: 92.78), controlPoint1: CGPoint(x: 123.95, y: 33.59), controlPoint2: CGPoint(x: 101.58, y: 67.16))
        bezier57Path.addLine(to: CGPoint(x: 0.2, y: 60.86))
        bezier57Path.addCurve(to: CGPoint(x: 44.26, y: 0), controlPoint1: CGPoint(x: 29.71, y: 44.06), controlPoint2: CGPoint(x: 44.38, y: 22.03))
        bezier57Path.addLine(to: CGPoint(x: 123.77, y: 0))
        bezier57Path.close()
        context.saveGState()
        bezier57Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 0.2, y: 46.39),
            end: CGPoint(x: 123.76, y: 46.39),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 58 Drawing
        let bezier58Path = UIBezierPath()
        bezier58Path.move(to: CGPoint(x: 124.13, y: 0))
        bezier58Path.addCurve(to: CGPoint(x: 124.09, y: 3), controlPoint1: CGPoint(x: 124.14, y: 1), controlPoint2: CGPoint(x: 124.12, y: 2))
        bezier58Path.addCurve(to: CGPoint(x: 124.07, y: 3.37), controlPoint1: CGPoint(x: 124.08, y: 3.12), controlPoint2: CGPoint(x: 124.07, y: 3.25))
        bezier58Path.addCurve(to: CGPoint(x: 123.91, y: 6.18), controlPoint1: CGPoint(x: 124.03, y: 4.31), controlPoint2: CGPoint(x: 123.98, y: 5.24))
        bezier58Path.addCurve(to: CGPoint(x: 123.88, y: 6.51), controlPoint1: CGPoint(x: 123.9, y: 6.29), controlPoint2: CGPoint(x: 123.89, y: 6.39))
        bezier58Path.addCurve(to: CGPoint(x: 123.6, y: 9.35), controlPoint1: CGPoint(x: 123.8, y: 7.45), controlPoint2: CGPoint(x: 123.71, y: 8.4))
        bezier58Path.addCurve(to: CGPoint(x: 123.57, y: 9.62), controlPoint1: CGPoint(x: 123.59, y: 9.44), controlPoint2: CGPoint(x: 123.57, y: 9.53))
        bezier58Path.addCurve(to: CGPoint(x: 123.15, y: 12.52), controlPoint1: CGPoint(x: 123.44, y: 10.59), controlPoint2: CGPoint(x: 123.31, y: 11.56))
        bezier58Path.addCurve(to: CGPoint(x: 123.12, y: 12.72), controlPoint1: CGPoint(x: 123.14, y: 12.59), controlPoint2: CGPoint(x: 123.13, y: 12.65))
        bezier58Path.addCurve(to: CGPoint(x: 122.57, y: 15.68), controlPoint1: CGPoint(x: 122.96, y: 13.7), controlPoint2: CGPoint(x: 122.78, y: 14.69))
        bezier58Path.addCurve(to: CGPoint(x: 121.86, y: 18.84), controlPoint1: CGPoint(x: 122.36, y: 16.73), controlPoint2: CGPoint(x: 122.12, y: 17.79))
        bezier58Path.addCurve(to: CGPoint(x: 121.8, y: 19.05), controlPoint1: CGPoint(x: 121.84, y: 18.91), controlPoint2: CGPoint(x: 121.82, y: 18.98))
        bezier58Path.addCurve(to: CGPoint(x: 121, y: 22), controlPoint1: CGPoint(x: 121.55, y: 20.03), controlPoint2: CGPoint(x: 121.29, y: 21.01))
        bezier58Path.addCurve(to: CGPoint(x: 120.67, y: 23.07), controlPoint1: CGPoint(x: 120.9, y: 22.36), controlPoint2: CGPoint(x: 120.77, y: 22.71))
        bezier58Path.addCurve(to: CGPoint(x: 120.02, y: 25.14), controlPoint1: CGPoint(x: 120.46, y: 23.76), controlPoint2: CGPoint(x: 120.25, y: 24.45))
        bezier58Path.addCurve(to: CGPoint(x: 119.56, y: 26.4), controlPoint1: CGPoint(x: 119.87, y: 25.56), controlPoint2: CGPoint(x: 119.71, y: 25.98))
        bezier58Path.addCurve(to: CGPoint(x: 118.89, y: 28.27), controlPoint1: CGPoint(x: 119.34, y: 27.02), controlPoint2: CGPoint(x: 119.13, y: 27.65))
        bezier58Path.addCurve(to: CGPoint(x: 117.78, y: 31.03), controlPoint1: CGPoint(x: 118.54, y: 29.19), controlPoint2: CGPoint(x: 118.17, y: 30.11))
        bezier58Path.addCurve(to: CGPoint(x: 117.64, y: 31.36), controlPoint1: CGPoint(x: 117.74, y: 31.14), controlPoint2: CGPoint(x: 117.69, y: 31.25))
        bezier58Path.addCurve(to: CGPoint(x: 116.43, y: 34.08), controlPoint1: CGPoint(x: 117.26, y: 32.27), controlPoint2: CGPoint(x: 116.85, y: 33.17))
        bezier58Path.addCurve(to: CGPoint(x: 116.25, y: 34.47), controlPoint1: CGPoint(x: 116.37, y: 34.21), controlPoint2: CGPoint(x: 116.31, y: 34.34))
        bezier58Path.addCurve(to: CGPoint(x: 114.93, y: 37.14), controlPoint1: CGPoint(x: 115.83, y: 35.36), controlPoint2: CGPoint(x: 115.39, y: 36.25))
        bezier58Path.addCurve(to: CGPoint(x: 114.72, y: 37.55), controlPoint1: CGPoint(x: 114.86, y: 37.28), controlPoint2: CGPoint(x: 114.79, y: 37.41))
        bezier58Path.addCurve(to: CGPoint(x: 113.3, y: 40.19), controlPoint1: CGPoint(x: 114.26, y: 38.43), controlPoint2: CGPoint(x: 113.79, y: 39.32))
        bezier58Path.addCurve(to: CGPoint(x: 113.06, y: 40.61), controlPoint1: CGPoint(x: 113.22, y: 40.33), controlPoint2: CGPoint(x: 113.14, y: 40.47))
        bezier58Path.addCurve(to: CGPoint(x: 111.51, y: 43.26), controlPoint1: CGPoint(x: 112.56, y: 41.5), controlPoint2: CGPoint(x: 112.04, y: 42.38))
        bezier58Path.addCurve(to: CGPoint(x: 111.26, y: 43.67), controlPoint1: CGPoint(x: 111.43, y: 43.4), controlPoint2: CGPoint(x: 111.35, y: 43.53))
        bezier58Path.addCurve(to: CGPoint(x: 109.53, y: 46.38), controlPoint1: CGPoint(x: 110.7, y: 44.57), controlPoint2: CGPoint(x: 110.13, y: 45.48))
        bezier58Path.addCurve(to: CGPoint(x: 109.47, y: 46.47), controlPoint1: CGPoint(x: 109.51, y: 46.41), controlPoint2: CGPoint(x: 109.5, y: 46.44))
        bezier58Path.addCurve(to: CGPoint(x: 107.65, y: 49.15), controlPoint1: CGPoint(x: 108.88, y: 47.37), controlPoint2: CGPoint(x: 108.27, y: 48.26))
        bezier58Path.addCurve(to: CGPoint(x: 107.41, y: 49.49), controlPoint1: CGPoint(x: 107.57, y: 49.26), controlPoint2: CGPoint(x: 107.49, y: 49.38))
        bezier58Path.addCurve(to: CGPoint(x: 105.51, y: 52.08), controlPoint1: CGPoint(x: 106.79, y: 50.36), controlPoint2: CGPoint(x: 106.16, y: 51.22))
        bezier58Path.addCurve(to: CGPoint(x: 105.16, y: 52.54), controlPoint1: CGPoint(x: 105.39, y: 52.23), controlPoint2: CGPoint(x: 105.27, y: 52.39))
        bezier58Path.addCurve(to: CGPoint(x: 103.19, y: 55.05), controlPoint1: CGPoint(x: 104.52, y: 53.38), controlPoint2: CGPoint(x: 103.86, y: 54.22))
        bezier58Path.addCurve(to: CGPoint(x: 102.73, y: 55.62), controlPoint1: CGPoint(x: 103.03, y: 55.24), controlPoint2: CGPoint(x: 102.88, y: 55.43))
        bezier58Path.addCurve(to: CGPoint(x: 100.89, y: 57.8), controlPoint1: CGPoint(x: 102.12, y: 56.35), controlPoint2: CGPoint(x: 101.51, y: 57.08))
        bezier58Path.addCurve(to: CGPoint(x: 100.46, y: 58.3), controlPoint1: CGPoint(x: 100.74, y: 57.97), controlPoint2: CGPoint(x: 100.61, y: 58.14))
        bezier58Path.addCurve(to: CGPoint(x: 98.22, y: 60.82), controlPoint1: CGPoint(x: 99.73, y: 59.15), controlPoint2: CGPoint(x: 98.98, y: 59.98))
        bezier58Path.addCurve(to: CGPoint(x: 97.7, y: 61.38), controlPoint1: CGPoint(x: 98.05, y: 61.01), controlPoint2: CGPoint(x: 97.87, y: 61.19))
        bezier58Path.addCurve(to: CGPoint(x: 95.66, y: 63.53), controlPoint1: CGPoint(x: 97.03, y: 62.1), controlPoint2: CGPoint(x: 96.36, y: 62.81))
        bezier58Path.addCurve(to: CGPoint(x: 95.2, y: 64.01), controlPoint1: CGPoint(x: 95.51, y: 63.69), controlPoint2: CGPoint(x: 95.35, y: 63.85))
        bezier58Path.addCurve(to: CGPoint(x: 92.73, y: 66.47), controlPoint1: CGPoint(x: 94.39, y: 64.84), controlPoint2: CGPoint(x: 93.56, y: 65.65))
        bezier58Path.addCurve(to: CGPoint(x: 92.15, y: 67.02), controlPoint1: CGPoint(x: 92.53, y: 66.66), controlPoint2: CGPoint(x: 92.34, y: 66.84))
        bezier58Path.addCurve(to: CGPoint(x: 89.9, y: 69.13), controlPoint1: CGPoint(x: 91.41, y: 67.73), controlPoint2: CGPoint(x: 90.66, y: 68.43))
        bezier58Path.addCurve(to: CGPoint(x: 89.41, y: 69.59), controlPoint1: CGPoint(x: 89.74, y: 69.28), controlPoint2: CGPoint(x: 89.58, y: 69.44))
        bezier58Path.addCurve(to: CGPoint(x: 87.88, y: 70.94), controlPoint1: CGPoint(x: 88.91, y: 70.04), controlPoint2: CGPoint(x: 88.39, y: 70.49))
        bezier58Path.addCurve(to: CGPoint(x: 86.24, y: 72.4), controlPoint1: CGPoint(x: 87.34, y: 71.43), controlPoint2: CGPoint(x: 86.79, y: 71.91))
        bezier58Path.addCurve(to: CGPoint(x: 84.69, y: 73.69), controlPoint1: CGPoint(x: 85.73, y: 72.83), controlPoint2: CGPoint(x: 85.21, y: 73.26))
        bezier58Path.addCurve(to: CGPoint(x: 82.98, y: 75.12), controlPoint1: CGPoint(x: 84.12, y: 74.17), controlPoint2: CGPoint(x: 83.56, y: 74.65))
        bezier58Path.addCurve(to: CGPoint(x: 81.37, y: 76.41), controlPoint1: CGPoint(x: 82.45, y: 75.55), controlPoint2: CGPoint(x: 81.91, y: 75.98))
        bezier58Path.addCurve(to: CGPoint(x: 79.59, y: 77.81), controlPoint1: CGPoint(x: 80.78, y: 76.88), controlPoint2: CGPoint(x: 80.19, y: 77.34))
        bezier58Path.addCurve(to: CGPoint(x: 77.9, y: 79.09), controlPoint1: CGPoint(x: 79.04, y: 78.24), controlPoint2: CGPoint(x: 78.47, y: 78.66))
        bezier58Path.addCurve(to: CGPoint(x: 76.07, y: 80.46), controlPoint1: CGPoint(x: 77.29, y: 79.54), controlPoint2: CGPoint(x: 76.69, y: 80))
        bezier58Path.addCurve(to: CGPoint(x: 74.31, y: 81.72), controlPoint1: CGPoint(x: 75.49, y: 80.88), controlPoint2: CGPoint(x: 74.9, y: 81.3))
        bezier58Path.addCurve(to: CGPoint(x: 72.41, y: 83.07), controlPoint1: CGPoint(x: 73.68, y: 82.17), controlPoint2: CGPoint(x: 73.05, y: 82.62))
        bezier58Path.addCurve(to: CGPoint(x: 70.59, y: 84.31), controlPoint1: CGPoint(x: 71.81, y: 83.49), controlPoint2: CGPoint(x: 71.2, y: 83.9))
        bezier58Path.addCurve(to: CGPoint(x: 68.61, y: 85.64), controlPoint1: CGPoint(x: 69.93, y: 84.76), controlPoint2: CGPoint(x: 69.28, y: 85.2))
        bezier58Path.addCurve(to: CGPoint(x: 66.73, y: 86.86), controlPoint1: CGPoint(x: 67.99, y: 86.05), controlPoint2: CGPoint(x: 67.36, y: 86.46))
        bezier58Path.addCurve(to: CGPoint(x: 64.68, y: 88.17), controlPoint1: CGPoint(x: 66.05, y: 87.3), controlPoint2: CGPoint(x: 65.37, y: 87.73))
        bezier58Path.addCurve(to: CGPoint(x: 62.73, y: 89.37), controlPoint1: CGPoint(x: 64.04, y: 88.57), controlPoint2: CGPoint(x: 63.38, y: 88.97))
        bezier58Path.addCurve(to: CGPoint(x: 60.62, y: 90.65), controlPoint1: CGPoint(x: 62.03, y: 89.8), controlPoint2: CGPoint(x: 61.34, y: 90.23))
        bezier58Path.addCurve(to: CGPoint(x: 56.97, y: 92.78), controlPoint1: CGPoint(x: 59.42, y: 91.37), controlPoint2: CGPoint(x: 58.21, y: 92.08))
        bezier58Path.addLine(to: CGPoint(x: 56.77, y: 161.73))
        bezier58Path.addCurve(to: CGPoint(x: 59.95, y: 159.88), controlPoint1: CGPoint(x: 57.84, y: 161.12), controlPoint2: CGPoint(x: 58.9, y: 160.5))
        bezier58Path.addCurve(to: CGPoint(x: 60.42, y: 159.59), controlPoint1: CGPoint(x: 60.11, y: 159.78), controlPoint2: CGPoint(x: 60.26, y: 159.68))
        bezier58Path.addCurve(to: CGPoint(x: 62.53, y: 158.31), controlPoint1: CGPoint(x: 61.14, y: 159.16), controlPoint2: CGPoint(x: 61.83, y: 158.73))
        bezier58Path.addCurve(to: CGPoint(x: 64.48, y: 157.11), controlPoint1: CGPoint(x: 63.18, y: 157.91), controlPoint2: CGPoint(x: 63.85, y: 157.51))
        bezier58Path.addCurve(to: CGPoint(x: 66.53, y: 155.8), controlPoint1: CGPoint(x: 65.17, y: 156.68), controlPoint2: CGPoint(x: 65.85, y: 156.24))
        bezier58Path.addCurve(to: CGPoint(x: 68.41, y: 154.58), controlPoint1: CGPoint(x: 67.16, y: 155.4), controlPoint2: CGPoint(x: 67.79, y: 154.99))
        bezier58Path.addCurve(to: CGPoint(x: 70.39, y: 153.25), controlPoint1: CGPoint(x: 69.08, y: 154.14), controlPoint2: CGPoint(x: 69.73, y: 153.69))
        bezier58Path.addCurve(to: CGPoint(x: 72.2, y: 152.01), controlPoint1: CGPoint(x: 70.99, y: 152.84), controlPoint2: CGPoint(x: 71.61, y: 152.43))
        bezier58Path.addCurve(to: CGPoint(x: 74.11, y: 150.66), controlPoint1: CGPoint(x: 72.85, y: 151.56), controlPoint2: CGPoint(x: 73.48, y: 151.11))
        bezier58Path.addCurve(to: CGPoint(x: 75.87, y: 149.4), controlPoint1: CGPoint(x: 74.7, y: 150.24), controlPoint2: CGPoint(x: 75.29, y: 149.82))
        bezier58Path.addCurve(to: CGPoint(x: 77.71, y: 148.02), controlPoint1: CGPoint(x: 76.49, y: 148.95), controlPoint2: CGPoint(x: 77.09, y: 148.48))
        bezier58Path.addCurve(to: CGPoint(x: 79.39, y: 146.75), controlPoint1: CGPoint(x: 78.27, y: 147.6), controlPoint2: CGPoint(x: 78.84, y: 147.18))
        bezier58Path.addCurve(to: CGPoint(x: 81.17, y: 145.35), controlPoint1: CGPoint(x: 79.99, y: 146.29), controlPoint2: CGPoint(x: 80.57, y: 145.82))
        bezier58Path.addCurve(to: CGPoint(x: 82.78, y: 144.06), controlPoint1: CGPoint(x: 81.7, y: 144.92), controlPoint2: CGPoint(x: 82.25, y: 144.49))
        bezier58Path.addCurve(to: CGPoint(x: 84.49, y: 142.63), controlPoint1: CGPoint(x: 83.36, y: 143.59), controlPoint2: CGPoint(x: 83.92, y: 143.11))
        bezier58Path.addCurve(to: CGPoint(x: 86.04, y: 141.34), controlPoint1: CGPoint(x: 85.01, y: 142.2), controlPoint2: CGPoint(x: 85.53, y: 141.77))
        bezier58Path.addCurve(to: CGPoint(x: 87.68, y: 139.88), controlPoint1: CGPoint(x: 86.59, y: 140.85), controlPoint2: CGPoint(x: 87.14, y: 140.37))
        bezier58Path.addCurve(to: CGPoint(x: 88.97, y: 138.75), controlPoint1: CGPoint(x: 88.11, y: 139.5), controlPoint2: CGPoint(x: 88.55, y: 139.13))
        bezier58Path.addCurve(to: CGPoint(x: 89.21, y: 138.53), controlPoint1: CGPoint(x: 89.05, y: 138.68), controlPoint2: CGPoint(x: 89.12, y: 138.61))
        bezier58Path.addCurve(to: CGPoint(x: 89.7, y: 138.07), controlPoint1: CGPoint(x: 89.38, y: 138.38), controlPoint2: CGPoint(x: 89.54, y: 138.22))
        bezier58Path.addCurve(to: CGPoint(x: 91.95, y: 135.97), controlPoint1: CGPoint(x: 90.47, y: 137.37), controlPoint2: CGPoint(x: 91.21, y: 136.67))
        bezier58Path.addCurve(to: CGPoint(x: 92.53, y: 135.41), controlPoint1: CGPoint(x: 92.14, y: 135.78), controlPoint2: CGPoint(x: 92.33, y: 135.59))
        bezier58Path.addCurve(to: CGPoint(x: 95, y: 132.95), controlPoint1: CGPoint(x: 93.36, y: 134.59), controlPoint2: CGPoint(x: 94.19, y: 133.77))
        bezier58Path.addCurve(to: CGPoint(x: 95.46, y: 132.47), controlPoint1: CGPoint(x: 95.15, y: 132.79), controlPoint2: CGPoint(x: 95.31, y: 132.62))
        bezier58Path.addCurve(to: CGPoint(x: 97.5, y: 130.32), controlPoint1: CGPoint(x: 96.16, y: 131.75), controlPoint2: CGPoint(x: 96.83, y: 131.04))
        bezier58Path.addCurve(to: CGPoint(x: 98.02, y: 129.76), controlPoint1: CGPoint(x: 97.67, y: 130.13), controlPoint2: CGPoint(x: 97.85, y: 129.94))
        bezier58Path.addCurve(to: CGPoint(x: 100.26, y: 127.25), controlPoint1: CGPoint(x: 98.78, y: 128.92), controlPoint2: CGPoint(x: 99.53, y: 128.09))
        bezier58Path.addCurve(to: CGPoint(x: 100.69, y: 126.74), controlPoint1: CGPoint(x: 100.41, y: 127.08), controlPoint2: CGPoint(x: 100.55, y: 126.91))
        bezier58Path.addCurve(to: CGPoint(x: 102.53, y: 124.56), controlPoint1: CGPoint(x: 101.32, y: 126.01), controlPoint2: CGPoint(x: 101.92, y: 125.29))
        bezier58Path.addCurve(to: CGPoint(x: 102.99, y: 123.99), controlPoint1: CGPoint(x: 102.68, y: 124.37), controlPoint2: CGPoint(x: 102.83, y: 124.18))
        bezier58Path.addCurve(to: CGPoint(x: 103.27, y: 123.65), controlPoint1: CGPoint(x: 103.08, y: 123.88), controlPoint2: CGPoint(x: 103.18, y: 123.76))
        bezier58Path.addCurve(to: CGPoint(x: 104.96, y: 121.48), controlPoint1: CGPoint(x: 103.85, y: 122.93), controlPoint2: CGPoint(x: 104.4, y: 122.21))
        bezier58Path.addCurve(to: CGPoint(x: 105.31, y: 121.01), controlPoint1: CGPoint(x: 105.07, y: 121.33), controlPoint2: CGPoint(x: 105.19, y: 121.17))
        bezier58Path.addCurve(to: CGPoint(x: 107.21, y: 118.43), controlPoint1: CGPoint(x: 105.96, y: 120.16), controlPoint2: CGPoint(x: 106.59, y: 119.29))
        bezier58Path.addCurve(to: CGPoint(x: 107.45, y: 118.09), controlPoint1: CGPoint(x: 107.29, y: 118.32), controlPoint2: CGPoint(x: 107.37, y: 118.2))
        bezier58Path.addCurve(to: CGPoint(x: 109.28, y: 115.41), controlPoint1: CGPoint(x: 108.07, y: 117.2), controlPoint2: CGPoint(x: 108.69, y: 116.3))
        bezier58Path.addCurve(to: CGPoint(x: 109.33, y: 115.32), controlPoint1: CGPoint(x: 109.3, y: 115.38), controlPoint2: CGPoint(x: 109.32, y: 115.35))
        bezier58Path.addCurve(to: CGPoint(x: 111.06, y: 112.6), controlPoint1: CGPoint(x: 109.93, y: 114.42), controlPoint2: CGPoint(x: 110.5, y: 113.51))
        bezier58Path.addCurve(to: CGPoint(x: 111.31, y: 112.2), controlPoint1: CGPoint(x: 111.15, y: 112.47), controlPoint2: CGPoint(x: 111.23, y: 112.34))
        bezier58Path.addCurve(to: CGPoint(x: 112.5, y: 110.19), controlPoint1: CGPoint(x: 111.72, y: 111.53), controlPoint2: CGPoint(x: 112.12, y: 110.86))
        bezier58Path.addCurve(to: CGPoint(x: 112.86, y: 109.55), controlPoint1: CGPoint(x: 112.63, y: 109.97), controlPoint2: CGPoint(x: 112.74, y: 109.76))
        bezier58Path.addCurve(to: CGPoint(x: 113.1, y: 109.13), controlPoint1: CGPoint(x: 112.94, y: 109.41), controlPoint2: CGPoint(x: 113.02, y: 109.27))
        bezier58Path.addCurve(to: CGPoint(x: 114.52, y: 106.49), controlPoint1: CGPoint(x: 113.59, y: 108.26), controlPoint2: CGPoint(x: 114.06, y: 107.38))
        bezier58Path.addCurve(to: CGPoint(x: 114.73, y: 106.08), controlPoint1: CGPoint(x: 114.59, y: 106.36), controlPoint2: CGPoint(x: 114.66, y: 106.21))
        bezier58Path.addCurve(to: CGPoint(x: 116.05, y: 103.41), controlPoint1: CGPoint(x: 115.19, y: 105.19), controlPoint2: CGPoint(x: 115.63, y: 104.3))
        bezier58Path.addCurve(to: CGPoint(x: 116.23, y: 103.02), controlPoint1: CGPoint(x: 116.11, y: 103.28), controlPoint2: CGPoint(x: 116.17, y: 103.15))
        bezier58Path.addCurve(to: CGPoint(x: 117.45, y: 100.3), controlPoint1: CGPoint(x: 116.65, y: 102.11), controlPoint2: CGPoint(x: 117.06, y: 101.21))
        bezier58Path.addCurve(to: CGPoint(x: 117.58, y: 99.97), controlPoint1: CGPoint(x: 117.49, y: 100.19), controlPoint2: CGPoint(x: 117.54, y: 100.08))
        bezier58Path.addCurve(to: CGPoint(x: 118.65, y: 97.32), controlPoint1: CGPoint(x: 117.95, y: 99.09), controlPoint2: CGPoint(x: 118.31, y: 98.21))
        bezier58Path.addCurve(to: CGPoint(x: 118.69, y: 97.21), controlPoint1: CGPoint(x: 118.67, y: 97.29), controlPoint2: CGPoint(x: 118.68, y: 97.25))
        bezier58Path.addCurve(to: CGPoint(x: 119.37, y: 95.34), controlPoint1: CGPoint(x: 118.93, y: 96.59), controlPoint2: CGPoint(x: 119.15, y: 95.96))
        bezier58Path.addCurve(to: CGPoint(x: 119.82, y: 94.08), controlPoint1: CGPoint(x: 119.52, y: 94.92), controlPoint2: CGPoint(x: 119.68, y: 94.5))
        bezier58Path.addCurve(to: CGPoint(x: 120.47, y: 92.01), controlPoint1: CGPoint(x: 120.05, y: 93.39), controlPoint2: CGPoint(x: 120.26, y: 92.7))
        bezier58Path.addCurve(to: CGPoint(x: 120.8, y: 90.94), controlPoint1: CGPoint(x: 120.58, y: 91.65), controlPoint2: CGPoint(x: 120.7, y: 91.29))
        bezier58Path.addCurve(to: CGPoint(x: 121.61, y: 87.97), controlPoint1: CGPoint(x: 121.09, y: 89.95), controlPoint2: CGPoint(x: 121.36, y: 88.96))
        bezier58Path.addCurve(to: CGPoint(x: 121.66, y: 87.78), controlPoint1: CGPoint(x: 121.62, y: 87.91), controlPoint2: CGPoint(x: 121.64, y: 87.84))
        bezier58Path.addCurve(to: CGPoint(x: 122.37, y: 84.61), controlPoint1: CGPoint(x: 121.92, y: 86.73), controlPoint2: CGPoint(x: 122.16, y: 85.67))
        bezier58Path.addCurve(to: CGPoint(x: 122.38, y: 84.58), controlPoint1: CGPoint(x: 122.38, y: 84.6), controlPoint2: CGPoint(x: 122.38, y: 84.59))
        bezier58Path.addCurve(to: CGPoint(x: 122.92, y: 81.65), controlPoint1: CGPoint(x: 122.58, y: 83.61), controlPoint2: CGPoint(x: 122.76, y: 82.63))
        bezier58Path.addCurve(to: CGPoint(x: 122.95, y: 81.46), controlPoint1: CGPoint(x: 122.93, y: 81.59), controlPoint2: CGPoint(x: 122.94, y: 81.52))
        bezier58Path.addCurve(to: CGPoint(x: 123.37, y: 78.56), controlPoint1: CGPoint(x: 123.11, y: 80.5), controlPoint2: CGPoint(x: 123.25, y: 79.53))
        bezier58Path.addCurve(to: CGPoint(x: 123.4, y: 78.29), controlPoint1: CGPoint(x: 123.37, y: 78.47), controlPoint2: CGPoint(x: 123.39, y: 78.38))
        bezier58Path.addCurve(to: CGPoint(x: 123.68, y: 75.45), controlPoint1: CGPoint(x: 123.51, y: 77.34), controlPoint2: CGPoint(x: 123.6, y: 76.4))
        bezier58Path.addCurve(to: CGPoint(x: 123.71, y: 75.11), controlPoint1: CGPoint(x: 123.69, y: 75.34), controlPoint2: CGPoint(x: 123.7, y: 75.22))
        bezier58Path.addCurve(to: CGPoint(x: 123.87, y: 72.32), controlPoint1: CGPoint(x: 123.78, y: 74.18), controlPoint2: CGPoint(x: 123.83, y: 73.25))
        bezier58Path.addCurve(to: CGPoint(x: 123.89, y: 71.94), controlPoint1: CGPoint(x: 123.87, y: 72.19), controlPoint2: CGPoint(x: 123.88, y: 72.07))
        bezier58Path.addCurve(to: CGPoint(x: 123.9, y: 71.59), controlPoint1: CGPoint(x: 123.89, y: 71.82), controlPoint2: CGPoint(x: 123.9, y: 71.71))
        bezier58Path.addCurve(to: CGPoint(x: 123.93, y: 68.94), controlPoint1: CGPoint(x: 123.93, y: 70.71), controlPoint2: CGPoint(x: 123.94, y: 69.82))
        bezier58Path.addLine(to: CGPoint(x: 124.13, y: 0))
        bezier58Path.close()
        context.saveGState()
        bezier58Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: -7.76, y: 242.89),
            end: CGPoint(x: 133.25, y: 27.54),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 59 Drawing
        let bezier59Path = UIBezierPath()
        bezier59Path.move(to: CGPoint(x: 56.6, y: 92.78))
        bezier59Path.addLine(to: CGPoint(x: 56.4, y: 161.73))
        bezier59Path.addLine(to: CGPoint(x: 0, y: 129.81))
        bezier59Path.addLine(to: CGPoint(x: 0.2, y: 60.86))
        bezier59Path.addLine(to: CGPoint(x: 56.6, y: 92.78))
        bezier59Path.close()
        context.saveGState()
        bezier59Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 121.99, y: 61.2),
            end: CGPoint(x: -22.29, y: 138.34),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// layer_1_35
        context.saveGState()
        context.translateBy(x: (arc2ExprX - 574.649781734), y: (arc2ExprY - 2247.91629464))



        //// Bezier 52 Drawing
        let bezier52Path = UIBezierPath()
        bezier52Path.move(to: CGPoint(x: 160.2, y: 25.4))
        bezier52Path.addLine(to: CGPoint(x: 160.45, y: 70.89))
        bezier52Path.addCurve(to: CGPoint(x: 0.19, y: 32.16), controlPoint1: CGPoint(x: 102.53, y: 70.89), controlPoint2: CGPoint(x: 44.53, y: 57.98))
        bezier52Path.addLine(to: CGPoint(x: 55.07, y: 0))
        bezier52Path.addCurve(to: CGPoint(x: 160.2, y: 25.4), controlPoint1: CGPoint(x: 84.15, y: 16.94), controlPoint2: CGPoint(x: 122.2, y: 25.4))
        bezier52Path.close()
        context.saveGState()
        bezier52Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 0.19, y: 35.44),
            end: CGPoint(x: 160.45, y: 35.44),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 53 Drawing
        let bezier53Path = UIBezierPath()
        bezier53Path.move(to: CGPoint(x: 160.2, y: 140.35))
        bezier53Path.addCurve(to: CGPoint(x: 160.26, y: 140.35), controlPoint1: CGPoint(x: 160.22, y: 140.35), controlPoint2: CGPoint(x: 160.24, y: 140.35))
        bezier53Path.addLine(to: CGPoint(x: 160.45, y: 70.89))
        bezier53Path.addCurve(to: CGPoint(x: 155.27, y: 70.85), controlPoint1: CGPoint(x: 158.73, y: 70.89), controlPoint2: CGPoint(x: 156.99, y: 70.87))
        bezier53Path.addCurve(to: CGPoint(x: 153.55, y: 70.82), controlPoint1: CGPoint(x: 154.7, y: 70.84), controlPoint2: CGPoint(x: 154.12, y: 70.83))
        bezier53Path.addCurve(to: CGPoint(x: 150.12, y: 70.75), controlPoint1: CGPoint(x: 152.41, y: 70.8), controlPoint2: CGPoint(x: 151.26, y: 70.78))
        bezier53Path.addCurve(to: CGPoint(x: 147.15, y: 70.65), controlPoint1: CGPoint(x: 149.13, y: 70.72), controlPoint2: CGPoint(x: 148.14, y: 70.68))
        bezier53Path.addCurve(to: CGPoint(x: 144.62, y: 70.56), controlPoint1: CGPoint(x: 146.3, y: 70.62), controlPoint2: CGPoint(x: 145.46, y: 70.6))
        bezier53Path.addCurve(to: CGPoint(x: 141.61, y: 70.42), controlPoint1: CGPoint(x: 143.61, y: 70.52), controlPoint2: CGPoint(x: 142.61, y: 70.47))
        bezier53Path.addCurve(to: CGPoint(x: 139.13, y: 70.3), controlPoint1: CGPoint(x: 140.78, y: 70.38), controlPoint2: CGPoint(x: 139.95, y: 70.34))
        bezier53Path.addCurve(to: CGPoint(x: 136.06, y: 70.11), controlPoint1: CGPoint(x: 138.11, y: 70.24), controlPoint2: CGPoint(x: 137.08, y: 70.17))
        bezier53Path.addCurve(to: CGPoint(x: 133.64, y: 69.96), controlPoint1: CGPoint(x: 135.26, y: 70.06), controlPoint2: CGPoint(x: 134.45, y: 70.01))
        bezier53Path.addCurve(to: CGPoint(x: 130.48, y: 69.72), controlPoint1: CGPoint(x: 132.59, y: 69.89), controlPoint2: CGPoint(x: 131.53, y: 69.8))
        bezier53Path.addCurve(to: CGPoint(x: 128.17, y: 69.54), controlPoint1: CGPoint(x: 129.71, y: 69.66), controlPoint2: CGPoint(x: 128.94, y: 69.61))
        bezier53Path.addCurve(to: CGPoint(x: 124.86, y: 69.24), controlPoint1: CGPoint(x: 127.07, y: 69.45), controlPoint2: CGPoint(x: 125.96, y: 69.35))
        bezier53Path.addCurve(to: CGPoint(x: 122.72, y: 69.05), controlPoint1: CGPoint(x: 124.14, y: 69.18), controlPoint2: CGPoint(x: 123.43, y: 69.11))
        bezier53Path.addCurve(to: CGPoint(x: 119.03, y: 68.66), controlPoint1: CGPoint(x: 121.49, y: 68.92), controlPoint2: CGPoint(x: 120.26, y: 68.79))
        bezier53Path.addCurve(to: CGPoint(x: 117.28, y: 68.47), controlPoint1: CGPoint(x: 118.45, y: 68.6), controlPoint2: CGPoint(x: 117.87, y: 68.54))
        bezier53Path.addCurve(to: CGPoint(x: 111.86, y: 67.82), controlPoint1: CGPoint(x: 115.47, y: 68.27), controlPoint2: CGPoint(x: 113.67, y: 68.05))
        bezier53Path.addCurve(to: CGPoint(x: 111.82, y: 67.82), controlPoint1: CGPoint(x: 111.85, y: 67.82), controlPoint2: CGPoint(x: 111.83, y: 67.82))
        bezier53Path.addCurve(to: CGPoint(x: 106.47, y: 67.09), controlPoint1: CGPoint(x: 110.04, y: 67.59), controlPoint2: CGPoint(x: 108.25, y: 67.35))
        bezier53Path.addCurve(to: CGPoint(x: 105.21, y: 66.9), controlPoint1: CGPoint(x: 106.05, y: 67.03), controlPoint2: CGPoint(x: 105.63, y: 66.97))
        bezier53Path.addCurve(to: CGPoint(x: 101, y: 66.27), controlPoint1: CGPoint(x: 103.81, y: 66.7), controlPoint2: CGPoint(x: 102.4, y: 66.49))
        bezier53Path.addCurve(to: CGPoint(x: 98.99, y: 65.94), controlPoint1: CGPoint(x: 100.33, y: 66.16), controlPoint2: CGPoint(x: 99.66, y: 66.05))
        bezier53Path.addCurve(to: CGPoint(x: 95.56, y: 65.36), controlPoint1: CGPoint(x: 97.85, y: 65.75), controlPoint2: CGPoint(x: 96.7, y: 65.56))
        bezier53Path.addCurve(to: CGPoint(x: 93.33, y: 64.96), controlPoint1: CGPoint(x: 94.81, y: 65.23), controlPoint2: CGPoint(x: 94.08, y: 65.1))
        bezier53Path.addCurve(to: CGPoint(x: 90.15, y: 64.38), controlPoint1: CGPoint(x: 92.27, y: 64.77), controlPoint2: CGPoint(x: 91.21, y: 64.58))
        bezier53Path.addCurve(to: CGPoint(x: 87.83, y: 63.93), controlPoint1: CGPoint(x: 89.37, y: 64.23), controlPoint2: CGPoint(x: 88.6, y: 64.08))
        bezier53Path.addCurve(to: CGPoint(x: 84.77, y: 63.31), controlPoint1: CGPoint(x: 86.81, y: 63.72), controlPoint2: CGPoint(x: 85.79, y: 63.52))
        bezier53Path.addCurve(to: CGPoint(x: 82.63, y: 62.86), controlPoint1: CGPoint(x: 84.06, y: 63.16), controlPoint2: CGPoint(x: 83.34, y: 63.01))
        bezier53Path.addCurve(to: CGPoint(x: 79.06, y: 62.08), controlPoint1: CGPoint(x: 81.44, y: 62.6), controlPoint2: CGPoint(x: 80.25, y: 62.35))
        bezier53Path.addCurve(to: CGPoint(x: 76.87, y: 61.58), controlPoint1: CGPoint(x: 78.33, y: 61.91), controlPoint2: CGPoint(x: 77.6, y: 61.75))
        bezier53Path.addCurve(to: CGPoint(x: 73.39, y: 60.76), controlPoint1: CGPoint(x: 75.71, y: 61.31), controlPoint2: CGPoint(x: 74.55, y: 61.03))
        bezier53Path.addCurve(to: CGPoint(x: 71.24, y: 60.23), controlPoint1: CGPoint(x: 72.67, y: 60.58), controlPoint2: CGPoint(x: 71.96, y: 60.41))
        bezier53Path.addCurve(to: CGPoint(x: 67.64, y: 59.3), controlPoint1: CGPoint(x: 70.03, y: 59.93), controlPoint2: CGPoint(x: 68.84, y: 59.62))
        bezier53Path.addCurve(to: CGPoint(x: 65.7, y: 58.8), controlPoint1: CGPoint(x: 66.99, y: 59.13), controlPoint2: CGPoint(x: 66.34, y: 58.97))
        bezier53Path.addCurve(to: CGPoint(x: 61.33, y: 57.58), controlPoint1: CGPoint(x: 64.24, y: 58.4), controlPoint2: CGPoint(x: 62.78, y: 58))
        bezier53Path.addCurve(to: CGPoint(x: 60.19, y: 57.27), controlPoint1: CGPoint(x: 60.95, y: 57.48), controlPoint2: CGPoint(x: 60.57, y: 57.37))
        bezier53Path.addCurve(to: CGPoint(x: 59.62, y: 57.1), controlPoint1: CGPoint(x: 60, y: 57.21), controlPoint2: CGPoint(x: 59.81, y: 57.15))
        bezier53Path.addCurve(to: CGPoint(x: 55.73, y: 55.95), controlPoint1: CGPoint(x: 58.32, y: 56.72), controlPoint2: CGPoint(x: 57.03, y: 56.34))
        bezier53Path.addCurve(to: CGPoint(x: 54.5, y: 55.57), controlPoint1: CGPoint(x: 55.32, y: 55.82), controlPoint2: CGPoint(x: 54.91, y: 55.69))
        bezier53Path.addCurve(to: CGPoint(x: 50.64, y: 54.35), controlPoint1: CGPoint(x: 53.21, y: 55.17), controlPoint2: CGPoint(x: 51.92, y: 54.76))
        bezier53Path.addCurve(to: CGPoint(x: 50.09, y: 54.17), controlPoint1: CGPoint(x: 50.46, y: 54.29), controlPoint2: CGPoint(x: 50.28, y: 54.23))
        bezier53Path.addCurve(to: CGPoint(x: 45.79, y: 52.73), controlPoint1: CGPoint(x: 48.65, y: 53.7), controlPoint2: CGPoint(x: 47.21, y: 53.22))
        bezier53Path.addCurve(to: CGPoint(x: 44.66, y: 52.34), controlPoint1: CGPoint(x: 45.41, y: 52.6), controlPoint2: CGPoint(x: 45.03, y: 52.47))
        bezier53Path.addCurve(to: CGPoint(x: 41.23, y: 51.12), controlPoint1: CGPoint(x: 43.51, y: 51.94), controlPoint2: CGPoint(x: 42.36, y: 51.54))
        bezier53Path.addCurve(to: CGPoint(x: 40.23, y: 50.76), controlPoint1: CGPoint(x: 40.9, y: 51), controlPoint2: CGPoint(x: 40.56, y: 50.88))
        bezier53Path.addCurve(to: CGPoint(x: 36.03, y: 49.19), controlPoint1: CGPoint(x: 38.82, y: 50.25), controlPoint2: CGPoint(x: 37.42, y: 49.73))
        bezier53Path.addCurve(to: CGPoint(x: 35.17, y: 48.86), controlPoint1: CGPoint(x: 35.75, y: 49.08), controlPoint2: CGPoint(x: 35.46, y: 48.97))
        bezier53Path.addCurve(to: CGPoint(x: 32.04, y: 47.62), controlPoint1: CGPoint(x: 34.12, y: 48.45), controlPoint2: CGPoint(x: 33.08, y: 48.04))
        bezier53Path.addCurve(to: CGPoint(x: 30.03, y: 46.8), controlPoint1: CGPoint(x: 31.37, y: 47.35), controlPoint2: CGPoint(x: 30.7, y: 47.08))
        bezier53Path.addCurve(to: CGPoint(x: 27.54, y: 45.76), controlPoint1: CGPoint(x: 29.2, y: 46.46), controlPoint2: CGPoint(x: 28.37, y: 46.11))
        bezier53Path.addCurve(to: CGPoint(x: 25.57, y: 44.92), controlPoint1: CGPoint(x: 26.88, y: 45.49), controlPoint2: CGPoint(x: 26.22, y: 45.2))
        bezier53Path.addCurve(to: CGPoint(x: 23.1, y: 43.84), controlPoint1: CGPoint(x: 24.74, y: 44.56), controlPoint2: CGPoint(x: 23.92, y: 44.2))
        bezier53Path.addCurve(to: CGPoint(x: 21.16, y: 42.96), controlPoint1: CGPoint(x: 22.46, y: 43.55), controlPoint2: CGPoint(x: 21.81, y: 43.26))
        bezier53Path.addCurve(to: CGPoint(x: 18.71, y: 41.83), controlPoint1: CGPoint(x: 20.34, y: 42.59), controlPoint2: CGPoint(x: 19.53, y: 42.21))
        bezier53Path.addCurve(to: CGPoint(x: 16.83, y: 40.94), controlPoint1: CGPoint(x: 18.08, y: 41.53), controlPoint2: CGPoint(x: 17.46, y: 41.24))
        bezier53Path.addCurve(to: CGPoint(x: 14.36, y: 39.74), controlPoint1: CGPoint(x: 16, y: 40.55), controlPoint2: CGPoint(x: 15.18, y: 40.15))
        bezier53Path.addCurve(to: CGPoint(x: 12.57, y: 38.85), controlPoint1: CGPoint(x: 13.76, y: 39.45), controlPoint2: CGPoint(x: 13.16, y: 39.15))
        bezier53Path.addCurve(to: CGPoint(x: 10.03, y: 37.55), controlPoint1: CGPoint(x: 11.72, y: 38.42), controlPoint2: CGPoint(x: 10.87, y: 37.99))
        bezier53Path.addCurve(to: CGPoint(x: 8.37, y: 36.69), controlPoint1: CGPoint(x: 9.48, y: 37.26), controlPoint2: CGPoint(x: 8.92, y: 36.98))
        bezier53Path.addCurve(to: CGPoint(x: 5.61, y: 35.21), controlPoint1: CGPoint(x: 7.44, y: 36.2), controlPoint2: CGPoint(x: 6.53, y: 35.7))
        bezier53Path.addCurve(to: CGPoint(x: 4.24, y: 34.46), controlPoint1: CGPoint(x: 5.16, y: 34.96), controlPoint2: CGPoint(x: 4.7, y: 34.71))
        bezier53Path.addCurve(to: CGPoint(x: 0.19, y: 32.16), controlPoint1: CGPoint(x: 2.88, y: 33.71), controlPoint2: CGPoint(x: 1.53, y: 32.94))
        bezier53Path.addLine(to: CGPoint(x: 0, y: 101.63))
        bezier53Path.addCurve(to: CGPoint(x: 4.05, y: 103.93), controlPoint1: CGPoint(x: 1.34, y: 102.41), controlPoint2: CGPoint(x: 2.69, y: 103.17))
        bezier53Path.addCurve(to: CGPoint(x: 5.42, y: 104.67), controlPoint1: CGPoint(x: 4.5, y: 104.18), controlPoint2: CGPoint(x: 4.97, y: 104.42))
        bezier53Path.addCurve(to: CGPoint(x: 8.17, y: 106.16), controlPoint1: CGPoint(x: 6.34, y: 105.17), controlPoint2: CGPoint(x: 7.25, y: 105.67))
        bezier53Path.addCurve(to: CGPoint(x: 9.83, y: 107.02), controlPoint1: CGPoint(x: 8.72, y: 106.45), controlPoint2: CGPoint(x: 9.28, y: 106.73))
        bezier53Path.addCurve(to: CGPoint(x: 12.37, y: 108.32), controlPoint1: CGPoint(x: 10.68, y: 107.45), controlPoint2: CGPoint(x: 11.52, y: 107.89))
        bezier53Path.addCurve(to: CGPoint(x: 14.17, y: 109.2), controlPoint1: CGPoint(x: 12.96, y: 108.62), controlPoint2: CGPoint(x: 13.57, y: 108.91))
        bezier53Path.addCurve(to: CGPoint(x: 16.64, y: 110.41), controlPoint1: CGPoint(x: 14.99, y: 109.61), controlPoint2: CGPoint(x: 15.81, y: 110.01))
        bezier53Path.addCurve(to: CGPoint(x: 18.52, y: 111.3), controlPoint1: CGPoint(x: 17.26, y: 110.71), controlPoint2: CGPoint(x: 17.89, y: 111))
        bezier53Path.addCurve(to: CGPoint(x: 20.97, y: 112.43), controlPoint1: CGPoint(x: 19.33, y: 111.68), controlPoint2: CGPoint(x: 20.15, y: 112.06))
        bezier53Path.addCurve(to: CGPoint(x: 22.91, y: 113.3), controlPoint1: CGPoint(x: 21.61, y: 112.72), controlPoint2: CGPoint(x: 22.26, y: 113.01))
        bezier53Path.addCurve(to: CGPoint(x: 25.37, y: 114.38), controlPoint1: CGPoint(x: 23.73, y: 113.67), controlPoint2: CGPoint(x: 24.55, y: 114.03))
        bezier53Path.addCurve(to: CGPoint(x: 27.35, y: 115.23), controlPoint1: CGPoint(x: 26.03, y: 114.67), controlPoint2: CGPoint(x: 26.69, y: 114.95))
        bezier53Path.addCurve(to: CGPoint(x: 29.84, y: 116.27), controlPoint1: CGPoint(x: 28.17, y: 115.58), controlPoint2: CGPoint(x: 29.01, y: 115.92))
        bezier53Path.addCurve(to: CGPoint(x: 31.84, y: 117.08), controlPoint1: CGPoint(x: 30.51, y: 116.54), controlPoint2: CGPoint(x: 31.17, y: 116.81))
        bezier53Path.addCurve(to: CGPoint(x: 32.88, y: 117.51), controlPoint1: CGPoint(x: 32.19, y: 117.23), controlPoint2: CGPoint(x: 32.53, y: 117.37))
        bezier53Path.addCurve(to: CGPoint(x: 34.97, y: 118.32), controlPoint1: CGPoint(x: 33.58, y: 117.78), controlPoint2: CGPoint(x: 34.28, y: 118.05))
        bezier53Path.addCurve(to: CGPoint(x: 35.84, y: 118.66), controlPoint1: CGPoint(x: 35.26, y: 118.43), controlPoint2: CGPoint(x: 35.55, y: 118.55))
        bezier53Path.addCurve(to: CGPoint(x: 40.03, y: 120.23), controlPoint1: CGPoint(x: 37.23, y: 119.19), controlPoint2: CGPoint(x: 38.63, y: 119.72))
        bezier53Path.addCurve(to: CGPoint(x: 41.03, y: 120.59), controlPoint1: CGPoint(x: 40.37, y: 120.35), controlPoint2: CGPoint(x: 40.7, y: 120.47))
        bezier53Path.addCurve(to: CGPoint(x: 44.46, y: 121.8), controlPoint1: CGPoint(x: 42.17, y: 121), controlPoint2: CGPoint(x: 43.31, y: 121.4))
        bezier53Path.addCurve(to: CGPoint(x: 45.59, y: 122.2), controlPoint1: CGPoint(x: 44.83, y: 121.93), controlPoint2: CGPoint(x: 45.21, y: 122.07))
        bezier53Path.addCurve(to: CGPoint(x: 49.9, y: 123.64), controlPoint1: CGPoint(x: 47.03, y: 122.69), controlPoint2: CGPoint(x: 48.46, y: 123.17))
        bezier53Path.addCurve(to: CGPoint(x: 50.45, y: 123.81), controlPoint1: CGPoint(x: 50.08, y: 123.7), controlPoint2: CGPoint(x: 50.26, y: 123.75))
        bezier53Path.addCurve(to: CGPoint(x: 54.31, y: 125.04), controlPoint1: CGPoint(x: 51.73, y: 124.23), controlPoint2: CGPoint(x: 53.02, y: 124.64))
        bezier53Path.addCurve(to: CGPoint(x: 55.54, y: 125.41), controlPoint1: CGPoint(x: 54.72, y: 125.16), controlPoint2: CGPoint(x: 55.13, y: 125.28))
        bezier53Path.addCurve(to: CGPoint(x: 59.43, y: 126.57), controlPoint1: CGPoint(x: 56.83, y: 125.8), controlPoint2: CGPoint(x: 58.13, y: 126.19))
        bezier53Path.addCurve(to: CGPoint(x: 59.99, y: 126.73), controlPoint1: CGPoint(x: 59.62, y: 126.62), controlPoint2: CGPoint(x: 59.81, y: 126.68))
        bezier53Path.addCurve(to: CGPoint(x: 60.17, y: 126.78), controlPoint1: CGPoint(x: 60.05, y: 126.75), controlPoint2: CGPoint(x: 60.11, y: 126.77))
        bezier53Path.addCurve(to: CGPoint(x: 61.14, y: 127.05), controlPoint1: CGPoint(x: 60.49, y: 126.87), controlPoint2: CGPoint(x: 60.82, y: 126.96))
        bezier53Path.addCurve(to: CGPoint(x: 65.5, y: 128.26), controlPoint1: CGPoint(x: 62.59, y: 127.46), controlPoint2: CGPoint(x: 64.04, y: 127.87))
        bezier53Path.addCurve(to: CGPoint(x: 67.45, y: 128.77), controlPoint1: CGPoint(x: 66.15, y: 128.44), controlPoint2: CGPoint(x: 66.8, y: 128.6))
        bezier53Path.addCurve(to: CGPoint(x: 71.04, y: 129.69), controlPoint1: CGPoint(x: 68.64, y: 129.08), controlPoint2: CGPoint(x: 69.84, y: 129.39))
        bezier53Path.addCurve(to: CGPoint(x: 73.2, y: 130.22), controlPoint1: CGPoint(x: 71.76, y: 129.87), controlPoint2: CGPoint(x: 72.48, y: 130.05))
        bezier53Path.addCurve(to: CGPoint(x: 76.67, y: 131.04), controlPoint1: CGPoint(x: 74.35, y: 130.5), controlPoint2: CGPoint(x: 75.51, y: 130.78))
        bezier53Path.addCurve(to: CGPoint(x: 78.87, y: 131.55), controlPoint1: CGPoint(x: 77.4, y: 131.21), controlPoint2: CGPoint(x: 78.14, y: 131.38))
        bezier53Path.addCurve(to: CGPoint(x: 82.44, y: 132.32), controlPoint1: CGPoint(x: 80.06, y: 131.81), controlPoint2: CGPoint(x: 81.25, y: 132.07))
        bezier53Path.addCurve(to: CGPoint(x: 83.87, y: 132.64), controlPoint1: CGPoint(x: 82.91, y: 132.42), controlPoint2: CGPoint(x: 83.39, y: 132.53))
        bezier53Path.addCurve(to: CGPoint(x: 84.57, y: 132.78), controlPoint1: CGPoint(x: 84.1, y: 132.68), controlPoint2: CGPoint(x: 84.34, y: 132.73))
        bezier53Path.addCurve(to: CGPoint(x: 87.63, y: 133.39), controlPoint1: CGPoint(x: 85.59, y: 132.99), controlPoint2: CGPoint(x: 86.62, y: 133.19))
        bezier53Path.addCurve(to: CGPoint(x: 89.95, y: 133.84), controlPoint1: CGPoint(x: 88.41, y: 133.54), controlPoint2: CGPoint(x: 89.18, y: 133.7))
        bezier53Path.addCurve(to: CGPoint(x: 93.15, y: 134.43), controlPoint1: CGPoint(x: 91.01, y: 134.05), controlPoint2: CGPoint(x: 92.08, y: 134.24))
        bezier53Path.addCurve(to: CGPoint(x: 95.36, y: 134.83), controlPoint1: CGPoint(x: 93.88, y: 134.56), controlPoint2: CGPoint(x: 94.62, y: 134.7))
        bezier53Path.addCurve(to: CGPoint(x: 98.8, y: 135.4), controlPoint1: CGPoint(x: 96.5, y: 135.03), controlPoint2: CGPoint(x: 97.66, y: 135.21))
        bezier53Path.addCurve(to: CGPoint(x: 100.81, y: 135.73), controlPoint1: CGPoint(x: 99.47, y: 135.51), controlPoint2: CGPoint(x: 100.14, y: 135.63))
        bezier53Path.addCurve(to: CGPoint(x: 104.99, y: 136.36), controlPoint1: CGPoint(x: 102.2, y: 135.96), controlPoint2: CGPoint(x: 103.59, y: 136.16))
        bezier53Path.addCurve(to: CGPoint(x: 106.21, y: 136.55), controlPoint1: CGPoint(x: 105.39, y: 136.43), controlPoint2: CGPoint(x: 105.8, y: 136.49))
        bezier53Path.addCurve(to: CGPoint(x: 106.28, y: 136.56), controlPoint1: CGPoint(x: 106.23, y: 136.55), controlPoint2: CGPoint(x: 106.26, y: 136.56))
        bezier53Path.addCurve(to: CGPoint(x: 111.45, y: 137.26), controlPoint1: CGPoint(x: 108, y: 136.81), controlPoint2: CGPoint(x: 109.72, y: 137.04))
        bezier53Path.addCurve(to: CGPoint(x: 111.67, y: 137.29), controlPoint1: CGPoint(x: 111.53, y: 137.27), controlPoint2: CGPoint(x: 111.6, y: 137.28))
        bezier53Path.addCurve(to: CGPoint(x: 117.08, y: 137.94), controlPoint1: CGPoint(x: 113.47, y: 137.52), controlPoint2: CGPoint(x: 115.28, y: 137.74))
        bezier53Path.addCurve(to: CGPoint(x: 118.88, y: 138.13), controlPoint1: CGPoint(x: 117.68, y: 138.01), controlPoint2: CGPoint(x: 118.29, y: 138.06))
        bezier53Path.addCurve(to: CGPoint(x: 122.52, y: 138.51), controlPoint1: CGPoint(x: 120.1, y: 138.26), controlPoint2: CGPoint(x: 121.31, y: 138.39))
        bezier53Path.addCurve(to: CGPoint(x: 124.68, y: 138.71), controlPoint1: CGPoint(x: 123.24, y: 138.58), controlPoint2: CGPoint(x: 123.96, y: 138.64))
        bezier53Path.addCurve(to: CGPoint(x: 127.97, y: 139.01), controlPoint1: CGPoint(x: 125.78, y: 138.81), controlPoint2: CGPoint(x: 126.88, y: 138.91))
        bezier53Path.addCurve(to: CGPoint(x: 128.19, y: 139.03), controlPoint1: CGPoint(x: 128.05, y: 139.01), controlPoint2: CGPoint(x: 128.12, y: 139.02))
        bezier53Path.addCurve(to: CGPoint(x: 130.3, y: 139.19), controlPoint1: CGPoint(x: 128.89, y: 139.08), controlPoint2: CGPoint(x: 129.6, y: 139.13))
        bezier53Path.addCurve(to: CGPoint(x: 133.44, y: 139.42), controlPoint1: CGPoint(x: 131.35, y: 139.27), controlPoint2: CGPoint(x: 132.4, y: 139.35))
        bezier53Path.addCurve(to: CGPoint(x: 135.86, y: 139.58), controlPoint1: CGPoint(x: 134.25, y: 139.48), controlPoint2: CGPoint(x: 135.06, y: 139.52))
        bezier53Path.addCurve(to: CGPoint(x: 138.93, y: 139.76), controlPoint1: CGPoint(x: 136.89, y: 139.64), controlPoint2: CGPoint(x: 137.91, y: 139.71))
        bezier53Path.addCurve(to: CGPoint(x: 141.41, y: 139.89), controlPoint1: CGPoint(x: 139.76, y: 139.81), controlPoint2: CGPoint(x: 140.58, y: 139.85))
        bezier53Path.addCurve(to: CGPoint(x: 144.42, y: 140.03), controlPoint1: CGPoint(x: 142.41, y: 139.94), controlPoint2: CGPoint(x: 143.42, y: 139.99))
        bezier53Path.addCurve(to: CGPoint(x: 146.94, y: 140.11), controlPoint1: CGPoint(x: 145.26, y: 140.06), controlPoint2: CGPoint(x: 146.1, y: 140.09))
        bezier53Path.addCurve(to: CGPoint(x: 149.93, y: 140.21), controlPoint1: CGPoint(x: 147.94, y: 140.15), controlPoint2: CGPoint(x: 148.93, y: 140.18))
        bezier53Path.addCurve(to: CGPoint(x: 150.43, y: 140.23), controlPoint1: CGPoint(x: 150.09, y: 140.21), controlPoint2: CGPoint(x: 150.26, y: 140.22))
        bezier53Path.addCurve(to: CGPoint(x: 153.36, y: 140.29), controlPoint1: CGPoint(x: 151.41, y: 140.25), controlPoint2: CGPoint(x: 152.38, y: 140.26))
        bezier53Path.addCurve(to: CGPoint(x: 155.07, y: 140.32), controlPoint1: CGPoint(x: 153.93, y: 140.29), controlPoint2: CGPoint(x: 154.5, y: 140.31))
        bezier53Path.addCurve(to: CGPoint(x: 160.2, y: 140.35), controlPoint1: CGPoint(x: 156.78, y: 140.34), controlPoint2: CGPoint(x: 158.49, y: 140.35))
        bezier53Path.close()
        context.saveGState()
        bezier53Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: -0, y: 86.26),
            end: CGPoint(x: 160.45, y: 86.26),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// layer_1_34
        //// Bezier 64 Drawing
        let bezier64Path = UIBezierPath()
        bezier64Path.move(to: CGPoint(x: 200.93, y: -1633.89))
        bezier64Path.addLine(to: CGPoint(x: 258.06, y: -1598.75))
        bezier64Path.addCurve(to: CGPoint(x: 92.74, y: -1556.44), controlPoint1: CGPoint(x: 212.5, y: -1570.54), controlPoint2: CGPoint(x: 152.65, y: -1556.44))
        bezier64Path.addLine(to: CGPoint(x: 92.48, y: -1606.13))
        bezier64Path.addCurve(to: CGPoint(x: 200.93, y: -1633.89), controlPoint1: CGPoint(x: 131.78, y: -1606.13), controlPoint2: CGPoint(x: 171.03, y: -1615.39))
        bezier64Path.close()
        context.saveGState()
        bezier64Path.addClip()
        context.drawLinearGradient(arc, start: CGPoint(x: 175.27, y: -1633.89), end: CGPoint(x: 175.27, y: -1556.44), options: [])
        context.restoreGState()


        //// Bezier 65 Drawing
        let bezier65Path = UIBezierPath()
        bezier65Path.move(to: CGPoint(x: 258.01, y: -1598.76))
        bezier65Path.addCurve(to: CGPoint(x: 257.81, y: -1522.91), controlPoint1: CGPoint(x: 258.01, y: -1598.77), controlPoint2: CGPoint(x: 257.81, y: -1522.91))
        bezier65Path.addCurve(to: CGPoint(x: 253.97, y: -1520.6), controlPoint1: CGPoint(x: 256.53, y: -1522.12), controlPoint2: CGPoint(x: 255.25, y: -1521.35))
        bezier65Path.addCurve(to: CGPoint(x: 252.91, y: -1519.98), controlPoint1: CGPoint(x: 253.62, y: -1520.38), controlPoint2: CGPoint(x: 253.26, y: -1520.18))
        bezier65Path.addCurve(to: CGPoint(x: 249.61, y: -1518.08), controlPoint1: CGPoint(x: 251.82, y: -1519.34), controlPoint2: CGPoint(x: 250.72, y: -1518.7))
        bezier65Path.addLine(to: CGPoint(x: 248.93, y: -1517.7))
        bezier65Path.addCurve(to: CGPoint(x: 244.99, y: -1515.55), controlPoint1: CGPoint(x: 247.63, y: -1516.97), controlPoint2: CGPoint(x: 246.31, y: -1516.25))
        bezier65Path.addCurve(to: CGPoint(x: 243.98, y: -1515.02), controlPoint1: CGPoint(x: 244.66, y: -1515.37), controlPoint2: CGPoint(x: 244.32, y: -1515.19))
        bezier65Path.addCurve(to: CGPoint(x: 240.72, y: -1513.33), controlPoint1: CGPoint(x: 242.9, y: -1514.45), controlPoint2: CGPoint(x: 241.82, y: -1513.89))
        bezier65Path.addCurve(to: CGPoint(x: 239.75, y: -1512.84), controlPoint1: CGPoint(x: 240.4, y: -1513.16), controlPoint2: CGPoint(x: 240.08, y: -1513))
        bezier65Path.addCurve(to: CGPoint(x: 235.68, y: -1510.83), controlPoint1: CGPoint(x: 238.4, y: -1512.16), controlPoint2: CGPoint(x: 237.05, y: -1511.49))
        bezier65Path.addCurve(to: CGPoint(x: 234.86, y: -1510.45), controlPoint1: CGPoint(x: 235.41, y: -1510.7), controlPoint2: CGPoint(x: 235.13, y: -1510.58))
        bezier65Path.addCurve(to: CGPoint(x: 231.41, y: -1508.84), controlPoint1: CGPoint(x: 233.72, y: -1509.9), controlPoint2: CGPoint(x: 232.57, y: -1509.36))
        bezier65Path.addLine(to: CGPoint(x: 230.29, y: -1508.32))
        bezier65Path.addCurve(to: CGPoint(x: 226.06, y: -1506.45), controlPoint1: CGPoint(x: 228.89, y: -1507.69), controlPoint2: CGPoint(x: 227.48, y: -1507.06))
        bezier65Path.addLine(to: CGPoint(x: 225.79, y: -1506.34))
        bezier65Path.addCurve(to: CGPoint(x: 221.75, y: -1504.64), controlPoint1: CGPoint(x: 224.45, y: -1505.76), controlPoint2: CGPoint(x: 223.1, y: -1505.2))
        bezier65Path.addCurve(to: CGPoint(x: 220.57, y: -1504.16), controlPoint1: CGPoint(x: 221.36, y: -1504.48), controlPoint2: CGPoint(x: 220.96, y: -1504.32))
        bezier65Path.addCurve(to: CGPoint(x: 216.78, y: -1502.66), controlPoint1: CGPoint(x: 219.31, y: -1503.65), controlPoint2: CGPoint(x: 218.05, y: -1503.15))
        bezier65Path.addCurve(to: CGPoint(x: 216.17, y: -1502.42), controlPoint1: CGPoint(x: 216.58, y: -1502.58), controlPoint2: CGPoint(x: 216.37, y: -1502.49))
        bezier65Path.addCurve(to: CGPoint(x: 211.79, y: -1500.77), controlPoint1: CGPoint(x: 214.72, y: -1501.86), controlPoint2: CGPoint(x: 213.25, y: -1501.31))
        bezier65Path.addCurve(to: CGPoint(x: 210.65, y: -1500.36), controlPoint1: CGPoint(x: 211.41, y: -1500.63), controlPoint2: CGPoint(x: 211.03, y: -1500.49))
        bezier65Path.addCurve(to: CGPoint(x: 207.04, y: -1499.08), controlPoint1: CGPoint(x: 209.45, y: -1499.93), controlPoint2: CGPoint(x: 208.25, y: -1499.5))
        bezier65Path.addLine(to: CGPoint(x: 206.03, y: -1498.73))
        bezier65Path.addLine(to: CGPoint(x: 205.54, y: -1498.56))
        bezier65Path.addCurve(to: CGPoint(x: 203.62, y: -1497.92), controlPoint1: CGPoint(x: 204.9, y: -1498.34), controlPoint2: CGPoint(x: 204.26, y: -1498.13))
        bezier65Path.addCurve(to: CGPoint(x: 200.78, y: -1496.97), controlPoint1: CGPoint(x: 202.67, y: -1497.6), controlPoint2: CGPoint(x: 201.73, y: -1497.28))
        bezier65Path.addCurve(to: CGPoint(x: 198.4, y: -1496.23), controlPoint1: CGPoint(x: 199.99, y: -1496.72), controlPoint2: CGPoint(x: 199.19, y: -1496.48))
        bezier65Path.addCurve(to: CGPoint(x: 195.57, y: -1495.35), controlPoint1: CGPoint(x: 197.46, y: -1495.93), controlPoint2: CGPoint(x: 196.51, y: -1495.63))
        bezier65Path.addLine(to: CGPoint(x: 193.14, y: -1494.63))
        bezier65Path.addCurve(to: CGPoint(x: 190.3, y: -1493.8), controlPoint1: CGPoint(x: 192.19, y: -1494.35), controlPoint2: CGPoint(x: 191.25, y: -1494.08))
        bezier65Path.addCurve(to: CGPoint(x: 187.83, y: -1493.12), controlPoint1: CGPoint(x: 189.48, y: -1493.57), controlPoint2: CGPoint(x: 188.66, y: -1493.34))
        bezier65Path.addCurve(to: CGPoint(x: 184.99, y: -1492.34), controlPoint1: CGPoint(x: 186.89, y: -1492.86), controlPoint2: CGPoint(x: 185.94, y: -1492.6))
        bezier65Path.addCurve(to: CGPoint(x: 182.49, y: -1491.69), controlPoint1: CGPoint(x: 184.16, y: -1492.12), controlPoint2: CGPoint(x: 183.32, y: -1491.91))
        bezier65Path.addCurve(to: CGPoint(x: 179.63, y: -1490.97), controlPoint1: CGPoint(x: 181.54, y: -1491.45), controlPoint2: CGPoint(x: 180.59, y: -1491.21))
        bezier65Path.addCurve(to: CGPoint(x: 177.1, y: -1490.36), controlPoint1: CGPoint(x: 178.79, y: -1490.76), controlPoint2: CGPoint(x: 177.95, y: -1490.56))
        bezier65Path.addCurve(to: CGPoint(x: 174.23, y: -1489.68), controlPoint1: CGPoint(x: 176.15, y: -1490.13), controlPoint2: CGPoint(x: 175.19, y: -1489.9))
        bezier65Path.addCurve(to: CGPoint(x: 171.67, y: -1489.11), controlPoint1: CGPoint(x: 173.38, y: -1489.48), controlPoint2: CGPoint(x: 172.53, y: -1489.3))
        bezier65Path.addCurve(to: CGPoint(x: 168.8, y: -1488.48), controlPoint1: CGPoint(x: 170.71, y: -1488.9), controlPoint2: CGPoint(x: 169.75, y: -1488.68))
        bezier65Path.addCurve(to: CGPoint(x: 166.2, y: -1487.94), controlPoint1: CGPoint(x: 167.93, y: -1488.3), controlPoint2: CGPoint(x: 167.07, y: -1488.12))
        bezier65Path.addCurve(to: CGPoint(x: 163.31, y: -1487.37), controlPoint1: CGPoint(x: 165.24, y: -1487.75), controlPoint2: CGPoint(x: 164.28, y: -1487.55))
        bezier65Path.addCurve(to: CGPoint(x: 162.16, y: -1487.13), controlPoint1: CGPoint(x: 162.93, y: -1487.29), controlPoint2: CGPoint(x: 162.55, y: -1487.2))
        bezier65Path.addCurve(to: CGPoint(x: 159.8, y: -1486.69), controlPoint1: CGPoint(x: 161.38, y: -1486.98), controlPoint2: CGPoint(x: 160.59, y: -1486.84))
        bezier65Path.addCurve(to: CGPoint(x: 158.88, y: -1486.52), controlPoint1: CGPoint(x: 159.49, y: -1486.63), controlPoint2: CGPoint(x: 159.19, y: -1486.58))
        bezier65Path.addCurve(to: CGPoint(x: 154.1, y: -1485.68), controlPoint1: CGPoint(x: 157.29, y: -1486.23), controlPoint2: CGPoint(x: 155.7, y: -1485.95))
        bezier65Path.addCurve(to: CGPoint(x: 152.97, y: -1485.5), controlPoint1: CGPoint(x: 153.73, y: -1485.62), controlPoint2: CGPoint(x: 153.35, y: -1485.56))
        bezier65Path.addCurve(to: CGPoint(x: 148.96, y: -1484.87), controlPoint1: CGPoint(x: 151.64, y: -1485.28), controlPoint2: CGPoint(x: 150.3, y: -1485.07))
        bezier65Path.addCurve(to: CGPoint(x: 147.88, y: -1484.7), controlPoint1: CGPoint(x: 148.6, y: -1484.81), controlPoint2: CGPoint(x: 148.24, y: -1484.75))
        bezier65Path.addCurve(to: CGPoint(x: 143.06, y: -1484.01), controlPoint1: CGPoint(x: 146.27, y: -1484.46), controlPoint2: CGPoint(x: 144.67, y: -1484.23))
        bezier65Path.addCurve(to: CGPoint(x: 142.02, y: -1483.87), controlPoint1: CGPoint(x: 142.71, y: -1483.96), controlPoint2: CGPoint(x: 142.37, y: -1483.92))
        bezier65Path.addCurve(to: CGPoint(x: 137.97, y: -1483.36), controlPoint1: CGPoint(x: 140.67, y: -1483.69), controlPoint2: CGPoint(x: 139.32, y: -1483.52))
        bezier65Path.addLine(to: CGPoint(x: 136.78, y: -1483.21))
        bezier65Path.addCurve(to: CGPoint(x: 132.25, y: -1482.7), controlPoint1: CGPoint(x: 135.27, y: -1483.04), controlPoint2: CGPoint(x: 133.76, y: -1482.86))
        bezier65Path.addLine(to: CGPoint(x: 131.99, y: -1482.68))
        bezier65Path.addCurve(to: CGPoint(x: 125.95, y: -1482.09), controlPoint1: CGPoint(x: 129.98, y: -1482.47), controlPoint2: CGPoint(x: 127.97, y: -1482.27))
        bezier65Path.addCurve(to: CGPoint(x: 124.71, y: -1481.99), controlPoint1: CGPoint(x: 125.54, y: -1482.05), controlPoint2: CGPoint(x: 125.12, y: -1482.03))
        bezier65Path.addCurve(to: CGPoint(x: 119.89, y: -1481.61), controlPoint1: CGPoint(x: 123.1, y: -1481.85), controlPoint2: CGPoint(x: 121.49, y: -1481.72))
        bezier65Path.addCurve(to: CGPoint(x: 117.74, y: -1481.46), controlPoint1: CGPoint(x: 119.17, y: -1481.56), controlPoint2: CGPoint(x: 118.46, y: -1481.51))
        bezier65Path.addCurve(to: CGPoint(x: 113.78, y: -1481.22), controlPoint1: CGPoint(x: 116.42, y: -1481.38), controlPoint2: CGPoint(x: 115.1, y: -1481.29))
        bezier65Path.addCurve(to: CGPoint(x: 111.41, y: -1481.1), controlPoint1: CGPoint(x: 113, y: -1481.18), controlPoint2: CGPoint(x: 112.2, y: -1481.13))
        bezier65Path.addCurve(to: CGPoint(x: 107.64, y: -1480.93), controlPoint1: CGPoint(x: 110.16, y: -1481.03), controlPoint2: CGPoint(x: 108.9, y: -1480.98))
        bezier65Path.addCurve(to: CGPoint(x: 106.35, y: -1480.87), controlPoint1: CGPoint(x: 107.21, y: -1480.91), controlPoint2: CGPoint(x: 106.78, y: -1480.89))
        bezier65Path.addCurve(to: CGPoint(x: 105.28, y: -1480.84), controlPoint1: CGPoint(x: 105.99, y: -1480.86), controlPoint2: CGPoint(x: 105.64, y: -1480.85))
        bezier65Path.addCurve(to: CGPoint(x: 100.89, y: -1480.72), controlPoint1: CGPoint(x: 103.82, y: -1480.79), controlPoint2: CGPoint(x: 102.36, y: -1480.75))
        bezier65Path.addCurve(to: CGPoint(x: 98.88, y: -1480.68), controlPoint1: CGPoint(x: 100.22, y: -1480.71), controlPoint2: CGPoint(x: 99.55, y: -1480.69))
        bezier65Path.addCurve(to: CGPoint(x: 92.74, y: -1480.62), controlPoint1: CGPoint(x: 96.84, y: -1480.64), controlPoint2: CGPoint(x: 94.79, y: -1480.62))
        bezier65Path.addCurve(to: CGPoint(x: 92.74, y: -1554.87), controlPoint1: CGPoint(x: 92.74, y: -1484.07), controlPoint2: CGPoint(x: 92.74, y: -1519.12))
        bezier65Path.addCurve(to: CGPoint(x: 92.74, y: -1556.48), controlPoint1: CGPoint(x: 92.74, y: -1555.91), controlPoint2: CGPoint(x: 92.74, y: -1556.48))
        bezier65Path.addCurve(to: CGPoint(x: 99.08, y: -1556.54), controlPoint1: CGPoint(x: 94.86, y: -1556.48), controlPoint2: CGPoint(x: 96.97, y: -1556.5))
        bezier65Path.addCurve(to: CGPoint(x: 101.09, y: -1556.58), controlPoint1: CGPoint(x: 99.75, y: -1556.55), controlPoint2: CGPoint(x: 100.42, y: -1556.57))
        bezier65Path.addCurve(to: CGPoint(x: 105.49, y: -1556.7), controlPoint1: CGPoint(x: 102.55, y: -1556.62), controlPoint2: CGPoint(x: 104.02, y: -1556.65))
        bezier65Path.addCurve(to: CGPoint(x: 107.83, y: -1556.79), controlPoint1: CGPoint(x: 106.27, y: -1556.73), controlPoint2: CGPoint(x: 107.05, y: -1556.76))
        bezier65Path.addCurve(to: CGPoint(x: 111.61, y: -1556.96), controlPoint1: CGPoint(x: 109.1, y: -1556.84), controlPoint2: CGPoint(x: 110.35, y: -1556.9))
        bezier65Path.addCurve(to: CGPoint(x: 113.99, y: -1557.08), controlPoint1: CGPoint(x: 112.4, y: -1557), controlPoint2: CGPoint(x: 113.2, y: -1557.04))
        bezier65Path.addCurve(to: CGPoint(x: 117.94, y: -1557.33), controlPoint1: CGPoint(x: 115.31, y: -1557.15), controlPoint2: CGPoint(x: 116.62, y: -1557.24))
        bezier65Path.addCurve(to: CGPoint(x: 120.09, y: -1557.47), controlPoint1: CGPoint(x: 118.66, y: -1557.37), controlPoint2: CGPoint(x: 119.37, y: -1557.41))
        bezier65Path.addCurve(to: CGPoint(x: 124.91, y: -1557.85), controlPoint1: CGPoint(x: 121.69, y: -1557.58), controlPoint2: CGPoint(x: 123.3, y: -1557.71))
        bezier65Path.addCurve(to: CGPoint(x: 126.15, y: -1557.95), controlPoint1: CGPoint(x: 125.32, y: -1557.89), controlPoint2: CGPoint(x: 125.74, y: -1557.92))
        bezier65Path.addCurve(to: CGPoint(x: 132.2, y: -1558.54), controlPoint1: CGPoint(x: 128.17, y: -1558.13), controlPoint2: CGPoint(x: 130.18, y: -1558.33))
        bezier65Path.addCurve(to: CGPoint(x: 136.98, y: -1559.07), controlPoint1: CGPoint(x: 133.79, y: -1558.71), controlPoint2: CGPoint(x: 135.38, y: -1558.89))
        bezier65Path.addCurve(to: CGPoint(x: 138.17, y: -1559.22), controlPoint1: CGPoint(x: 137.37, y: -1559.12), controlPoint2: CGPoint(x: 137.77, y: -1559.17))
        bezier65Path.addCurve(to: CGPoint(x: 142.23, y: -1559.74), controlPoint1: CGPoint(x: 139.53, y: -1559.38), controlPoint2: CGPoint(x: 140.88, y: -1559.56))
        bezier65Path.addCurve(to: CGPoint(x: 143.26, y: -1559.87), controlPoint1: CGPoint(x: 142.57, y: -1559.78), controlPoint2: CGPoint(x: 142.92, y: -1559.82))
        bezier65Path.addCurve(to: CGPoint(x: 148.08, y: -1560.56), controlPoint1: CGPoint(x: 144.87, y: -1560.09), controlPoint2: CGPoint(x: 146.48, y: -1560.32))
        bezier65Path.addLine(to: CGPoint(x: 149.16, y: -1560.73))
        bezier65Path.addCurve(to: CGPoint(x: 153.16, y: -1561.36), controlPoint1: CGPoint(x: 150.5, y: -1560.93), controlPoint2: CGPoint(x: 151.84, y: -1561.14))
        bezier65Path.addCurve(to: CGPoint(x: 154.31, y: -1561.55), controlPoint1: CGPoint(x: 153.54, y: -1561.42), controlPoint2: CGPoint(x: 153.93, y: -1561.49))
        bezier65Path.addCurve(to: CGPoint(x: 159.08, y: -1562.38), controlPoint1: CGPoint(x: 155.9, y: -1561.82), controlPoint2: CGPoint(x: 157.49, y: -1562.09))
        bezier65Path.addCurve(to: CGPoint(x: 160, y: -1562.55), controlPoint1: CGPoint(x: 159.39, y: -1562.44), controlPoint2: CGPoint(x: 159.7, y: -1562.5))
        bezier65Path.addCurve(to: CGPoint(x: 163.52, y: -1563.22), controlPoint1: CGPoint(x: 161.18, y: -1562.77), controlPoint2: CGPoint(x: 162.35, y: -1563))
        bezier65Path.addCurve(to: CGPoint(x: 166.4, y: -1563.8), controlPoint1: CGPoint(x: 164.48, y: -1563.41), controlPoint2: CGPoint(x: 165.44, y: -1563.61))
        bezier65Path.addCurve(to: CGPoint(x: 169, y: -1564.34), controlPoint1: CGPoint(x: 167.27, y: -1563.98), controlPoint2: CGPoint(x: 168.14, y: -1564.16))
        bezier65Path.addCurve(to: CGPoint(x: 171.87, y: -1564.97), controlPoint1: CGPoint(x: 169.96, y: -1564.55), controlPoint2: CGPoint(x: 170.91, y: -1564.75))
        bezier65Path.addCurve(to: CGPoint(x: 174.44, y: -1565.54), controlPoint1: CGPoint(x: 172.73, y: -1565.16), controlPoint2: CGPoint(x: 173.58, y: -1565.35))
        bezier65Path.addCurve(to: CGPoint(x: 177.3, y: -1566.22), controlPoint1: CGPoint(x: 175.39, y: -1565.76), controlPoint2: CGPoint(x: 176.35, y: -1565.99))
        bezier65Path.addLine(to: CGPoint(x: 179.84, y: -1566.83))
        bezier65Path.addCurve(to: CGPoint(x: 182.69, y: -1567.55), controlPoint1: CGPoint(x: 180.79, y: -1567.07), controlPoint2: CGPoint(x: 181.74, y: -1567.31))
        bezier65Path.addLine(to: CGPoint(x: 185.2, y: -1568.21))
        bezier65Path.addCurve(to: CGPoint(x: 188.03, y: -1568.98), controlPoint1: CGPoint(x: 186.14, y: -1568.46), controlPoint2: CGPoint(x: 187.09, y: -1568.72))
        bezier65Path.addCurve(to: CGPoint(x: 190.5, y: -1569.66), controlPoint1: CGPoint(x: 188.86, y: -1569.21), controlPoint2: CGPoint(x: 189.68, y: -1569.43))
        bezier65Path.addCurve(to: CGPoint(x: 193.33, y: -1570.49), controlPoint1: CGPoint(x: 191.45, y: -1569.93), controlPoint2: CGPoint(x: 192.39, y: -1570.21))
        bezier65Path.addCurve(to: CGPoint(x: 195.77, y: -1571.21), controlPoint1: CGPoint(x: 194.14, y: -1570.73), controlPoint2: CGPoint(x: 194.96, y: -1570.97))
        bezier65Path.addCurve(to: CGPoint(x: 198.6, y: -1572.09), controlPoint1: CGPoint(x: 196.72, y: -1571.5), controlPoint2: CGPoint(x: 197.65, y: -1571.79))
        bezier65Path.addLine(to: CGPoint(x: 200.98, y: -1572.84))
        bezier65Path.addCurve(to: CGPoint(x: 203.82, y: -1573.78), controlPoint1: CGPoint(x: 201.93, y: -1573.15), controlPoint2: CGPoint(x: 202.87, y: -1573.46))
        bezier65Path.addCurve(to: CGPoint(x: 206.23, y: -1574.59), controlPoint1: CGPoint(x: 204.62, y: -1574.05), controlPoint2: CGPoint(x: 205.43, y: -1574.31))
        bezier65Path.addLine(to: CGPoint(x: 207.24, y: -1574.94))
        bezier65Path.addCurve(to: CGPoint(x: 210.85, y: -1576.22), controlPoint1: CGPoint(x: 208.45, y: -1575.36), controlPoint2: CGPoint(x: 209.65, y: -1575.78))
        bezier65Path.addLine(to: CGPoint(x: 211.99, y: -1576.63))
        bezier65Path.addCurve(to: CGPoint(x: 216.37, y: -1578.27), controlPoint1: CGPoint(x: 213.46, y: -1577.17), controlPoint2: CGPoint(x: 214.92, y: -1577.72))
        bezier65Path.addCurve(to: CGPoint(x: 216.98, y: -1578.52), controlPoint1: CGPoint(x: 216.57, y: -1578.36), controlPoint2: CGPoint(x: 216.78, y: -1578.44))
        bezier65Path.addCurve(to: CGPoint(x: 220.77, y: -1580.02), controlPoint1: CGPoint(x: 218.25, y: -1579.01), controlPoint2: CGPoint(x: 219.51, y: -1579.51))
        bezier65Path.addLine(to: CGPoint(x: 221.95, y: -1580.5))
        bezier65Path.addCurve(to: CGPoint(x: 226, y: -1582.2), controlPoint1: CGPoint(x: 223.3, y: -1581.06), controlPoint2: CGPoint(x: 224.65, y: -1581.62))
        bezier65Path.addCurve(to: CGPoint(x: 230.49, y: -1584.18), controlPoint1: CGPoint(x: 227.68, y: -1582.92), controlPoint2: CGPoint(x: 229.08, y: -1583.55))
        bezier65Path.addLine(to: CGPoint(x: 231.61, y: -1584.7))
        bezier65Path.addCurve(to: CGPoint(x: 235.07, y: -1586.31), controlPoint1: CGPoint(x: 232.77, y: -1585.23), controlPoint2: CGPoint(x: 233.92, y: -1585.76))
        bezier65Path.addCurve(to: CGPoint(x: 235.88, y: -1586.69), controlPoint1: CGPoint(x: 235.34, y: -1586.44), controlPoint2: CGPoint(x: 235.61, y: -1586.56))
        bezier65Path.addCurve(to: CGPoint(x: 239.95, y: -1588.7), controlPoint1: CGPoint(x: 237.25, y: -1587.35), controlPoint2: CGPoint(x: 238.61, y: -1588.02))
        bezier65Path.addLine(to: CGPoint(x: 240.92, y: -1589.19))
        bezier65Path.addCurve(to: CGPoint(x: 244.19, y: -1590.88), controlPoint1: CGPoint(x: 242.02, y: -1589.74), controlPoint2: CGPoint(x: 243.1, y: -1590.31))
        bezier65Path.addLine(to: CGPoint(x: 245.19, y: -1591.41))
        bezier65Path.addCurve(to: CGPoint(x: 249.14, y: -1593.56), controlPoint1: CGPoint(x: 246.52, y: -1592.12), controlPoint2: CGPoint(x: 247.83, y: -1592.83))
        bezier65Path.addCurve(to: CGPoint(x: 249.8, y: -1593.94), controlPoint1: CGPoint(x: 249.36, y: -1593.68), controlPoint2: CGPoint(x: 249.58, y: -1593.81))
        bezier65Path.addCurve(to: CGPoint(x: 253.12, y: -1595.84), controlPoint1: CGPoint(x: 250.92, y: -1594.56), controlPoint2: CGPoint(x: 252.02, y: -1595.19))
        bezier65Path.addCurve(to: CGPoint(x: 254.17, y: -1596.45), controlPoint1: CGPoint(x: 253.47, y: -1596.04), controlPoint2: CGPoint(x: 253.82, y: -1596.25))
        bezier65Path.addCurve(to: CGPoint(x: 258.01, y: -1598.77), controlPoint1: CGPoint(x: 255.46, y: -1597.22), controlPoint2: CGPoint(x: 256.74, y: -1597.98))
        bezier65Path.addLine(to: CGPoint(x: 258.01, y: -1598.76))
        bezier65Path.close()
        context.saveGState()
        bezier65Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 469.37, y: -1587.86),
            end: CGPoint(x: -158.23, y: -1479.1),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// layer_1_33
        context.saveGState()
        context.setAlpha(redCube3PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 34 Drawing
        let bezier34Path = UIBezierPath()
        bezier34Path.move(to: CGPoint(x: 169.28, y: -1630.3))
        bezier34Path.addLine(to: CGPoint(x: 316.18, y: -1546.76))
        bezier34Path.addLine(to: CGPoint(x: 350.65, y: -1566.81))
        bezier34Path.addLine(to: CGPoint(x: 201.9, y: -1650.64))
        bezier34Path.addLine(to: CGPoint(x: 169.28, y: -1630.3))
        bezier34Path.close()
        context.saveGState()
        bezier34Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 259.96, y: -1650.64), end: CGPoint(x: 259.96, y: -1546.76), options: [])
        context.restoreGState()
        OnboardKit.cubeConture.setStroke()
        bezier34Path.lineWidth = 0.1
        bezier34Path.stroke()


        //// Bezier 41 Drawing
        let bezier41Path = UIBezierPath()
        bezier41Path.move(to: CGPoint(x: 169.55, y: -1630.46))
        bezier41Path.addLine(to: CGPoint(x: 169.12, y: -1585.45))
        bezier41Path.addLine(to: CGPoint(x: 314.66, y: -1501.91))
        bezier41Path.addLine(to: CGPoint(x: 316.11, y: -1546.74))
        bezier41Path.addLine(to: CGPoint(x: 169.55, y: -1630.46))
        bezier41Path.close()
        context.saveGState()
        bezier41Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 242.62, y: -1630.46), end: CGPoint(x: 242.62, y: -1501.91), options: [])
        context.restoreGState()
        OnboardKit.cubeConture.setStroke()
        bezier41Path.lineWidth = 0.1
        bezier41Path.stroke()


        //// Bezier 42 Drawing
        let bezier42Path = UIBezierPath()
        bezier42Path.move(to: CGPoint(x: 316.17, y: -1546.65))
        bezier42Path.addLine(to: CGPoint(x: 350.51, y: -1566.8))
        bezier42Path.addLine(to: CGPoint(x: 350.35, y: -1519.93))
        bezier42Path.addCurve(to: CGPoint(x: 314.68, y: -1501.81), controlPoint1: CGPoint(x: 350.35, y: -1519.93), controlPoint2: CGPoint(x: 314.68, y: -1501.85))
        bezier42Path.addCurve(to: CGPoint(x: 316.17, y: -1546.65), controlPoint1: CGPoint(x: 314.68, y: -1501.76), controlPoint2: CGPoint(x: 316.17, y: -1546.65))
        bezier42Path.close()
        context.saveGState()
        bezier42Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 332.6, y: -1566.8), end: CGPoint(x: 332.6, y: -1501.81), options: [])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_32
        context.saveGState()
        context.translateBy(x: (redCube3ExprX - 534.345094234), y: (redCube3ExprY - 2268.34598214))
        context.scaleBy(x: 2.3, y: 2.3)



        //// Bezier 43 Drawing
        let bezier43Path = UIBezierPath()
        bezier43Path.move(to: CGPoint(x: 10.97, y: -3.11))
        bezier43Path.addLine(to: CGPoint(x: 26.56, y: 5.9))
        bezier43Path.addLine(to: CGPoint(x: 26.5, y: 25.95))
        bezier43Path.addLine(to: CGPoint(x: 11.43, y: 18.07))
        bezier43Path.addLine(to: CGPoint(x: 10.97, y: -3.11))
        bezier43Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier43Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 18.76, y: -3.11), end: CGPoint(x: 18.76, y: 25.95), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier43Path.lineWidth = 0.1
        bezier43Path.stroke()
        context.restoreGState()


        //// Group 12
        context.saveGState()
        context.translateBy(x: -8.65, y: 0.95)
        context.scaleBy(x: 0.15, y: 0.15)



        //// Bezier 91 Drawing
        let bezier91Path = UIBezierPath()
        bezier91Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier91Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier91Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier91Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier91Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier91Path.close()
        fillColor3.setFill()
        bezier91Path.fill()


        //// Bezier 92 Drawing
        let bezier92Path = UIBezierPath()
        bezier92Path.move(to: CGPoint(x: 131.69, y: 29.14))
        bezier92Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier92Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier92Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier92Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier92Path.close()
        fillColor6.setFill()
        bezier92Path.fill()


        //// Bezier 93 Drawing
        let bezier93Path = UIBezierPath()
        bezier93Path.move(to: CGPoint(x: 132.14, y: 109.42))
        bezier93Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier93Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier93Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier93Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier93Path.close()
        fillColor7.setFill()
        bezier93Path.fill()


        //// Star 7 Drawing
        context.saveGState()
        context.translateBy(x: 131.93, y: 69.3)
        context.rotate(by: -90 * CGFloat.pi/180)

        let star7Path = UIBezierPath()
        star7Path.move(to: CGPoint(x: 0, y: -69.3))
        star7Path.addLine(to: CGPoint(x: 40.15, y: 0))
        star7Path.addLine(to: CGPoint(x: 0, y: 69.3))
        star7Path.addLine(to: CGPoint(x: -40.15, y: 0))
        star7Path.close()
        fillColor8.setFill()
        star7Path.fill()

        context.restoreGState()


        //// Group 13
        //// Bezier 94 Drawing
        let bezier94Path = UIBezierPath()
        bezier94Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier94Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier94Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier94Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier94Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier94Path.close()
        fillColor9.setFill()
        bezier94Path.fill()


        //// Star 8 Drawing
        context.saveGState()
        context.translateBy(x: 96.58, y: 130.5)
        context.rotate(by: -30 * CGFloat.pi/180)

        let star8Path = UIBezierPath()
        star8Path.move(to: CGPoint(x: 0, y: -70.7))
        star8Path.addLine(to: CGPoint(x: 40.95, y: 0))
        star8Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star8Path.addLine(to: CGPoint(x: -40.95, y: 0))
        star8Path.close()
        fillColor3.setFill()
        star8Path.fill()

        context.restoreGState()


        //// Star 9 Drawing
        context.saveGState()
        context.translateBy(x: 167.28, y: 130.5)
        context.rotate(by: -150 * CGFloat.pi/180)

        let star9Path = UIBezierPath()
        star9Path.move(to: CGPoint(x: 0, y: -70.7))
        star9Path.addLine(to: CGPoint(x: 40.55, y: 0))
        star9Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star9Path.addLine(to: CGPoint(x: -40.55, y: 0))
        star9Path.close()
        fillColor6.setFill()
        star9Path.fill()

        context.restoreGState()





        context.restoreGState()


        //// Bezier 44 Drawing
        let bezier44Path = UIBezierPath()
        bezier44Path.move(to: CGPoint(x: -3.71, y: 5.96))
        bezier44Path.addLine(to: CGPoint(x: 11.45, y: 14.79))
        bezier44Path.addLine(to: CGPoint(x: 11.42, y: 35.1))
        bezier44Path.addLine(to: CGPoint(x: -3.79, y: 25.86))
        bezier44Path.addLine(to: CGPoint(x: -3.71, y: 5.96))
        bezier44Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier44Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 3.83, y: 5.96), end: CGPoint(x: 3.83, y: 35.1), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier44Path.lineWidth = 0.3
        bezier44Path.stroke()
        context.restoreGState()


        //// Bezier 45 Drawing
        let bezier45Path = UIBezierPath()
        bezier45Path.move(to: CGPoint(x: -3.7, y: 5.97))
        bezier45Path.addLine(to: CGPoint(x: 11, y: -3.12))
        bezier45Path.addCurve(to: CGPoint(x: 26.56, y: 5.92), controlPoint1: CGPoint(x: 11, y: -3.12), controlPoint2: CGPoint(x: 26.58, y: 5.94))
        bezier45Path.addCurve(to: CGPoint(x: 11.42, y: 14.85), controlPoint1: CGPoint(x: 26.54, y: 5.91), controlPoint2: CGPoint(x: 11.48, y: 14.92))
        bezier45Path.addCurve(to: CGPoint(x: -3.7, y: 5.97), controlPoint1: CGPoint(x: 11.37, y: 14.78), controlPoint2: CGPoint(x: -3.7, y: 5.97))
        bezier45Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier45Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 11.43, y: -3.12), end: CGPoint(x: 11.43, y: 14.85), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier45Path.lineWidth = 0.3
        bezier45Path.stroke()
        context.restoreGState()


        //// Bezier 46 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier46Path = UIBezierPath()
        bezier46Path.move(to: CGPoint(x: 11.44, y: 35.06))
        bezier46Path.addLine(to: CGPoint(x: -3.73, y: 25.96))
        bezier46Path.addLine(to: CGPoint(x: 11.44, y: 18.06))
        bezier46Path.addLine(to: CGPoint(x: 26.31, y: 25.93))
        bezier46Path.addLine(to: CGPoint(x: 11.44, y: 35.06))
        bezier46Path.close()
        context.saveGState()
        bezier46Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 11.29, y: 18.06), end: CGPoint(x: 11.29, y: 35.06), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier46Path.lineWidth = 0.1
        bezier46Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 47 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier47Path = UIBezierPath()
        bezier47Path.move(to: CGPoint(x: -3.83, y: 25.94))
        bezier47Path.addLine(to: CGPoint(x: 11.44, y: 18.05))
        bezier47Path.addLine(to: CGPoint(x: 10.98, y: -3.12))
        bezier47Path.addLine(to: CGPoint(x: -3.72, y: 5.97))
        bezier47Path.addLine(to: CGPoint(x: -3.83, y: 25.94))
        bezier47Path.close()
        context.saveGState()
        bezier47Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 3.8, y: -3.12), end: CGPoint(x: 3.8, y: 25.94), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier47Path.lineWidth = 0.1
        bezier47Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 48 Drawing
        let bezier48Path = UIBezierPath()
        bezier48Path.move(to: CGPoint(x: 11.47, y: 35.03))
        bezier48Path.addCurve(to: CGPoint(x: 26.5, y: 25.92), controlPoint1: CGPoint(x: 11.47, y: 35.03), controlPoint2: CGPoint(x: 26.52, y: 25.94))
        bezier48Path.addCurve(to: CGPoint(x: 26.5, y: 5.92), controlPoint1: CGPoint(x: 26.47, y: 25.91), controlPoint2: CGPoint(x: 26.5, y: 5.92))
        bezier48Path.addLine(to: CGPoint(x: 11.38, y: 14.84))
        bezier48Path.addLine(to: CGPoint(x: 11.47, y: 35.03))
        bezier48Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier48Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 18.94, y: 5.92), end: CGPoint(x: 18.94, y: 35.03), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier48Path.lineWidth = 0.5
        bezier48Path.stroke()
        context.restoreGState()



        context.restoreGState()


        //// layer_1_31
        context.saveGState()
        context.translateBy(x: (arc3ExprX - 571.118531734), y: (arc3ExprY - 2247.94754464))



        //// Bezier 54 Drawing
        let bezier54Path = UIBezierPath()
        bezier54Path.move(to: CGPoint(x: 155.24, y: 20.18))
        bezier54Path.addCurve(to: CGPoint(x: 25.31, y: 86.71), controlPoint1: CGPoint(x: 129.73, y: 50.47), controlPoint2: CGPoint(x: 84.4, y: 75.04))
        bezier54Path.addLine(to: CGPoint(x: 0.2, y: 43.65))
        bezier54Path.addCurve(to: CGPoint(x: 85.43, y: 0), controlPoint1: CGPoint(x: 38.97, y: 36), controlPoint2: CGPoint(x: 68.69, y: 19.88))
        bezier54Path.addLine(to: CGPoint(x: 155.24, y: 20.18))
        bezier54Path.close()
        context.saveGState()
        bezier54Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 0.2, y: 43.36),
            end: CGPoint(x: 155.24, y: 43.36),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 55 Drawing
        let bezier55Path = UIBezierPath()
        bezier55Path.move(to: CGPoint(x: 151.63, y: 93.47))
        bezier55Path.addCurve(to: CGPoint(x: 152.51, y: 92.51), controlPoint1: CGPoint(x: 151.92, y: 93.15), controlPoint2: CGPoint(x: 152.22, y: 92.83))
        bezier55Path.addCurve(to: CGPoint(x: 155.05, y: 89.59), controlPoint1: CGPoint(x: 153.37, y: 91.54), controlPoint2: CGPoint(x: 154.22, y: 90.57))
        bezier55Path.addLine(to: CGPoint(x: 155.24, y: 20.18))
        bezier55Path.addCurve(to: CGPoint(x: 152.71, y: 23.09), controlPoint1: CGPoint(x: 154.41, y: 21.16), controlPoint2: CGPoint(x: 153.57, y: 22.13))
        bezier55Path.addCurve(to: CGPoint(x: 151.83, y: 24.05), controlPoint1: CGPoint(x: 152.42, y: 23.41), controlPoint2: CGPoint(x: 152.12, y: 23.73))
        bezier55Path.addCurve(to: CGPoint(x: 150.04, y: 25.97), controlPoint1: CGPoint(x: 151.24, y: 24.69), controlPoint2: CGPoint(x: 150.65, y: 25.34))
        bezier55Path.addCurve(to: CGPoint(x: 148.94, y: 27.11), controlPoint1: CGPoint(x: 149.68, y: 26.36), controlPoint2: CGPoint(x: 149.31, y: 26.73))
        bezier55Path.addCurve(to: CGPoint(x: 147.26, y: 28.82), controlPoint1: CGPoint(x: 148.39, y: 27.68), controlPoint2: CGPoint(x: 147.83, y: 28.25))
        bezier55Path.addCurve(to: CGPoint(x: 146.04, y: 30.01), controlPoint1: CGPoint(x: 146.86, y: 29.22), controlPoint2: CGPoint(x: 146.44, y: 29.62))
        bezier55Path.addCurve(to: CGPoint(x: 144.36, y: 31.63), controlPoint1: CGPoint(x: 145.48, y: 30.55), controlPoint2: CGPoint(x: 144.92, y: 31.09))
        bezier55Path.addCurve(to: CGPoint(x: 143.02, y: 32.85), controlPoint1: CGPoint(x: 143.92, y: 32.04), controlPoint2: CGPoint(x: 143.47, y: 32.45))
        bezier55Path.addCurve(to: CGPoint(x: 141.35, y: 34.37), controlPoint1: CGPoint(x: 142.47, y: 33.36), controlPoint2: CGPoint(x: 141.92, y: 33.87))
        bezier55Path.addCurve(to: CGPoint(x: 139.95, y: 35.6), controlPoint1: CGPoint(x: 140.89, y: 34.78), controlPoint2: CGPoint(x: 140.42, y: 35.19))
        bezier55Path.addCurve(to: CGPoint(x: 138.22, y: 37.08), controlPoint1: CGPoint(x: 139.38, y: 36.09), controlPoint2: CGPoint(x: 138.8, y: 36.59))
        bezier55Path.addCurve(to: CGPoint(x: 136.76, y: 38.3), controlPoint1: CGPoint(x: 137.74, y: 37.49), controlPoint2: CGPoint(x: 137.25, y: 37.89))
        bezier55Path.addCurve(to: CGPoint(x: 134.99, y: 39.74), controlPoint1: CGPoint(x: 136.17, y: 38.78), controlPoint2: CGPoint(x: 135.58, y: 39.26))
        bezier55Path.addCurve(to: CGPoint(x: 133.46, y: 40.94), controlPoint1: CGPoint(x: 134.48, y: 40.14), controlPoint2: CGPoint(x: 133.97, y: 40.55))
        bezier55Path.addCurve(to: CGPoint(x: 131.63, y: 42.36), controlPoint1: CGPoint(x: 132.85, y: 41.42), controlPoint2: CGPoint(x: 132.24, y: 41.89))
        bezier55Path.addCurve(to: CGPoint(x: 130.05, y: 43.55), controlPoint1: CGPoint(x: 131.11, y: 42.76), controlPoint2: CGPoint(x: 130.58, y: 43.15))
        bezier55Path.addCurve(to: CGPoint(x: 128.15, y: 44.93), controlPoint1: CGPoint(x: 129.42, y: 44.01), controlPoint2: CGPoint(x: 128.79, y: 44.47))
        bezier55Path.addCurve(to: CGPoint(x: 126.52, y: 46.1), controlPoint1: CGPoint(x: 127.62, y: 45.32), controlPoint2: CGPoint(x: 127.07, y: 45.71))
        bezier55Path.addCurve(to: CGPoint(x: 124.57, y: 47.45), controlPoint1: CGPoint(x: 125.88, y: 46.55), controlPoint2: CGPoint(x: 125.22, y: 47))
        bezier55Path.addCurve(to: CGPoint(x: 122.89, y: 48.6), controlPoint1: CGPoint(x: 124.01, y: 47.84), controlPoint2: CGPoint(x: 123.46, y: 48.22))
        bezier55Path.addCurve(to: CGPoint(x: 120.86, y: 49.93), controlPoint1: CGPoint(x: 122.22, y: 49.05), controlPoint2: CGPoint(x: 121.54, y: 49.49))
        bezier55Path.addCurve(to: CGPoint(x: 119.15, y: 51.05), controlPoint1: CGPoint(x: 120.3, y: 50.3), controlPoint2: CGPoint(x: 119.73, y: 50.67))
        bezier55Path.addCurve(to: CGPoint(x: 117.04, y: 52.37), controlPoint1: CGPoint(x: 118.45, y: 51.49), controlPoint2: CGPoint(x: 117.75, y: 51.93))
        bezier55Path.addCurve(to: CGPoint(x: 115.17, y: 53.52), controlPoint1: CGPoint(x: 116.42, y: 52.75), controlPoint2: CGPoint(x: 115.8, y: 53.14))
        bezier55Path.addCurve(to: CGPoint(x: 114.1, y: 54.16), controlPoint1: CGPoint(x: 114.82, y: 53.73), controlPoint2: CGPoint(x: 114.46, y: 53.95))
        bezier55Path.addCurve(to: CGPoint(x: 111.56, y: 55.66), controlPoint1: CGPoint(x: 113.26, y: 54.66), controlPoint2: CGPoint(x: 112.41, y: 55.16))
        bezier55Path.addCurve(to: CGPoint(x: 110.51, y: 56.26), controlPoint1: CGPoint(x: 111.21, y: 55.86), controlPoint2: CGPoint(x: 110.86, y: 56.06))
        bezier55Path.addCurve(to: CGPoint(x: 106.94, y: 58.26), controlPoint1: CGPoint(x: 109.33, y: 56.93), controlPoint2: CGPoint(x: 108.15, y: 57.6))
        bezier55Path.addCurve(to: CGPoint(x: 106.83, y: 58.32), controlPoint1: CGPoint(x: 106.9, y: 58.28), controlPoint2: CGPoint(x: 106.87, y: 58.3))
        bezier55Path.addCurve(to: CGPoint(x: 103.28, y: 60.21), controlPoint1: CGPoint(x: 105.66, y: 58.96), controlPoint2: CGPoint(x: 104.47, y: 59.59))
        bezier55Path.addCurve(to: CGPoint(x: 102.16, y: 60.79), controlPoint1: CGPoint(x: 102.91, y: 60.41), controlPoint2: CGPoint(x: 102.53, y: 60.6))
        bezier55Path.addCurve(to: CGPoint(x: 99.41, y: 62.18), controlPoint1: CGPoint(x: 101.25, y: 61.25), controlPoint2: CGPoint(x: 100.34, y: 61.72))
        bezier55Path.addCurve(to: CGPoint(x: 98.26, y: 62.76), controlPoint1: CGPoint(x: 99.03, y: 62.37), controlPoint2: CGPoint(x: 98.64, y: 62.57))
        bezier55Path.addCurve(to: CGPoint(x: 94.74, y: 64.45), controlPoint1: CGPoint(x: 97.1, y: 63.33), controlPoint2: CGPoint(x: 95.92, y: 63.9))
        bezier55Path.addCurve(to: CGPoint(x: 94.41, y: 64.61), controlPoint1: CGPoint(x: 94.63, y: 64.51), controlPoint2: CGPoint(x: 94.52, y: 64.56))
        bezier55Path.addCurve(to: CGPoint(x: 90.49, y: 66.41), controlPoint1: CGPoint(x: 93.12, y: 65.22), controlPoint2: CGPoint(x: 91.81, y: 65.82))
        bezier55Path.addCurve(to: CGPoint(x: 89.34, y: 66.92), controlPoint1: CGPoint(x: 90.11, y: 66.58), controlPoint2: CGPoint(x: 89.72, y: 66.75))
        bezier55Path.addCurve(to: CGPoint(x: 86.39, y: 68.21), controlPoint1: CGPoint(x: 88.36, y: 67.35), controlPoint2: CGPoint(x: 87.38, y: 67.78))
        bezier55Path.addCurve(to: CGPoint(x: 85.12, y: 68.74), controlPoint1: CGPoint(x: 85.97, y: 68.39), controlPoint2: CGPoint(x: 85.54, y: 68.57))
        bezier55Path.addCurve(to: CGPoint(x: 81.65, y: 70.18), controlPoint1: CGPoint(x: 83.97, y: 69.23), controlPoint2: CGPoint(x: 82.82, y: 69.71))
        bezier55Path.addCurve(to: CGPoint(x: 81, y: 70.44), controlPoint1: CGPoint(x: 81.44, y: 70.27), controlPoint2: CGPoint(x: 81.22, y: 70.35))
        bezier55Path.addCurve(to: CGPoint(x: 76.84, y: 72.08), controlPoint1: CGPoint(x: 79.63, y: 71), controlPoint2: CGPoint(x: 78.23, y: 71.54))
        bezier55Path.addCurve(to: CGPoint(x: 75.68, y: 72.52), controlPoint1: CGPoint(x: 76.45, y: 72.23), controlPoint2: CGPoint(x: 76.06, y: 72.37))
        bezier55Path.addCurve(to: CGPoint(x: 72.5, y: 73.69), controlPoint1: CGPoint(x: 74.62, y: 72.91), controlPoint2: CGPoint(x: 73.57, y: 73.31))
        bezier55Path.addCurve(to: CGPoint(x: 71.14, y: 74.19), controlPoint1: CGPoint(x: 72.05, y: 73.86), controlPoint2: CGPoint(x: 71.59, y: 74.03))
        bezier55Path.addCurve(to: CGPoint(x: 67.67, y: 75.4), controlPoint1: CGPoint(x: 69.99, y: 74.6), controlPoint2: CGPoint(x: 68.83, y: 75))
        bezier55Path.addCurve(to: CGPoint(x: 66.75, y: 75.72), controlPoint1: CGPoint(x: 67.36, y: 75.51), controlPoint2: CGPoint(x: 67.06, y: 75.62))
        bezier55Path.addCurve(to: CGPoint(x: 62.38, y: 77.17), controlPoint1: CGPoint(x: 65.3, y: 76.21), controlPoint2: CGPoint(x: 63.85, y: 76.7))
        bezier55Path.addCurve(to: CGPoint(x: 60.69, y: 77.7), controlPoint1: CGPoint(x: 61.82, y: 77.35), controlPoint2: CGPoint(x: 61.25, y: 77.52))
        bezier55Path.addCurve(to: CGPoint(x: 57.64, y: 78.66), controlPoint1: CGPoint(x: 59.67, y: 78.02), controlPoint2: CGPoint(x: 58.66, y: 78.34))
        bezier55Path.addCurve(to: CGPoint(x: 55.72, y: 79.23), controlPoint1: CGPoint(x: 57, y: 78.85), controlPoint2: CGPoint(x: 56.36, y: 79.04))
        bezier55Path.addCurve(to: CGPoint(x: 52.8, y: 80.08), controlPoint1: CGPoint(x: 54.75, y: 79.52), controlPoint2: CGPoint(x: 53.78, y: 79.8))
        bezier55Path.addCurve(to: CGPoint(x: 50.78, y: 80.66), controlPoint1: CGPoint(x: 52.13, y: 80.27), controlPoint2: CGPoint(x: 51.45, y: 80.47))
        bezier55Path.addCurve(to: CGPoint(x: 47.88, y: 81.45), controlPoint1: CGPoint(x: 49.82, y: 80.93), controlPoint2: CGPoint(x: 48.85, y: 81.19))
        bezier55Path.addCurve(to: CGPoint(x: 45.81, y: 82), controlPoint1: CGPoint(x: 47.19, y: 81.64), controlPoint2: CGPoint(x: 46.5, y: 81.82))
        bezier55Path.addCurve(to: CGPoint(x: 42.85, y: 82.77), controlPoint1: CGPoint(x: 44.83, y: 82.26), controlPoint2: CGPoint(x: 43.84, y: 82.52))
        bezier55Path.addCurve(to: CGPoint(x: 40.78, y: 83.29), controlPoint1: CGPoint(x: 42.16, y: 82.94), controlPoint2: CGPoint(x: 41.47, y: 83.11))
        bezier55Path.addCurve(to: CGPoint(x: 37.68, y: 84.03), controlPoint1: CGPoint(x: 39.75, y: 83.54), controlPoint2: CGPoint(x: 38.72, y: 83.78))
        bezier55Path.addCurve(to: CGPoint(x: 35.69, y: 84.5), controlPoint1: CGPoint(x: 37.01, y: 84.18), controlPoint2: CGPoint(x: 36.36, y: 84.34))
        bezier55Path.addCurve(to: CGPoint(x: 32.24, y: 85.26), controlPoint1: CGPoint(x: 34.55, y: 84.76), controlPoint2: CGPoint(x: 33.39, y: 85.01))
        bezier55Path.addCurve(to: CGPoint(x: 30.53, y: 85.64), controlPoint1: CGPoint(x: 31.67, y: 85.39), controlPoint2: CGPoint(x: 31.1, y: 85.51))
        bezier55Path.addCurve(to: CGPoint(x: 25.31, y: 86.71), controlPoint1: CGPoint(x: 28.8, y: 86.01), controlPoint2: CGPoint(x: 27.06, y: 86.37))
        bezier55Path.addLine(to: CGPoint(x: 25.11, y: 156.13))
        bezier55Path.addCurve(to: CGPoint(x: 30.34, y: 155.06), controlPoint1: CGPoint(x: 26.86, y: 155.78), controlPoint2: CGPoint(x: 28.61, y: 155.42))
        bezier55Path.addCurve(to: CGPoint(x: 32.04, y: 154.68), controlPoint1: CGPoint(x: 30.91, y: 154.93), controlPoint2: CGPoint(x: 31.47, y: 154.8))
        bezier55Path.addCurve(to: CGPoint(x: 35.49, y: 153.91), controlPoint1: CGPoint(x: 33.2, y: 154.43), controlPoint2: CGPoint(x: 34.35, y: 154.17))
        bezier55Path.addCurve(to: CGPoint(x: 37.49, y: 153.44), controlPoint1: CGPoint(x: 36.16, y: 153.76), controlPoint2: CGPoint(x: 36.82, y: 153.6))
        bezier55Path.addCurve(to: CGPoint(x: 40.58, y: 152.7), controlPoint1: CGPoint(x: 38.52, y: 153.2), controlPoint2: CGPoint(x: 39.56, y: 152.95))
        bezier55Path.addCurve(to: CGPoint(x: 42.66, y: 152.18), controlPoint1: CGPoint(x: 41.28, y: 152.53), controlPoint2: CGPoint(x: 41.97, y: 152.35))
        bezier55Path.addCurve(to: CGPoint(x: 45.61, y: 151.42), controlPoint1: CGPoint(x: 43.65, y: 151.93), controlPoint2: CGPoint(x: 44.63, y: 151.68))
        bezier55Path.addCurve(to: CGPoint(x: 47.69, y: 150.87), controlPoint1: CGPoint(x: 46.3, y: 151.24), controlPoint2: CGPoint(x: 47, y: 151.05))
        bezier55Path.addCurve(to: CGPoint(x: 50.58, y: 150.07), controlPoint1: CGPoint(x: 48.66, y: 150.6), controlPoint2: CGPoint(x: 49.62, y: 150.34))
        bezier55Path.addCurve(to: CGPoint(x: 52.61, y: 149.5), controlPoint1: CGPoint(x: 51.26, y: 149.88), controlPoint2: CGPoint(x: 51.94, y: 149.69))
        bezier55Path.addCurve(to: CGPoint(x: 55.51, y: 148.65), controlPoint1: CGPoint(x: 53.58, y: 149.22), controlPoint2: CGPoint(x: 54.55, y: 148.93))
        bezier55Path.addCurve(to: CGPoint(x: 57.44, y: 148.07), controlPoint1: CGPoint(x: 56.16, y: 148.45), controlPoint2: CGPoint(x: 56.8, y: 148.27))
        bezier55Path.addCurve(to: CGPoint(x: 60.49, y: 147.12), controlPoint1: CGPoint(x: 58.46, y: 147.76), controlPoint2: CGPoint(x: 59.47, y: 147.44))
        bezier55Path.addCurve(to: CGPoint(x: 62.18, y: 146.58), controlPoint1: CGPoint(x: 61.05, y: 146.94), controlPoint2: CGPoint(x: 61.62, y: 146.76))
        bezier55Path.addCurve(to: CGPoint(x: 62.56, y: 146.47), controlPoint1: CGPoint(x: 62.31, y: 146.55), controlPoint2: CGPoint(x: 62.44, y: 146.5))
        bezier55Path.addCurve(to: CGPoint(x: 66.56, y: 145.14), controlPoint1: CGPoint(x: 63.9, y: 146.03), controlPoint2: CGPoint(x: 65.23, y: 145.59))
        bezier55Path.addCurve(to: CGPoint(x: 67.48, y: 144.82), controlPoint1: CGPoint(x: 66.86, y: 145.03), controlPoint2: CGPoint(x: 67.17, y: 144.92))
        bezier55Path.addCurve(to: CGPoint(x: 70.94, y: 143.6), controlPoint1: CGPoint(x: 68.64, y: 144.42), controlPoint2: CGPoint(x: 69.79, y: 144.01))
        bezier55Path.addCurve(to: CGPoint(x: 72.31, y: 143.11), controlPoint1: CGPoint(x: 71.39, y: 143.44), controlPoint2: CGPoint(x: 71.85, y: 143.27))
        bezier55Path.addCurve(to: CGPoint(x: 75.48, y: 141.93), controlPoint1: CGPoint(x: 73.37, y: 142.72), controlPoint2: CGPoint(x: 74.42, y: 142.33))
        bezier55Path.addCurve(to: CGPoint(x: 76.64, y: 141.49), controlPoint1: CGPoint(x: 75.87, y: 141.79), controlPoint2: CGPoint(x: 76.25, y: 141.64))
        bezier55Path.addCurve(to: CGPoint(x: 80.81, y: 139.86), controlPoint1: CGPoint(x: 78.04, y: 140.96), controlPoint2: CGPoint(x: 79.43, y: 140.41))
        bezier55Path.addCurve(to: CGPoint(x: 81.46, y: 139.59), controlPoint1: CGPoint(x: 81.03, y: 139.77), controlPoint2: CGPoint(x: 81.24, y: 139.68))
        bezier55Path.addCurve(to: CGPoint(x: 84.92, y: 138.16), controlPoint1: CGPoint(x: 82.62, y: 139.12), controlPoint2: CGPoint(x: 83.78, y: 138.64))
        bezier55Path.addCurve(to: CGPoint(x: 86.2, y: 137.62), controlPoint1: CGPoint(x: 85.35, y: 137.98), controlPoint2: CGPoint(x: 85.78, y: 137.8))
        bezier55Path.addCurve(to: CGPoint(x: 89.13, y: 136.34), controlPoint1: CGPoint(x: 87.18, y: 137.19), controlPoint2: CGPoint(x: 88.16, y: 136.77))
        bezier55Path.addCurve(to: CGPoint(x: 90.3, y: 135.82), controlPoint1: CGPoint(x: 89.52, y: 136.17), controlPoint2: CGPoint(x: 89.91, y: 136))
        bezier55Path.addCurve(to: CGPoint(x: 94.21, y: 134.03), controlPoint1: CGPoint(x: 91.61, y: 135.23), controlPoint2: CGPoint(x: 92.92, y: 134.64))
        bezier55Path.addCurve(to: CGPoint(x: 94.55, y: 133.87), controlPoint1: CGPoint(x: 94.32, y: 133.98), controlPoint2: CGPoint(x: 94.43, y: 133.92))
        bezier55Path.addCurve(to: CGPoint(x: 98.06, y: 132.17), controlPoint1: CGPoint(x: 95.73, y: 133.31), controlPoint2: CGPoint(x: 96.9, y: 132.74))
        bezier55Path.addCurve(to: CGPoint(x: 99.23, y: 131.59), controlPoint1: CGPoint(x: 98.45, y: 131.98), controlPoint2: CGPoint(x: 98.83, y: 131.79))
        bezier55Path.addCurve(to: CGPoint(x: 101.96, y: 130.2), controlPoint1: CGPoint(x: 100.14, y: 131.14), controlPoint2: CGPoint(x: 101.06, y: 130.67))
        bezier55Path.addCurve(to: CGPoint(x: 103.08, y: 129.62), controlPoint1: CGPoint(x: 102.34, y: 130.01), controlPoint2: CGPoint(x: 102.71, y: 129.82))
        bezier55Path.addCurve(to: CGPoint(x: 106.62, y: 127.74), controlPoint1: CGPoint(x: 104.27, y: 129.01), controlPoint2: CGPoint(x: 105.46, y: 128.38))
        bezier55Path.addCurve(to: CGPoint(x: 106.75, y: 127.67), controlPoint1: CGPoint(x: 106.66, y: 127.72), controlPoint2: CGPoint(x: 106.71, y: 127.7))
        bezier55Path.addCurve(to: CGPoint(x: 110.32, y: 125.68), controlPoint1: CGPoint(x: 107.95, y: 127.02), controlPoint2: CGPoint(x: 109.14, y: 126.35))
        bezier55Path.addCurve(to: CGPoint(x: 111.36, y: 125.07), controlPoint1: CGPoint(x: 110.67, y: 125.47), controlPoint2: CGPoint(x: 111.01, y: 125.27))
        bezier55Path.addCurve(to: CGPoint(x: 113.91, y: 123.58), controlPoint1: CGPoint(x: 112.22, y: 124.58), controlPoint2: CGPoint(x: 113.07, y: 124.08))
        bezier55Path.addCurve(to: CGPoint(x: 114.98, y: 122.93), controlPoint1: CGPoint(x: 114.27, y: 123.36), controlPoint2: CGPoint(x: 114.62, y: 123.15))
        bezier55Path.addCurve(to: CGPoint(x: 115.64, y: 122.54), controlPoint1: CGPoint(x: 115.2, y: 122.8), controlPoint2: CGPoint(x: 115.42, y: 122.67))
        bezier55Path.addCurve(to: CGPoint(x: 116.85, y: 121.78), controlPoint1: CGPoint(x: 116.05, y: 122.29), controlPoint2: CGPoint(x: 116.44, y: 122.03))
        bezier55Path.addCurve(to: CGPoint(x: 118.95, y: 120.46), controlPoint1: CGPoint(x: 117.55, y: 121.34), controlPoint2: CGPoint(x: 118.26, y: 120.9))
        bezier55Path.addCurve(to: CGPoint(x: 120.67, y: 119.35), controlPoint1: CGPoint(x: 119.53, y: 120.09), controlPoint2: CGPoint(x: 120.1, y: 119.72))
        bezier55Path.addCurve(to: CGPoint(x: 122.7, y: 118.01), controlPoint1: CGPoint(x: 121.35, y: 118.91), controlPoint2: CGPoint(x: 122.03, y: 118.46))
        bezier55Path.addCurve(to: CGPoint(x: 124.37, y: 116.87), controlPoint1: CGPoint(x: 123.26, y: 117.63), controlPoint2: CGPoint(x: 123.82, y: 117.25))
        bezier55Path.addCurve(to: CGPoint(x: 126.33, y: 115.51), controlPoint1: CGPoint(x: 125.03, y: 116.42), controlPoint2: CGPoint(x: 125.68, y: 115.97))
        bezier55Path.addCurve(to: CGPoint(x: 127.96, y: 114.34), controlPoint1: CGPoint(x: 126.88, y: 115.12), controlPoint2: CGPoint(x: 127.42, y: 114.73))
        bezier55Path.addCurve(to: CGPoint(x: 129.85, y: 112.96), controlPoint1: CGPoint(x: 128.6, y: 113.89), controlPoint2: CGPoint(x: 129.23, y: 113.43))
        bezier55Path.addCurve(to: CGPoint(x: 131.43, y: 111.77), controlPoint1: CGPoint(x: 130.38, y: 112.57), controlPoint2: CGPoint(x: 130.91, y: 112.17))
        bezier55Path.addCurve(to: CGPoint(x: 133.26, y: 110.36), controlPoint1: CGPoint(x: 132.05, y: 111.3), controlPoint2: CGPoint(x: 132.66, y: 110.83))
        bezier55Path.addCurve(to: CGPoint(x: 134.79, y: 109.15), controlPoint1: CGPoint(x: 133.78, y: 109.96), controlPoint2: CGPoint(x: 134.29, y: 109.56))
        bezier55Path.addCurve(to: CGPoint(x: 136.56, y: 107.71), controlPoint1: CGPoint(x: 135.39, y: 108.68), controlPoint2: CGPoint(x: 135.97, y: 108.2))
        bezier55Path.addCurve(to: CGPoint(x: 138.03, y: 106.49), controlPoint1: CGPoint(x: 137.05, y: 107.31), controlPoint2: CGPoint(x: 137.55, y: 106.9))
        bezier55Path.addCurve(to: CGPoint(x: 139.75, y: 105.02), controlPoint1: CGPoint(x: 138.61, y: 106), controlPoint2: CGPoint(x: 139.18, y: 105.51))
        bezier55Path.addCurve(to: CGPoint(x: 141.16, y: 103.78), controlPoint1: CGPoint(x: 140.22, y: 104.6), controlPoint2: CGPoint(x: 140.69, y: 104.2))
        bezier55Path.addCurve(to: CGPoint(x: 142.83, y: 102.27), controlPoint1: CGPoint(x: 141.72, y: 103.28), controlPoint2: CGPoint(x: 142.27, y: 102.78))
        bezier55Path.addCurve(to: CGPoint(x: 143.8, y: 101.38), controlPoint1: CGPoint(x: 143.15, y: 101.98), controlPoint2: CGPoint(x: 143.48, y: 101.68))
        bezier55Path.addCurve(to: CGPoint(x: 144.16, y: 101.04), controlPoint1: CGPoint(x: 143.92, y: 101.27), controlPoint2: CGPoint(x: 144.04, y: 101.15))
        bezier55Path.addCurve(to: CGPoint(x: 145.84, y: 99.43), controlPoint1: CGPoint(x: 144.73, y: 100.5), controlPoint2: CGPoint(x: 145.28, y: 99.97))
        bezier55Path.addCurve(to: CGPoint(x: 147.07, y: 98.23), controlPoint1: CGPoint(x: 146.25, y: 99.03), controlPoint2: CGPoint(x: 146.66, y: 98.64))
        bezier55Path.addCurve(to: CGPoint(x: 148.74, y: 96.53), controlPoint1: CGPoint(x: 147.63, y: 97.67), controlPoint2: CGPoint(x: 148.19, y: 97.1))
        bezier55Path.addCurve(to: CGPoint(x: 149.85, y: 95.39), controlPoint1: CGPoint(x: 149.11, y: 96.15), controlPoint2: CGPoint(x: 149.49, y: 95.77))
        bezier55Path.addCurve(to: CGPoint(x: 151.63, y: 93.47), controlPoint1: CGPoint(x: 150.45, y: 94.75), controlPoint2: CGPoint(x: 151.04, y: 94.11))
        bezier55Path.close()
        context.saveGState()
        bezier55Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 25.11, y: 88.15),
            end: CGPoint(x: 155.24, y: 88.15),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 56 Drawing
        let bezier56Path = UIBezierPath()
        bezier56Path.move(to: CGPoint(x: 25.31, y: 86.71))
        bezier56Path.addLine(to: CGPoint(x: 25.11, y: 156.13))
        bezier56Path.addLine(to: CGPoint(x: 0, y: 113.07))
        bezier56Path.addLine(to: CGPoint(x: 0.2, y: 43.65))
        bezier56Path.addLine(to: CGPoint(x: 25.31, y: 86.71))
        bezier56Path.close()
        context.saveGState()
        bezier56Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 0, y: 99.89),
            end: CGPoint(x: 25.31, y: 99.89),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// layer_1_30
        context.saveGState()
        context.translateBy(x: (arc1ExprX - 569.546266109), y: (arc1ExprY - 2243.29715402))



        //// Bezier 49 Drawing
        let bezier49Path = UIBezierPath()
        bezier49Path.move(to: CGPoint(x: 73.76, y: 0))
        bezier49Path.addCurve(to: CGPoint(x: 109.48, y: 33.32), controlPoint1: CGPoint(x: 81.38, y: 12.99), controlPoint2: CGPoint(x: 93.8, y: 24.25))
        bezier49Path.addCurve(to: CGPoint(x: 148.69, y: 49.63), controlPoint1: CGPoint(x: 121, y: 39.99), controlPoint2: CGPoint(x: 134.27, y: 45.49))
        bezier49Path.addLine(to: CGPoint(x: 114.42, y: 90.1))
        bezier49Path.addCurve(to: CGPoint(x: 54.64, y: 65.24), controlPoint1: CGPoint(x: 92.43, y: 83.78), controlPoint2: CGPoint(x: 72.2, y: 75.41))
        bezier49Path.addCurve(to: CGPoint(x: 0.2, y: 14.44), controlPoint1: CGPoint(x: 30.74, y: 51.4), controlPoint2: CGPoint(x: 11.81, y: 34.24))
        bezier49Path.addLine(to: CGPoint(x: 73.76, y: 0))
        bezier49Path.close()
        context.saveGState()
        bezier49Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 1227.87, y: 296.93),
            end: CGPoint(x: -628.46, y: -115.47),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 50 Drawing
        let bezier50Path = UIBezierPath()
        bezier50Path.move(to: CGPoint(x: 148.69, y: 49.63))
        bezier50Path.addLine(to: CGPoint(x: 148.5, y: 118.6))
        bezier50Path.addLine(to: CGPoint(x: 114.22, y: 159.07))
        bezier50Path.addLine(to: CGPoint(x: 114.42, y: 90.1))
        bezier50Path.addLine(to: CGPoint(x: 148.69, y: 49.63))
        bezier50Path.close()
        context.saveGState()
        bezier50Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 114.22, y: 104.35),
            end: CGPoint(x: 148.69, y: 104.35),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 51 Drawing
        let bezier51Path = UIBezierPath()
        bezier51Path.move(to: CGPoint(x: 93.97, y: 152.48))
        bezier51Path.addCurve(to: CGPoint(x: 95.01, y: 152.86), controlPoint1: CGPoint(x: 94.31, y: 152.61), controlPoint2: CGPoint(x: 94.67, y: 152.73))
        bezier51Path.addCurve(to: CGPoint(x: 97.63, y: 153.79), controlPoint1: CGPoint(x: 95.88, y: 153.17), controlPoint2: CGPoint(x: 96.75, y: 153.49))
        bezier51Path.addCurve(to: CGPoint(x: 99, y: 154.26), controlPoint1: CGPoint(x: 98.08, y: 153.95), controlPoint2: CGPoint(x: 98.54, y: 154.11))
        bezier51Path.addCurve(to: CGPoint(x: 101.36, y: 155.07), controlPoint1: CGPoint(x: 99.78, y: 154.53), controlPoint2: CGPoint(x: 100.57, y: 154.8))
        bezier51Path.addCurve(to: CGPoint(x: 102.81, y: 155.55), controlPoint1: CGPoint(x: 101.84, y: 155.23), controlPoint2: CGPoint(x: 102.32, y: 155.39))
        bezier51Path.addCurve(to: CGPoint(x: 105.17, y: 156.31), controlPoint1: CGPoint(x: 103.6, y: 155.81), controlPoint2: CGPoint(x: 104.38, y: 156.06))
        bezier51Path.addCurve(to: CGPoint(x: 106.6, y: 156.77), controlPoint1: CGPoint(x: 105.64, y: 156.46), controlPoint2: CGPoint(x: 106.12, y: 156.62))
        bezier51Path.addCurve(to: CGPoint(x: 109.17, y: 157.57), controlPoint1: CGPoint(x: 107.45, y: 157.04), controlPoint2: CGPoint(x: 108.31, y: 157.3))
        bezier51Path.addCurve(to: CGPoint(x: 110.4, y: 157.94), controlPoint1: CGPoint(x: 109.58, y: 157.69), controlPoint2: CGPoint(x: 109.99, y: 157.82))
        bezier51Path.addCurve(to: CGPoint(x: 114.22, y: 159.07), controlPoint1: CGPoint(x: 111.67, y: 158.32), controlPoint2: CGPoint(x: 112.94, y: 158.7))
        bezier51Path.addLine(to: CGPoint(x: 114.42, y: 90.1))
        bezier51Path.addCurve(to: CGPoint(x: 110.59, y: 88.97), controlPoint1: CGPoint(x: 113.14, y: 89.73), controlPoint2: CGPoint(x: 111.86, y: 89.35))
        bezier51Path.addCurve(to: CGPoint(x: 109.37, y: 88.59), controlPoint1: CGPoint(x: 110.19, y: 88.85), controlPoint2: CGPoint(x: 109.78, y: 88.72))
        bezier51Path.addCurve(to: CGPoint(x: 106.79, y: 87.8), controlPoint1: CGPoint(x: 108.51, y: 88.33), controlPoint2: CGPoint(x: 107.65, y: 88.07))
        bezier51Path.addCurve(to: CGPoint(x: 105.37, y: 87.35), controlPoint1: CGPoint(x: 106.32, y: 87.65), controlPoint2: CGPoint(x: 105.84, y: 87.5))
        bezier51Path.addCurve(to: CGPoint(x: 103, y: 86.58), controlPoint1: CGPoint(x: 104.58, y: 87.09), controlPoint2: CGPoint(x: 103.79, y: 86.84))
        bezier51Path.addCurve(to: CGPoint(x: 101.55, y: 86.1), controlPoint1: CGPoint(x: 102.52, y: 86.42), controlPoint2: CGPoint(x: 102.04, y: 86.25))
        bezier51Path.addCurve(to: CGPoint(x: 99.18, y: 85.29), controlPoint1: CGPoint(x: 100.76, y: 85.83), controlPoint2: CGPoint(x: 99.97, y: 85.56))
        bezier51Path.addCurve(to: CGPoint(x: 97.83, y: 84.82), controlPoint1: CGPoint(x: 98.73, y: 85.13), controlPoint2: CGPoint(x: 98.28, y: 84.98))
        bezier51Path.addCurve(to: CGPoint(x: 95.2, y: 83.89), controlPoint1: CGPoint(x: 96.95, y: 84.51), controlPoint2: CGPoint(x: 96.08, y: 84.2))
        bezier51Path.addCurve(to: CGPoint(x: 94.16, y: 83.51), controlPoint1: CGPoint(x: 94.86, y: 83.76), controlPoint2: CGPoint(x: 94.51, y: 83.64))
        bezier51Path.addCurve(to: CGPoint(x: 90.55, y: 82.16), controlPoint1: CGPoint(x: 92.95, y: 83.07), controlPoint2: CGPoint(x: 91.74, y: 82.62))
        bezier51Path.addCurve(to: CGPoint(x: 89.93, y: 81.93), controlPoint1: CGPoint(x: 90.34, y: 82.08), controlPoint2: CGPoint(x: 90.14, y: 82.01))
        bezier51Path.addCurve(to: CGPoint(x: 87.04, y: 80.8), controlPoint1: CGPoint(x: 88.96, y: 81.55), controlPoint2: CGPoint(x: 88, y: 81.18))
        bezier51Path.addCurve(to: CGPoint(x: 83.7, y: 79.45), controlPoint1: CGPoint(x: 85.92, y: 80.36), controlPoint2: CGPoint(x: 84.8, y: 79.9))
        bezier51Path.addCurve(to: CGPoint(x: 82.95, y: 79.15), controlPoint1: CGPoint(x: 83.45, y: 79.34), controlPoint2: CGPoint(x: 83.2, y: 79.25))
        bezier51Path.addCurve(to: CGPoint(x: 78.94, y: 77.44), controlPoint1: CGPoint(x: 81.6, y: 78.59), controlPoint2: CGPoint(x: 80.26, y: 78.02))
        bezier51Path.addCurve(to: CGPoint(x: 77.78, y: 76.93), controlPoint1: CGPoint(x: 78.55, y: 77.27), controlPoint2: CGPoint(x: 78.17, y: 77.1))
        bezier51Path.addCurve(to: CGPoint(x: 74.97, y: 75.68), controlPoint1: CGPoint(x: 76.84, y: 76.52), controlPoint2: CGPoint(x: 75.91, y: 76.1))
        bezier51Path.addCurve(to: CGPoint(x: 73.51, y: 75), controlPoint1: CGPoint(x: 74.48, y: 75.45), controlPoint2: CGPoint(x: 74, y: 75.22))
        bezier51Path.addCurve(to: CGPoint(x: 71.06, y: 73.85), controlPoint1: CGPoint(x: 72.69, y: 74.62), controlPoint2: CGPoint(x: 71.87, y: 74.24))
        bezier51Path.addCurve(to: CGPoint(x: 69.52, y: 73.11), controlPoint1: CGPoint(x: 70.54, y: 73.61), controlPoint2: CGPoint(x: 70.03, y: 73.36))
        bezier51Path.addCurve(to: CGPoint(x: 67.19, y: 71.97), controlPoint1: CGPoint(x: 68.74, y: 72.73), controlPoint2: CGPoint(x: 67.96, y: 72.35))
        bezier51Path.addCurve(to: CGPoint(x: 65.67, y: 71.21), controlPoint1: CGPoint(x: 66.68, y: 71.71), controlPoint2: CGPoint(x: 66.18, y: 71.46))
        bezier51Path.addCurve(to: CGPoint(x: 63.34, y: 70.01), controlPoint1: CGPoint(x: 64.89, y: 70.81), controlPoint2: CGPoint(x: 64.12, y: 70.41))
        bezier51Path.addCurve(to: CGPoint(x: 61.91, y: 69.26), controlPoint1: CGPoint(x: 62.87, y: 69.76), controlPoint2: CGPoint(x: 62.39, y: 69.51))
        bezier51Path.addCurve(to: CGPoint(x: 59.43, y: 67.92), controlPoint1: CGPoint(x: 61.08, y: 68.82), controlPoint2: CGPoint(x: 60.25, y: 68.37))
        bezier51Path.addCurve(to: CGPoint(x: 58.24, y: 67.27), controlPoint1: CGPoint(x: 59.03, y: 67.7), controlPoint2: CGPoint(x: 58.63, y: 67.49))
        bezier51Path.addCurve(to: CGPoint(x: 54.64, y: 65.24), controlPoint1: CGPoint(x: 57.03, y: 66.6), controlPoint2: CGPoint(x: 55.83, y: 65.93))
        bezier51Path.addCurve(to: CGPoint(x: 0.2, y: 14.44), controlPoint1: CGPoint(x: 30.74, y: 51.4), controlPoint2: CGPoint(x: 11.81, y: 34.24))
        bezier51Path.addLine(to: CGPoint(x: 0, y: 83.41))
        bezier51Path.addCurve(to: CGPoint(x: 54.45, y: 134.21), controlPoint1: CGPoint(x: 11.61, y: 103.21), controlPoint2: CGPoint(x: 30.55, y: 120.37))
        bezier51Path.addCurve(to: CGPoint(x: 58.04, y: 136.25), controlPoint1: CGPoint(x: 55.63, y: 134.9), controlPoint2: CGPoint(x: 56.83, y: 135.57))
        bezier51Path.addCurve(to: CGPoint(x: 59.23, y: 136.89), controlPoint1: CGPoint(x: 58.44, y: 136.46), controlPoint2: CGPoint(x: 58.83, y: 136.68))
        bezier51Path.addCurve(to: CGPoint(x: 61.72, y: 138.24), controlPoint1: CGPoint(x: 60.05, y: 137.34), controlPoint2: CGPoint(x: 60.88, y: 137.79))
        bezier51Path.addCurve(to: CGPoint(x: 63.15, y: 138.98), controlPoint1: CGPoint(x: 62.19, y: 138.49), controlPoint2: CGPoint(x: 62.67, y: 138.73))
        bezier51Path.addCurve(to: CGPoint(x: 65.48, y: 140.18), controlPoint1: CGPoint(x: 63.92, y: 139.38), controlPoint2: CGPoint(x: 64.69, y: 139.78))
        bezier51Path.addCurve(to: CGPoint(x: 66.99, y: 140.94), controlPoint1: CGPoint(x: 65.98, y: 140.44), controlPoint2: CGPoint(x: 66.49, y: 140.69))
        bezier51Path.addCurve(to: CGPoint(x: 69.33, y: 142.09), controlPoint1: CGPoint(x: 67.77, y: 141.33), controlPoint2: CGPoint(x: 68.55, y: 141.71))
        bezier51Path.addCurve(to: CGPoint(x: 70.86, y: 142.82), controlPoint1: CGPoint(x: 69.84, y: 142.33), controlPoint2: CGPoint(x: 70.35, y: 142.58))
        bezier51Path.addCurve(to: CGPoint(x: 73.32, y: 143.98), controlPoint1: CGPoint(x: 71.68, y: 143.21), controlPoint2: CGPoint(x: 72.5, y: 143.59))
        bezier51Path.addCurve(to: CGPoint(x: 74.78, y: 144.64), controlPoint1: CGPoint(x: 73.81, y: 144.2), controlPoint2: CGPoint(x: 74.28, y: 144.42))
        bezier51Path.addCurve(to: CGPoint(x: 77.59, y: 145.9), controlPoint1: CGPoint(x: 75.71, y: 145.07), controlPoint2: CGPoint(x: 76.65, y: 145.49))
        bezier51Path.addCurve(to: CGPoint(x: 78.74, y: 146.41), controlPoint1: CGPoint(x: 77.98, y: 146.07), controlPoint2: CGPoint(x: 78.35, y: 146.24))
        bezier51Path.addCurve(to: CGPoint(x: 82.76, y: 148.12), controlPoint1: CGPoint(x: 80.07, y: 146.99), controlPoint2: CGPoint(x: 81.41, y: 147.56))
        bezier51Path.addCurve(to: CGPoint(x: 83.48, y: 148.41), controlPoint1: CGPoint(x: 83, y: 148.22), controlPoint2: CGPoint(x: 83.25, y: 148.31))
        bezier51Path.addCurve(to: CGPoint(x: 86.85, y: 149.78), controlPoint1: CGPoint(x: 84.6, y: 148.87), controlPoint2: CGPoint(x: 85.72, y: 149.33))
        bezier51Path.addCurve(to: CGPoint(x: 87.18, y: 149.91), controlPoint1: CGPoint(x: 86.96, y: 149.82), controlPoint2: CGPoint(x: 87.07, y: 149.86))
        bezier51Path.addCurve(to: CGPoint(x: 89.72, y: 150.89), controlPoint1: CGPoint(x: 88.02, y: 150.24), controlPoint2: CGPoint(x: 88.87, y: 150.57))
        bezier51Path.addCurve(to: CGPoint(x: 90.35, y: 151.14), controlPoint1: CGPoint(x: 89.93, y: 150.97), controlPoint2: CGPoint(x: 90.14, y: 151.06))
        bezier51Path.addCurve(to: CGPoint(x: 93.97, y: 152.48), controlPoint1: CGPoint(x: 91.55, y: 151.59), controlPoint2: CGPoint(x: 92.76, y: 152.04))
        bezier51Path.close()
        context.saveGState()
        bezier51Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 88.55, y: 59.58),
            end: CGPoint(x: 41.26, y: 100.58),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// layer_1_29
        context.saveGState()
        context.translateBy(x: -467.25, y: -2107.56)
        context.rotate(by: 1 * CGFloat.pi/180)



        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 29.18, y: 20.1))
        bezier8Path.addLine(to: CGPoint(x: 439.18, y: 82.1))
        bezier8Path.addLine(to: CGPoint(x: 413.18, y: 161.1))
        bezier8Path.addLine(to: CGPoint(x: 8.18, y: 95.1))
        bezier8Path.addLine(to: CGPoint(x: 29.18, y: 20.1))
        bezier8Path.close()
        context.saveGState()
        bezier8Path.addClip()
        context.drawLinearGradient(wings, start: CGPoint(x: 223.68, y: 20.1), end: CGPoint(x: 223.68, y: 161.1), options: [])
        context.restoreGState()


        //// plate 4
        context.saveGState()
        context.translateBy(x: plate4ExprX, y: plate4ExprY)



        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 107.84, y: 42.69))
        bezier9Path.addCurve(to: CGPoint(x: 106.12, y: 35.09), controlPoint1: CGPoint(x: 107.88, y: 42.12), controlPoint2: CGPoint(x: 106.12, y: 35.09))
        bezier9Path.addCurve(to: CGPoint(x: 97.76, y: 29.12), controlPoint1: CGPoint(x: 104.36, y: 31.99), controlPoint2: CGPoint(x: 101.42, y: 29.68))
        bezier9Path.addLine(to: CGPoint(x: 34.59, y: 19.49))
        bezier9Path.addCurve(to: CGPoint(x: 22.43, y: 26.6), controlPoint1: CGPoint(x: 29.56, y: 18.72), controlPoint2: CGPoint(x: 24.65, y: 21.6))
        bezier9Path.addLine(to: CGPoint(x: 2.67, y: 71.2))
        bezier9Path.addLine(to: CGPoint(x: 0.36, y: 81.29))
        bezier9Path.addLine(to: CGPoint(x: 0.54, y: 81.58))
        bezier9Path.addCurve(to: CGPoint(x: 10.21, y: 92.03), controlPoint1: CGPoint(x: 1.37, y: 86.71), controlPoint2: CGPoint(x: 5.03, y: 91.11))
        bezier9Path.addLine(to: CGPoint(x: 74.74, y: 103.47))
        bezier9Path.addCurve(to: CGPoint(x: 87.35, y: 95.94), controlPoint1: CGPoint(x: 80.02, y: 104.41), controlPoint2: CGPoint(x: 85.2, y: 101.31))
        bezier9Path.addLine(to: CGPoint(x: 106.88, y: 46.99))
        bezier9Path.addCurve(to: CGPoint(x: 107.58, y: 44.67), controlPoint1: CGPoint(x: 107.19, y: 46.23), controlPoint2: CGPoint(x: 107.42, y: 45.45))
        bezier9Path.addLine(to: CGPoint(x: 107.84, y: 44.18))
        bezier9Path.addLine(to: CGPoint(x: 107.84, y: 42.69))
        bezier9Path.close()
        darkPrimary.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 1.17, y: 50.39))
        bezier10Path.addLine(to: CGPoint(x: 21.75, y: 6.71))
        bezier10Path.addCurve(to: CGPoint(x: 33.73, y: 0.11), controlPoint1: CGPoint(x: 23.94, y: 2.06), controlPoint2: CGPoint(x: 28.78, y: -0.6))
        bezier10Path.addLine(to: CGPoint(x: 95.98, y: 9.04))
        bezier10Path.addCurve(to: CGPoint(x: 104.97, y: 25.6), controlPoint1: CGPoint(x: 103.56, y: 10.12), controlPoint2: CGPoint(x: 108.03, y: 18.37))
        bezier10Path.addLine(to: CGPoint(x: 85.72, y: 70.97))
        bezier10Path.addCurve(to: CGPoint(x: 73.29, y: 77.96), controlPoint1: CGPoint(x: 83.61, y: 75.95), controlPoint2: CGPoint(x: 78.5, y: 78.82))
        bezier10Path.addLine(to: CGPoint(x: 9.71, y: 67.35))
        bezier10Path.addCurve(to: CGPoint(x: 1.17, y: 50.39), controlPoint1: CGPoint(x: 2.08, y: 66.08), controlPoint2: CGPoint(x: -2.21, y: 57.57))
        bezier10Path.close()
        primary.setFill()
        bezier10Path.fill()



        context.restoreGState()


        //// plate 5
        context.saveGState()
        context.translateBy(x: plate5ExprX, y: plate5ExprY)



        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 107.84, y: 41.29))
        bezier11Path.addCurve(to: CGPoint(x: 106.12, y: 33.76), controlPoint1: CGPoint(x: 107.88, y: 40.72), controlPoint2: CGPoint(x: 106.12, y: 33.76))
        bezier11Path.addCurve(to: CGPoint(x: 97.76, y: 27.84), controlPoint1: CGPoint(x: 104.36, y: 30.69), controlPoint2: CGPoint(x: 101.42, y: 28.4))
        bezier11Path.addLine(to: CGPoint(x: 34.59, y: 18.31))
        bezier11Path.addCurve(to: CGPoint(x: 22.43, y: 25.35), controlPoint1: CGPoint(x: 29.56, y: 17.55), controlPoint2: CGPoint(x: 24.65, y: 20.4))
        bezier11Path.addLine(to: CGPoint(x: 2.67, y: 69.52))
        bezier11Path.addLine(to: CGPoint(x: 0.36, y: 79.5))
        bezier11Path.addLine(to: CGPoint(x: 0.54, y: 79.8))
        bezier11Path.addCurve(to: CGPoint(x: 10.21, y: 90.14), controlPoint1: CGPoint(x: 1.37, y: 84.88), controlPoint2: CGPoint(x: 5.03, y: 89.23))
        bezier11Path.addLine(to: CGPoint(x: 74.74, y: 101.47))
        bezier11Path.addCurve(to: CGPoint(x: 87.35, y: 94.01), controlPoint1: CGPoint(x: 80.02, y: 102.4), controlPoint2: CGPoint(x: 85.2, y: 99.33))
        bezier11Path.addLine(to: CGPoint(x: 106.88, y: 45.54))
        bezier11Path.addCurve(to: CGPoint(x: 107.58, y: 43.25), controlPoint1: CGPoint(x: 107.19, y: 44.78), controlPoint2: CGPoint(x: 107.42, y: 44.02))
        bezier11Path.addLine(to: CGPoint(x: 107.84, y: 42.76))
        bezier11Path.addLine(to: CGPoint(x: 107.84, y: 41.29))
        bezier11Path.close()
        darkPrimary.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 1.17, y: 49.9))
        bezier12Path.addLine(to: CGPoint(x: 21.75, y: 6.64))
        bezier12Path.addCurve(to: CGPoint(x: 33.73, y: 0.11), controlPoint1: CGPoint(x: 23.94, y: 2.04), controlPoint2: CGPoint(x: 28.78, y: -0.59))
        bezier12Path.addLine(to: CGPoint(x: 95.98, y: 8.95))
        bezier12Path.addCurve(to: CGPoint(x: 104.97, y: 25.35), controlPoint1: CGPoint(x: 103.56, y: 10.02), controlPoint2: CGPoint(x: 108.03, y: 18.19))
        bezier12Path.addLine(to: CGPoint(x: 85.72, y: 70.28))
        bezier12Path.addCurve(to: CGPoint(x: 73.29, y: 77.2), controlPoint1: CGPoint(x: 83.61, y: 75.21), controlPoint2: CGPoint(x: 78.5, y: 78.06))
        bezier12Path.addLine(to: CGPoint(x: 9.71, y: 66.69))
        bezier12Path.addCurve(to: CGPoint(x: 1.17, y: 49.9), controlPoint1: CGPoint(x: 2.08, y: 65.43), controlPoint2: CGPoint(x: -2.21, y: 57.01))
        bezier12Path.close()
        wingPlastineColor.setFill()
        bezier12Path.fill()



        context.restoreGState()


        //// plate 6
        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: 433.84, y: 97.69))
        bezier13Path.addCurve(to: CGPoint(x: 432.12, y: 90.09), controlPoint1: CGPoint(x: 433.88, y: 97.12), controlPoint2: CGPoint(x: 432.12, y: 90.09))
        bezier13Path.addCurve(to: CGPoint(x: 423.76, y: 84.12), controlPoint1: CGPoint(x: 430.36, y: 86.99), controlPoint2: CGPoint(x: 427.42, y: 84.68))
        bezier13Path.addLine(to: CGPoint(x: 360.59, y: 74.49))
        bezier13Path.addCurve(to: CGPoint(x: 348.43, y: 81.6), controlPoint1: CGPoint(x: 355.56, y: 73.72), controlPoint2: CGPoint(x: 350.65, y: 76.6))
        bezier13Path.addLine(to: CGPoint(x: 328.67, y: 126.2))
        bezier13Path.addLine(to: CGPoint(x: 326.36, y: 136.28))
        bezier13Path.addLine(to: CGPoint(x: 326.54, y: 136.58))
        bezier13Path.addCurve(to: CGPoint(x: 336.21, y: 147.03), controlPoint1: CGPoint(x: 327.37, y: 141.71), controlPoint2: CGPoint(x: 331.03, y: 146.11))
        bezier13Path.addLine(to: CGPoint(x: 400.74, y: 158.47))
        bezier13Path.addCurve(to: CGPoint(x: 413.35, y: 150.94), controlPoint1: CGPoint(x: 406.02, y: 159.41), controlPoint2: CGPoint(x: 411.2, y: 156.31))
        bezier13Path.addLine(to: CGPoint(x: 432.88, y: 101.99))
        bezier13Path.addCurve(to: CGPoint(x: 433.58, y: 99.67), controlPoint1: CGPoint(x: 433.19, y: 101.22), controlPoint2: CGPoint(x: 433.42, y: 100.45))
        bezier13Path.addLine(to: CGPoint(x: 433.84, y: 99.18))
        bezier13Path.addLine(to: CGPoint(x: 433.84, y: 97.69))
        bezier13Path.close()
        darkPrimary.setFill()
        bezier13Path.fill()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: 327.17, y: 102.39))
        bezier14Path.addLine(to: CGPoint(x: 347.75, y: 58.71))
        bezier14Path.addCurve(to: CGPoint(x: 359.73, y: 52.11), controlPoint1: CGPoint(x: 349.94, y: 54.06), controlPoint2: CGPoint(x: 354.78, y: 51.4))
        bezier14Path.addLine(to: CGPoint(x: 421.98, y: 61.04))
        bezier14Path.addCurve(to: CGPoint(x: 430.97, y: 77.6), controlPoint1: CGPoint(x: 429.56, y: 62.12), controlPoint2: CGPoint(x: 434.03, y: 70.37))
        bezier14Path.addLine(to: CGPoint(x: 411.72, y: 122.97))
        bezier14Path.addCurve(to: CGPoint(x: 399.29, y: 129.96), controlPoint1: CGPoint(x: 409.61, y: 127.95), controlPoint2: CGPoint(x: 404.5, y: 130.82))
        bezier14Path.addLine(to: CGPoint(x: 335.71, y: 119.35))
        bezier14Path.addCurve(to: CGPoint(x: 327.17, y: 102.39), controlPoint1: CGPoint(x: 328.08, y: 118.08), controlPoint2: CGPoint(x: 323.79, y: 109.57))
        bezier14Path.close()
        wingPlastineColor.setFill()
        bezier14Path.fill()





        context.restoreGState()


        //// layer_1_28
        //// Bezier 62 Drawing
        let bezier62Path = UIBezierPath()
        bezier62Path.move(to: CGPoint(x: 144.5, y: -1674.87))
        bezier62Path.addLine(to: CGPoint(x: 169.56, y: -1630.85))
        bezier62Path.addCurve(to: CGPoint(x: -2.73, y: -1637.79), controlPoint1: CGPoint(x: 110.61, y: -1618.92), controlPoint2: CGPoint(x: 49.08, y: -1622.45))
        bezier62Path.addLine(to: CGPoint(x: 31.48, y: -1679.43))
        bezier62Path.addCurve(to: CGPoint(x: 144.5, y: -1674.87), controlPoint1: CGPoint(x: 65.47, y: -1669.36), controlPoint2: CGPoint(x: 105.83, y: -1667.05))
        bezier62Path.close()
        context.saveGState()
        bezier62Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 1091.06, y: -1422.41),
            end: CGPoint(x: -761.97, y: -1846.72),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 63 Drawing
        let bezier63Path = UIBezierPath()
        bezier63Path.move(to: CGPoint(x: -1.17, y: -1637.34))
        bezier63Path.addCurve(to: CGPoint(x: 2.97, y: -1636.17), controlPoint1: CGPoint(x: 0.21, y: -1636.94), controlPoint2: CGPoint(x: 1.59, y: -1636.55))
        bezier63Path.addCurve(to: CGPoint(x: 4.91, y: -1635.65), controlPoint1: CGPoint(x: 3.62, y: -1635.99), controlPoint2: CGPoint(x: 4.26, y: -1635.82))
        bezier63Path.addCurve(to: CGPoint(x: 8.53, y: -1634.69), controlPoint1: CGPoint(x: 6.11, y: -1635.32), controlPoint2: CGPoint(x: 7.32, y: -1635))
        bezier63Path.addLine(to: CGPoint(x: 10.61, y: -1634.17))
        bezier63Path.addCurve(to: CGPoint(x: 14.24, y: -1633.28), controlPoint1: CGPoint(x: 11.81, y: -1633.87), controlPoint2: CGPoint(x: 13.03, y: -1633.57))
        bezier63Path.addCurve(to: CGPoint(x: 16.24, y: -1632.81), controlPoint1: CGPoint(x: 14.91, y: -1633.13), controlPoint2: CGPoint(x: 15.57, y: -1632.96))
        bezier63Path.addCurve(to: CGPoint(x: 20.42, y: -1631.88), controlPoint1: CGPoint(x: 17.63, y: -1632.49), controlPoint2: CGPoint(x: 19.03, y: -1632.18))
        bezier63Path.addCurve(to: CGPoint(x: 21.92, y: -1631.54), controlPoint1: CGPoint(x: 20.92, y: -1631.77), controlPoint2: CGPoint(x: 21.42, y: -1631.65))
        bezier63Path.addCurve(to: CGPoint(x: 25.9, y: -1630.73), controlPoint1: CGPoint(x: 23.24, y: -1631.26), controlPoint2: CGPoint(x: 24.57, y: -1630.99))
        bezier63Path.addCurve(to: CGPoint(x: 27.25, y: -1630.45), controlPoint1: CGPoint(x: 26.35, y: -1630.64), controlPoint2: CGPoint(x: 26.8, y: -1630.54))
        bezier63Path.addCurve(to: CGPoint(x: 32.64, y: -1629.44), controlPoint1: CGPoint(x: 29.04, y: -1630.1), controlPoint2: CGPoint(x: 30.84, y: -1629.76))
        bezier63Path.addCurve(to: CGPoint(x: 33.95, y: -1629.21), controlPoint1: CGPoint(x: 33.07, y: -1629.36), controlPoint2: CGPoint(x: 33.51, y: -1629.29))
        bezier63Path.addCurve(to: CGPoint(x: 38.06, y: -1628.51), controlPoint1: CGPoint(x: 35.32, y: -1628.97), controlPoint2: CGPoint(x: 36.69, y: -1628.74))
        bezier63Path.addCurve(to: CGPoint(x: 40.09, y: -1628.19), controlPoint1: CGPoint(x: 38.74, y: -1628.4), controlPoint2: CGPoint(x: 39.42, y: -1628.3))
        bezier63Path.addCurve(to: CGPoint(x: 43.54, y: -1627.66), controlPoint1: CGPoint(x: 41.24, y: -1628.01), controlPoint2: CGPoint(x: 42.39, y: -1627.83))
        bezier63Path.addCurve(to: CGPoint(x: 46.05, y: -1627.3), controlPoint1: CGPoint(x: 44.38, y: -1627.53), controlPoint2: CGPoint(x: 45.21, y: -1627.42))
        bezier63Path.addCurve(to: CGPoint(x: 48.88, y: -1626.91), controlPoint1: CGPoint(x: 46.99, y: -1627.17), controlPoint2: CGPoint(x: 47.93, y: -1627.03))
        bezier63Path.addCurve(to: CGPoint(x: 51.44, y: -1626.59), controlPoint1: CGPoint(x: 49.72, y: -1626.8), controlPoint2: CGPoint(x: 50.58, y: -1626.7))
        bezier63Path.addCurve(to: CGPoint(x: 54.26, y: -1626.24), controlPoint1: CGPoint(x: 52.38, y: -1626.47), controlPoint2: CGPoint(x: 53.32, y: -1626.35))
        bezier63Path.addCurve(to: CGPoint(x: 56.86, y: -1625.95), controlPoint1: CGPoint(x: 55.13, y: -1626.14), controlPoint2: CGPoint(x: 55.99, y: -1626.05))
        bezier63Path.addCurve(to: CGPoint(x: 59.68, y: -1625.64), controlPoint1: CGPoint(x: 57.79, y: -1625.84), controlPoint2: CGPoint(x: 58.73, y: -1625.74))
        bezier63Path.addCurve(to: CGPoint(x: 62.29, y: -1625.39), controlPoint1: CGPoint(x: 60.55, y: -1625.56), controlPoint2: CGPoint(x: 61.42, y: -1625.47))
        bezier63Path.addCurve(to: CGPoint(x: 65.13, y: -1625.13), controlPoint1: CGPoint(x: 63.24, y: -1625.3), controlPoint2: CGPoint(x: 64.18, y: -1625.21))
        bezier63Path.addCurve(to: CGPoint(x: 67.82, y: -1624.91), controlPoint1: CGPoint(x: 66.02, y: -1625.05), controlPoint2: CGPoint(x: 66.92, y: -1624.98))
        bezier63Path.addCurve(to: CGPoint(x: 70.56, y: -1624.7), controlPoint1: CGPoint(x: 68.73, y: -1624.83), controlPoint2: CGPoint(x: 69.64, y: -1624.76))
        bezier63Path.addCurve(to: CGPoint(x: 73.26, y: -1624.52), controlPoint1: CGPoint(x: 71.46, y: -1624.63), controlPoint2: CGPoint(x: 72.36, y: -1624.57))
        bezier63Path.addLine(to: CGPoint(x: 76.02, y: -1624.34))
        bezier63Path.addLine(to: CGPoint(x: 78.74, y: -1624.2))
        bezier63Path.addCurve(to: CGPoint(x: 81.5, y: -1624.07), controlPoint1: CGPoint(x: 79.66, y: -1624.15), controlPoint2: CGPoint(x: 80.58, y: -1624.1))
        bezier63Path.addCurve(to: CGPoint(x: 84.23, y: -1623.97), controlPoint1: CGPoint(x: 82.41, y: -1624.03), controlPoint2: CGPoint(x: 83.32, y: -1624))
        bezier63Path.addCurve(to: CGPoint(x: 87.01, y: -1623.87), controlPoint1: CGPoint(x: 85.15, y: -1623.93), controlPoint2: CGPoint(x: 86.08, y: -1623.9))
        bezier63Path.addCurve(to: CGPoint(x: 89.66, y: -1623.81), controlPoint1: CGPoint(x: 87.89, y: -1623.85), controlPoint2: CGPoint(x: 88.77, y: -1623.83))
        bezier63Path.addCurve(to: CGPoint(x: 92.61, y: -1623.76), controlPoint1: CGPoint(x: 90.64, y: -1623.79), controlPoint2: CGPoint(x: 91.62, y: -1623.77))
        bezier63Path.addCurve(to: CGPoint(x: 95.27, y: -1623.74), controlPoint1: CGPoint(x: 93.5, y: -1623.75), controlPoint2: CGPoint(x: 94.38, y: -1623.74))
        bezier63Path.addCurve(to: CGPoint(x: 98.22, y: -1623.73), controlPoint1: CGPoint(x: 96.25, y: -1623.73), controlPoint2: CGPoint(x: 97.24, y: -1623.72))
        bezier63Path.addCurve(to: CGPoint(x: 100.89, y: -1623.75), controlPoint1: CGPoint(x: 99.11, y: -1623.73), controlPoint2: CGPoint(x: 100, y: -1623.74))
        bezier63Path.addCurve(to: CGPoint(x: 103.84, y: -1623.78), controlPoint1: CGPoint(x: 101.88, y: -1623.75), controlPoint2: CGPoint(x: 102.86, y: -1623.76))
        bezier63Path.addCurve(to: CGPoint(x: 106.53, y: -1623.84), controlPoint1: CGPoint(x: 104.74, y: -1623.8), controlPoint2: CGPoint(x: 105.64, y: -1623.82))
        bezier63Path.addLine(to: CGPoint(x: 109.48, y: -1623.92))
        bezier63Path.addCurve(to: CGPoint(x: 112.04, y: -1624.02), controlPoint1: CGPoint(x: 110.34, y: -1623.95), controlPoint2: CGPoint(x: 111.18, y: -1623.98))
        bezier63Path.addCurve(to: CGPoint(x: 115.45, y: -1624.16), controlPoint1: CGPoint(x: 113.18, y: -1624.06), controlPoint2: CGPoint(x: 114.32, y: -1624.11))
        bezier63Path.addLine(to: CGPoint(x: 117.97, y: -1624.29))
        bezier63Path.addCurve(to: CGPoint(x: 121.4, y: -1624.5), controlPoint1: CGPoint(x: 119.11, y: -1624.36), controlPoint2: CGPoint(x: 120.25, y: -1624.43))
        bezier63Path.addCurve(to: CGPoint(x: 123.89, y: -1624.67), controlPoint1: CGPoint(x: 122.23, y: -1624.55), controlPoint2: CGPoint(x: 123.06, y: -1624.61))
        bezier63Path.addCurve(to: CGPoint(x: 127.39, y: -1624.94), controlPoint1: CGPoint(x: 125.05, y: -1624.75), controlPoint2: CGPoint(x: 126.22, y: -1624.84))
        bezier63Path.addLine(to: CGPoint(x: 129.8, y: -1625.13))
        bezier63Path.addCurve(to: CGPoint(x: 133.49, y: -1625.48), controlPoint1: CGPoint(x: 131.03, y: -1625.24), controlPoint2: CGPoint(x: 132.26, y: -1625.36))
        bezier63Path.addLine(to: CGPoint(x: 135.86, y: -1625.71))
        bezier63Path.addCurve(to: CGPoint(x: 136.87, y: -1625.82), controlPoint1: CGPoint(x: 136.19, y: -1625.75), controlPoint2: CGPoint(x: 136.53, y: -1625.78))
        bezier63Path.addCurve(to: CGPoint(x: 141.14, y: -1626.3), controlPoint1: CGPoint(x: 138.29, y: -1625.97), controlPoint2: CGPoint(x: 139.71, y: -1626.14))
        bezier63Path.addCurve(to: CGPoint(x: 142.06, y: -1626.42), controlPoint1: CGPoint(x: 141.45, y: -1626.34), controlPoint2: CGPoint(x: 141.76, y: -1626.38))
        bezier63Path.addCurve(to: CGPoint(x: 146.93, y: -1627.04), controlPoint1: CGPoint(x: 143.69, y: -1626.61), controlPoint2: CGPoint(x: 145.31, y: -1626.82))
        bezier63Path.addCurve(to: CGPoint(x: 148.02, y: -1627.19), controlPoint1: CGPoint(x: 147.3, y: -1627.09), controlPoint2: CGPoint(x: 147.66, y: -1627.14))
        bezier63Path.addCurve(to: CGPoint(x: 152.37, y: -1627.82), controlPoint1: CGPoint(x: 149.47, y: -1627.39), controlPoint2: CGPoint(x: 150.92, y: -1627.6))
        bezier63Path.addLine(to: CGPoint(x: 153.12, y: -1627.93))
        bezier63Path.addCurve(to: CGPoint(x: 157.99, y: -1628.72), controlPoint1: CGPoint(x: 154.74, y: -1628.18), controlPoint2: CGPoint(x: 156.37, y: -1628.44))
        bezier63Path.addLine(to: CGPoint(x: 159.13, y: -1628.91))
        bezier63Path.addCurve(to: CGPoint(x: 163.62, y: -1629.7), controlPoint1: CGPoint(x: 160.63, y: -1629.17), controlPoint2: CGPoint(x: 162.12, y: -1629.43))
        bezier63Path.addCurve(to: CGPoint(x: 164.14, y: -1629.8), controlPoint1: CGPoint(x: 163.79, y: -1629.74), controlPoint2: CGPoint(x: 163.97, y: -1629.76))
        bezier63Path.addCurve(to: CGPoint(x: 169.56, y: -1630.85), controlPoint1: CGPoint(x: 165.95, y: -1630.13), controlPoint2: CGPoint(x: 167.75, y: -1630.48))
        bezier63Path.addLine(to: CGPoint(x: 169.36, y: -1559.88))
        bezier63Path.addCurve(to: CGPoint(x: 164.13, y: -1558.87), controlPoint1: CGPoint(x: 167.62, y: -1559.54), controlPoint2: CGPoint(x: 165.88, y: -1559.2))
        bezier63Path.addLine(to: CGPoint(x: 163.43, y: -1558.74))
        bezier63Path.addCurve(to: CGPoint(x: 158.94, y: -1557.95), controlPoint1: CGPoint(x: 161.93, y: -1558.47), controlPoint2: CGPoint(x: 160.44, y: -1558.2))
        bezier63Path.addLine(to: CGPoint(x: 157.79, y: -1557.75))
        bezier63Path.addCurve(to: CGPoint(x: 152.93, y: -1556.97), controlPoint1: CGPoint(x: 156.17, y: -1557.48), controlPoint2: CGPoint(x: 154.55, y: -1557.22))
        bezier63Path.addCurve(to: CGPoint(x: 152.17, y: -1556.86), controlPoint1: CGPoint(x: 152.67, y: -1556.93), controlPoint2: CGPoint(x: 152.42, y: -1556.9))
        bezier63Path.addCurve(to: CGPoint(x: 147.83, y: -1556.23), controlPoint1: CGPoint(x: 150.72, y: -1556.64), controlPoint2: CGPoint(x: 149.28, y: -1556.43))
        bezier63Path.addCurve(to: CGPoint(x: 146.74, y: -1556.08), controlPoint1: CGPoint(x: 147.47, y: -1556.18), controlPoint2: CGPoint(x: 147.1, y: -1556.13))
        bezier63Path.addCurve(to: CGPoint(x: 141.87, y: -1555.45), controlPoint1: CGPoint(x: 145.12, y: -1555.86), controlPoint2: CGPoint(x: 143.49, y: -1555.65))
        bezier63Path.addCurve(to: CGPoint(x: 140.95, y: -1555.34), controlPoint1: CGPoint(x: 141.57, y: -1555.41), controlPoint2: CGPoint(x: 141.26, y: -1555.38))
        bezier63Path.addCurve(to: CGPoint(x: 136.67, y: -1554.86), controlPoint1: CGPoint(x: 139.52, y: -1555.17), controlPoint2: CGPoint(x: 138.1, y: -1555.01))
        bezier63Path.addCurve(to: CGPoint(x: 135.66, y: -1554.75), controlPoint1: CGPoint(x: 136.33, y: -1554.82), controlPoint2: CGPoint(x: 136, y: -1554.79))
        bezier63Path.addCurve(to: CGPoint(x: 135.07, y: -1554.69), controlPoint1: CGPoint(x: 135.47, y: -1554.73), controlPoint2: CGPoint(x: 135.27, y: -1554.7))
        bezier63Path.addCurve(to: CGPoint(x: 133.29, y: -1554.52), controlPoint1: CGPoint(x: 134.48, y: -1554.63), controlPoint2: CGPoint(x: 133.89, y: -1554.58))
        bezier63Path.addCurve(to: CGPoint(x: 129.61, y: -1554.17), controlPoint1: CGPoint(x: 132.07, y: -1554.4), controlPoint2: CGPoint(x: 130.84, y: -1554.28))
        bezier63Path.addCurve(to: CGPoint(x: 127.19, y: -1553.98), controlPoint1: CGPoint(x: 128.8, y: -1554.1), controlPoint2: CGPoint(x: 128, y: -1554.04))
        bezier63Path.addCurve(to: CGPoint(x: 123.7, y: -1553.7), controlPoint1: CGPoint(x: 126.03, y: -1553.88), controlPoint2: CGPoint(x: 124.86, y: -1553.79))
        bezier63Path.addLine(to: CGPoint(x: 121.2, y: -1553.54))
        bezier63Path.addCurve(to: CGPoint(x: 117.78, y: -1553.33), controlPoint1: CGPoint(x: 120.06, y: -1553.47), controlPoint2: CGPoint(x: 118.92, y: -1553.4))
        bezier63Path.addCurve(to: CGPoint(x: 115.26, y: -1553.2), controlPoint1: CGPoint(x: 116.94, y: -1553.29), controlPoint2: CGPoint(x: 116.1, y: -1553.24))
        bezier63Path.addCurve(to: CGPoint(x: 111.85, y: -1553.05), controlPoint1: CGPoint(x: 114.12, y: -1553.15), controlPoint2: CGPoint(x: 112.98, y: -1553.1))
        bezier63Path.addLine(to: CGPoint(x: 111.16, y: -1553.02))
        bezier63Path.addLine(to: CGPoint(x: 83.45, y: -1553.02))
        bezier63Path.addCurve(to: CGPoint(x: 81.31, y: -1553.1), controlPoint1: CGPoint(x: 82.73, y: -1553.05), controlPoint2: CGPoint(x: 82.02, y: -1553.07))
        bezier63Path.addCurve(to: CGPoint(x: 78.54, y: -1553.24), controlPoint1: CGPoint(x: 80.38, y: -1553.14), controlPoint2: CGPoint(x: 79.46, y: -1553.19))
        bezier63Path.addCurve(to: CGPoint(x: 75.83, y: -1553.38), controlPoint1: CGPoint(x: 77.63, y: -1553.28), controlPoint2: CGPoint(x: 76.73, y: -1553.33))
        bezier63Path.addCurve(to: CGPoint(x: 73.06, y: -1553.55), controlPoint1: CGPoint(x: 74.9, y: -1553.43), controlPoint2: CGPoint(x: 73.98, y: -1553.49))
        bezier63Path.addCurve(to: CGPoint(x: 70.36, y: -1553.73), controlPoint1: CGPoint(x: 72.17, y: -1553.61), controlPoint2: CGPoint(x: 71.26, y: -1553.67))
        bezier63Path.addCurve(to: CGPoint(x: 67.62, y: -1553.95), controlPoint1: CGPoint(x: 69.45, y: -1553.8), controlPoint2: CGPoint(x: 68.53, y: -1553.87))
        bezier63Path.addLine(to: CGPoint(x: 65.65, y: -1554.1))
        bezier63Path.addCurve(to: CGPoint(x: 64.94, y: -1554.16), controlPoint1: CGPoint(x: 65.41, y: -1554.12), controlPoint2: CGPoint(x: 65.18, y: -1554.15))
        bezier63Path.addCurve(to: CGPoint(x: 62.09, y: -1554.43), controlPoint1: CGPoint(x: 63.99, y: -1554.25), controlPoint2: CGPoint(x: 63.04, y: -1554.34))
        bezier63Path.addCurve(to: CGPoint(x: 59.49, y: -1554.68), controlPoint1: CGPoint(x: 61.22, y: -1554.51), controlPoint2: CGPoint(x: 60.35, y: -1554.59))
        bezier63Path.addCurve(to: CGPoint(x: 56.65, y: -1554.99), controlPoint1: CGPoint(x: 58.54, y: -1554.78), controlPoint2: CGPoint(x: 57.59, y: -1554.88))
        bezier63Path.addCurve(to: CGPoint(x: 54.07, y: -1555.28), controlPoint1: CGPoint(x: 55.79, y: -1555.08), controlPoint2: CGPoint(x: 54.93, y: -1555.17))
        bezier63Path.addCurve(to: CGPoint(x: 51.23, y: -1555.62), controlPoint1: CGPoint(x: 53.12, y: -1555.39), controlPoint2: CGPoint(x: 52.18, y: -1555.51))
        bezier63Path.addCurve(to: CGPoint(x: 48.68, y: -1555.95), controlPoint1: CGPoint(x: 50.38, y: -1555.73), controlPoint2: CGPoint(x: 49.53, y: -1555.83))
        bezier63Path.addCurve(to: CGPoint(x: 45.85, y: -1556.34), controlPoint1: CGPoint(x: 47.74, y: -1556.07), controlPoint2: CGPoint(x: 46.8, y: -1556.21))
        bezier63Path.addCurve(to: CGPoint(x: 43.81, y: -1556.62), controlPoint1: CGPoint(x: 45.17, y: -1556.44), controlPoint2: CGPoint(x: 44.49, y: -1556.52))
        bezier63Path.addCurve(to: CGPoint(x: 43.34, y: -1556.69), controlPoint1: CGPoint(x: 43.66, y: -1556.65), controlPoint2: CGPoint(x: 43.5, y: -1556.67))
        bezier63Path.addCurve(to: CGPoint(x: 39.9, y: -1557.23), controlPoint1: CGPoint(x: 42.19, y: -1556.87), controlPoint2: CGPoint(x: 41.04, y: -1557.05))
        bezier63Path.addCurve(to: CGPoint(x: 37.87, y: -1557.55), controlPoint1: CGPoint(x: 39.22, y: -1557.33), controlPoint2: CGPoint(x: 38.55, y: -1557.44))
        bezier63Path.addCurve(to: CGPoint(x: 33.76, y: -1558.25), controlPoint1: CGPoint(x: 36.5, y: -1557.77), controlPoint2: CGPoint(x: 35.13, y: -1558.01))
        bezier63Path.addCurve(to: CGPoint(x: 32.44, y: -1558.48), controlPoint1: CGPoint(x: 33.32, y: -1558.33), controlPoint2: CGPoint(x: 32.88, y: -1558.4))
        bezier63Path.addCurve(to: CGPoint(x: 27.06, y: -1559.49), controlPoint1: CGPoint(x: 30.64, y: -1558.81), controlPoint2: CGPoint(x: 28.85, y: -1559.14))
        bezier63Path.addCurve(to: CGPoint(x: 25.7, y: -1559.77), controlPoint1: CGPoint(x: 26.6, y: -1559.58), controlPoint2: CGPoint(x: 26.15, y: -1559.68))
        bezier63Path.addCurve(to: CGPoint(x: 21.72, y: -1560.58), controlPoint1: CGPoint(x: 24.37, y: -1560.03), controlPoint2: CGPoint(x: 23.04, y: -1560.31))
        bezier63Path.addCurve(to: CGPoint(x: 20.23, y: -1560.91), controlPoint1: CGPoint(x: 21.03, y: -1560.73), controlPoint2: CGPoint(x: 20.64, y: -1560.83))
        bezier63Path.addCurve(to: CGPoint(x: 16.51, y: -1561.74), controlPoint1: CGPoint(x: 18.99, y: -1561.18), controlPoint2: CGPoint(x: 17.75, y: -1561.46))
        bezier63Path.addLine(to: CGPoint(x: 16.05, y: -1561.85))
        bezier63Path.addCurve(to: CGPoint(x: 14.04, y: -1562.32), controlPoint1: CGPoint(x: 15.38, y: -1562), controlPoint2: CGPoint(x: 14.71, y: -1562.16))
        bezier63Path.addCurve(to: CGPoint(x: 10.41, y: -1563.2), controlPoint1: CGPoint(x: 12.83, y: -1562.61), controlPoint2: CGPoint(x: 11.62, y: -1562.9))
        bezier63Path.addCurve(to: CGPoint(x: 8.33, y: -1563.73), controlPoint1: CGPoint(x: 9.72, y: -1563.38), controlPoint2: CGPoint(x: 9.02, y: -1563.55))
        bezier63Path.addCurve(to: CGPoint(x: 4.72, y: -1564.68), controlPoint1: CGPoint(x: 7.12, y: -1564.04), controlPoint2: CGPoint(x: 5.91, y: -1564.36))
        bezier63Path.addCurve(to: CGPoint(x: 2.78, y: -1565.21), controlPoint1: CGPoint(x: 4.07, y: -1564.86), controlPoint2: CGPoint(x: 3.42, y: -1565.03))
        bezier63Path.addCurve(to: CGPoint(x: -1.37, y: -1566.38), controlPoint1: CGPoint(x: 1.39, y: -1565.59), controlPoint2: CGPoint(x: 0.01, y: -1565.98))
        bezier63Path.addCurve(to: CGPoint(x: -2.46, y: -1566.69), controlPoint1: CGPoint(x: -1.73, y: -1566.49), controlPoint2: CGPoint(x: -2.09, y: -1566.59))
        bezier63Path.addLine(to: CGPoint(x: -2.92, y: -1566.83))
        bezier63Path.addLine(to: CGPoint(x: -2.73, y: -1637.79))
        bezier63Path.addCurve(to: CGPoint(x: -1.17, y: -1637.34), controlPoint1: CGPoint(x: -2.21, y: -1637.64), controlPoint2: CGPoint(x: -1.69, y: -1637.49))
        bezier63Path.close()
        context.saveGState()
        bezier63Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 368.51, y: -1682.69),
            end: CGPoint(x: 19.67, y: -1580.13),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// layer_1_27 Drawing
        let layer_1_27Path = UIBezierPath(rect: CGRect(x: -133.24, y: -1889.62, width: 453, height: 268))
        context.saveGState()
        layer_1_27Path.addClip()
        context.translateBy(x: -133, y: -1890)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer4_1.size.height)
        context.draw(layer4_1.cgImage!, in: CGRect(x: 0, y: 0, width: layer4_1.size.width, height: layer4_1.size.height))
        context.restoreGState()


        //// layer_1_26 Drawing
        let layer_1_26Path = UIBezierPath(rect: CGRect(x: 12.76, y: -1881.62, width: 70, height: 79))
        context.saveGState()
        layer_1_26Path.addClip()
        context.translateBy(x: 13, y: -1882)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer4_2.size.height)
        context.draw(layer4_2.cgImage!, in: CGRect(x: 0, y: 0, width: layer4_2.size.width, height: layer4_2.size.height))
        context.restoreGState()


        //// layer_1_25
        //// Group
        context.saveGState()
        context.setAlpha(redCubePathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 31 Drawing
        let bezier31Path = UIBezierPath()
        bezier31Path.move(to: CGPoint(x: -447.24, y: -1813.62))
        bezier31Path.addLine(to: CGPoint(x: 14.33, y: -1835.5))
        bezier31Path.addCurve(to: CGPoint(x: 22.76, y: -1824.86), controlPoint1: CGPoint(x: 14.33, y: -1835.5), controlPoint2: CGPoint(x: 16.28, y: -1831.37))
        bezier31Path.addCurve(to: CGPoint(x: 37.83, y: -1813.52), controlPoint1: CGPoint(x: 29.24, y: -1818.36), controlPoint2: CGPoint(x: 37.83, y: -1813.52))
        bezier31Path.addLine(to: CGPoint(x: -430.24, y: -1792.62))
        bezier31Path.addLine(to: CGPoint(x: -447.24, y: -1813.62))
        bezier31Path.close()
        context.saveGState()
        bezier31Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: -204.71, y: -1835.5), end: CGPoint(x: -204.71, y: -1792.62), options: [])
        context.restoreGState()
        OnboardKit.cubeConture.setStroke()
        bezier31Path.lineWidth = 0.2
        bezier31Path.stroke()


        //// Bezier 32 Drawing
        let bezier32Path = UIBezierPath()
        bezier32Path.move(to: CGPoint(x: -430.24, y: -1755.62))
        bezier32Path.addLine(to: CGPoint(x: -430.24, y: -1792.62))
        bezier32Path.addLine(to: CGPoint(x: 37.66, y: -1813.24))
        bezier32Path.addLine(to: CGPoint(x: 36.51, y: -1773.44))
        bezier32Path.addLine(to: CGPoint(x: -430.24, y: -1755.62))
        bezier32Path.close()
        context.saveGState()
        bezier32Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: -196.29, y: -1813.24), end: CGPoint(x: -196.29, y: -1755.62), options: [])
        context.restoreGState()
        UIColor.red.setStroke()
        bezier32Path.lineWidth = 0.1
        bezier32Path.stroke()


        //// Bezier 33 Drawing
        let bezier33Path = UIBezierPath()
        bezier33Path.move(to: CGPoint(x: -447.24, y: -1813.62))
        bezier33Path.addLine(to: CGPoint(x: -430.24, y: -1792.62))
        bezier33Path.addLine(to: CGPoint(x: -430.24, y: -1755.62))
        bezier33Path.addLine(to: CGPoint(x: -447.24, y: -1779.62))
        bezier33Path.addLine(to: CGPoint(x: -447.24, y: -1813.62))
        bezier33Path.close()
        context.saveGState()
        bezier33Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: -438.74, y: -1813.62), end: CGPoint(x: -438.74, y: -1755.62), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier33Path.lineWidth = 0.1
        bezier33Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()




        //// layer_1_24
        context.saveGState()
        context.translateBy(x: (redCubeExprX - 573.173381995), y: (redCubeExprY - 2243.69171098))
        context.scaleBy(x: 2, y: 2)



        //// Bezier 35 Drawing
        let bezier35Path = UIBezierPath()
        bezier35Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier35Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier35Path.addLine(to: CGPoint(x: 18.02, y: 20.82))
        bezier35Path.addLine(to: CGPoint(x: 0.52, y: 21.32))
        bezier35Path.addLine(to: CGPoint(x: 0.52, y: 4.32))
        bezier35Path.close()
        context.saveGState()
        bezier35Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 9.27, y: 3.82), end: CGPoint(x: 9.27, y: 21.32), options: [])
        context.restoreGState()
        OnboardKit.cubeConture.setStroke()
        bezier35Path.lineWidth = 0.1
        bezier35Path.stroke()


        //// Group 6
        context.saveGState()
        context.translateBy(x: -1.16, y: 6.31)
        context.scaleBy(x: 0.11, y: 0.11)



        //// Bezier 83 Drawing
        let bezier83Path = UIBezierPath()
        bezier83Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier83Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier83Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier83Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier83Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier83Path.close()
        fillColor3.setFill()
        bezier83Path.fill()


        //// Bezier 84 Drawing
        let bezier84Path = UIBezierPath()
        bezier84Path.move(to: CGPoint(x: 131.69, y: 29.14))
        bezier84Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier84Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier84Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier84Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier84Path.close()
        fillColor6.setFill()
        bezier84Path.fill()


        //// Bezier 85 Drawing
        let bezier85Path = UIBezierPath()
        bezier85Path.move(to: CGPoint(x: 132.14, y: 109.42))
        bezier85Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier85Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier85Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier85Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier85Path.close()
        fillColor7.setFill()
        bezier85Path.fill()


        //// Star Drawing
        context.saveGState()
        context.translateBy(x: 131.93, y: 69.3)
        context.rotate(by: -90 * CGFloat.pi/180)

        let starPath = UIBezierPath()
        starPath.move(to: CGPoint(x: 0, y: -69.3))
        starPath.addLine(to: CGPoint(x: 40.15, y: 0))
        starPath.addLine(to: CGPoint(x: 0, y: 69.3))
        starPath.addLine(to: CGPoint(x: -40.15, y: 0))
        starPath.close()
        fillColor8.setFill()
        starPath.fill()

        context.restoreGState()


        //// Group 10
        //// Bezier 86 Drawing
        let bezier86Path = UIBezierPath()
        bezier86Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier86Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier86Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier86Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier86Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier86Path.close()
        fillColor9.setFill()
        bezier86Path.fill()


        //// Star 2 Drawing
        context.saveGState()
        context.translateBy(x: 96.58, y: 130.5)
        context.rotate(by: -30 * CGFloat.pi/180)

        let star2Path = UIBezierPath()
        star2Path.move(to: CGPoint(x: 0, y: -70.7))
        star2Path.addLine(to: CGPoint(x: 40.95, y: 0))
        star2Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star2Path.addLine(to: CGPoint(x: -40.95, y: 0))
        star2Path.close()
        fillColor3.setFill()
        star2Path.fill()

        context.restoreGState()


        //// Star 3 Drawing
        context.saveGState()
        context.translateBy(x: 167.28, y: 130.5)
        context.rotate(by: -150 * CGFloat.pi/180)

        let star3Path = UIBezierPath()
        star3Path.move(to: CGPoint(x: 0, y: -70.7))
        star3Path.addLine(to: CGPoint(x: 40.55, y: 0))
        star3Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star3Path.addLine(to: CGPoint(x: -40.55, y: 0))
        star3Path.close()
        fillColor6.setFill()
        star3Path.fill()

        context.restoreGState()





        context.restoreGState()


        //// Bezier 36 Drawing
        let bezier36Path = UIBezierPath()
        bezier36Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier36Path.addLine(to: CGPoint(x: 9.02, y: 14.82))
        bezier36Path.addLine(to: CGPoint(x: 9.02, y: 32.82))
        bezier36Path.addLine(to: CGPoint(x: 0.52, y: 21.32))
        bezier36Path.addLine(to: CGPoint(x: 0.52, y: 4.32))
        bezier36Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier36Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 4.77, y: 4.32), end: CGPoint(x: 4.77, y: 32.82), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier36Path.lineWidth = 0.3
        bezier36Path.stroke()
        context.restoreGState()


        //// Bezier 37 Drawing
        let bezier37Path = UIBezierPath()
        bezier37Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier37Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier37Path.addCurve(to: CGPoint(x: 26.52, y: 14.82), controlPoint1: CGPoint(x: 18.02, y: 3.82), controlPoint2: CGPoint(x: 26.54, y: 14.84))
        bezier37Path.addCurve(to: CGPoint(x: 9.02, y: 14.82), controlPoint1: CGPoint(x: 26.5, y: 14.81), controlPoint2: CGPoint(x: 9.07, y: 14.9))
        bezier37Path.addCurve(to: CGPoint(x: 0.52, y: 4.32), controlPoint1: CGPoint(x: 8.97, y: 14.75), controlPoint2: CGPoint(x: 0.52, y: 4.32))
        bezier37Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier37Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 13.52, y: 3.82), end: CGPoint(x: 13.52, y: 14.85), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier37Path.lineWidth = 0.3
        bezier37Path.stroke()
        context.restoreGState()


        //// Bezier 38 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier38Path = UIBezierPath()
        bezier38Path.move(to: CGPoint(x: 11.44, y: 35.06))
        bezier38Path.addLine(to: CGPoint(x: -3.73, y: 25.96))
        bezier38Path.addLine(to: CGPoint(x: 11.44, y: 18.06))
        bezier38Path.addLine(to: CGPoint(x: 26.31, y: 25.93))
        bezier38Path.addLine(to: CGPoint(x: 11.44, y: 35.06))
        bezier38Path.close()
        context.saveGState()
        bezier38Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 11.29, y: 18.06), end: CGPoint(x: 11.29, y: 35.06), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier38Path.lineWidth = 0.1
        bezier38Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 39 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier39Path = UIBezierPath()
        bezier39Path.move(to: CGPoint(x: -3.83, y: 25.94))
        bezier39Path.addLine(to: CGPoint(x: 11.44, y: 18.05))
        bezier39Path.addLine(to: CGPoint(x: 10.98, y: -3.12))
        bezier39Path.addLine(to: CGPoint(x: -3.72, y: 5.97))
        bezier39Path.addLine(to: CGPoint(x: -3.83, y: 25.94))
        bezier39Path.close()
        context.saveGState()
        bezier39Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 3.8, y: -3.12), end: CGPoint(x: 3.8, y: 25.94), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier39Path.lineWidth = 0.1
        bezier39Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 40 Drawing
        let bezier40Path = UIBezierPath()
        bezier40Path.move(to: CGPoint(x: 9.15, y: 32.95))
        bezier40Path.addCurve(to: CGPoint(x: 26.4, y: 32.7), controlPoint1: CGPoint(x: 9.15, y: 32.95), controlPoint2: CGPoint(x: 26.42, y: 32.71))
        bezier40Path.addCurve(to: CGPoint(x: 26.4, y: 14.45), controlPoint1: CGPoint(x: 26.37, y: 32.68), controlPoint2: CGPoint(x: 26.4, y: 14.45))
        bezier40Path.addLine(to: CGPoint(x: 9.15, y: 14.7))
        bezier40Path.addLine(to: CGPoint(x: 9.15, y: 32.95))
        bezier40Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier40Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 17.77, y: 14.45), end: CGPoint(x: 17.77, y: 32.95), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier40Path.lineWidth = 0.5
        bezier40Path.stroke()
        context.restoreGState()


        //// Bezier 68 Drawing
        let bezier68Path = UIBezierPath()
        bezier68Path.move(to: CGPoint(x: 18.02, y: 3.82))
        bezier68Path.addLine(to: CGPoint(x: 26.52, y: 14.32))
        bezier68Path.addLine(to: CGPoint(x: 26.52, y: 32.32))
        bezier68Path.addLine(to: CGPoint(x: 18.02, y: 20.82))
        bezier68Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier68Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier68Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 22.27, y: 3.82), end: CGPoint(x: 22.27, y: 32.32), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier68Path.lineWidth = 0.3
        bezier68Path.stroke()
        context.restoreGState()



        context.restoreGState()


        //// layer_1_23 Drawing
        let layer_1_23Path = UIBezierPath(rect: CGRect(x: 103.76, y: -1872.62, width: 71, height: 80))
        context.saveGState()
        layer_1_23Path.addClip()
        context.translateBy(x: 104, y: -1873)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer_6_2.size.height)
        context.draw(layer_6_2.cgImage!, in: CGRect(x: 0, y: 0, width: layer_6_2.size.width, height: layer_6_2.size.height))
        context.restoreGState()


        //// layer_1_22
        context.saveGState()
        context.translateBy(x: (redCube2ExprX - 566.571656734), y: (redCube2ExprY - 2248.61941964))
        context.scaleBy(x: 2, y: 2)



        //// Bezier 70 Drawing
        let bezier70Path = UIBezierPath()
        bezier70Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier70Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier70Path.addLine(to: CGPoint(x: 18.02, y: 20.82))
        bezier70Path.addLine(to: CGPoint(x: 0.52, y: 21.32))
        bezier70Path.addLine(to: CGPoint(x: 0.52, y: 4.32))
        bezier70Path.close()
        context.saveGState()
        bezier70Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 9.27, y: 3.82), end: CGPoint(x: 9.27, y: 21.32), options: [])
        context.restoreGState()
        OnboardKit.cubeConture.setStroke()
        bezier70Path.lineWidth = 0.1
        bezier70Path.stroke()


        //// Group 5
        context.saveGState()
        context.translateBy(x: 0.01, y: 9.63)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Bezier 87 Drawing
        let bezier87Path = UIBezierPath()
        bezier87Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier87Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier87Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier87Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier87Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier87Path.close()
        fillColor3.setFill()
        bezier87Path.fill()


        //// Bezier 88 Drawing
        let bezier88Path = UIBezierPath()
        bezier88Path.move(to: CGPoint(x: 131.69, y: 29.14))
        bezier88Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier88Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier88Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier88Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier88Path.close()
        fillColor6.setFill()
        bezier88Path.fill()


        //// Bezier 89 Drawing
        let bezier89Path = UIBezierPath()
        bezier89Path.move(to: CGPoint(x: 132.14, y: 109.42))
        bezier89Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier89Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier89Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier89Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier89Path.close()
        fillColor7.setFill()
        bezier89Path.fill()


        //// Star 4 Drawing
        context.saveGState()
        context.translateBy(x: 131.93, y: 69.3)
        context.rotate(by: -90 * CGFloat.pi/180)

        let star4Path = UIBezierPath()
        star4Path.move(to: CGPoint(x: 0, y: -69.3))
        star4Path.addLine(to: CGPoint(x: 40.15, y: 0))
        star4Path.addLine(to: CGPoint(x: 0, y: 69.3))
        star4Path.addLine(to: CGPoint(x: -40.15, y: 0))
        star4Path.close()
        fillColor8.setFill()
        star4Path.fill()

        context.restoreGState()


        //// Group 11
        //// Bezier 90 Drawing
        let bezier90Path = UIBezierPath()
        bezier90Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier90Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier90Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier90Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier90Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier90Path.close()
        fillColor9.setFill()
        bezier90Path.fill()


        //// Star 5 Drawing
        context.saveGState()
        context.translateBy(x: 96.58, y: 130.5)
        context.rotate(by: -30 * CGFloat.pi/180)

        let star5Path = UIBezierPath()
        star5Path.move(to: CGPoint(x: 0, y: -70.7))
        star5Path.addLine(to: CGPoint(x: 40.95, y: 0))
        star5Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star5Path.addLine(to: CGPoint(x: -40.95, y: 0))
        star5Path.close()
        fillColor3.setFill()
        star5Path.fill()

        context.restoreGState()


        //// Star 6 Drawing
        context.saveGState()
        context.translateBy(x: 167.28, y: 130.5)
        context.rotate(by: -150 * CGFloat.pi/180)

        let star6Path = UIBezierPath()
        star6Path.move(to: CGPoint(x: 0, y: -70.7))
        star6Path.addLine(to: CGPoint(x: 40.55, y: 0))
        star6Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star6Path.addLine(to: CGPoint(x: -40.55, y: 0))
        star6Path.close()
        fillColor6.setFill()
        star6Path.fill()

        context.restoreGState()





        context.restoreGState()


        //// Bezier 71 Drawing
        let bezier71Path = UIBezierPath()
        bezier71Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier71Path.addLine(to: CGPoint(x: 9.02, y: 14.82))
        bezier71Path.addLine(to: CGPoint(x: 9.02, y: 32.82))
        bezier71Path.addLine(to: CGPoint(x: 0.52, y: 21.32))
        bezier71Path.addLine(to: CGPoint(x: 0.52, y: 4.32))
        bezier71Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier71Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 4.77, y: 4.32), end: CGPoint(x: 4.77, y: 32.82), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier71Path.lineWidth = 0.3
        bezier71Path.stroke()
        context.restoreGState()


        //// Bezier 72 Drawing
        let bezier72Path = UIBezierPath()
        bezier72Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier72Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier72Path.addCurve(to: CGPoint(x: 26.52, y: 14.82), controlPoint1: CGPoint(x: 18.02, y: 3.82), controlPoint2: CGPoint(x: 26.54, y: 14.84))
        bezier72Path.addCurve(to: CGPoint(x: 9.02, y: 14.82), controlPoint1: CGPoint(x: 26.5, y: 14.81), controlPoint2: CGPoint(x: 9.07, y: 14.9))
        bezier72Path.addCurve(to: CGPoint(x: 0.52, y: 4.32), controlPoint1: CGPoint(x: 8.97, y: 14.75), controlPoint2: CGPoint(x: 0.52, y: 4.32))
        bezier72Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier72Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 13.52, y: 3.82), end: CGPoint(x: 13.52, y: 14.85), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier72Path.lineWidth = 0.3
        bezier72Path.stroke()
        context.restoreGState()


        //// Bezier 73 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier73Path = UIBezierPath()
        bezier73Path.move(to: CGPoint(x: 11.44, y: 35.06))
        bezier73Path.addLine(to: CGPoint(x: -3.73, y: 25.96))
        bezier73Path.addLine(to: CGPoint(x: 11.44, y: 18.06))
        bezier73Path.addLine(to: CGPoint(x: 26.31, y: 25.93))
        bezier73Path.addLine(to: CGPoint(x: 11.44, y: 35.06))
        bezier73Path.close()
        context.saveGState()
        bezier73Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 11.29, y: 18.06), end: CGPoint(x: 11.29, y: 35.06), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier73Path.lineWidth = 0.1
        bezier73Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 74 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier74Path = UIBezierPath()
        bezier74Path.move(to: CGPoint(x: -3.83, y: 25.94))
        bezier74Path.addLine(to: CGPoint(x: 11.44, y: 18.05))
        bezier74Path.addLine(to: CGPoint(x: 10.98, y: -3.12))
        bezier74Path.addLine(to: CGPoint(x: -3.72, y: 5.97))
        bezier74Path.addLine(to: CGPoint(x: -3.83, y: 25.94))
        bezier74Path.close()
        context.saveGState()
        bezier74Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 3.8, y: -3.12), end: CGPoint(x: 3.8, y: 25.94), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier74Path.lineWidth = 0.1
        bezier74Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 75 Drawing
        let bezier75Path = UIBezierPath()
        bezier75Path.move(to: CGPoint(x: 9.15, y: 32.95))
        bezier75Path.addCurve(to: CGPoint(x: 26.4, y: 32.7), controlPoint1: CGPoint(x: 9.15, y: 32.95), controlPoint2: CGPoint(x: 26.42, y: 32.71))
        bezier75Path.addCurve(to: CGPoint(x: 26.4, y: 14.45), controlPoint1: CGPoint(x: 26.37, y: 32.68), controlPoint2: CGPoint(x: 26.4, y: 14.45))
        bezier75Path.addLine(to: CGPoint(x: 9.15, y: 14.7))
        bezier75Path.addLine(to: CGPoint(x: 9.15, y: 32.95))
        bezier75Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier75Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 17.77, y: 14.45), end: CGPoint(x: 17.77, y: 32.95), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier75Path.lineWidth = 0.5
        bezier75Path.stroke()
        context.restoreGState()


        //// Bezier 76 Drawing
        let bezier76Path = UIBezierPath()
        bezier76Path.move(to: CGPoint(x: 18.02, y: 3.82))
        bezier76Path.addLine(to: CGPoint(x: 26.52, y: 14.32))
        bezier76Path.addLine(to: CGPoint(x: 26.52, y: 32.32))
        bezier76Path.addLine(to: CGPoint(x: 18.02, y: 20.82))
        bezier76Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier76Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier76Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 22.27, y: 3.82), end: CGPoint(x: 22.27, y: 32.32), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setStroke()
        bezier76Path.lineWidth = 0.3
        bezier76Path.stroke()
        context.restoreGState()



        context.restoreGState()


        //// layer_1_21
        context.saveGState()
        context.setAlpha(redCubePath2Opacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 60 Drawing
        let bezier60Path = UIBezierPath()
        bezier60Path.move(to: CGPoint(x: 485.76, y: -1832.62))
        bezier60Path.addLine(to: CGPoint(x: 173.76, y: -1836.62))
        bezier60Path.addCurve(to: CGPoint(x: 167.76, y: -1827.62), controlPoint1: CGPoint(x: 173.76, y: -1836.62), controlPoint2: CGPoint(x: 174.24, y: -1834.13))
        bezier60Path.addCurve(to: CGPoint(x: 155.76, y: -1817.62), controlPoint1: CGPoint(x: 161.28, y: -1821.11), controlPoint2: CGPoint(x: 155.76, y: -1817.62))
        bezier60Path.addLine(to: CGPoint(x: 502.76, y: -1811.62))
        bezier60Path.addLine(to: CGPoint(x: 485.76, y: -1832.62))
        bezier60Path.close()
        context.saveGState()
        bezier60Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 329.26, y: -1836.62), end: CGPoint(x: 329.26, y: -1811.62), options: [])
        context.restoreGState()
        OnboardKit.cubeConture.setStroke()
        bezier60Path.lineWidth = 0.2
        bezier60Path.stroke()


        //// Bezier 61 Drawing
        let bezier61Path = UIBezierPath()
        bezier61Path.move(to: CGPoint(x: 502.76, y: -1775.62))
        bezier61Path.addLine(to: CGPoint(x: 502.76, y: -1811.62))
        bezier61Path.addLine(to: CGPoint(x: 155.76, y: -1817.62))
        bezier61Path.addLine(to: CGPoint(x: 155.76, y: -1775.62))
        bezier61Path.addLine(to: CGPoint(x: 502.76, y: -1775.62))
        bezier61Path.close()
        context.saveGState()
        bezier61Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 329.26, y: -1817.62), end: CGPoint(x: 329.26, y: -1775.62), options: [])
        context.restoreGState()
        UIColor.red.setStroke()
        bezier61Path.lineWidth = 0.1
        bezier61Path.stroke()


        //// Bezier 69 Drawing
        let bezier69Path = UIBezierPath()
        bezier69Path.move(to: CGPoint(x: 485.76, y: -1832.62))
        bezier69Path.addLine(to: CGPoint(x: 485.76, y: -1798.62))
        bezier69Path.addLine(to: CGPoint(x: 502.76, y: -1774.62))
        bezier69Path.addLine(to: CGPoint(x: 502.76, y: -1811.62))
        bezier69Path.addLine(to: CGPoint(x: 485.76, y: -1832.62))
        bezier69Path.close()
        context.saveGState()
        bezier69Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 494.26, y: -1832.62), end: CGPoint(x: 494.26, y: -1774.62), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier69Path.lineWidth = 0.1
        bezier69Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_20 Drawing
        let layer_1_20Path = UIBezierPath(rect: CGRect(x: -59.24, y: -2245.62, width: 316, height: 488))
        context.saveGState()
        layer_1_20Path.addClip()
        context.translateBy(x: -59, y: -2246)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer_6_1.size.height)
        context.draw(layer_6_1.cgImage!, in: CGRect(x: 0, y: 0, width: layer_6_1.size.width, height: layer_6_1.size.height))
        context.restoreGState()


        //// layer_1_19
        context.saveGState()
        context.setAlpha(disc4PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: -353.42, y: -1778.94))
        bezier17Path.addLine(to: CGPoint(x: -16.24, y: -1980.62))
        bezier17Path.addLine(to: CGPoint(x: -32.24, y: -1949.62))
        bezier17Path.addLine(to: CGPoint(x: -32.24, y: -1911.62))
        bezier17Path.addLine(to: CGPoint(x: -353.42, y: -1715.71))
        bezier17Path.addLine(to: CGPoint(x: -353.42, y: -1778.94))
        context.saveGState()
        bezier17Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: -184.83, y: -1980.62), end: CGPoint(x: -184.83, y: -1715.71), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier17Path.lineWidth = 0.1
        bezier17Path.stroke()


        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier18Path.lineWidth = 0.1
        bezier18Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_18
        context.saveGState()
        context.translateBy(x: (disc4ExprX - 574.759156734), y: (disc4ExprY - 2245.15262277))



        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: 47.75, y: 4.04))
        bezier15Path.addCurve(to: CGPoint(x: 55.75, y: 9.4), controlPoint1: CGPoint(x: 52.1, y: 1.46), controlPoint2: CGPoint(x: 55.74, y: 4.25))
        bezier15Path.addLine(to: CGPoint(x: 55.87, y: 50.29))
        bezier15Path.addCurve(to: CGPoint(x: 48, y: 64.29), controlPoint1: CGPoint(x: 55.88, y: 55.43), controlPoint2: CGPoint(x: 52.36, y: 61.7))
        bezier15Path.addLine(to: CGPoint(x: 13.36, y: 84.83))
        bezier15Path.addCurve(to: CGPoint(x: 5.44, y: 80.2), controlPoint1: CGPoint(x: 9, y: 87.42), controlPoint2: CGPoint(x: 5.45, y: 85.34))
        bezier15Path.addLine(to: CGPoint(x: 5.33, y: 39.31))
        bezier15Path.addCurve(to: CGPoint(x: 12.35, y: 25.35), controlPoint1: CGPoint(x: 5.31, y: 34.16), controlPoint2: CGPoint(x: 7.99, y: 27.94))
        bezier15Path.addLine(to: CGPoint(x: 47.75, y: 4.04))
        bezier15Path.close()
        darkPrimary.setFill()
        bezier15Path.fill()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: 48.64, y: 4.04))
        bezier16Path.addLine(to: CGPoint(x: 49.02, y: 3.86))
        bezier16Path.addLine(to: CGPoint(x: 49.15, y: 3.81))
        bezier16Path.addLine(to: CGPoint(x: 49.59, y: 3.63))
        bezier16Path.addLine(to: CGPoint(x: 50.01, y: 3.5))
        bezier16Path.addLine(to: CGPoint(x: 50.07, y: 3.48))
        bezier16Path.addLine(to: CGPoint(x: 50.73, y: 3.34))
        bezier16Path.addLine(to: CGPoint(x: 50.73, y: 3.34))
        bezier16Path.addLine(to: CGPoint(x: 51.26, y: 3.28))
        bezier16Path.addLine(to: CGPoint(x: 51.36, y: 3.28))
        bezier16Path.addLine(to: CGPoint(x: 51.82, y: 3.28))
        bezier16Path.addLine(to: CGPoint(x: 51.9, y: 3.29))
        bezier16Path.addLine(to: CGPoint(x: 52.25, y: 3.33))
        bezier16Path.addLine(to: CGPoint(x: 52.36, y: 3.35))
        bezier16Path.addLine(to: CGPoint(x: 52.76, y: 3.45))
        bezier16Path.addLine(to: CGPoint(x: 52.77, y: 3.45))
        bezier16Path.addLine(to: CGPoint(x: 53.13, y: 3.58))
        bezier16Path.addLine(to: CGPoint(x: 53.23, y: 3.63))
        bezier16Path.addLine(to: CGPoint(x: 53.52, y: 3.77))
        bezier16Path.addLine(to: CGPoint(x: 53.61, y: 3.82))
        bezier16Path.addLine(to: CGPoint(x: 48.12, y: 0.54))
        bezier16Path.addLine(to: CGPoint(x: 48.08, y: 0.52))
        bezier16Path.addLine(to: CGPoint(x: 48.03, y: 0.49))
        bezier16Path.addLine(to: CGPoint(x: 47.74, y: 0.35))
        bezier16Path.addLine(to: CGPoint(x: 47.69, y: 0.32))
        bezier16Path.addLine(to: CGPoint(x: 47.64, y: 0.3))
        bezier16Path.addLine(to: CGPoint(x: 47.28, y: 0.17))
        bezier16Path.addLine(to: CGPoint(x: 47.27, y: 0.17))
        bezier16Path.addLine(to: CGPoint(x: 47.26, y: 0.17))
        bezier16Path.addLine(to: CGPoint(x: 46.87, y: 0.07))
        bezier16Path.addLine(to: CGPoint(x: 46.83, y: 0.06))
        bezier16Path.addLine(to: CGPoint(x: 46.76, y: 0.06))
        bezier16Path.addLine(to: CGPoint(x: 46.4, y: 0.01))
        bezier16Path.addLine(to: CGPoint(x: 46.35, y: 0))
        bezier16Path.addLine(to: CGPoint(x: 46.33, y: 0))
        bezier16Path.addLine(to: CGPoint(x: 45.87, y: 0))
        bezier16Path.addLine(to: CGPoint(x: 45.83, y: 0))
        bezier16Path.addLine(to: CGPoint(x: 45.77, y: 0))
        bezier16Path.addLine(to: CGPoint(x: 45.24, y: 0.06))
        bezier16Path.addLine(to: CGPoint(x: 45.23, y: 0.06))
        bezier16Path.addLine(to: CGPoint(x: 44.58, y: 0.21))
        bezier16Path.addLine(to: CGPoint(x: 44.54, y: 0.21))
        bezier16Path.addLine(to: CGPoint(x: 44.52, y: 0.22))
        bezier16Path.addLine(to: CGPoint(x: 44.1, y: 0.35))
        bezier16Path.addLine(to: CGPoint(x: 44.01, y: 0.39))
        bezier16Path.addLine(to: CGPoint(x: 43.66, y: 0.52))
        bezier16Path.addLine(to: CGPoint(x: 43.61, y: 0.54))
        bezier16Path.addLine(to: CGPoint(x: 43.53, y: 0.58))
        bezier16Path.addLine(to: CGPoint(x: 43.15, y: 0.76))
        bezier16Path.addLine(to: CGPoint(x: 43.01, y: 0.83))
        bezier16Path.addLine(to: CGPoint(x: 42.51, y: 1.11))
        bezier16Path.addLine(to: CGPoint(x: 7.87, y: 21.66))
        bezier16Path.addLine(to: CGPoint(x: 7.11, y: 22.14))
        bezier16Path.addLine(to: CGPoint(x: 6.88, y: 22.32))
        bezier16Path.addLine(to: CGPoint(x: 6.38, y: 22.7))
        bezier16Path.addLine(to: CGPoint(x: 6.11, y: 22.94))
        bezier16Path.addLine(to: CGPoint(x: 5.66, y: 23.33))
        bezier16Path.addLine(to: CGPoint(x: 5.4, y: 23.59))
        bezier16Path.addLine(to: CGPoint(x: 5.23, y: 23.75))
        bezier16Path.addLine(to: CGPoint(x: 4.8, y: 24.21))
        bezier16Path.addLine(to: CGPoint(x: 4.8, y: 24.21))
        bezier16Path.addLine(to: CGPoint(x: 4.37, y: 24.69))
        bezier16Path.addLine(to: CGPoint(x: 4.24, y: 24.86))
        bezier16Path.addLine(to: CGPoint(x: 3.93, y: 25.24))
        bezier16Path.addLine(to: CGPoint(x: 3.73, y: 25.5))
        bezier16Path.addLine(to: CGPoint(x: 3.57, y: 25.71))
        bezier16Path.addLine(to: CGPoint(x: 3.36, y: 26.02))
        bezier16Path.addLine(to: CGPoint(x: 3.21, y: 26.23))
        bezier16Path.addLine(to: CGPoint(x: 2.96, y: 26.6))
        bezier16Path.addLine(to: CGPoint(x: 2.81, y: 26.83))
        bezier16Path.addLine(to: CGPoint(x: 2.75, y: 26.93))
        bezier16Path.addLine(to: CGPoint(x: 2.34, y: 27.61))
        bezier16Path.addLine(to: CGPoint(x: 2.31, y: 27.66))
        bezier16Path.addLine(to: CGPoint(x: 2.24, y: 27.8))
        bezier16Path.addLine(to: CGPoint(x: 1.97, y: 28.3))
        bezier16Path.addLine(to: CGPoint(x: 1.85, y: 28.53))
        bezier16Path.addLine(to: CGPoint(x: 1.73, y: 28.78))
        bezier16Path.addLine(to: CGPoint(x: 1.63, y: 28.99))
        bezier16Path.addLine(to: CGPoint(x: 1.33, y: 29.66))
        bezier16Path.addLine(to: CGPoint(x: 1.32, y: 29.69))
        bezier16Path.addLine(to: CGPoint(x: 1.02, y: 30.42))
        bezier16Path.addLine(to: CGPoint(x: 0.98, y: 30.56))
        bezier16Path.addLine(to: CGPoint(x: 0.89, y: 30.82))
        bezier16Path.addLine(to: CGPoint(x: 0.76, y: 31.19))
        bezier16Path.addLine(to: CGPoint(x: 0.67, y: 31.47))
        bezier16Path.addLine(to: CGPoint(x: 0.57, y: 31.81))
        bezier16Path.addLine(to: CGPoint(x: 0.51, y: 32.01))
        bezier16Path.addLine(to: CGPoint(x: 0.42, y: 32.38))
        bezier16Path.addLine(to: CGPoint(x: 0.32, y: 32.8))
        bezier16Path.addLine(to: CGPoint(x: 0.29, y: 32.94))
        bezier16Path.addLine(to: CGPoint(x: 0.17, y: 33.63))
        bezier16Path.addLine(to: CGPoint(x: 0.14, y: 33.77))
        bezier16Path.addLine(to: CGPoint(x: 0.1, y: 34.07))
        bezier16Path.addLine(to: CGPoint(x: 0.06, y: 34.47))
        bezier16Path.addLine(to: CGPoint(x: 0.03, y: 34.76))
        bezier16Path.addLine(to: CGPoint(x: 0, y: 35.66))
        bezier16Path.addLine(to: CGPoint(x: 0.11, y: 76.55))
        bezier16Path.addCurve(to: CGPoint(x: 0.28, y: 78.31), controlPoint1: CGPoint(x: 0.11, y: 77.18), controlPoint2: CGPoint(x: 0.17, y: 77.78))
        bezier16Path.addCurve(to: CGPoint(x: 1.06, y: 80.4), controlPoint1: CGPoint(x: 0.43, y: 79.13), controlPoint2: CGPoint(x: 0.7, y: 79.83))
        bezier16Path.addCurve(to: CGPoint(x: 2.42, y: 81.74), controlPoint1: CGPoint(x: 1.43, y: 80.98), controlPoint2: CGPoint(x: 1.89, y: 81.43))
        bezier16Path.addLine(to: CGPoint(x: 7.91, y: 85.02))
        bezier16Path.addCurve(to: CGPoint(x: 5.6, y: 79.82), controlPoint1: CGPoint(x: 6.49, y: 84.18), controlPoint2: CGPoint(x: 5.61, y: 82.38))
        bezier16Path.addLine(to: CGPoint(x: 5.49, y: 38.93))
        bezier16Path.addLine(to: CGPoint(x: 5.53, y: 38.04))
        bezier16Path.addLine(to: CGPoint(x: 5.55, y: 37.75))
        bezier16Path.addLine(to: CGPoint(x: 5.64, y: 37.04))
        bezier16Path.addLine(to: CGPoint(x: 5.66, y: 36.9))
        bezier16Path.addLine(to: CGPoint(x: 5.81, y: 36.08))
        bezier16Path.addLine(to: CGPoint(x: 5.91, y: 35.66))
        bezier16Path.addLine(to: CGPoint(x: 6.06, y: 35.08))
        bezier16Path.addLine(to: CGPoint(x: 6.16, y: 34.75))
        bezier16Path.addLine(to: CGPoint(x: 6.37, y: 34.1))
        bezier16Path.addLine(to: CGPoint(x: 6.47, y: 33.83))
        bezier16Path.addLine(to: CGPoint(x: 6.82, y: 32.94))
        bezier16Path.addLine(to: CGPoint(x: 6.86, y: 32.84))
        bezier16Path.addLine(to: CGPoint(x: 7.22, y: 32.06))
        bezier16Path.addLine(to: CGPoint(x: 7.34, y: 31.81))
        bezier16Path.addLine(to: CGPoint(x: 7.73, y: 31.09))
        bezier16Path.addLine(to: CGPoint(x: 7.8, y: 30.94))
        bezier16Path.addLine(to: CGPoint(x: 8.3, y: 30.11))
        bezier16Path.addLine(to: CGPoint(x: 8.45, y: 29.88))
        bezier16Path.addLine(to: CGPoint(x: 8.84, y: 29.3))
        bezier16Path.addLine(to: CGPoint(x: 9.06, y: 28.99))
        bezier16Path.addLine(to: CGPoint(x: 9.42, y: 28.52))
        bezier16Path.addLine(to: CGPoint(x: 9.73, y: 28.14))
        bezier16Path.addLine(to: CGPoint(x: 10.29, y: 27.49))
        bezier16Path.addLine(to: CGPoint(x: 10.29, y: 27.48))
        bezier16Path.addLine(to: CGPoint(x: 10.89, y: 26.87))
        bezier16Path.addLine(to: CGPoint(x: 11.16, y: 26.62))
        bezier16Path.addLine(to: CGPoint(x: 11.6, y: 26.21))
        bezier16Path.addLine(to: CGPoint(x: 11.87, y: 25.99))
        bezier16Path.addLine(to: CGPoint(x: 12.37, y: 25.6))
        bezier16Path.addLine(to: CGPoint(x: 12.61, y: 25.42))
        bezier16Path.addLine(to: CGPoint(x: 13.36, y: 24.93))
        bezier16Path.addLine(to: CGPoint(x: 48, y: 4.39))
        bezier16Path.addLine(to: CGPoint(x: 48.5, y: 4.11))
        bezier16Path.addLine(to: CGPoint(x: 48.64, y: 4.04))
        bezier16Path.close()
        primary.setFill()
        bezier16Path.fill()


        //// Oval Drawing
        context.saveGState()
        context.translateBy(x: 30.66, y: 46.46)
        context.rotate(by: 30.2 * CGFloat.pi/180)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: -13.23, y: -23.52, width: 26.46, height: 47.04))
        context.saveGState()
        ovalPath.addClip()
        context.drawRadialGradient(discCircle4,
            startCenter: CGPoint(x: -0, y: -0), startRadius: 8.06,
            endCenter: CGPoint(x: -0, y: -0), endRadius: 24.17,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// layer_1_17
        context.saveGState()
        context.setAlpha(disc3PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 21 Drawing
        let bezier21Path = UIBezierPath()
        bezier21Path.move(to: CGPoint(x: -331.42, y: -1764.94))
        bezier21Path.addLine(to: CGPoint(x: 5.76, y: -1966.62))
        bezier21Path.addLine(to: CGPoint(x: -10.24, y: -1935.62))
        bezier21Path.addLine(to: CGPoint(x: -10.24, y: -1897.62))
        bezier21Path.addLine(to: CGPoint(x: -331.42, y: -1701.71))
        bezier21Path.addLine(to: CGPoint(x: -331.42, y: -1764.94))
        context.saveGState()
        bezier21Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: -162.83, y: -1966.62), end: CGPoint(x: -162.83, y: -1701.71), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier21Path.lineWidth = 0.1
        bezier21Path.stroke()


        //// Bezier 22 Drawing
        let bezier22Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier22Path.lineWidth = 0.1
        bezier22Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_16
        context.saveGState()
        context.translateBy(x: (disc3ExprX - 574.759156734), y: (disc3ExprY - 2245.15262277))



        //// Bezier 19 Drawing
        let bezier19Path = UIBezierPath()
        bezier19Path.move(to: CGPoint(x: 48, y: 4.32))
        bezier19Path.addCurve(to: CGPoint(x: 55.75, y: 9.4), controlPoint1: CGPoint(x: 52.36, y: 1.73), controlPoint2: CGPoint(x: 55.74, y: 4.25))
        bezier19Path.addLine(to: CGPoint(x: 55.87, y: 50.29))
        bezier19Path.addCurve(to: CGPoint(x: 48, y: 64.29), controlPoint1: CGPoint(x: 55.88, y: 55.43), controlPoint2: CGPoint(x: 52.36, y: 61.7))
        bezier19Path.addLine(to: CGPoint(x: 13.36, y: 84.83))
        bezier19Path.addCurve(to: CGPoint(x: 5.44, y: 80.2), controlPoint1: CGPoint(x: 9, y: 87.42), controlPoint2: CGPoint(x: 5.45, y: 85.34))
        bezier19Path.addLine(to: CGPoint(x: 5.33, y: 39.31))
        bezier19Path.addCurve(to: CGPoint(x: 13, y: 24.32), controlPoint1: CGPoint(x: 5.31, y: 34.16), controlPoint2: CGPoint(x: 8.64, y: 26.9))
        bezier19Path.addLine(to: CGPoint(x: 48, y: 4.32))
        bezier19Path.close()
        darkPrimary.setFill()
        bezier19Path.fill()


        //// Bezier 20 Drawing
        let bezier20Path = UIBezierPath()
        bezier20Path.move(to: CGPoint(x: 48.64, y: 4.04))
        bezier20Path.addLine(to: CGPoint(x: 49.02, y: 3.86))
        bezier20Path.addLine(to: CGPoint(x: 49.15, y: 3.81))
        bezier20Path.addLine(to: CGPoint(x: 49.59, y: 3.63))
        bezier20Path.addLine(to: CGPoint(x: 50.01, y: 3.5))
        bezier20Path.addLine(to: CGPoint(x: 50.07, y: 3.48))
        bezier20Path.addLine(to: CGPoint(x: 50.73, y: 3.34))
        bezier20Path.addLine(to: CGPoint(x: 50.73, y: 3.34))
        bezier20Path.addLine(to: CGPoint(x: 51.26, y: 3.28))
        bezier20Path.addLine(to: CGPoint(x: 51.36, y: 3.28))
        bezier20Path.addLine(to: CGPoint(x: 51.82, y: 3.28))
        bezier20Path.addLine(to: CGPoint(x: 51.9, y: 3.29))
        bezier20Path.addLine(to: CGPoint(x: 52.25, y: 3.33))
        bezier20Path.addLine(to: CGPoint(x: 52.36, y: 3.35))
        bezier20Path.addLine(to: CGPoint(x: 52.76, y: 3.45))
        bezier20Path.addLine(to: CGPoint(x: 52.77, y: 3.45))
        bezier20Path.addLine(to: CGPoint(x: 53.13, y: 3.58))
        bezier20Path.addLine(to: CGPoint(x: 53.23, y: 3.63))
        bezier20Path.addLine(to: CGPoint(x: 53.52, y: 3.77))
        bezier20Path.addLine(to: CGPoint(x: 53.61, y: 3.82))
        bezier20Path.addLine(to: CGPoint(x: 48.12, y: 0.54))
        bezier20Path.addLine(to: CGPoint(x: 48.08, y: 0.52))
        bezier20Path.addLine(to: CGPoint(x: 48.03, y: 0.49))
        bezier20Path.addLine(to: CGPoint(x: 47.74, y: 0.35))
        bezier20Path.addLine(to: CGPoint(x: 47.69, y: 0.32))
        bezier20Path.addLine(to: CGPoint(x: 47.64, y: 0.3))
        bezier20Path.addLine(to: CGPoint(x: 47.28, y: 0.17))
        bezier20Path.addLine(to: CGPoint(x: 47.27, y: 0.17))
        bezier20Path.addLine(to: CGPoint(x: 47.26, y: 0.17))
        bezier20Path.addLine(to: CGPoint(x: 46.87, y: 0.07))
        bezier20Path.addLine(to: CGPoint(x: 46.83, y: 0.06))
        bezier20Path.addLine(to: CGPoint(x: 46.76, y: 0.06))
        bezier20Path.addLine(to: CGPoint(x: 46.4, y: 0.01))
        bezier20Path.addLine(to: CGPoint(x: 46.35, y: 0))
        bezier20Path.addLine(to: CGPoint(x: 46.33, y: 0))
        bezier20Path.addLine(to: CGPoint(x: 45.87, y: 0))
        bezier20Path.addLine(to: CGPoint(x: 45.83, y: 0))
        bezier20Path.addLine(to: CGPoint(x: 45.77, y: 0))
        bezier20Path.addLine(to: CGPoint(x: 45.24, y: 0.06))
        bezier20Path.addLine(to: CGPoint(x: 45.23, y: 0.06))
        bezier20Path.addLine(to: CGPoint(x: 44.58, y: 0.21))
        bezier20Path.addLine(to: CGPoint(x: 44.54, y: 0.21))
        bezier20Path.addLine(to: CGPoint(x: 44.52, y: 0.22))
        bezier20Path.addLine(to: CGPoint(x: 44.1, y: 0.35))
        bezier20Path.addLine(to: CGPoint(x: 44.01, y: 0.39))
        bezier20Path.addLine(to: CGPoint(x: 43.66, y: 0.52))
        bezier20Path.addLine(to: CGPoint(x: 43.61, y: 0.54))
        bezier20Path.addLine(to: CGPoint(x: 43.53, y: 0.58))
        bezier20Path.addLine(to: CGPoint(x: 43.15, y: 0.76))
        bezier20Path.addLine(to: CGPoint(x: 43.01, y: 0.83))
        bezier20Path.addLine(to: CGPoint(x: 42.51, y: 1.11))
        bezier20Path.addLine(to: CGPoint(x: 7.87, y: 21.66))
        bezier20Path.addLine(to: CGPoint(x: 7.11, y: 22.14))
        bezier20Path.addLine(to: CGPoint(x: 6.88, y: 22.32))
        bezier20Path.addLine(to: CGPoint(x: 6.38, y: 22.7))
        bezier20Path.addLine(to: CGPoint(x: 6.11, y: 22.94))
        bezier20Path.addLine(to: CGPoint(x: 5.66, y: 23.33))
        bezier20Path.addLine(to: CGPoint(x: 5.4, y: 23.59))
        bezier20Path.addLine(to: CGPoint(x: 5.23, y: 23.75))
        bezier20Path.addLine(to: CGPoint(x: 4.8, y: 24.21))
        bezier20Path.addLine(to: CGPoint(x: 4.8, y: 24.21))
        bezier20Path.addLine(to: CGPoint(x: 4.37, y: 24.69))
        bezier20Path.addLine(to: CGPoint(x: 4.24, y: 24.86))
        bezier20Path.addLine(to: CGPoint(x: 3.93, y: 25.24))
        bezier20Path.addLine(to: CGPoint(x: 3.73, y: 25.5))
        bezier20Path.addLine(to: CGPoint(x: 3.57, y: 25.71))
        bezier20Path.addLine(to: CGPoint(x: 3.36, y: 26.02))
        bezier20Path.addLine(to: CGPoint(x: 3.21, y: 26.23))
        bezier20Path.addLine(to: CGPoint(x: 2.96, y: 26.6))
        bezier20Path.addLine(to: CGPoint(x: 2.81, y: 26.83))
        bezier20Path.addLine(to: CGPoint(x: 2.75, y: 26.93))
        bezier20Path.addLine(to: CGPoint(x: 2.34, y: 27.61))
        bezier20Path.addLine(to: CGPoint(x: 2.31, y: 27.66))
        bezier20Path.addLine(to: CGPoint(x: 2.24, y: 27.8))
        bezier20Path.addLine(to: CGPoint(x: 1.97, y: 28.3))
        bezier20Path.addLine(to: CGPoint(x: 1.85, y: 28.53))
        bezier20Path.addLine(to: CGPoint(x: 1.73, y: 28.78))
        bezier20Path.addLine(to: CGPoint(x: 1.63, y: 28.99))
        bezier20Path.addLine(to: CGPoint(x: 1.33, y: 29.66))
        bezier20Path.addLine(to: CGPoint(x: 1.32, y: 29.69))
        bezier20Path.addLine(to: CGPoint(x: 1.02, y: 30.42))
        bezier20Path.addLine(to: CGPoint(x: 0.98, y: 30.56))
        bezier20Path.addLine(to: CGPoint(x: 0.89, y: 30.82))
        bezier20Path.addLine(to: CGPoint(x: 0.76, y: 31.19))
        bezier20Path.addLine(to: CGPoint(x: 0.67, y: 31.47))
        bezier20Path.addLine(to: CGPoint(x: 0.57, y: 31.81))
        bezier20Path.addLine(to: CGPoint(x: 0.51, y: 32.01))
        bezier20Path.addLine(to: CGPoint(x: 0.42, y: 32.38))
        bezier20Path.addLine(to: CGPoint(x: 0.32, y: 32.8))
        bezier20Path.addLine(to: CGPoint(x: 0.29, y: 32.94))
        bezier20Path.addLine(to: CGPoint(x: 0.17, y: 33.63))
        bezier20Path.addLine(to: CGPoint(x: 0.14, y: 33.77))
        bezier20Path.addLine(to: CGPoint(x: 0.1, y: 34.07))
        bezier20Path.addLine(to: CGPoint(x: 0.06, y: 34.47))
        bezier20Path.addLine(to: CGPoint(x: 0.03, y: 34.76))
        bezier20Path.addLine(to: CGPoint(x: 0, y: 35.66))
        bezier20Path.addLine(to: CGPoint(x: 0.11, y: 76.55))
        bezier20Path.addCurve(to: CGPoint(x: 0.28, y: 78.31), controlPoint1: CGPoint(x: 0.11, y: 77.18), controlPoint2: CGPoint(x: 0.17, y: 77.78))
        bezier20Path.addCurve(to: CGPoint(x: 1.06, y: 80.4), controlPoint1: CGPoint(x: 0.43, y: 79.13), controlPoint2: CGPoint(x: 0.7, y: 79.83))
        bezier20Path.addCurve(to: CGPoint(x: 2.42, y: 81.74), controlPoint1: CGPoint(x: 1.43, y: 80.98), controlPoint2: CGPoint(x: 1.89, y: 81.43))
        bezier20Path.addLine(to: CGPoint(x: 7.91, y: 85.02))
        bezier20Path.addCurve(to: CGPoint(x: 5.6, y: 79.82), controlPoint1: CGPoint(x: 6.49, y: 84.18), controlPoint2: CGPoint(x: 5.61, y: 82.38))
        bezier20Path.addLine(to: CGPoint(x: 5.49, y: 38.93))
        bezier20Path.addLine(to: CGPoint(x: 5.53, y: 38.04))
        bezier20Path.addLine(to: CGPoint(x: 5.55, y: 37.75))
        bezier20Path.addLine(to: CGPoint(x: 5.64, y: 37.04))
        bezier20Path.addLine(to: CGPoint(x: 5.66, y: 36.9))
        bezier20Path.addLine(to: CGPoint(x: 5.81, y: 36.08))
        bezier20Path.addLine(to: CGPoint(x: 5.91, y: 35.66))
        bezier20Path.addLine(to: CGPoint(x: 6.06, y: 35.08))
        bezier20Path.addLine(to: CGPoint(x: 6.16, y: 34.75))
        bezier20Path.addLine(to: CGPoint(x: 6.37, y: 34.1))
        bezier20Path.addLine(to: CGPoint(x: 6.47, y: 33.83))
        bezier20Path.addLine(to: CGPoint(x: 6.82, y: 32.94))
        bezier20Path.addLine(to: CGPoint(x: 6.86, y: 32.84))
        bezier20Path.addLine(to: CGPoint(x: 7.22, y: 32.06))
        bezier20Path.addLine(to: CGPoint(x: 7.34, y: 31.81))
        bezier20Path.addLine(to: CGPoint(x: 7.73, y: 31.09))
        bezier20Path.addLine(to: CGPoint(x: 7.8, y: 30.94))
        bezier20Path.addLine(to: CGPoint(x: 8.3, y: 30.11))
        bezier20Path.addLine(to: CGPoint(x: 8.45, y: 29.88))
        bezier20Path.addLine(to: CGPoint(x: 8.84, y: 29.3))
        bezier20Path.addLine(to: CGPoint(x: 9.06, y: 28.99))
        bezier20Path.addLine(to: CGPoint(x: 9.42, y: 28.52))
        bezier20Path.addLine(to: CGPoint(x: 9.73, y: 28.14))
        bezier20Path.addLine(to: CGPoint(x: 10.29, y: 27.49))
        bezier20Path.addLine(to: CGPoint(x: 10.29, y: 27.48))
        bezier20Path.addLine(to: CGPoint(x: 10.89, y: 26.87))
        bezier20Path.addLine(to: CGPoint(x: 11.16, y: 26.62))
        bezier20Path.addLine(to: CGPoint(x: 11.6, y: 26.21))
        bezier20Path.addLine(to: CGPoint(x: 11.87, y: 25.99))
        bezier20Path.addLine(to: CGPoint(x: 12.37, y: 25.6))
        bezier20Path.addLine(to: CGPoint(x: 12.61, y: 25.42))
        bezier20Path.addLine(to: CGPoint(x: 13.36, y: 24.93))
        bezier20Path.addLine(to: CGPoint(x: 48, y: 4.39))
        bezier20Path.addLine(to: CGPoint(x: 48.5, y: 4.11))
        bezier20Path.addLine(to: CGPoint(x: 48.64, y: 4.04))
        bezier20Path.close()
        primary.setFill()
        bezier20Path.fill()


        //// Oval 2 Drawing
        context.saveGState()
        context.translateBy(x: 30.66, y: 46.46)
        context.rotate(by: 30.2 * CGFloat.pi/180)

        let oval2Path = UIBezierPath(ovalIn: CGRect(x: -13.23, y: -23.52, width: 26.46, height: 47.04))
        context.saveGState()
        oval2Path.addClip()
        context.drawRadialGradient(discCircle3,
            startCenter: CGPoint(x: -0, y: -0), startRadius: 8.06,
            endCenter: CGPoint(x: -0, y: -0), endRadius: 24.17,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// layer_1_15
        context.saveGState()
        context.setAlpha(disc2PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 25 Drawing
        let bezier25Path = UIBezierPath()
        bezier25Path.move(to: CGPoint(x: -311.42, y: -1749.94))
        bezier25Path.addLine(to: CGPoint(x: 25.76, y: -1951.62))
        bezier25Path.addLine(to: CGPoint(x: 9.76, y: -1920.62))
        bezier25Path.addLine(to: CGPoint(x: 9.76, y: -1882.62))
        bezier25Path.addLine(to: CGPoint(x: -311.42, y: -1686.71))
        bezier25Path.addLine(to: CGPoint(x: -311.42, y: -1749.94))
        context.saveGState()
        bezier25Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: -142.83, y: -1951.62), end: CGPoint(x: -142.83, y: -1686.71), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier25Path.lineWidth = 0.1
        bezier25Path.stroke()


        //// Bezier 26 Drawing
        let bezier26Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier26Path.lineWidth = 0.1
        bezier26Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_14
        context.saveGState()
        context.translateBy(x: (disc2ExprX - 573.759156734), y: (disc2ExprY - 2240.15262277))



        //// Bezier 23 Drawing
        let bezier23Path = UIBezierPath()
        bezier23Path.move(to: CGPoint(x: 49, y: 4.32))
        bezier23Path.addCurve(to: CGPoint(x: 56.75, y: 9.4), controlPoint1: CGPoint(x: 53.44, y: 1.73), controlPoint2: CGPoint(x: 56.74, y: 4.25))
        bezier23Path.addLine(to: CGPoint(x: 56.87, y: 50.29))
        bezier23Path.addCurve(to: CGPoint(x: 48.86, y: 64.29), controlPoint1: CGPoint(x: 56.88, y: 55.43), controlPoint2: CGPoint(x: 53.3, y: 61.7))
        bezier23Path.addLine(to: CGPoint(x: 13.6, y: 84.83))
        bezier23Path.addCurve(to: CGPoint(x: 5.53, y: 80.2), controlPoint1: CGPoint(x: 9.16, y: 87.42), controlPoint2: CGPoint(x: 5.55, y: 85.34))
        bezier23Path.addLine(to: CGPoint(x: 5.42, y: 39.31))
        bezier23Path.addCurve(to: CGPoint(x: 14, y: 24.32), controlPoint1: CGPoint(x: 5.41, y: 34.16), controlPoint2: CGPoint(x: 9.56, y: 26.9))
        bezier23Path.addLine(to: CGPoint(x: 49, y: 4.32))
        bezier23Path.close()
        darkPrimary.setFill()
        bezier23Path.fill()


        //// Bezier 24 Drawing
        let bezier24Path = UIBezierPath()
        bezier24Path.move(to: CGPoint(x: 49.51, y: 4.04))
        bezier24Path.addLine(to: CGPoint(x: 49.9, y: 3.86))
        bezier24Path.addLine(to: CGPoint(x: 50.03, y: 3.81))
        bezier24Path.addLine(to: CGPoint(x: 50.47, y: 3.63))
        bezier24Path.addLine(to: CGPoint(x: 50.91, y: 3.5))
        bezier24Path.addLine(to: CGPoint(x: 50.97, y: 3.48))
        bezier24Path.addLine(to: CGPoint(x: 51.63, y: 3.34))
        bezier24Path.addLine(to: CGPoint(x: 51.64, y: 3.34))
        bezier24Path.addLine(to: CGPoint(x: 52.18, y: 3.28))
        bezier24Path.addLine(to: CGPoint(x: 52.28, y: 3.28))
        bezier24Path.addLine(to: CGPoint(x: 52.75, y: 3.28))
        bezier24Path.addLine(to: CGPoint(x: 52.83, y: 3.29))
        bezier24Path.addLine(to: CGPoint(x: 53.19, y: 3.33))
        bezier24Path.addLine(to: CGPoint(x: 53.3, y: 3.35))
        bezier24Path.addLine(to: CGPoint(x: 53.7, y: 3.45))
        bezier24Path.addLine(to: CGPoint(x: 53.72, y: 3.45))
        bezier24Path.addLine(to: CGPoint(x: 54.08, y: 3.58))
        bezier24Path.addLine(to: CGPoint(x: 54.18, y: 3.63))
        bezier24Path.addLine(to: CGPoint(x: 54.48, y: 3.77))
        bezier24Path.addLine(to: CGPoint(x: 54.57, y: 3.82))
        bezier24Path.addLine(to: CGPoint(x: 48.99, y: 0.54))
        bezier24Path.addLine(to: CGPoint(x: 48.94, y: 0.52))
        bezier24Path.addLine(to: CGPoint(x: 48.89, y: 0.49))
        bezier24Path.addLine(to: CGPoint(x: 48.6, y: 0.35))
        bezier24Path.addLine(to: CGPoint(x: 48.54, y: 0.32))
        bezier24Path.addLine(to: CGPoint(x: 48.49, y: 0.3))
        bezier24Path.addLine(to: CGPoint(x: 48.13, y: 0.17))
        bezier24Path.addLine(to: CGPoint(x: 48.11, y: 0.17))
        bezier24Path.addLine(to: CGPoint(x: 48.11, y: 0.17))
        bezier24Path.addLine(to: CGPoint(x: 47.71, y: 0.07))
        bezier24Path.addLine(to: CGPoint(x: 47.66, y: 0.06))
        bezier24Path.addLine(to: CGPoint(x: 47.6, y: 0.06))
        bezier24Path.addLine(to: CGPoint(x: 47.24, y: 0.01))
        bezier24Path.addLine(to: CGPoint(x: 47.18, y: 0))
        bezier24Path.addLine(to: CGPoint(x: 47.16, y: 0))
        bezier24Path.addLine(to: CGPoint(x: 46.69, y: 0))
        bezier24Path.addLine(to: CGPoint(x: 46.65, y: 0))
        bezier24Path.addLine(to: CGPoint(x: 46.59, y: 0))
        bezier24Path.addLine(to: CGPoint(x: 46.05, y: 0.06))
        bezier24Path.addLine(to: CGPoint(x: 46.04, y: 0.06))
        bezier24Path.addLine(to: CGPoint(x: 45.38, y: 0.21))
        bezier24Path.addLine(to: CGPoint(x: 45.34, y: 0.21))
        bezier24Path.addLine(to: CGPoint(x: 45.32, y: 0.22))
        bezier24Path.addLine(to: CGPoint(x: 44.89, y: 0.35))
        bezier24Path.addLine(to: CGPoint(x: 44.8, y: 0.39))
        bezier24Path.addLine(to: CGPoint(x: 44.44, y: 0.52))
        bezier24Path.addLine(to: CGPoint(x: 44.39, y: 0.54))
        bezier24Path.addLine(to: CGPoint(x: 44.31, y: 0.58))
        bezier24Path.addLine(to: CGPoint(x: 43.92, y: 0.76))
        bezier24Path.addLine(to: CGPoint(x: 43.78, y: 0.83))
        bezier24Path.addLine(to: CGPoint(x: 43.27, y: 1.11))
        bezier24Path.addLine(to: CGPoint(x: 8.01, y: 21.66))
        bezier24Path.addLine(to: CGPoint(x: 7.24, y: 22.14))
        bezier24Path.addLine(to: CGPoint(x: 7, y: 22.32))
        bezier24Path.addLine(to: CGPoint(x: 6.5, y: 22.7))
        bezier24Path.addLine(to: CGPoint(x: 6.22, y: 22.94))
        bezier24Path.addLine(to: CGPoint(x: 5.76, y: 23.33))
        bezier24Path.addLine(to: CGPoint(x: 5.5, y: 23.59))
        bezier24Path.addLine(to: CGPoint(x: 5.33, y: 23.75))
        bezier24Path.addLine(to: CGPoint(x: 4.89, y: 24.21))
        bezier24Path.addLine(to: CGPoint(x: 4.88, y: 24.21))
        bezier24Path.addLine(to: CGPoint(x: 4.45, y: 24.69))
        bezier24Path.addLine(to: CGPoint(x: 4.31, y: 24.86))
        bezier24Path.addLine(to: CGPoint(x: 4, y: 25.24))
        bezier24Path.addLine(to: CGPoint(x: 3.8, y: 25.5))
        bezier24Path.addLine(to: CGPoint(x: 3.64, y: 25.71))
        bezier24Path.addLine(to: CGPoint(x: 3.42, y: 26.02))
        bezier24Path.addLine(to: CGPoint(x: 3.26, y: 26.23))
        bezier24Path.addLine(to: CGPoint(x: 3.01, y: 26.6))
        bezier24Path.addLine(to: CGPoint(x: 2.86, y: 26.83))
        bezier24Path.addLine(to: CGPoint(x: 2.8, y: 26.93))
        bezier24Path.addLine(to: CGPoint(x: 2.38, y: 27.61))
        bezier24Path.addLine(to: CGPoint(x: 2.35, y: 27.66))
        bezier24Path.addLine(to: CGPoint(x: 2.28, y: 27.8))
        bezier24Path.addLine(to: CGPoint(x: 2, y: 28.3))
        bezier24Path.addLine(to: CGPoint(x: 1.89, y: 28.53))
        bezier24Path.addLine(to: CGPoint(x: 1.76, y: 28.78))
        bezier24Path.addLine(to: CGPoint(x: 1.66, y: 28.99))
        bezier24Path.addLine(to: CGPoint(x: 1.35, y: 29.66))
        bezier24Path.addLine(to: CGPoint(x: 1.34, y: 29.69))
        bezier24Path.addLine(to: CGPoint(x: 1.04, y: 30.42))
        bezier24Path.addLine(to: CGPoint(x: 1, y: 30.56))
        bezier24Path.addLine(to: CGPoint(x: 0.9, y: 30.82))
        bezier24Path.addLine(to: CGPoint(x: 0.77, y: 31.19))
        bezier24Path.addLine(to: CGPoint(x: 0.68, y: 31.47))
        bezier24Path.addLine(to: CGPoint(x: 0.58, y: 31.81))
        bezier24Path.addLine(to: CGPoint(x: 0.52, y: 32.01))
        bezier24Path.addLine(to: CGPoint(x: 0.43, y: 32.38))
        bezier24Path.addLine(to: CGPoint(x: 0.33, y: 32.8))
        bezier24Path.addLine(to: CGPoint(x: 0.29, y: 32.94))
        bezier24Path.addLine(to: CGPoint(x: 0.17, y: 33.63))
        bezier24Path.addLine(to: CGPoint(x: 0.15, y: 33.77))
        bezier24Path.addLine(to: CGPoint(x: 0.1, y: 34.07))
        bezier24Path.addLine(to: CGPoint(x: 0.07, y: 34.47))
        bezier24Path.addLine(to: CGPoint(x: 0.03, y: 34.76))
        bezier24Path.addLine(to: CGPoint(x: 0, y: 35.66))
        bezier24Path.addLine(to: CGPoint(x: 0.12, y: 76.55))
        bezier24Path.addCurve(to: CGPoint(x: 0.28, y: 78.31), controlPoint1: CGPoint(x: 0.12, y: 77.18), controlPoint2: CGPoint(x: 0.17, y: 77.78))
        bezier24Path.addCurve(to: CGPoint(x: 1.08, y: 80.4), controlPoint1: CGPoint(x: 0.44, y: 79.13), controlPoint2: CGPoint(x: 0.72, y: 79.83))
        bezier24Path.addCurve(to: CGPoint(x: 2.46, y: 81.74), controlPoint1: CGPoint(x: 1.46, y: 80.98), controlPoint2: CGPoint(x: 1.92, y: 81.43))
        bezier24Path.addLine(to: CGPoint(x: 8.05, y: 85.02))
        bezier24Path.addCurve(to: CGPoint(x: 5.7, y: 79.82), controlPoint1: CGPoint(x: 6.6, y: 84.18), controlPoint2: CGPoint(x: 5.71, y: 82.38))
        bezier24Path.addLine(to: CGPoint(x: 5.59, y: 38.93))
        bezier24Path.addLine(to: CGPoint(x: 5.63, y: 38.04))
        bezier24Path.addLine(to: CGPoint(x: 5.65, y: 37.75))
        bezier24Path.addLine(to: CGPoint(x: 5.74, y: 37.04))
        bezier24Path.addLine(to: CGPoint(x: 5.76, y: 36.9))
        bezier24Path.addLine(to: CGPoint(x: 5.92, y: 36.08))
        bezier24Path.addLine(to: CGPoint(x: 6.02, y: 35.66))
        bezier24Path.addLine(to: CGPoint(x: 6.17, y: 35.08))
        bezier24Path.addLine(to: CGPoint(x: 6.27, y: 34.75))
        bezier24Path.addLine(to: CGPoint(x: 6.49, y: 34.1))
        bezier24Path.addLine(to: CGPoint(x: 6.58, y: 33.83))
        bezier24Path.addLine(to: CGPoint(x: 6.94, y: 32.94))
        bezier24Path.addLine(to: CGPoint(x: 6.98, y: 32.84))
        bezier24Path.addLine(to: CGPoint(x: 7.35, y: 32.06))
        bezier24Path.addLine(to: CGPoint(x: 7.48, y: 31.81))
        bezier24Path.addLine(to: CGPoint(x: 7.87, y: 31.09))
        bezier24Path.addLine(to: CGPoint(x: 7.94, y: 30.94))
        bezier24Path.addLine(to: CGPoint(x: 8.45, y: 30.11))
        bezier24Path.addLine(to: CGPoint(x: 8.6, y: 29.88))
        bezier24Path.addLine(to: CGPoint(x: 9, y: 29.3))
        bezier24Path.addLine(to: CGPoint(x: 9.23, y: 28.99))
        bezier24Path.addLine(to: CGPoint(x: 9.59, y: 28.52))
        bezier24Path.addLine(to: CGPoint(x: 9.9, y: 28.14))
        bezier24Path.addLine(to: CGPoint(x: 10.47, y: 27.49))
        bezier24Path.addLine(to: CGPoint(x: 10.48, y: 27.48))
        bezier24Path.addLine(to: CGPoint(x: 11.08, y: 26.87))
        bezier24Path.addLine(to: CGPoint(x: 11.35, y: 26.62))
        bezier24Path.addLine(to: CGPoint(x: 11.81, y: 26.21))
        bezier24Path.addLine(to: CGPoint(x: 12.08, y: 25.99))
        bezier24Path.addLine(to: CGPoint(x: 12.59, y: 25.6))
        bezier24Path.addLine(to: CGPoint(x: 12.83, y: 25.42))
        bezier24Path.addLine(to: CGPoint(x: 13.6, y: 24.93))
        bezier24Path.addLine(to: CGPoint(x: 48.86, y: 4.39))
        bezier24Path.addLine(to: CGPoint(x: 49.37, y: 4.11))
        bezier24Path.addLine(to: CGPoint(x: 49.51, y: 4.04))
        bezier24Path.close()
        primary.setFill()
        bezier24Path.fill()


        //// Oval 3 Drawing
        context.saveGState()
        context.translateBy(x: 31.2, y: 46.46)
        context.rotate(by: 30.2 * CGFloat.pi/180)

        let oval3Path = UIBezierPath(ovalIn: CGRect(x: -13.59, y: -23.73, width: 27.18, height: 47.46))
        context.saveGState()
        oval3Path.addClip()
        context.drawRadialGradient(discCircle2,
            startCenter: CGPoint(x: -0, y: -0), startRadius: 8.17,
            endCenter: CGPoint(x: -0, y: -0), endRadius: 24.5,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// layer_1_13
        context.saveGState()
        context.setAlpha(disc1PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 29 Drawing
        context.saveGState()
        context.setAlpha(disc1PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier29Path = UIBezierPath()
        bezier29Path.move(to: CGPoint(x: -288.42, y: -1737.94))
        bezier29Path.addLine(to: CGPoint(x: 48.76, y: -1939.62))
        bezier29Path.addLine(to: CGPoint(x: 32.76, y: -1908.62))
        bezier29Path.addLine(to: CGPoint(x: 32.76, y: -1870.62))
        bezier29Path.addLine(to: CGPoint(x: -288.42, y: -1674.71))
        bezier29Path.addLine(to: CGPoint(x: -288.42, y: -1734.22))
        bezier29Path.addLine(to: CGPoint(x: -288.42, y: -1737.94))
        context.saveGState()
        bezier29Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: -119.83, y: -1939.62), end: CGPoint(x: -119.83, y: -1674.71), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier29Path.lineWidth = 0.1
        bezier29Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_12
        context.saveGState()
        context.translateBy(x: (disc1ExprX - 572.606812984), y: (disc1ExprY - 2244.15262277))



        //// Bezier 27 Drawing
        let bezier27Path = UIBezierPath()
        bezier27Path.move(to: CGPoint(x: 50, y: 4.32))
        bezier27Path.addCurve(to: CGPoint(x: 57.75, y: 9.4), controlPoint1: CGPoint(x: 54.52, y: 1.73), controlPoint2: CGPoint(x: 57.73, y: 4.25))
        bezier27Path.addLine(to: CGPoint(x: 57.87, y: 50.29))
        bezier27Path.addCurve(to: CGPoint(x: 49.72, y: 64.29), controlPoint1: CGPoint(x: 57.88, y: 55.43), controlPoint2: CGPoint(x: 54.24, y: 61.7))
        bezier27Path.addLine(to: CGPoint(x: 13.83, y: 84.83))
        bezier27Path.addCurve(to: CGPoint(x: 5.63, y: 80.2), controlPoint1: CGPoint(x: 9.32, y: 87.42), controlPoint2: CGPoint(x: 5.65, y: 85.34))
        bezier27Path.addLine(to: CGPoint(x: 5.52, y: 39.31))
        bezier27Path.addCurve(to: CGPoint(x: 14, y: 24.32), controlPoint1: CGPoint(x: 5.5, y: 34.16), controlPoint2: CGPoint(x: 9.48, y: 26.9))
        bezier27Path.addLine(to: CGPoint(x: 50, y: 4.32))
        bezier27Path.close()
        darkPrimary.setFill()
        bezier27Path.fill()


        //// Bezier 28 Drawing
        let bezier28Path = UIBezierPath()
        bezier28Path.move(to: CGPoint(x: 50.38, y: 4.04))
        bezier28Path.addLine(to: CGPoint(x: 50.77, y: 3.86))
        bezier28Path.addLine(to: CGPoint(x: 50.91, y: 3.81))
        bezier28Path.addLine(to: CGPoint(x: 51.36, y: 3.63))
        bezier28Path.addLine(to: CGPoint(x: 51.8, y: 3.5))
        bezier28Path.addLine(to: CGPoint(x: 51.86, y: 3.48))
        bezier28Path.addLine(to: CGPoint(x: 52.54, y: 3.34))
        bezier28Path.addLine(to: CGPoint(x: 52.55, y: 3.34))
        bezier28Path.addLine(to: CGPoint(x: 53.09, y: 3.28))
        bezier28Path.addLine(to: CGPoint(x: 53.2, y: 3.28))
        bezier28Path.addLine(to: CGPoint(x: 53.68, y: 3.28))
        bezier28Path.addLine(to: CGPoint(x: 53.75, y: 3.29))
        bezier28Path.addLine(to: CGPoint(x: 54.13, y: 3.33))
        bezier28Path.addLine(to: CGPoint(x: 54.24, y: 3.35))
        bezier28Path.addLine(to: CGPoint(x: 54.65, y: 3.45))
        bezier28Path.addLine(to: CGPoint(x: 54.66, y: 3.45))
        bezier28Path.addLine(to: CGPoint(x: 55.03, y: 3.58))
        bezier28Path.addLine(to: CGPoint(x: 55.14, y: 3.63))
        bezier28Path.addLine(to: CGPoint(x: 55.44, y: 3.77))
        bezier28Path.addLine(to: CGPoint(x: 55.53, y: 3.82))
        bezier28Path.addLine(to: CGPoint(x: 49.85, y: 0.54))
        bezier28Path.addLine(to: CGPoint(x: 49.8, y: 0.52))
        bezier28Path.addLine(to: CGPoint(x: 49.75, y: 0.49))
        bezier28Path.addLine(to: CGPoint(x: 49.45, y: 0.35))
        bezier28Path.addLine(to: CGPoint(x: 49.39, y: 0.32))
        bezier28Path.addLine(to: CGPoint(x: 49.34, y: 0.3))
        bezier28Path.addLine(to: CGPoint(x: 48.97, y: 0.17))
        bezier28Path.addLine(to: CGPoint(x: 48.96, y: 0.17))
        bezier28Path.addLine(to: CGPoint(x: 48.96, y: 0.17))
        bezier28Path.addLine(to: CGPoint(x: 48.55, y: 0.07))
        bezier28Path.addLine(to: CGPoint(x: 48.5, y: 0.06))
        bezier28Path.addLine(to: CGPoint(x: 48.44, y: 0.06))
        bezier28Path.addLine(to: CGPoint(x: 48.07, y: 0.01))
        bezier28Path.addLine(to: CGPoint(x: 48.01, y: 0))
        bezier28Path.addLine(to: CGPoint(x: 47.99, y: 0))
        bezier28Path.addLine(to: CGPoint(x: 47.51, y: 0))
        bezier28Path.addLine(to: CGPoint(x: 47.47, y: 0))
        bezier28Path.addLine(to: CGPoint(x: 47.4, y: 0))
        bezier28Path.addLine(to: CGPoint(x: 46.86, y: 0.06))
        bezier28Path.addLine(to: CGPoint(x: 46.85, y: 0.06))
        bezier28Path.addLine(to: CGPoint(x: 46.17, y: 0.21))
        bezier28Path.addLine(to: CGPoint(x: 46.14, y: 0.21))
        bezier28Path.addLine(to: CGPoint(x: 46.11, y: 0.22))
        bezier28Path.addLine(to: CGPoint(x: 45.68, y: 0.35))
        bezier28Path.addLine(to: CGPoint(x: 45.58, y: 0.39))
        bezier28Path.addLine(to: CGPoint(x: 45.22, y: 0.52))
        bezier28Path.addLine(to: CGPoint(x: 45.17, y: 0.54))
        bezier28Path.addLine(to: CGPoint(x: 45.08, y: 0.58))
        bezier28Path.addLine(to: CGPoint(x: 44.69, y: 0.76))
        bezier28Path.addLine(to: CGPoint(x: 44.55, y: 0.83))
        bezier28Path.addLine(to: CGPoint(x: 44.03, y: 1.11))
        bezier28Path.addLine(to: CGPoint(x: 8.15, y: 21.66))
        bezier28Path.addLine(to: CGPoint(x: 7.37, y: 22.14))
        bezier28Path.addLine(to: CGPoint(x: 7.12, y: 22.32))
        bezier28Path.addLine(to: CGPoint(x: 6.61, y: 22.7))
        bezier28Path.addLine(to: CGPoint(x: 6.33, y: 22.94))
        bezier28Path.addLine(to: CGPoint(x: 5.87, y: 23.33))
        bezier28Path.addLine(to: CGPoint(x: 5.59, y: 23.59))
        bezier28Path.addLine(to: CGPoint(x: 5.42, y: 23.75))
        bezier28Path.addLine(to: CGPoint(x: 4.97, y: 24.21))
        bezier28Path.addLine(to: CGPoint(x: 4.97, y: 24.21))
        bezier28Path.addLine(to: CGPoint(x: 4.53, y: 24.69))
        bezier28Path.addLine(to: CGPoint(x: 4.39, y: 24.86))
        bezier28Path.addLine(to: CGPoint(x: 4.07, y: 25.24))
        bezier28Path.addLine(to: CGPoint(x: 3.86, y: 25.5))
        bezier28Path.addLine(to: CGPoint(x: 3.7, y: 25.71))
        bezier28Path.addLine(to: CGPoint(x: 3.48, y: 26.02))
        bezier28Path.addLine(to: CGPoint(x: 3.32, y: 26.23))
        bezier28Path.addLine(to: CGPoint(x: 3.07, y: 26.6))
        bezier28Path.addLine(to: CGPoint(x: 2.91, y: 26.83))
        bezier28Path.addLine(to: CGPoint(x: 2.84, y: 26.93))
        bezier28Path.addLine(to: CGPoint(x: 2.42, y: 27.61))
        bezier28Path.addLine(to: CGPoint(x: 2.39, y: 27.66))
        bezier28Path.addLine(to: CGPoint(x: 2.32, y: 27.8))
        bezier28Path.addLine(to: CGPoint(x: 2.04, y: 28.3))
        bezier28Path.addLine(to: CGPoint(x: 1.92, y: 28.53))
        bezier28Path.addLine(to: CGPoint(x: 1.79, y: 28.78))
        bezier28Path.addLine(to: CGPoint(x: 1.68, y: 28.99))
        bezier28Path.addLine(to: CGPoint(x: 1.38, y: 29.66))
        bezier28Path.addLine(to: CGPoint(x: 1.36, y: 29.69))
        bezier28Path.addLine(to: CGPoint(x: 1.06, y: 30.42))
        bezier28Path.addLine(to: CGPoint(x: 1.01, y: 30.56))
        bezier28Path.addLine(to: CGPoint(x: 0.92, y: 30.82))
        bezier28Path.addLine(to: CGPoint(x: 0.78, y: 31.19))
        bezier28Path.addLine(to: CGPoint(x: 0.7, y: 31.47))
        bezier28Path.addLine(to: CGPoint(x: 0.59, y: 31.81))
        bezier28Path.addLine(to: CGPoint(x: 0.53, y: 32.01))
        bezier28Path.addLine(to: CGPoint(x: 0.44, y: 32.38))
        bezier28Path.addLine(to: CGPoint(x: 0.34, y: 32.8))
        bezier28Path.addLine(to: CGPoint(x: 0.3, y: 32.94))
        bezier28Path.addLine(to: CGPoint(x: 0.17, y: 33.63))
        bezier28Path.addLine(to: CGPoint(x: 0.15, y: 33.77))
        bezier28Path.addLine(to: CGPoint(x: 0.11, y: 34.07))
        bezier28Path.addLine(to: CGPoint(x: 0.07, y: 34.47))
        bezier28Path.addLine(to: CGPoint(x: 0.04, y: 34.76))
        bezier28Path.addLine(to: CGPoint(x: 0, y: 35.66))
        bezier28Path.addLine(to: CGPoint(x: 0.12, y: 76.55))
        bezier28Path.addCurve(to: CGPoint(x: 0.29, y: 78.31), controlPoint1: CGPoint(x: 0.12, y: 77.18), controlPoint2: CGPoint(x: 0.18, y: 77.78))
        bezier28Path.addCurve(to: CGPoint(x: 1.1, y: 80.4), controlPoint1: CGPoint(x: 0.45, y: 79.13), controlPoint2: CGPoint(x: 0.73, y: 79.83))
        bezier28Path.addCurve(to: CGPoint(x: 2.5, y: 81.74), controlPoint1: CGPoint(x: 1.48, y: 80.98), controlPoint2: CGPoint(x: 1.95, y: 81.43))
        bezier28Path.addLine(to: CGPoint(x: 8.19, y: 85.02))
        bezier28Path.addCurve(to: CGPoint(x: 5.8, y: 79.82), controlPoint1: CGPoint(x: 6.72, y: 84.18), controlPoint2: CGPoint(x: 5.81, y: 82.38))
        bezier28Path.addLine(to: CGPoint(x: 5.69, y: 38.93))
        bezier28Path.addLine(to: CGPoint(x: 5.72, y: 38.04))
        bezier28Path.addLine(to: CGPoint(x: 5.75, y: 37.75))
        bezier28Path.addLine(to: CGPoint(x: 5.84, y: 37.04))
        bezier28Path.addLine(to: CGPoint(x: 5.86, y: 36.9))
        bezier28Path.addLine(to: CGPoint(x: 6.02, y: 36.08))
        bezier28Path.addLine(to: CGPoint(x: 6.13, y: 35.66))
        bezier28Path.addLine(to: CGPoint(x: 6.28, y: 35.08))
        bezier28Path.addLine(to: CGPoint(x: 6.38, y: 34.75))
        bezier28Path.addLine(to: CGPoint(x: 6.6, y: 34.1))
        bezier28Path.addLine(to: CGPoint(x: 6.7, y: 33.83))
        bezier28Path.addLine(to: CGPoint(x: 7.06, y: 32.94))
        bezier28Path.addLine(to: CGPoint(x: 7.1, y: 32.84))
        bezier28Path.addLine(to: CGPoint(x: 7.48, y: 32.06))
        bezier28Path.addLine(to: CGPoint(x: 7.61, y: 31.81))
        bezier28Path.addLine(to: CGPoint(x: 8, y: 31.09))
        bezier28Path.addLine(to: CGPoint(x: 8.08, y: 30.94))
        bezier28Path.addLine(to: CGPoint(x: 8.6, y: 30.11))
        bezier28Path.addLine(to: CGPoint(x: 8.75, y: 29.88))
        bezier28Path.addLine(to: CGPoint(x: 9.16, y: 29.3))
        bezier28Path.addLine(to: CGPoint(x: 9.39, y: 28.99))
        bezier28Path.addLine(to: CGPoint(x: 9.76, y: 28.52))
        bezier28Path.addLine(to: CGPoint(x: 10.08, y: 28.14))
        bezier28Path.addLine(to: CGPoint(x: 10.65, y: 27.49))
        bezier28Path.addLine(to: CGPoint(x: 10.66, y: 27.48))
        bezier28Path.addLine(to: CGPoint(x: 11.28, y: 26.87))
        bezier28Path.addLine(to: CGPoint(x: 11.55, y: 26.62))
        bezier28Path.addLine(to: CGPoint(x: 12.02, y: 26.21))
        bezier28Path.addLine(to: CGPoint(x: 12.3, y: 25.99))
        bezier28Path.addLine(to: CGPoint(x: 12.81, y: 25.6))
        bezier28Path.addLine(to: CGPoint(x: 13.06, y: 25.42))
        bezier28Path.addLine(to: CGPoint(x: 13.83, y: 24.93))
        bezier28Path.addLine(to: CGPoint(x: 49.72, y: 4.39))
        bezier28Path.addLine(to: CGPoint(x: 50.24, y: 4.11))
        bezier28Path.addLine(to: CGPoint(x: 50.38, y: 4.04))
        bezier28Path.close()
        primary.setFill()
        bezier28Path.fill()


        //// Oval 4 Drawing
        context.saveGState()
        context.translateBy(x: 31.75, y: 46.46)
        context.rotate(by: 30.2 * CGFloat.pi/180)

        let oval4Path = UIBezierPath(ovalIn: CGRect(x: -13.95, y: -23.94, width: 27.9, height: 47.87))
        context.saveGState()
        oval4Path.addClip()
        context.drawRadialGradient(discCircle1,
            startCenter: CGPoint(x: -0, y: -0), startRadius: 8.27,
            endCenter: CGPoint(x: -0, y: -0), endRadius: 24.82,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// layer_1_10
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 218.76, y: -1900.62))
        bezierPath.addLine(to: CGPoint(x: 251.76, y: -1973.62))
        bezierPath.addLine(to: CGPoint(x: 691.76, y: -1904.62))
        bezierPath.addLine(to: CGPoint(x: 661.76, y: -1826.62))
        bezierPath.addLine(to: CGPoint(x: 218.76, y: -1900.62))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(wings, start: CGPoint(x: 691.76, y: -1900.12), end: CGPoint(x: 218.76, y: -1900.12), options: [])
        context.restoreGState()


        //// plate 3
        context.saveGState()
        context.translateBy(x: (plate3ExprX - 767.609002976), y: (plate3ExprY - 2282.43312872))



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 110.02, y: 41.69))
        bezier4Path.addCurve(to: CGPoint(x: 108.3, y: 34.09), controlPoint1: CGPoint(x: 110.06, y: 41.12), controlPoint2: CGPoint(x: 108.3, y: 34.09))
        bezier4Path.addCurve(to: CGPoint(x: 99.94, y: 28.12), controlPoint1: CGPoint(x: 106.54, y: 30.99), controlPoint2: CGPoint(x: 103.6, y: 28.68))
        bezier4Path.addLine(to: CGPoint(x: 36.77, y: 18.49))
        bezier4Path.addCurve(to: CGPoint(x: 24.61, y: 25.6), controlPoint1: CGPoint(x: 31.74, y: 17.72), controlPoint2: CGPoint(x: 26.83, y: 20.6))
        bezier4Path.addLine(to: CGPoint(x: 4.85, y: 70.2))
        bezier4Path.addLine(to: CGPoint(x: 2.54, y: 80.29))
        bezier4Path.addLine(to: CGPoint(x: 2.72, y: 80.58))
        bezier4Path.addCurve(to: CGPoint(x: 12.39, y: 91.03), controlPoint1: CGPoint(x: 3.55, y: 85.71), controlPoint2: CGPoint(x: 7.21, y: 90.11))
        bezier4Path.addLine(to: CGPoint(x: 76.92, y: 102.47))
        bezier4Path.addCurve(to: CGPoint(x: 89.53, y: 94.94), controlPoint1: CGPoint(x: 82.2, y: 103.41), controlPoint2: CGPoint(x: 87.38, y: 100.31))
        bezier4Path.addLine(to: CGPoint(x: 109.06, y: 45.99))
        bezier4Path.addCurve(to: CGPoint(x: 109.76, y: 43.67), controlPoint1: CGPoint(x: 109.37, y: 45.23), controlPoint2: CGPoint(x: 109.6, y: 44.45))
        bezier4Path.addLine(to: CGPoint(x: 110.02, y: 43.18))
        bezier4Path.addLine(to: CGPoint(x: 110.02, y: 41.69))
        bezier4Path.close()
        darkPrimary.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 1.17, y: 50.39))
        bezier5Path.addLine(to: CGPoint(x: 21.75, y: 6.71))
        bezier5Path.addCurve(to: CGPoint(x: 33.73, y: 0.11), controlPoint1: CGPoint(x: 23.94, y: 2.06), controlPoint2: CGPoint(x: 28.78, y: -0.6))
        bezier5Path.addLine(to: CGPoint(x: 95.98, y: 9.04))
        bezier5Path.addCurve(to: CGPoint(x: 104.97, y: 25.6), controlPoint1: CGPoint(x: 103.56, y: 10.12), controlPoint2: CGPoint(x: 108.03, y: 18.37))
        bezier5Path.addLine(to: CGPoint(x: 85.72, y: 70.97))
        bezier5Path.addCurve(to: CGPoint(x: 73.29, y: 77.96), controlPoint1: CGPoint(x: 83.61, y: 75.95), controlPoint2: CGPoint(x: 78.5, y: 78.82))
        bezier5Path.addLine(to: CGPoint(x: 9.71, y: 67.35))
        bezier5Path.addCurve(to: CGPoint(x: 1.17, y: 50.39), controlPoint1: CGPoint(x: 2.08, y: 66.08), controlPoint2: CGPoint(x: -2.21, y: 57.57))
        bezier5Path.close()
        primary.setFill()
        bezier5Path.fill()



        context.restoreGState()


        //// plate 2
        context.saveGState()
        context.translateBy(x: (plate2ExprX - 413.532069646), y: (plate2ExprY - 2223.37313988))



        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 107.84, y: 39.16))
        bezier2Path.addCurve(to: CGPoint(x: 106.12, y: 31.7), controlPoint1: CGPoint(x: 107.88, y: 38.6), controlPoint2: CGPoint(x: 106.12, y: 31.7))
        bezier2Path.addCurve(to: CGPoint(x: 97.76, y: 25.83), controlPoint1: CGPoint(x: 104.36, y: 28.65), controlPoint2: CGPoint(x: 101.42, y: 26.38))
        bezier2Path.addLine(to: CGPoint(x: 34.59, y: 16.38))
        bezier2Path.addCurve(to: CGPoint(x: 22.43, y: 23.36), controlPoint1: CGPoint(x: 29.56, y: 15.62), controlPoint2: CGPoint(x: 24.65, y: 18.45))
        bezier2Path.addLine(to: CGPoint(x: 2.67, y: 67.15))
        bezier2Path.addLine(to: CGPoint(x: 0.36, y: 77.05))
        bezier2Path.addLine(to: CGPoint(x: 0.54, y: 77.34))
        bezier2Path.addCurve(to: CGPoint(x: 10.21, y: 87.6), controlPoint1: CGPoint(x: 1.37, y: 82.38), controlPoint2: CGPoint(x: 5.03, y: 86.7))
        bezier2Path.addLine(to: CGPoint(x: 74.74, y: 98.84))
        bezier2Path.addCurve(to: CGPoint(x: 87.35, y: 91.44), controlPoint1: CGPoint(x: 80.02, y: 99.76), controlPoint2: CGPoint(x: 85.2, y: 96.71))
        bezier2Path.addLine(to: CGPoint(x: 106.88, y: 43.38))
        bezier2Path.addCurve(to: CGPoint(x: 107.58, y: 41.1), controlPoint1: CGPoint(x: 107.19, y: 42.63), controlPoint2: CGPoint(x: 107.42, y: 41.87))
        bezier2Path.addLine(to: CGPoint(x: 107.84, y: 40.62))
        bezier2Path.addLine(to: CGPoint(x: 107.84, y: 39.16))
        bezier2Path.close()
        darkPrimary.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 1.17, y: 49.03))
        bezier3Path.addLine(to: CGPoint(x: 21.75, y: 6.53))
        bezier3Path.addCurve(to: CGPoint(x: 33.73, y: 0.11), controlPoint1: CGPoint(x: 23.94, y: 2.01), controlPoint2: CGPoint(x: 28.78, y: -0.58))
        bezier3Path.addLine(to: CGPoint(x: 95.98, y: 8.79))
        bezier3Path.addCurve(to: CGPoint(x: 104.97, y: 24.91), controlPoint1: CGPoint(x: 103.56, y: 9.85), controlPoint2: CGPoint(x: 108.03, y: 17.88))
        bezier3Path.addLine(to: CGPoint(x: 85.72, y: 69.06))
        bezier3Path.addCurve(to: CGPoint(x: 73.29, y: 75.85), controlPoint1: CGPoint(x: 83.61, y: 73.9), controlPoint2: CGPoint(x: 78.5, y: 76.69))
        bezier3Path.addLine(to: CGPoint(x: 9.71, y: 65.53))
        bezier3Path.addCurve(to: CGPoint(x: 1.17, y: 49.03), controlPoint1: CGPoint(x: 2.08, y: 64.29), controlPoint2: CGPoint(x: -2.21, y: 56.02))
        bezier3Path.close()
        context.saveGState()
        bezier3Path.addClip()
        context.drawLinearGradient(wingPlastine, start: CGPoint(x: 91.06, y: 0.58), end: CGPoint(x: 16.37, y: 75.27), options: [])
        context.restoreGState()



        context.restoreGState()


        //// plate 1
        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 355.6, y: -1943.04))
        bezier6Path.addCurve(to: CGPoint(x: 353.87, y: -1950.64), controlPoint1: CGPoint(x: 355.64, y: -1943.61), controlPoint2: CGPoint(x: 353.87, y: -1950.64))
        bezier6Path.addCurve(to: CGPoint(x: 345.52, y: -1956.61), controlPoint1: CGPoint(x: 352.12, y: -1953.74), controlPoint2: CGPoint(x: 349.18, y: -1956.05))
        bezier6Path.addLine(to: CGPoint(x: 282.35, y: -1966.24))
        bezier6Path.addCurve(to: CGPoint(x: 270.19, y: -1959.13), controlPoint1: CGPoint(x: 277.32, y: -1967.01), controlPoint2: CGPoint(x: 272.41, y: -1964.13))
        bezier6Path.addLine(to: CGPoint(x: 250.42, y: -1914.53))
        bezier6Path.addLine(to: CGPoint(x: 248.11, y: -1904.44))
        bezier6Path.addLine(to: CGPoint(x: 248.3, y: -1904.15))
        bezier6Path.addCurve(to: CGPoint(x: 257.97, y: -1893.7), controlPoint1: CGPoint(x: 249.13, y: -1899.02), controlPoint2: CGPoint(x: 252.79, y: -1894.62))
        bezier6Path.addLine(to: CGPoint(x: 322.49, y: -1882.26))
        bezier6Path.addCurve(to: CGPoint(x: 335.11, y: -1889.79), controlPoint1: CGPoint(x: 327.77, y: -1881.32), controlPoint2: CGPoint(x: 332.96, y: -1884.42))
        bezier6Path.addLine(to: CGPoint(x: 354.64, y: -1938.74))
        bezier6Path.addCurve(to: CGPoint(x: 355.34, y: -1941.06), controlPoint1: CGPoint(x: 354.94, y: -1939.5), controlPoint2: CGPoint(x: 355.18, y: -1940.28))
        bezier6Path.addLine(to: CGPoint(x: 355.6, y: -1941.55))
        bezier6Path.addLine(to: CGPoint(x: 355.6, y: -1943.04))
        bezier6Path.close()
        darkPrimary.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 246.94, y: -1930.94))
        bezier7Path.addLine(to: CGPoint(x: 267.72, y: -1974.01))
        bezier7Path.addCurve(to: CGPoint(x: 279.81, y: -1980.51), controlPoint1: CGPoint(x: 269.93, y: -1978.59), controlPoint2: CGPoint(x: 274.81, y: -1981.21))
        bezier7Path.addLine(to: CGPoint(x: 342.64, y: -1971.71))
        bezier7Path.addCurve(to: CGPoint(x: 351.72, y: -1955.38), controlPoint1: CGPoint(x: 350.29, y: -1970.64), controlPoint2: CGPoint(x: 354.81, y: -1962.51))
        bezier7Path.addLine(to: CGPoint(x: 332.29, y: -1910.65))
        bezier7Path.addCurve(to: CGPoint(x: 319.74, y: -1903.77), controlPoint1: CGPoint(x: 330.15, y: -1905.75), controlPoint2: CGPoint(x: 324.99, y: -1902.92))
        bezier7Path.addLine(to: CGPoint(x: 255.56, y: -1914.23))
        bezier7Path.addCurve(to: CGPoint(x: 246.94, y: -1930.94), controlPoint1: CGPoint(x: 247.85, y: -1915.48), controlPoint2: CGPoint(x: 243.53, y: -1923.87))
        bezier7Path.close()
        context.saveGState()
        bezier7Path.addClip()
        context.drawLinearGradient(wingPlastine2, start: CGPoint(x: 337.73, y: -1979.94), end: CGPoint(x: 262.24, y: -1904.45), options: [])
        context.restoreGState()






        //// layer_1_9 Drawing
        context.saveGState()
        context.setAlpha(0.2)

        let layer_1_9Path = UIBezierPath()
        layer_1_9Path.move(to: CGPoint(x: 179.74, y: -1796.61))
        layer_1_9Path.addCurve(to: CGPoint(x: 156.16, y: -1773.96), controlPoint1: CGPoint(x: 179.37, y: -1793.24), controlPoint2: CGPoint(x: 171.94, y: -1791.48))
        layer_1_9Path.addCurve(to: CGPoint(x: 99.33, y: -1760.64), controlPoint1: CGPoint(x: 150.88, y: -1768.1), controlPoint2: CGPoint(x: 128.59, y: -1759.06))
        layer_1_9Path.addCurve(to: CGPoint(x: 30.74, y: -1765.96), controlPoint1: CGPoint(x: 65.33, y: -1762.47), controlPoint2: CGPoint(x: 30.74, y: -1765.96))
        layer_1_9Path.addLine(to: CGPoint(x: 294.21, y: -1694.08))
        layer_1_9Path.addCurve(to: CGPoint(x: 318.12, y: -1780.48), controlPoint1: CGPoint(x: 294.21, y: -1694.08), controlPoint2: CGPoint(x: 326.92, y: -1738.06))
        layer_1_9Path.addCurve(to: CGPoint(x: 236.86, y: -1862.78), controlPoint1: CGPoint(x: 309.32, y: -1822.9), controlPoint2: CGPoint(x: 236.86, y: -1862.78))
        layer_1_9Path.addLine(to: CGPoint(x: 215.1, y: -1851.87))
        layer_1_9Path.addLine(to: CGPoint(x: 203.61, y: -1811.36))
        layer_1_9Path.addCurve(to: CGPoint(x: 179.35, y: -1807.18), controlPoint1: CGPoint(x: 203.61, y: -1811.36), controlPoint2: CGPoint(x: 176.91, y: -1812.91))
        layer_1_9Path.addCurve(to: CGPoint(x: 179.74, y: -1796.61), controlPoint1: CGPoint(x: 180.63, y: -1804.18), controlPoint2: CGPoint(x: 180.15, y: -1800.31))
        layer_1_9Path.close()
        background.setFill()
        layer_1_9Path.fill()

        context.restoreGState()


        //// layer_1_8 Drawing
        context.saveGState()
        context.setAlpha(0.3)

        let layer_1_8Path = UIBezierPath()
        layer_1_8Path.move(to: CGPoint(x: 160.63, y: -2034.11))
        layer_1_8Path.addCurve(to: CGPoint(x: 141.05, y: -2069.4), controlPoint1: CGPoint(x: 167.28, y: -2047.14), controlPoint2: CGPoint(x: 141.05, y: -2069.4))
        layer_1_8Path.addLine(to: CGPoint(x: 219.84, y: -2061.48))
        layer_1_8Path.addLine(to: CGPoint(x: 184.62, y: -1988.48))
        layer_1_8Path.addLine(to: CGPoint(x: 123.43, y: -2004.79))
        layer_1_8Path.addCurve(to: CGPoint(x: 160.63, y: -2034.11), controlPoint1: CGPoint(x: 123.43, y: -2004.79), controlPoint2: CGPoint(x: 153.97, y: -2021.09))
        layer_1_8Path.close()
        background.setFill()
        layer_1_8Path.fill()

        context.restoreGState()


        //// layer_1_7 Drawing
        context.saveGState()
        context.setAlpha(button1Opacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let layer_1_7Path = UIBezierPath(ovalIn: CGRect(x: 4.76, y: -1573.62, width: 5, height: 7))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: (shadow3.shadowColor as! UIColor).cgColor)
        primary.setFill()
        layer_1_7Path.fill()
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_5
        context.saveGState()
        context.setAlpha(towerLightOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Rectangle 3 Drawing
        context.saveGState()
        context.translateBy(x: 85.76, y: -1870.55)
        context.rotate(by: -9 * CGFloat.pi/180)

        let rectangle3Path = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 105, height: 1.5))
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        OnboardKit.cubeConture.setFill()
        rectangle3Path.fill()
        context.restoreGState()


        context.restoreGState()


        //// Bezier 77 Drawing
        let bezier77Path = UIBezierPath()
        bezier77Path.move(to: CGPoint(x: 85.26, y: -1867.12))
        bezier77Path.addLine(to: CGPoint(x: 194.26, y: -1885.12))
        bezier77Path.addLine(to: CGPoint(x: 279.26, y: -1749.12))
        bezier77Path.addLine(to: CGPoint(x: 200.26, y: -1725.12))
        bezier77Path.addLine(to: CGPoint(x: 85.26, y: -1867.12))
        bezier77Path.close()
        context.saveGState()
        bezier77Path.addClip()
        context.drawLinearGradient(spaceshipLight2, start: CGPoint(x: 182.26, y: -1885.12), end: CGPoint(x: 182.26, y: -1725.12), options: [])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_4 Drawing
        context.saveGState()
        context.setAlpha(0.3)

        let layer_1_4Path = UIBezierPath()
        layer_1_4Path.move(to: CGPoint(x: 251.76, y: -1973.62))
        layer_1_4Path.addLine(to: CGPoint(x: 507.76, y: -1955.62))
        layer_1_4Path.addLine(to: CGPoint(x: 454.76, y: -1855.62))
        layer_1_4Path.addLine(to: CGPoint(x: 218.76, y: -1900.62))
        layer_1_4Path.addLine(to: CGPoint(x: 251.76, y: -1973.62))
        layer_1_4Path.close()
        background.setFill()
        layer_1_4Path.fill()

        context.restoreGState()


        //// layer_1_3
        //// hole_lighting_1 Drawing
        context.saveGState()
        context.setAlpha(discPassLight1)

        let hole_lighting_1Path = UIBezierPath()
        hole_lighting_1Path.move(to: CGPoint(x: 8.76, y: -1988.62))
        hole_lighting_1Path.addLine(to: CGPoint(x: -2.24, y: -1941.62))
        hole_lighting_1Path.addLine(to: CGPoint(x: 33.76, y: -1922.62))
        hole_lighting_1Path.addLine(to: CGPoint(x: 33.26, y: -1910.12))
        hole_lighting_1Path.addLine(to: CGPoint(x: 48.76, y: -1941.62))
        hole_lighting_1Path.addLine(to: CGPoint(x: 8.76, y: -1988.62))
        hole_lighting_1Path.close()
        context.saveGState()
        hole_lighting_1Path.addClip()
        context.drawLinearGradient(spaceshipLight6, start: CGPoint(x: 47.42, y: -1926.41), end: CGPoint(x: -5.4, y: -1972.33), options: [])
        context.restoreGState()

        context.restoreGState()


        //// hole_lighting_2 Drawing
        context.saveGState()
        context.setAlpha(discPassLight2)

        let hole_lighting_2Path = UIBezierPath()
        hole_lighting_2Path.move(to: CGPoint(x: -12.24, y: -2003.62))
        hole_lighting_2Path.addLine(to: CGPoint(x: -23.24, y: -1956.62))
        hole_lighting_2Path.addLine(to: CGPoint(x: 12.76, y: -1937.62))
        hole_lighting_2Path.addLine(to: CGPoint(x: 12.26, y: -1925.12))
        hole_lighting_2Path.addLine(to: CGPoint(x: 27.76, y: -1956.62))
        hole_lighting_2Path.addLine(to: CGPoint(x: -12.24, y: -2003.62))
        hole_lighting_2Path.close()
        context.saveGState()
        hole_lighting_2Path.addClip()
        context.drawLinearGradient(spaceshipLight6, start: CGPoint(x: 26.42, y: -1941.41), end: CGPoint(x: -26.4, y: -1987.33), options: [])
        context.restoreGState()

        context.restoreGState()


        //// hole_lighting_3 Drawing
        context.saveGState()
        context.setAlpha(discPassLight3)

        let hole_lighting_3Path = UIBezierPath()
        hole_lighting_3Path.move(to: CGPoint(x: -33.24, y: -2015.62))
        hole_lighting_3Path.addLine(to: CGPoint(x: -44.24, y: -1968.62))
        hole_lighting_3Path.addLine(to: CGPoint(x: -8.24, y: -1949.62))
        hole_lighting_3Path.addLine(to: CGPoint(x: -8.74, y: -1937.12))
        hole_lighting_3Path.addLine(to: CGPoint(x: 6.76, y: -1968.62))
        hole_lighting_3Path.addLine(to: CGPoint(x: -33.24, y: -2015.62))
        hole_lighting_3Path.close()
        context.saveGState()
        hole_lighting_3Path.addClip()
        context.drawLinearGradient(spaceshipLight6, start: CGPoint(x: 5.42, y: -1953.41), end: CGPoint(x: -47.4, y: -1999.33), options: [])
        context.restoreGState()

        context.restoreGState()


        //// hole_lighting_4 Drawing
        context.saveGState()
        context.setAlpha(discPassLight4)

        let hole_lighting_4Path = UIBezierPath()
        hole_lighting_4Path.move(to: CGPoint(x: -54.24, y: -2027.62))
        hole_lighting_4Path.addLine(to: CGPoint(x: -65.24, y: -1980.62))
        hole_lighting_4Path.addLine(to: CGPoint(x: -29.24, y: -1961.62))
        hole_lighting_4Path.addLine(to: CGPoint(x: -29.74, y: -1949.12))
        hole_lighting_4Path.addLine(to: CGPoint(x: -14.24, y: -1980.62))
        hole_lighting_4Path.addLine(to: CGPoint(x: -54.24, y: -2027.62))
        hole_lighting_4Path.close()
        context.saveGState()
        hole_lighting_4Path.addClip()
        context.drawLinearGradient(spaceshipLight6, start: CGPoint(x: -15.58, y: -1965.41), end: CGPoint(x: -68.4, y: -2011.33), options: [])
        context.restoreGState()

        context.restoreGState()




        //// layer_1_2 Drawing
        context.saveGState()
        context.translateBy(x: 221.2, y: -1915.08)
        context.rotate(by: 15.5 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(button1Opacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let layer_1_2Path = UIBezierPath(ovalIn: CGRect(x: -2.5, y: -3.5, width: 5, height: 7))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: (shadow3.shadowColor as! UIColor).cgColor)
        primary.setFill()
        layer_1_2Path.fill()
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()

        context.restoreGState()


        //// layer_1_1
        //// Group 15
        context.saveGState()
        context.translateBy(x: 249.6, y: -2067.76)
        context.rotate(by: -antennaRotationPhase1 * CGFloat.pi/180)



        //// Group 16
        context.saveGState()
        context.translateBy(x: -0.07, y: 48.2)
        context.rotate(by: -antennaRotationPhase2 * CGFloat.pi/180)



        //// Rectangle 2 Drawing
        context.saveGState()
        context.translateBy(x: 0.63, y: -50)

        let rectangle2Path = UIBezierPath(rect: CGRect(x: -1, y: 0, width: 1, height: 50))
        fillColor10.setFill()
        rectangle2Path.fill()

        context.restoreGState()


        //// Tip Drawing
        context.saveGState()
        context.translateBy(x: 0.62, y: -47)
        context.rotate(by: 180 * CGFloat.pi/180)

        let tipPath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 1, height: 3))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: (shadow3.shadowColor as! UIColor).cgColor)
        primary.setFill()
        tipPath.fill()

        ////// Tip Inner Shadow
        context.saveGState()
        context.clip(to: tipPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((shadow3.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let tipOpaqueShadow = (shadow3.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: tipOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        tipOpaqueShadow.setFill()
        tipPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()

        context.restoreGState()


        context.restoreGState()


        //// Oval 10 Drawing
        context.saveGState()
        context.setAlpha(button1Opacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let oval10Path = UIBezierPath(ovalIn: CGRect(x: -5.59, y: -54.29, width: 12, height: 11))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: (shadow3.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        oval10Path.addClip()
        context.drawRadialGradient(spaceshipLight,
            startCenter: CGPoint(x: 0.28, y: -48.89), startRadius: 4.34,
            endCenter: CGPoint(x: 2.45, y: -47.43), endRadius: 5.48,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()

        ////// Oval 10 Inner Shadow
        context.saveGState()
        context.clip(to: oval10Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((shadow3.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let oval10OpaqueShadow = (shadow3.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: oval10OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        oval10OpaqueShadow.setFill()
        oval10Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()

        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()



        context.restoreGState()


        //// Rectangle 4 Drawing
        context.saveGState()
        context.translateBy(x: -0.21, y: 48.17)

        let rectangle4Path = UIBezierPath(rect: CGRect(x: -0.74, y: -49.99, width: 1.5, height: 50))
        fillColor10.setFill()
        rectangle4Path.fill()

        context.restoreGState()


        //// Oval 7 Drawing
        let oval7Path = UIBezierPath(ovalIn: CGRect(x: -2.21, y: -1.8, width: 4.15, height: 4))
        fillColor10.setFill()
        oval7Path.fill()


        //// Oval 8 Drawing
        let oval8Path = UIBezierPath(ovalIn: CGRect(x: -1.75, y: 47.19, width: 3.15, height: 3.31))
        fillColor10.setFill()
        oval8Path.fill()



        context.restoreGState()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 248.76, y: -2067.62, width: 2, height: 50))
        fillColor10.setFill()
        rectanglePath.fill()


        //// Oval 9 Drawing
        let oval9Path = UIBezierPath(ovalIn: CGRect(x: 245.16, y: -2019.64, width: 9, height: 4.39))
        spaceshipLightColor.setFill()
        oval9Path.fill()




        context.endTransparencyLayer()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardBkgView_58(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 375, height: 812), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 375, height: 812), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 375, y: resizedFrame.height / 812)



        //// Image Declarations
        let profileBkg = UIImage(named: "profileBkg.png")!

        //// Picture Drawing
        context.saveGState()
        context.translateBy(x: -34.76, y: -38.75)
        context.scaleBy(x: 0.22, y: 0.22)

        let picturePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 2025, height: 4034))
        context.saveGState()
        picturePath.addClip()
        context.translateBy(x: 0, y: 0)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -profileBkg.size.height)
        context.draw(profileBkg.cgImage!, in: CGRect(x: 0, y: 0, width: profileBkg.size.width, height: profileBkg.size.height))
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardBkgView_55(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 736), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 736), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 736)



        //// Image Declarations
        let profileBkg = UIImage(named: "profileBkg.png")!

        //// Picture Drawing
        context.saveGState()
        context.translateBy(x: -45.49, y: -39.77)
        context.scaleBy(x: 0.25, y: 0.25)

        let picturePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 2041.4, height: 4001.53))
        context.saveGState()
        picturePath.addClip()
        context.translateBy(x: 0, y: 0)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -profileBkg.size.height)
        context.draw(profileBkg.cgImage!, in: CGRect(x: 0, y: 0, width: profileBkg.size.width, height: profileBkg.size.height))
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardMeteoritView(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 896), resizing: ResizingBehavior = .aspectFit, onboardAnimation: CGFloat = 0.9) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 896), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 896)


        //// Color Declarations
        let meteorit2Color2 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let meteorit2Color3 = UIColor(red: 0.092, green: 0.558, blue: 0.926, alpha: 1.000)

        //// Gradient Declarations
        let meteorit2 = CGGradient(colorsSpace: nil, colors: [meteorit2Color3.cgColor, meteorit2Color3.blended(withFraction: 0.5, of: meteorit2Color2).cgColor, meteorit2Color2.cgColor] as CFArray, locations: [0, 0.32, 1])!

        //// Variable Declarations
        let scaleMeteorit2Exp: CGFloat = onboardAnimation > 0.2 && onboardAnimation <= 1 ? (1 - onboardAnimation) * 1.25 : 0

        //// meteorit1 Drawing
        context.saveGState()
        context.translateBy(x: 153.14, y: 133.67)
        context.scaleBy(x: scaleMeteorit2Exp, y: scaleMeteorit2Exp)

        let meteorit1Path = UIBezierPath()
        meteorit1Path.move(to: CGPoint(x: 345.18, y: 213.05))
        meteorit1Path.addCurve(to: CGPoint(x: 249.43, y: 191.24), controlPoint1: CGPoint(x: 322.34, y: 195.31), controlPoint2: CGPoint(x: 259.06, y: 185))
        meteorit1Path.addCurve(to: CGPoint(x: 204.72, y: 268.55), controlPoint1: CGPoint(x: 239.8, y: 197.49), controlPoint2: CGPoint(x: 193.78, y: 235.29))
        meteorit1Path.addCurve(to: CGPoint(x: 253.5, y: 332.73), controlPoint1: CGPoint(x: 215.66, y: 301.81), controlPoint2: CGPoint(x: 187.3, y: 349.46))
        meteorit1Path.addCurve(to: CGPoint(x: 331.28, y: 300.55), controlPoint1: CGPoint(x: 319.71, y: 316), controlPoint2: CGPoint(x: 307.2, y: 334.13))
        meteorit1Path.addCurve(to: CGPoint(x: 345.18, y: 213.05), controlPoint1: CGPoint(x: 355.37, y: 266.96), controlPoint2: CGPoint(x: 368.03, y: 230.8))
        meteorit1Path.close()
        context.saveGState()
        meteorit1Path.addClip()
        context.drawLinearGradient(meteorit2, start: CGPoint(x: 357.18, y: 262.8), end: CGPoint(x: 203.05, y: 262.8), options: [])
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardCosmos(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 896), resizing: ResizingBehavior = .aspectFit, moveToOnboard: CGFloat = 1, onboardAnimation: CGFloat = 0.9, onboardOffset: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 896), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 896)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 414, resizedFrame.height / 896)


        //// Color Declarations
        let paint0_linear4Color = UIColor(red: 0.068, green: 0.008, blue: 0.523, alpha: 1.000)
        let paint0_linear4Color2 = UIColor(red: 0.249, green: 0.209, blue: 0.952, alpha: 1.000)
        let color = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 0.000)
        let meteoritColor = UIColor(red: 0.882, green: 0.835, blue: 0.197, alpha: 1.000)
        let starGradientColor = UIColor(red: 0.000, green: 0.940, blue: 1.000, alpha: 1.000)
        let starGradientColor2 = UIColor(red: 0.000, green: 0.965, blue: 1.000, alpha: 0.083)
        let starGradientColor3 = UIColor(red: 0.000, green: 1.000, blue: 0.971, alpha: 0.362)
        let shadow2Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let gradient3Color2 = UIColor(red: 0.267, green: 0.247, blue: 0.910, alpha: 1.000)
        let gradientColor12 = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1.000)
        let gradient2Color8 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.000)
        let gradient3Color = UIColor(red: 0.525, green: 0.557, blue: 0.953, alpha: 1.000)
        let gradient3Color3 = UIColor(red: 0.180, green: 0.180, blue: 0.796, alpha: 1.000)
        let gradient3Color11 = UIColor(red: 0.043, green: 0.106, blue: 0.169, alpha: 1.000)
        let gradient3Color7 = UIColor(red: 0.043, green: 0.106, blue: 0.169, alpha: 1.000)
        let gradient3Color4 = UIColor(red: 0.129, green: 0.153, blue: 0.604, alpha: 1.000)
        let gradientColor13 = UIColor(red: 0.063, green: 0.324, blue: 0.259, alpha: 1.000)
        let fillColor15 = UIColor(red: 1.000, green: 0.000, blue: 0.647, alpha: 1.000)
        let gradientColor14 = UIColor(red: 0.661, green: 0.930, blue: 0.872, alpha: 1.000)
        let plane_picture_shadow_2 = UIColor(red: 0.979, green: 0.000, blue: 1.000, alpha: 1.000)
        let cosmosColor = UIColor(red: 0.051, green: 0.129, blue: 0.224, alpha: 1.000)
        let cosmosColor2 = UIColor(red: 0.043, green: 0.106, blue: 0.169, alpha: 1.000)
        let cosmos2Color = UIColor(red: 0.459, green: 0.670, blue: 0.924, alpha: 0.017)
        let cosmos2Color2 = UIColor(red: 0.254, green: 0.449, blue: 1.000, alpha: 1.000)
        let gradient10Color = UIColor(red: 0.110, green: 0.129, blue: 0.279, alpha: 1.000)
        let meteoritColor2 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Gradient Declarations
        let paint0_linear4 = CGGradient(colorsSpace: nil, colors: [paint0_linear4Color.cgColor, paint0_linear4Color.blended(withFraction: 0.5, of: paint0_linear4Color2).cgColor, paint0_linear4Color2.cgColor] as CFArray, locations: [0, 0.51, 1])!
        let meteorit = CGGradient(colorsSpace: nil, colors: [meteoritColor2.cgColor, UIColor.black.cgColor, meteoritColor.cgColor] as CFArray, locations: [0.05, 0.79, 1])!
        let starGradient = CGGradient(colorsSpace: nil, colors: [UIColor.white.cgColor, UIColor.white.blended(withFraction: 0.5, of: starGradientColor).cgColor, starGradientColor.cgColor, starGradientColor3.cgColor, starGradientColor3.blended(withFraction: 0.5, of: starGradientColor2).cgColor, starGradientColor2.cgColor] as CFArray, locations: [0, 0.04, 0.17, 0.37, 0.53, 1])!
        let gradient9 = CGGradient(colorsSpace: nil, colors: [gradientColor12.cgColor, gradient3Color.cgColor, gradient3Color2.cgColor, gradient3Color3.cgColor, gradient3Color3.blended(withFraction: 0.5, of: gradient3Color4).cgColor, gradient3Color4.cgColor, gradient3Color7.cgColor, gradient3Color7.blended(withFraction: 0.5, of: gradient3Color11).cgColor, gradient3Color11.cgColor, gradient2Color8.cgColor] as CFArray, locations: [0, 0.02, 0.04, 0.06, 0.07, 0.09, 0.24, 0.34, 0.53, 1])!
        let gradient10 = CGGradient(colorsSpace: nil, colors: [gradientColor12.cgColor, gradientColor14.cgColor, gradientColor13.cgColor, gradientColor13.blended(withFraction: 0.5, of: gradient10Color).cgColor, gradient10Color.cgColor] as CFArray, locations: [0, 0.03, 0.12, 0.16, 0.39])!
        let cosmos = CGGradient(colorsSpace: nil, colors: [cosmosColor.cgColor, cosmosColor2.cgColor] as CFArray, locations: [0, 1])!
        let cosmos2 = CGGradient(colorsSpace: nil, colors: [cosmos2Color.cgColor, cosmos2Color.blended(withFraction: 0.5, of: cosmos2Color2).cgColor, cosmos2Color2.cgColor, cosmosColor2.cgColor] as CFArray, locations: [0, 0.22, 0.36, 1])!

        //// Shadow Declarations
        let shadow2 = NSShadow()
        shadow2.shadowColor = shadow2Color
        shadow2.shadowOffset = CGSize(width: 0, height: 0)
        shadow2.shadowBlurRadius = 4

        //// Image Declarations
        let mars = UIImage(named: "mars.png")!
        let venus = UIImage(named: "venus.png")!
        let mercury = UIImage(named: "mercury.png")!
        let earth = UIImage(named: "earth.png")!
        let neptune = UIImage(named: "neptune.png")!
        let jupiter = UIImage(named: "jupiter.png")!
        let uran = UIImage(named: "uran.png")!
        let saturn = UIImage(named: "saturn.png")!

        //// Variable Declarations
        let expression4: CGFloat = 15 * moveToOnboard
        let offsetXPlanetExp: CGFloat = onboardAnimation < 0.1 ? 200 : (onboardAnimation >= 0.1 && onboardAnimation <= 0.2 ? 200 - (onboardAnimation - 0.1) * 40 : 200 - (0.2 - 0.1) * 40)
        let scaleNeptuneExp: CGFloat = onboardAnimation <= 0.1 ? 0.5 + onboardAnimation * 5 : (onboardAnimation <= 0.2 + onboardOffset ? 1 : (onboardAnimation >= 0.2 + onboardOffset && onboardAnimation <= 0.5 + onboardOffset ? (0.5 + onboardOffset - onboardAnimation) * (1.0 / ((0.5 - 0.2) * onboardOffset)) : 0))
        let scaleUranExp: CGFloat = onboardAnimation <= 0.3 ? 0 : (onboardAnimation >= 0.3 + onboardOffset && onboardAnimation <= 0.6 + onboardOffset ? (0.6 - onboardAnimation + onboardOffset) * (1.0 / ((0.6 - 0.3) * onboardOffset)) : 0)
        let scaleSaturnExp: CGFloat = onboardAnimation <= 0.4 ? 0 : (onboardAnimation >= 0.4 + onboardOffset && onboardAnimation <= 0.7 + onboardOffset ? 3 * (0.7 - onboardAnimation + onboardOffset) * (1.0 / ((0.7 - 0.4) * onboardOffset)) : 0)
        let scaleJupiterExp: CGFloat = onboardAnimation <= 0.5 ? 0 : (onboardAnimation >= 0.5 + onboardOffset && onboardAnimation <= 0.8 + onboardOffset ? 3 * (0.8 - onboardAnimation + onboardOffset) * (1.0 / ((0.8 - 0.5) * onboardOffset)) : 0)
        let scaleMarsExp: CGFloat = onboardAnimation <= 0.6 ? 0 : (onboardAnimation >= 0.6 + onboardOffset && onboardAnimation <= 0.9 + onboardOffset ? (0.9 - onboardAnimation + onboardOffset) * (1.0 / ((0.9 - 0.6) * onboardOffset)) : 0)
        let scaleEarthExp: CGFloat = onboardAnimation <= 0.7 ? 0 : (onboardAnimation >= 0.7 + onboardOffset && onboardAnimation <= 1 + onboardOffset ? (1 - onboardAnimation + onboardOffset) * (1.0 / ((1 - 0.7) * onboardOffset)) : 0)
        let scaleVenusExp: CGFloat = onboardAnimation <= 0.8 ? 0 : (onboardAnimation >= 0.8 + onboardOffset && onboardAnimation <= 1.1 + onboardOffset ? (1.1 - onboardAnimation + onboardOffset) * (1.10 / ((1 - 0.8) * onboardOffset)) : 0)
        let scaleMercuryExp: CGFloat = onboardAnimation < 1.1 + onboardOffset ? 0 : (onboardAnimation >= 1.1 + onboardOffset && onboardAnimation <= 2 + onboardOffset ? (2.1 - onboardAnimation + onboardOffset) * 10 : 1)
        let scaleMeteoritExp: CGFloat = onboardAnimation < 1.1 + onboardOffset ? 0 : (onboardAnimation >= 1.1 + onboardOffset && onboardAnimation < 2 + onboardOffset ? 0.7 * (2 + onboardOffset - onboardAnimation) * 1.11 + 1 * (1.111 * (onboardAnimation - 1.1 - onboardOffset)) : (onboardAnimation <= 3 + onboardOffset ? 3 - onboardAnimation + onboardOffset : 0))

        //// Group 23
        //// Rectangle 6 Drawing
        let rectangle6Path = UIBezierPath(rect: CGRect(x: -1, y: -1, width: 416, height: 898))
        context.saveGState()
        rectangle6Path.addClip()
        context.drawLinearGradient(cosmos, start: CGPoint(x: 535.5, y: 776.5), end: CGPoint(x: -121.5, y: 119.5), options: [])
        context.restoreGState()


        //// Oval 14 Drawing
        context.saveGState()
        context.setAlpha(0.1)

        let oval14Path = UIBezierPath(ovalIn: CGRect(x: 31.31, y: 76.1, width: 562.86, height: 577))
        context.saveGState()
        oval14Path.addClip()
        context.drawRadialGradient(cosmos2,
            startCenter: CGPoint(x: 318.34, y: 359), startRadius: 11.2,
            endCenter: CGPoint(x: 307.14, y: 370.2), endRadius: 286.68,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()




        //// Group 27
        //// star-1 Drawing
        let star1Path = UIBezierPath(ovalIn: CGRect(x: 24.7, y: 232.73, width: 3, height: 3))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        star1Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 26.24, y: 234.28), startRadius: 0.24,
            endCenter: CGPoint(x: 26.28, y: 234.14), endRadius: 1.74,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()
        context.restoreGState()



        //// star- 10 Drawing
        let star10Path = UIBezierPath(ovalIn: CGRect(x: 49.29, y: 145.93, width: 2.4, height: 2.4))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        star10Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 50.53, y: 147.16), startRadius: 0.2,
            endCenter: CGPoint(x: 50.55, y: 147.05), endRadius: 1.39,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()
        context.restoreGState()



        //// star- 11 Drawing
        let star11Path = UIBezierPath(ovalIn: CGRect(x: 136.72, y: 197.52, width: 1, height: 1))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        star11Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 137.24, y: 198.03), startRadius: 0.08,
            endCenter: CGPoint(x: 137.25, y: 197.99), endRadius: 0.58,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()
        context.restoreGState()



        //// star- 12 Drawing
        let star12Path = UIBezierPath(ovalIn: CGRect(x: 234.31, y: 124.24, width: 2.8, height: 2.8))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        star12Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 235.76, y: 125.68), startRadius: 0.23,
            endCenter: CGPoint(x: 235.79, y: 125.56), endRadius: 1.63,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()
        context.restoreGState()



        //// star- 13 Drawing
        let star13Path = UIBezierPath(ovalIn: CGRect(x: 93.57, y: 91.56, width: 3.2, height: 3.2))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        star13Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 95.21, y: 93.2), startRadius: 0.26,
            endCenter: CGPoint(x: 95.25, y: 93.06), endRadius: 1.86,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()
        context.restoreGState()



        //// star- 14 Drawing
        let star14Path = UIBezierPath(ovalIn: CGRect(x: 245.2, y: 60.15, width: 2.5, height: 2.5))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        star14Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 246.48, y: 61.43), startRadius: 0.2,
            endCenter: CGPoint(x: 246.51, y: 61.32), endRadius: 1.45,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()
        context.restoreGState()



        //// star- 15 Drawing
        let star15Path = UIBezierPath(ovalIn: CGRect(x: 226.27, y: 22.86, width: 2.1, height: 2.1))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        star15Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 227.35, y: 23.94), startRadius: 0.17,
            endCenter: CGPoint(x: 227.38, y: 23.85), endRadius: 1.22,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()
        context.restoreGState()



        //// star- 16 Drawing
        let star16Path = UIBezierPath(ovalIn: CGRect(x: 212.67, y: 63.93, width: 3, height: 3))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        star16Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 214.22, y: 65.47), startRadius: 0.24,
            endCenter: CGPoint(x: 214.25, y: 65.34), endRadius: 1.74,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()
        context.restoreGState()



        //// star- 17 Drawing
        let star17Path = UIBezierPath(ovalIn: CGRect(x: 192.97, y: 134.23, width: 3, height: 3))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        star17Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 194.51, y: 135.78), startRadius: 0.24,
            endCenter: CGPoint(x: 194.55, y: 135.64), endRadius: 1.74,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()
        context.restoreGState()



        //// star- 18 Drawing
        let star18Path = UIBezierPath(ovalIn: CGRect(x: 96, y: 179.07, width: 3, height: 3))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        star18Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 97.55, y: 180.61), startRadius: 0.24,
            endCenter: CGPoint(x: 97.58, y: 180.48), endRadius: 1.74,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()
        context.restoreGState()



        //// Group 51
        context.saveGState()
        context.translateBy(x: 46.45, y: 432.88)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.4, y: 0.4)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 52
        //// Bezier 102 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -34.11)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier102Path = UIBezierPath()
        bezier102Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier102Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier102Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier102Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier102Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier102Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier102Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier102Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier102Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier102Path.close()
        context.saveGState()
        bezier102Path.addClip()
        context.drawRadialGradient(gradient9,
            startCenter: CGPoint(x: 34.81, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 35.76, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 103 Drawing
        let bezier103Path = UIBezierPath()
        bezier103Path.move(to: CGPoint(x: -9.09, y: 1.9))
        bezier103Path.addCurve(to: CGPoint(x: -34.98, y: 1.18), controlPoint1: CGPoint(x: -17.79, y: 1.56), controlPoint2: CGPoint(x: -34.98, y: 1.18))
        bezier103Path.addCurve(to: CGPoint(x: -9.07, y: 0.23), controlPoint1: CGPoint(x: -34.98, y: 1.18), controlPoint2: CGPoint(x: -17.79, y: 0.8))
        bezier103Path.addCurve(to: CGPoint(x: -0.11, y: -1.1), controlPoint1: CGPoint(x: -0.36, y: -0.34), controlPoint2: CGPoint(x: -2.3, y: -1.15))
        bezier103Path.addCurve(to: CGPoint(x: 10, y: 0.13), controlPoint1: CGPoint(x: 2.07, y: -1.06), controlPoint2: CGPoint(x: -0.13, y: -0.34))
        bezier103Path.addCurve(to: CGPoint(x: 40.4, y: 0.79), controlPoint1: CGPoint(x: 20.13, y: 0.61), controlPoint2: CGPoint(x: 40.4, y: 0.79))
        bezier103Path.addCurve(to: CGPoint(x: 9.99, y: 1.68), controlPoint1: CGPoint(x: 40.4, y: 0.79), controlPoint2: CGPoint(x: 20.13, y: 1.25))
        bezier103Path.addCurve(to: CGPoint(x: -0.18, y: 2.53), controlPoint1: CGPoint(x: -0.16, y: 2.12), controlPoint2: CGPoint(x: 1.91, y: 2.6))
        bezier103Path.addCurve(to: CGPoint(x: -9.09, y: 1.9), controlPoint1: CGPoint(x: -2.28, y: 2.47), controlPoint2: CGPoint(x: -0.39, y: 2.23))
        bezier103Path.close()
        context.saveGState()
        bezier103Path.addClip()
        context.drawRadialGradient(gradient9,
            startCenter: CGPoint(x: -0.17, y: 0.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 0.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 53
        context.saveGState()
        context.setAlpha(0)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 104 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -34.09)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier104Path = UIBezierPath()
        bezier104Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier104Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier104Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier104Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier104Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier104Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier104Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier104Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier104Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier104Path.close()
        plane_picture_shadow_2.setFill()
        bezier104Path.fill()

        context.restoreGState()


        //// Bezier 105 Drawing
        let bezier105Path = UIBezierPath()
        bezier105Path.move(to: CGPoint(x: -9.09, y: 1.91))
        bezier105Path.addCurve(to: CGPoint(x: -34.99, y: 1.2), controlPoint1: CGPoint(x: -17.79, y: 1.57), controlPoint2: CGPoint(x: -34.99, y: 1.2))
        bezier105Path.addCurve(to: CGPoint(x: -9.08, y: 0.24), controlPoint1: CGPoint(x: -34.99, y: 1.2), controlPoint2: CGPoint(x: -17.79, y: 0.81))
        bezier105Path.addCurve(to: CGPoint(x: -0.12, y: -1.09), controlPoint1: CGPoint(x: -0.36, y: -0.33), controlPoint2: CGPoint(x: -2.3, y: -1.13))
        bezier105Path.addCurve(to: CGPoint(x: 9.99, y: 0.15), controlPoint1: CGPoint(x: 2.07, y: -1.05), controlPoint2: CGPoint(x: -0.14, y: -0.33))
        bezier105Path.addCurve(to: CGPoint(x: 40.4, y: 0.81), controlPoint1: CGPoint(x: 20.12, y: 0.62), controlPoint2: CGPoint(x: 40.4, y: 0.81))
        bezier105Path.addCurve(to: CGPoint(x: 9.98, y: 1.7), controlPoint1: CGPoint(x: 40.4, y: 0.81), controlPoint2: CGPoint(x: 20.13, y: 1.26))
        bezier105Path.addCurve(to: CGPoint(x: -0.19, y: 2.55), controlPoint1: CGPoint(x: -0.16, y: 2.13), controlPoint2: CGPoint(x: 1.91, y: 2.62))
        bezier105Path.addCurve(to: CGPoint(x: -9.09, y: 1.91), controlPoint1: CGPoint(x: -2.29, y: 2.48), controlPoint2: CGPoint(x: -0.39, y: 2.25))
        bezier105Path.close()
        plane_picture_shadow_2.setFill()
        bezier105Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 14
        context.saveGState()
        context.translateBy(x: 7.1, y: 582.21)
        context.scaleBy(x: 0.4, y: 0.4)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 17
        //// Oval 6 Drawing
        let oval6Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 56.53, width: 112, height: 2))
        context.saveGState()
        oval6Path.addClip()
        context.drawRadialGradient(gradient10,
            startCenter: CGPoint(x: 53.12, y: 57.63), startRadius: 0.2,
            endCenter: CGPoint(x: 54.07, y: 57.34), endRadius: 61.21,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Oval 11 Drawing
        context.saveGState()
        context.translateBy(x: 51.88, y: 112)
        context.rotate(by: -90 * CGFloat.pi/180)

        let oval11Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 112, height: 2))
        context.saveGState()
        oval11Path.addClip()
        context.drawRadialGradient(gradient10,
            startCenter: CGPoint(x: 54.15, y: 0.91), startRadius: 0.2,
            endCenter: CGPoint(x: 54.71, y: 0.64), endRadius: 44.2,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()




        //// Group 18
        context.saveGState()
        context.setAlpha(0)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Oval 12 Drawing
        let oval12Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 56.53, width: 112, height: 2))
        plane_picture_shadow_2.setFill()
        oval12Path.fill()


        //// Oval 13 Drawing
        context.saveGState()
        context.translateBy(x: 51.88, y: 112)
        context.rotate(by: -90 * CGFloat.pi/180)

        let oval13Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 112, height: 2))
        plane_picture_shadow_2.setFill()
        oval13Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 20
        context.saveGState()
        context.translateBy(x: 134.05, y: 520.75)
        context.scaleBy(x: 0.4, y: 0.4)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 80 Drawing
        let bezier80Path = UIBezierPath()
        bezier80Path.move(to: CGPoint(x: -9.09, y: 1.9))
        bezier80Path.addCurve(to: CGPoint(x: -34.98, y: 1.18), controlPoint1: CGPoint(x: -17.79, y: 1.56), controlPoint2: CGPoint(x: -34.98, y: 1.18))
        bezier80Path.addCurve(to: CGPoint(x: -9.07, y: 0.23), controlPoint1: CGPoint(x: -34.98, y: 1.18), controlPoint2: CGPoint(x: -17.79, y: 0.8))
        bezier80Path.addCurve(to: CGPoint(x: -0.11, y: -1.1), controlPoint1: CGPoint(x: -0.36, y: -0.34), controlPoint2: CGPoint(x: -2.3, y: -1.15))
        bezier80Path.addCurve(to: CGPoint(x: 10, y: 0.13), controlPoint1: CGPoint(x: 2.07, y: -1.06), controlPoint2: CGPoint(x: -0.13, y: -0.34))
        bezier80Path.addCurve(to: CGPoint(x: 40.4, y: 0.79), controlPoint1: CGPoint(x: 20.13, y: 0.61), controlPoint2: CGPoint(x: 40.4, y: 0.79))
        bezier80Path.addCurve(to: CGPoint(x: 9.99, y: 1.68), controlPoint1: CGPoint(x: 40.4, y: 0.79), controlPoint2: CGPoint(x: 20.13, y: 1.25))
        bezier80Path.addCurve(to: CGPoint(x: -0.18, y: 2.53), controlPoint1: CGPoint(x: -0.16, y: 2.12), controlPoint2: CGPoint(x: 1.91, y: 2.6))
        bezier80Path.addCurve(to: CGPoint(x: -9.09, y: 1.9), controlPoint1: CGPoint(x: -2.28, y: 2.47), controlPoint2: CGPoint(x: -0.39, y: 2.23))
        bezier80Path.close()
        context.saveGState()
        bezier80Path.addClip()
        context.drawRadialGradient(gradient9,
            startCenter: CGPoint(x: -0.17, y: 0.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 0.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 81 Drawing
        context.saveGState()
        context.setAlpha(0)
        context.setBlendMode(.color)

        let bezier81Path = UIBezierPath()
        bezier81Path.move(to: CGPoint(x: -9.15, y: 1.9))
        bezier81Path.addCurve(to: CGPoint(x: -35.04, y: 1.19), controlPoint1: CGPoint(x: -17.85, y: 1.56), controlPoint2: CGPoint(x: -35.04, y: 1.19))
        bezier81Path.addCurve(to: CGPoint(x: -9.14, y: 0.23), controlPoint1: CGPoint(x: -35.04, y: 1.19), controlPoint2: CGPoint(x: -17.85, y: 0.8))
        bezier81Path.addCurve(to: CGPoint(x: -0.17, y: -1.1), controlPoint1: CGPoint(x: -0.42, y: -0.34), controlPoint2: CGPoint(x: -2.36, y: -1.14))
        bezier81Path.addCurve(to: CGPoint(x: 9.94, y: 0.14), controlPoint1: CGPoint(x: 2.01, y: -1.06), controlPoint2: CGPoint(x: -0.19, y: -0.34))
        bezier81Path.addCurve(to: CGPoint(x: 40.34, y: 0.8), controlPoint1: CGPoint(x: 20.06, y: 0.61), controlPoint2: CGPoint(x: 40.34, y: 0.8))
        bezier81Path.addCurve(to: CGPoint(x: 9.93, y: 1.69), controlPoint1: CGPoint(x: 40.34, y: 0.8), controlPoint2: CGPoint(x: 20.07, y: 1.25))
        bezier81Path.addCurve(to: CGPoint(x: -0.25, y: 2.54), controlPoint1: CGPoint(x: -0.22, y: 2.12), controlPoint2: CGPoint(x: 1.85, y: 2.61))
        bezier81Path.addCurve(to: CGPoint(x: -9.15, y: 1.9), controlPoint1: CGPoint(x: -2.34, y: 2.47), controlPoint2: CGPoint(x: -0.45, y: 2.24))
        bezier81Path.close()
        fillColor15.setFill()
        bezier81Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 21
        context.saveGState()
        context.translateBy(x: 88.29, y: 567.63)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.4, y: 0.4)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 22
        //// Bezier 82 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -34.11)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier82Path = UIBezierPath()
        bezier82Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier82Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier82Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier82Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier82Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier82Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier82Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier82Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier82Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier82Path.close()
        context.saveGState()
        bezier82Path.addClip()
        context.drawRadialGradient(gradient9,
            startCenter: CGPoint(x: 34.81, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 35.76, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 95 Drawing
        let bezier95Path = UIBezierPath()
        bezier95Path.move(to: CGPoint(x: -9.09, y: 1.9))
        bezier95Path.addCurve(to: CGPoint(x: -34.98, y: 1.18), controlPoint1: CGPoint(x: -17.79, y: 1.56), controlPoint2: CGPoint(x: -34.98, y: 1.18))
        bezier95Path.addCurve(to: CGPoint(x: -9.07, y: 0.23), controlPoint1: CGPoint(x: -34.98, y: 1.18), controlPoint2: CGPoint(x: -17.79, y: 0.8))
        bezier95Path.addCurve(to: CGPoint(x: -0.11, y: -1.1), controlPoint1: CGPoint(x: -0.36, y: -0.34), controlPoint2: CGPoint(x: -2.3, y: -1.15))
        bezier95Path.addCurve(to: CGPoint(x: 10, y: 0.13), controlPoint1: CGPoint(x: 2.07, y: -1.06), controlPoint2: CGPoint(x: -0.13, y: -0.34))
        bezier95Path.addCurve(to: CGPoint(x: 40.4, y: 0.79), controlPoint1: CGPoint(x: 20.13, y: 0.61), controlPoint2: CGPoint(x: 40.4, y: 0.79))
        bezier95Path.addCurve(to: CGPoint(x: 9.99, y: 1.68), controlPoint1: CGPoint(x: 40.4, y: 0.79), controlPoint2: CGPoint(x: 20.13, y: 1.25))
        bezier95Path.addCurve(to: CGPoint(x: -0.18, y: 2.53), controlPoint1: CGPoint(x: -0.16, y: 2.12), controlPoint2: CGPoint(x: 1.91, y: 2.6))
        bezier95Path.addCurve(to: CGPoint(x: -9.09, y: 1.9), controlPoint1: CGPoint(x: -2.28, y: 2.47), controlPoint2: CGPoint(x: -0.39, y: 2.23))
        bezier95Path.close()
        context.saveGState()
        bezier95Path.addClip()
        context.drawRadialGradient(gradient9,
            startCenter: CGPoint(x: -0.17, y: 0.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 0.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 47
        context.saveGState()
        context.setAlpha(0)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 96 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -34.09)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier96Path = UIBezierPath()
        bezier96Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier96Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier96Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier96Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier96Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier96Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier96Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier96Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier96Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier96Path.close()
        plane_picture_shadow_2.setFill()
        bezier96Path.fill()

        context.restoreGState()


        //// Bezier 97 Drawing
        let bezier97Path = UIBezierPath()
        bezier97Path.move(to: CGPoint(x: -9.09, y: 1.91))
        bezier97Path.addCurve(to: CGPoint(x: -34.99, y: 1.2), controlPoint1: CGPoint(x: -17.79, y: 1.57), controlPoint2: CGPoint(x: -34.99, y: 1.2))
        bezier97Path.addCurve(to: CGPoint(x: -9.08, y: 0.24), controlPoint1: CGPoint(x: -34.99, y: 1.2), controlPoint2: CGPoint(x: -17.79, y: 0.81))
        bezier97Path.addCurve(to: CGPoint(x: -0.12, y: -1.09), controlPoint1: CGPoint(x: -0.36, y: -0.33), controlPoint2: CGPoint(x: -2.3, y: -1.13))
        bezier97Path.addCurve(to: CGPoint(x: 9.99, y: 0.15), controlPoint1: CGPoint(x: 2.07, y: -1.05), controlPoint2: CGPoint(x: -0.14, y: -0.33))
        bezier97Path.addCurve(to: CGPoint(x: 40.4, y: 0.81), controlPoint1: CGPoint(x: 20.12, y: 0.62), controlPoint2: CGPoint(x: 40.4, y: 0.81))
        bezier97Path.addCurve(to: CGPoint(x: 9.98, y: 1.7), controlPoint1: CGPoint(x: 40.4, y: 0.81), controlPoint2: CGPoint(x: 20.13, y: 1.26))
        bezier97Path.addCurve(to: CGPoint(x: -0.19, y: 2.55), controlPoint1: CGPoint(x: -0.16, y: 2.13), controlPoint2: CGPoint(x: 1.91, y: 2.62))
        bezier97Path.addCurve(to: CGPoint(x: -9.09, y: 1.91), controlPoint1: CGPoint(x: -2.29, y: 2.48), controlPoint2: CGPoint(x: -0.39, y: 2.25))
        bezier97Path.close()
        plane_picture_shadow_2.setFill()
        bezier97Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 48
        context.saveGState()
        context.translateBy(x: 116.81, y: 488)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.4, y: 0.4)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 49
        //// Bezier 98 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -34.11)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier98Path = UIBezierPath()
        bezier98Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier98Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier98Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier98Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier98Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier98Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier98Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier98Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier98Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier98Path.close()
        context.saveGState()
        bezier98Path.addClip()
        context.drawRadialGradient(gradient9,
            startCenter: CGPoint(x: 34.81, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 35.76, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 99 Drawing
        let bezier99Path = UIBezierPath()
        bezier99Path.move(to: CGPoint(x: -9.09, y: 1.9))
        bezier99Path.addCurve(to: CGPoint(x: -34.98, y: 1.18), controlPoint1: CGPoint(x: -17.79, y: 1.56), controlPoint2: CGPoint(x: -34.98, y: 1.18))
        bezier99Path.addCurve(to: CGPoint(x: -9.07, y: 0.23), controlPoint1: CGPoint(x: -34.98, y: 1.18), controlPoint2: CGPoint(x: -17.79, y: 0.8))
        bezier99Path.addCurve(to: CGPoint(x: -0.11, y: -1.1), controlPoint1: CGPoint(x: -0.36, y: -0.34), controlPoint2: CGPoint(x: -2.3, y: -1.15))
        bezier99Path.addCurve(to: CGPoint(x: 10, y: 0.13), controlPoint1: CGPoint(x: 2.07, y: -1.06), controlPoint2: CGPoint(x: -0.13, y: -0.34))
        bezier99Path.addCurve(to: CGPoint(x: 40.4, y: 0.79), controlPoint1: CGPoint(x: 20.13, y: 0.61), controlPoint2: CGPoint(x: 40.4, y: 0.79))
        bezier99Path.addCurve(to: CGPoint(x: 9.99, y: 1.68), controlPoint1: CGPoint(x: 40.4, y: 0.79), controlPoint2: CGPoint(x: 20.13, y: 1.25))
        bezier99Path.addCurve(to: CGPoint(x: -0.18, y: 2.53), controlPoint1: CGPoint(x: -0.16, y: 2.12), controlPoint2: CGPoint(x: 1.91, y: 2.6))
        bezier99Path.addCurve(to: CGPoint(x: -9.09, y: 1.9), controlPoint1: CGPoint(x: -2.28, y: 2.47), controlPoint2: CGPoint(x: -0.39, y: 2.23))
        bezier99Path.close()
        context.saveGState()
        bezier99Path.addClip()
        context.drawRadialGradient(gradient9,
            startCenter: CGPoint(x: -0.17, y: 0.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 0.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 50
        context.saveGState()
        context.setAlpha(0)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 100 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -34.09)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier100Path = UIBezierPath()
        bezier100Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier100Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier100Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier100Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier100Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier100Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier100Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier100Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier100Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier100Path.close()
        plane_picture_shadow_2.setFill()
        bezier100Path.fill()

        context.restoreGState()


        //// Bezier 101 Drawing
        let bezier101Path = UIBezierPath()
        bezier101Path.move(to: CGPoint(x: -9.09, y: 1.91))
        bezier101Path.addCurve(to: CGPoint(x: -34.99, y: 1.2), controlPoint1: CGPoint(x: -17.79, y: 1.57), controlPoint2: CGPoint(x: -34.99, y: 1.2))
        bezier101Path.addCurve(to: CGPoint(x: -9.08, y: 0.24), controlPoint1: CGPoint(x: -34.99, y: 1.2), controlPoint2: CGPoint(x: -17.79, y: 0.81))
        bezier101Path.addCurve(to: CGPoint(x: -0.12, y: -1.09), controlPoint1: CGPoint(x: -0.36, y: -0.33), controlPoint2: CGPoint(x: -2.3, y: -1.13))
        bezier101Path.addCurve(to: CGPoint(x: 9.99, y: 0.15), controlPoint1: CGPoint(x: 2.07, y: -1.05), controlPoint2: CGPoint(x: -0.14, y: -0.33))
        bezier101Path.addCurve(to: CGPoint(x: 40.4, y: 0.81), controlPoint1: CGPoint(x: 20.12, y: 0.62), controlPoint2: CGPoint(x: 40.4, y: 0.81))
        bezier101Path.addCurve(to: CGPoint(x: 9.98, y: 1.7), controlPoint1: CGPoint(x: 40.4, y: 0.81), controlPoint2: CGPoint(x: 20.13, y: 1.26))
        bezier101Path.addCurve(to: CGPoint(x: -0.19, y: 2.55), controlPoint1: CGPoint(x: -0.16, y: 2.13), controlPoint2: CGPoint(x: 1.91, y: 2.62))
        bezier101Path.addCurve(to: CGPoint(x: -9.09, y: 1.91), controlPoint1: CGPoint(x: -2.29, y: 2.48), controlPoint2: CGPoint(x: -0.39, y: 2.25))
        bezier101Path.close()
        plane_picture_shadow_2.setFill()
        bezier101Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 19
        context.saveGState()
        context.translateBy(x: 44.87, y: 31.79)
        context.scaleBy(x: 0.4, y: 0.4)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 24
        //// Oval 15 Drawing
        let oval15Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 56.53, width: 112, height: 2))
        context.saveGState()
        oval15Path.addClip()
        context.drawRadialGradient(gradient10,
            startCenter: CGPoint(x: 53.12, y: 57.63), startRadius: 0.2,
            endCenter: CGPoint(x: 54.07, y: 57.34), endRadius: 61.21,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Oval 16 Drawing
        context.saveGState()
        context.translateBy(x: 51.88, y: 112)
        context.rotate(by: -90 * CGFloat.pi/180)

        let oval16Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 112, height: 2))
        context.saveGState()
        oval16Path.addClip()
        context.drawRadialGradient(gradient10,
            startCenter: CGPoint(x: 54.15, y: 0.91), startRadius: 0.2,
            endCenter: CGPoint(x: 54.71, y: 0.64), endRadius: 44.2,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()




        //// Group 25
        context.saveGState()
        context.setAlpha(0)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Oval 17 Drawing
        let oval17Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 56.53, width: 112, height: 2))
        plane_picture_shadow_2.setFill()
        oval17Path.fill()


        //// Oval 18 Drawing
        context.saveGState()
        context.translateBy(x: 51.88, y: 112)
        context.rotate(by: -90 * CGFloat.pi/180)

        let oval18Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 112, height: 2))
        plane_picture_shadow_2.setFill()
        oval18Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()




        //// neptune-1 Drawing
        context.saveGState()
        context.translateBy(x: offsetXPlanetExp, y: 328.13)
        context.scaleBy(x: scaleNeptuneExp, y: scaleNeptuneExp)

        let neptune1Rect = CGRect(x: -112.36, y: -317.73, width: 649, height: 649)
        let neptune1Path = UIBezierPath(rect: neptune1Rect)
        context.saveGState()
        neptune1Path.addClip()
        context.translateBy(x: floor(neptune1Rect.minX + 0.5), y: floor(neptune1Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -neptune.size.height)
        context.draw(neptune.cgImage!, in: CGRect(x: 0, y: 0, width: neptune.size.width, height: neptune.size.height))
        context.restoreGState()

        context.restoreGState()


        //// uran-3 Drawing
        context.saveGState()
        context.translateBy(x: 203.38, y: 328.61)
        context.scaleBy(x: scaleUranExp, y: scaleUranExp)

        let uran3Path = UIBezierPath(rect: CGRect(x: -787.92, y: -243.54, width: 943, height: 539))
        context.saveGState()
        uran3Path.addClip()
        context.translateBy(x: -788, y: -244)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -uran.size.height)
        context.draw(uran.cgImage!, in: CGRect(x: 0, y: 0, width: uran.size.width, height: uran.size.height))
        context.restoreGState()

        context.restoreGState()


        //// saturn-1 Drawing
        context.saveGState()
        context.translateBy(x: 201.67, y: 329.31)
        context.scaleBy(x: scaleSaturnExp, y: scaleSaturnExp)

        let saturn1Path = UIBezierPath(rect: CGRect(x: -403.34, y: 67.38, width: 626, height: 290))
        context.saveGState()
        saturn1Path.addClip()
        context.translateBy(x: -403, y: 67)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -saturn.size.height)
        context.draw(saturn.cgImage!, in: CGRect(x: 0, y: 0, width: saturn.size.width, height: saturn.size.height))
        context.restoreGState()

        context.restoreGState()


        //// jupiter-1 Drawing
        context.saveGState()
        context.translateBy(x: 199.52, y: 328.63)
        context.scaleBy(x: scaleJupiterExp, y: scaleJupiterExp)

        let jupiter1Path = UIBezierPath(rect: CGRect(x: -4.47, y: -62.92, width: 382, height: 383))
        context.saveGState()
        jupiter1Path.addClip()
        context.translateBy(x: -4, y: -63)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -jupiter.size.height)
        context.draw(jupiter.cgImage!, in: CGRect(x: 0, y: 0, width: jupiter.size.width, height: jupiter.size.height))
        context.restoreGState()

        context.restoreGState()


        //// mars-1 Drawing
        context.saveGState()
        context.translateBy(x: 196.23, y: 329.59)
        context.scaleBy(x: scaleMarsExp, y: scaleMarsExp)

        let mars1Path = UIBezierPath(rect: CGRect(x: -797.69, y: -705.88, width: 580, height: 580))
        context.saveGState()
        mars1Path.addClip()
        context.translateBy(x: -798, y: -706)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -mars.size.height)
        context.draw(mars.cgImage!, in: CGRect(x: 0, y: 0, width: mars.size.width, height: mars.size.height))
        context.restoreGState()

        context.restoreGState()


        //// earth-1 Drawing
        context.saveGState()
        context.translateBy(x: 197.43, y: 329.02)
        context.scaleBy(x: scaleEarthExp, y: scaleEarthExp)

        let earth1Path = UIBezierPath(rect: CGRect(x: 225.34, y: -156.42, width: 614, height: 614))
        context.saveGState()
        earth1Path.addClip()
        context.translateBy(x: 225, y: -156)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -earth.size.height)
        context.draw(earth.cgImage!, in: CGRect(x: 0, y: 0, width: earth.size.width, height: earth.size.height))
        context.restoreGState()

        context.restoreGState()


        //// venus-1 Drawing
        context.saveGState()
        context.translateBy(x: 199.5, y: 328.85)
        context.scaleBy(x: scaleVenusExp, y: scaleVenusExp)

        let venus1Path = UIBezierPath(rect: CGRect(x: -581.71, y: -41.66, width: 626, height: 613))
        context.saveGState()
        venus1Path.addClip()
        context.translateBy(x: -582, y: -42)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -venus.size.height)
        context.draw(venus.cgImage!, in: CGRect(x: 0, y: 0, width: venus.size.width, height: venus.size.height))
        context.restoreGState()

        context.restoreGState()


        //// mercury-1 Drawing
        context.saveGState()
        context.translateBy(x: 195.75, y: 327.35)
        context.rotate(by: -180 * CGFloat.pi/180)
        context.scaleBy(x: scaleMercuryExp, y: scaleMercuryExp)

        let mercury1Path = UIBezierPath(rect: CGRect(x: -496.8, y: -307.17, width: 593, height: 593))
        context.saveGState()
        mercury1Path.addClip()
        context.translateBy(x: -497, y: -307)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -mercury.size.height)
        context.draw(mercury.cgImage!, in: CGRect(x: 0, y: 0, width: mercury.size.width, height: mercury.size.height))
        context.restoreGState()

        context.restoreGState()


        //// Group 26
        context.saveGState()
        context.translateBy(x: 1.85, y: 353.12)
        context.scaleBy(x: scaleMeteoritExp, y: scaleMeteoritExp)



        //// Bezier 78 Drawing
        let bezier78Path = UIBezierPath()
        bezier78Path.move(to: CGPoint(x: 88.97, y: 38.97))
        bezier78Path.addCurve(to: CGPoint(x: 94.09, y: 38.71), controlPoint1: CGPoint(x: 91.9, y: 42.47), controlPoint2: CGPoint(x: 92.94, y: 39.34))
        bezier78Path.addCurve(to: CGPoint(x: 93.92, y: 34.3), controlPoint1: CGPoint(x: 95.25, y: 38.08), controlPoint2: CGPoint(x: 94.13, y: 35.1))
        bezier78Path.addCurve(to: CGPoint(x: 91.33, y: 31.82), controlPoint1: CGPoint(x: 93.72, y: 33.5), controlPoint2: CGPoint(x: 92.88, y: 30.84))
        bezier78Path.addCurve(to: CGPoint(x: 88.97, y: 38.97), controlPoint1: CGPoint(x: 89.78, y: 32.79), controlPoint2: CGPoint(x: 86.05, y: 35.47))
        bezier78Path.close()
        context.saveGState()
        bezier78Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 94.61, y: 36.1), end: CGPoint(x: 87.89, y: 36.1), options: [])
        context.restoreGState()


        //// Bezier 79 Drawing
        let bezier79Path = UIBezierPath()
        bezier79Path.move(to: CGPoint(x: 95.09, y: 56.58))
        bezier79Path.addCurve(to: CGPoint(x: 102.14, y: 57.81), controlPoint1: CGPoint(x: 98.01, y: 60.08), controlPoint2: CGPoint(x: 100.98, y: 58.44))
        bezier79Path.addCurve(to: CGPoint(x: 101.73, y: 51.9), controlPoint1: CGPoint(x: 103.29, y: 57.18), controlPoint2: CGPoint(x: 101.93, y: 52.71))
        bezier79Path.addCurve(to: CGPoint(x: 97.45, y: 49.43), controlPoint1: CGPoint(x: 101.52, y: 51.1), controlPoint2: CGPoint(x: 98.99, y: 48.45))
        bezier79Path.addCurve(to: CGPoint(x: 95.09, y: 56.58), controlPoint1: CGPoint(x: 95.9, y: 50.4), controlPoint2: CGPoint(x: 92.16, y: 53.09))
        bezier79Path.close()
        context.saveGState()
        bezier79Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 102.6, y: 53.98), end: CGPoint(x: 94, y: 53.98), options: [])
        context.restoreGState()


        //// Bezier 106 Drawing
        let bezier106Path = UIBezierPath()
        bezier106Path.move(to: CGPoint(x: 71.14, y: 63.43))
        bezier106Path.addCurve(to: CGPoint(x: 78.19, y: 64.66), controlPoint1: CGPoint(x: 74.06, y: 66.93), controlPoint2: CGPoint(x: 77.04, y: 65.3))
        bezier106Path.addCurve(to: CGPoint(x: 80.53, y: 57.37), controlPoint1: CGPoint(x: 79.35, y: 64.03), controlPoint2: CGPoint(x: 81.24, y: 58.37))
        bezier106Path.addCurve(to: CGPoint(x: 72.86, y: 56.21), controlPoint1: CGPoint(x: 79.82, y: 56.36), controlPoint2: CGPoint(x: 76.26, y: 56.89))
        bezier106Path.addCurve(to: CGPoint(x: 71.14, y: 63.43), controlPoint1: CGPoint(x: 69.46, y: 55.53), controlPoint2: CGPoint(x: 68.21, y: 59.94))
        bezier106Path.close()
        context.saveGState()
        bezier106Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 80.68, y: 60.87), end: CGPoint(x: 69.5, y: 60.87), options: [])
        context.restoreGState()


        //// Bezier 107 Drawing
        let bezier107Path = UIBezierPath()
        bezier107Path.move(to: CGPoint(x: 24.47, y: 50.57))
        bezier107Path.addCurve(to: CGPoint(x: 32.63, y: 53.37), controlPoint1: CGPoint(x: 27.39, y: 54.07), controlPoint2: CGPoint(x: 31.47, y: 54.01))
        bezier107Path.addCurve(to: CGPoint(x: 33.88, y: 47.32), controlPoint1: CGPoint(x: 33.79, y: 52.74), controlPoint2: CGPoint(x: 34.58, y: 48.33))
        bezier107Path.addCurve(to: CGPoint(x: 31.68, y: 39.73), controlPoint1: CGPoint(x: 33.17, y: 46.32), controlPoint2: CGPoint(x: 35.07, y: 40.41))
        bezier107Path.addCurve(to: CGPoint(x: 24.47, y: 50.57), controlPoint1: CGPoint(x: 28.28, y: 39.05), controlPoint2: CGPoint(x: 21.54, y: 47.08))
        bezier107Path.close()
        context.saveGState()
        bezier107Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 34.14, y: 46.7), end: CGPoint(x: 23.75, y: 46.7), options: [])
        context.restoreGState()


        //// Bezier 108 Drawing
        let bezier108Path = UIBezierPath()
        bezier108Path.move(to: CGPoint(x: 29.46, y: 65.73))
        bezier108Path.addCurve(to: CGPoint(x: 33.32, y: 67.2), controlPoint1: CGPoint(x: 30.84, y: 67.57), controlPoint2: CGPoint(x: 32.77, y: 67.53))
        bezier108Path.addCurve(to: CGPoint(x: 33.91, y: 64.02), controlPoint1: CGPoint(x: 33.87, y: 66.87), controlPoint2: CGPoint(x: 34.24, y: 64.55))
        bezier108Path.addCurve(to: CGPoint(x: 31.75, y: 62.19), controlPoint1: CGPoint(x: 33.57, y: 63.49), controlPoint2: CGPoint(x: 33.35, y: 62.55))
        bezier108Path.addCurve(to: CGPoint(x: 29.46, y: 65.73), controlPoint1: CGPoint(x: 30.14, y: 61.83), controlPoint2: CGPoint(x: 28.08, y: 63.89))
        bezier108Path.close()
        context.saveGState()
        bezier108Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 34.03, y: 64.76), end: CGPoint(x: 29, y: 64.76), options: [])
        context.restoreGState()


        //// Bezier 109 Drawing
        let bezier109Path = UIBezierPath()
        bezier109Path.move(to: CGPoint(x: 45.83, y: 68.23))
        bezier109Path.addCurve(to: CGPoint(x: 48.96, y: 68.63), controlPoint1: CGPoint(x: 47.21, y: 70.07), controlPoint2: CGPoint(x: 48.42, y: 68.96))
        bezier109Path.addCurve(to: CGPoint(x: 50.28, y: 66.52), controlPoint1: CGPoint(x: 49.51, y: 68.29), controlPoint2: CGPoint(x: 50.61, y: 67.05))
        bezier109Path.addCurve(to: CGPoint(x: 48.12, y: 64.7), controlPoint1: CGPoint(x: 49.95, y: 66), controlPoint2: CGPoint(x: 49.72, y: 65.06))
        bezier109Path.addCurve(to: CGPoint(x: 45.83, y: 68.23), controlPoint1: CGPoint(x: 46.51, y: 64.34), controlPoint2: CGPoint(x: 44.45, y: 66.39))
        bezier109Path.close()
        context.saveGState()
        bezier109Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 50.34, y: 66.96), end: CGPoint(x: 45.38, y: 66.96), options: [])
        context.restoreGState()


        //// Bezier 110 Drawing
        let bezier110Path = UIBezierPath()
        bezier110Path.move(to: CGPoint(x: 69.86, y: 74.62))
        bezier110Path.addCurve(to: CGPoint(x: 73.41, y: 76.13), controlPoint1: CGPoint(x: 71.24, y: 76.46), controlPoint2: CGPoint(x: 72.87, y: 76.46))
        bezier110Path.addCurve(to: CGPoint(x: 74.31, y: 72.91), controlPoint1: CGPoint(x: 73.96, y: 75.79), controlPoint2: CGPoint(x: 74.64, y: 73.44))
        bezier110Path.addCurve(to: CGPoint(x: 72.14, y: 71.09), controlPoint1: CGPoint(x: 73.97, y: 72.39), controlPoint2: CGPoint(x: 73.75, y: 71.45))
        bezier110Path.addCurve(to: CGPoint(x: 69.86, y: 74.62), controlPoint1: CGPoint(x: 70.54, y: 70.73), controlPoint2: CGPoint(x: 68.47, y: 72.79))
        bezier110Path.close()
        context.saveGState()
        bezier110Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 74.39, y: 73.67), end: CGPoint(x: 69.4, y: 73.67), options: [])
        context.restoreGState()


        //// Bezier 111 Drawing
        let bezier111Path = UIBezierPath()
        bezier111Path.move(to: CGPoint(x: 71.31, y: 93.27))
        bezier111Path.addCurve(to: CGPoint(x: 74.87, y: 94.78), controlPoint1: CGPoint(x: 72.69, y: 95.11), controlPoint2: CGPoint(x: 74.32, y: 95.11))
        bezier111Path.addCurve(to: CGPoint(x: 75.76, y: 91.56), controlPoint1: CGPoint(x: 75.41, y: 94.44), controlPoint2: CGPoint(x: 76.09, y: 92.09))
        bezier111Path.addCurve(to: CGPoint(x: 74.66, y: 88.04), controlPoint1: CGPoint(x: 75.42, y: 91.04), controlPoint2: CGPoint(x: 76.27, y: 88.4))
        bezier111Path.addCurve(to: CGPoint(x: 71.31, y: 93.27), controlPoint1: CGPoint(x: 73.06, y: 87.69), controlPoint2: CGPoint(x: 69.92, y: 91.44))
        bezier111Path.close()
        context.saveGState()
        bezier111Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 75.85, y: 91.48), end: CGPoint(x: 70.96, y: 91.48), options: [])
        context.restoreGState()


        //// Bezier 112 Drawing
        let bezier112Path = UIBezierPath()
        bezier112Path.move(to: CGPoint(x: 61.19, y: 98.14))
        bezier112Path.addCurve(to: CGPoint(x: 64.75, y: 99.64), controlPoint1: CGPoint(x: 62.57, y: 99.98), controlPoint2: CGPoint(x: 64.2, y: 99.98))
        bezier112Path.addCurve(to: CGPoint(x: 65.64, y: 96.43), controlPoint1: CGPoint(x: 65.3, y: 99.31), controlPoint2: CGPoint(x: 65.98, y: 96.96))
        bezier112Path.addCurve(to: CGPoint(x: 63.65, y: 94.5), controlPoint1: CGPoint(x: 65.31, y: 95.9), controlPoint2: CGPoint(x: 65.25, y: 94.85))
        bezier112Path.addCurve(to: CGPoint(x: 61.19, y: 98.14), controlPoint1: CGPoint(x: 62.04, y: 94.14), controlPoint2: CGPoint(x: 59.81, y: 96.3))
        bezier112Path.close()
        context.saveGState()
        bezier112Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 65.73, y: 97.13), end: CGPoint(x: 60.76, y: 97.13), options: [])
        context.restoreGState()


        //// Bezier 113 Drawing
        let bezier113Path = UIBezierPath()
        bezier113Path.move(to: CGPoint(x: 22.11, y: 124.93))
        bezier113Path.addCurve(to: CGPoint(x: 25.97, y: 126.4), controlPoint1: CGPoint(x: 23.5, y: 126.77), controlPoint2: CGPoint(x: 25.43, y: 126.74))
        bezier113Path.addCurve(to: CGPoint(x: 26.56, y: 123.22), controlPoint1: CGPoint(x: 26.52, y: 126.07), controlPoint2: CGPoint(x: 26.9, y: 123.75))
        bezier113Path.addCurve(to: CGPoint(x: 24.4, y: 121.4), controlPoint1: CGPoint(x: 26.23, y: 122.69), controlPoint2: CGPoint(x: 26.01, y: 121.76))
        bezier113Path.addCurve(to: CGPoint(x: 22.11, y: 124.93), controlPoint1: CGPoint(x: 22.79, y: 121.04), controlPoint2: CGPoint(x: 20.73, y: 123.09))
        bezier113Path.close()
        context.saveGState()
        bezier113Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 26.69, y: 123.97), end: CGPoint(x: 21.66, y: 123.97), options: [])
        context.restoreGState()


        //// Bezier 114 Drawing
        let bezier114Path = UIBezierPath()
        bezier114Path.move(to: CGPoint(x: 68.98, y: 181.09))
        bezier114Path.addCurve(to: CGPoint(x: 72.84, y: 182.56), controlPoint1: CGPoint(x: 70.36, y: 182.93), controlPoint2: CGPoint(x: 72.3, y: 182.9))
        bezier114Path.addCurve(to: CGPoint(x: 73.43, y: 179.38), controlPoint1: CGPoint(x: 73.39, y: 182.23), controlPoint2: CGPoint(x: 73.77, y: 179.91))
        bezier114Path.addCurve(to: CGPoint(x: 71.27, y: 177.55), controlPoint1: CGPoint(x: 73.1, y: 178.85), controlPoint2: CGPoint(x: 72.87, y: 177.91))
        bezier114Path.addCurve(to: CGPoint(x: 68.98, y: 181.09), controlPoint1: CGPoint(x: 69.66, y: 177.2), controlPoint2: CGPoint(x: 67.6, y: 179.25))
        bezier114Path.close()
        context.saveGState()
        bezier114Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 73.56, y: 180.13), end: CGPoint(x: 68.53, y: 180.13), options: [])
        context.restoreGState()


        //// Bezier 115 Drawing
        let bezier115Path = UIBezierPath()
        bezier115Path.move(to: CGPoint(x: 132.58, y: 196.34))
        bezier115Path.addCurve(to: CGPoint(x: 136.44, y: 197.81), controlPoint1: CGPoint(x: 133.96, y: 198.18), controlPoint2: CGPoint(x: 135.9, y: 198.15))
        bezier115Path.addCurve(to: CGPoint(x: 137.03, y: 194.63), controlPoint1: CGPoint(x: 136.99, y: 197.48), controlPoint2: CGPoint(x: 137.37, y: 195.16))
        bezier115Path.addCurve(to: CGPoint(x: 134.87, y: 192.81), controlPoint1: CGPoint(x: 136.7, y: 194.1), controlPoint2: CGPoint(x: 136.48, y: 193.16))
        bezier115Path.addCurve(to: CGPoint(x: 132.58, y: 196.34), controlPoint1: CGPoint(x: 133.26, y: 192.45), controlPoint2: CGPoint(x: 131.2, y: 194.5))
        bezier115Path.close()
        context.saveGState()
        bezier115Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 137.16, y: 195.38), end: CGPoint(x: 132.13, y: 195.38), options: [])
        context.restoreGState()


        //// Bezier 116 Drawing
        let bezier116Path = UIBezierPath()
        bezier116Path.move(to: CGPoint(x: 199.46, y: 200.21))
        bezier116Path.addCurve(to: CGPoint(x: 203.32, y: 201.68), controlPoint1: CGPoint(x: 200.84, y: 202.05), controlPoint2: CGPoint(x: 202.77, y: 202.02))
        bezier116Path.addCurve(to: CGPoint(x: 203.91, y: 198.5), controlPoint1: CGPoint(x: 203.86, y: 201.35), controlPoint2: CGPoint(x: 204.24, y: 199.03))
        bezier116Path.addCurve(to: CGPoint(x: 201.75, y: 196.67), controlPoint1: CGPoint(x: 203.57, y: 197.97), controlPoint2: CGPoint(x: 203.35, y: 197.03))
        bezier116Path.addCurve(to: CGPoint(x: 199.46, y: 200.21), controlPoint1: CGPoint(x: 200.14, y: 196.31), controlPoint2: CGPoint(x: 198.07, y: 198.37))
        bezier116Path.close()
        context.saveGState()
        bezier116Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 204.03, y: 199.24), end: CGPoint(x: 199, y: 199.24), options: [])
        context.restoreGState()


        //// Bezier 117 Drawing
        let bezier117Path = UIBezierPath()
        bezier117Path.move(to: CGPoint(x: 191.95, y: 184.62))
        bezier117Path.addCurve(to: CGPoint(x: 195.81, y: 186.1), controlPoint1: CGPoint(x: 193.34, y: 186.46), controlPoint2: CGPoint(x: 195.27, y: 186.43))
        bezier117Path.addCurve(to: CGPoint(x: 196.4, y: 182.91), controlPoint1: CGPoint(x: 196.36, y: 185.76), controlPoint2: CGPoint(x: 196.74, y: 183.44))
        bezier117Path.addCurve(to: CGPoint(x: 194.24, y: 181.09), controlPoint1: CGPoint(x: 196.07, y: 182.38), controlPoint2: CGPoint(x: 195.85, y: 181.45))
        bezier117Path.addCurve(to: CGPoint(x: 191.95, y: 184.62), controlPoint1: CGPoint(x: 192.64, y: 180.73), controlPoint2: CGPoint(x: 190.57, y: 182.78))
        bezier117Path.close()
        context.saveGState()
        bezier117Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 196.53, y: 183.66), end: CGPoint(x: 191.5, y: 183.66), options: [])
        context.restoreGState()


        //// Bezier 118 Drawing
        let bezier118Path = UIBezierPath()
        bezier118Path.move(to: CGPoint(x: 217.07, y: 200.43))
        bezier118Path.addCurve(to: CGPoint(x: 220.93, y: 201.9), controlPoint1: CGPoint(x: 218.45, y: 202.27), controlPoint2: CGPoint(x: 220.38, y: 202.23))
        bezier118Path.addCurve(to: CGPoint(x: 221.52, y: 198.72), controlPoint1: CGPoint(x: 221.47, y: 201.57), controlPoint2: CGPoint(x: 221.85, y: 199.25))
        bezier118Path.addCurve(to: CGPoint(x: 219.35, y: 196.89), controlPoint1: CGPoint(x: 221.18, y: 198.19), controlPoint2: CGPoint(x: 220.96, y: 197.25))
        bezier118Path.addCurve(to: CGPoint(x: 217.07, y: 200.43), controlPoint1: CGPoint(x: 217.75, y: 196.53), controlPoint2: CGPoint(x: 215.68, y: 198.59))
        bezier118Path.close()
        context.saveGState()
        bezier118Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 221.64, y: 199.46), end: CGPoint(x: 216.61, y: 199.46), options: [])
        context.restoreGState()


        //// Bezier 119 Drawing
        let bezier119Path = UIBezierPath()
        bezier119Path.move(to: CGPoint(x: 13.48, y: 130.74))
        bezier119Path.addCurve(to: CGPoint(x: 16.61, y: 131.14), controlPoint1: CGPoint(x: 14.86, y: 132.58), controlPoint2: CGPoint(x: 16.07, y: 131.47))
        bezier119Path.addCurve(to: CGPoint(x: 17.93, y: 129.03), controlPoint1: CGPoint(x: 17.16, y: 130.8), controlPoint2: CGPoint(x: 18.26, y: 129.56))
        bezier119Path.addCurve(to: CGPoint(x: 15.77, y: 127.21), controlPoint1: CGPoint(x: 17.59, y: 128.5), controlPoint2: CGPoint(x: 17.37, y: 127.57))
        bezier119Path.addCurve(to: CGPoint(x: 13.48, y: 130.74), controlPoint1: CGPoint(x: 14.16, y: 126.85), controlPoint2: CGPoint(x: 12.1, y: 128.9))
        bezier119Path.close()
        context.saveGState()
        bezier119Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 17.99, y: 129.47), end: CGPoint(x: 13.02, y: 129.47), options: [])
        context.restoreGState()


        //// Bezier 120 Drawing
        let bezier120Path = UIBezierPath()
        bezier120Path.move(to: CGPoint(x: 20.02, y: 165.89))
        bezier120Path.addCurve(to: CGPoint(x: 23.15, y: 166.29), controlPoint1: CGPoint(x: 21.4, y: 167.73), controlPoint2: CGPoint(x: 22.61, y: 166.62))
        bezier120Path.addCurve(to: CGPoint(x: 24.47, y: 164.18), controlPoint1: CGPoint(x: 23.7, y: 165.95), controlPoint2: CGPoint(x: 24.8, y: 164.71))
        bezier120Path.addCurve(to: CGPoint(x: 22.31, y: 162.36), controlPoint1: CGPoint(x: 24.13, y: 163.65), controlPoint2: CGPoint(x: 23.91, y: 162.71))
        bezier120Path.addCurve(to: CGPoint(x: 20.02, y: 165.89), controlPoint1: CGPoint(x: 20.7, y: 162), controlPoint2: CGPoint(x: 18.64, y: 164.05))
        bezier120Path.close()
        context.saveGState()
        bezier120Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 24.53, y: 164.62), end: CGPoint(x: 19.56, y: 164.62), options: [])
        context.restoreGState()


        //// Bezier 121 Drawing
        let bezier121Path = UIBezierPath()
        bezier121Path.move(to: CGPoint(x: 121.28, y: 213.89))
        bezier121Path.addCurve(to: CGPoint(x: 124.41, y: 214.29), controlPoint1: CGPoint(x: 122.66, y: 215.73), controlPoint2: CGPoint(x: 123.87, y: 214.62))
        bezier121Path.addCurve(to: CGPoint(x: 125.73, y: 212.18), controlPoint1: CGPoint(x: 124.96, y: 213.95), controlPoint2: CGPoint(x: 126.06, y: 212.71))
        bezier121Path.addCurve(to: CGPoint(x: 123.57, y: 210.35), controlPoint1: CGPoint(x: 125.39, y: 211.65), controlPoint2: CGPoint(x: 125.17, y: 210.71))
        bezier121Path.addCurve(to: CGPoint(x: 121.28, y: 213.89), controlPoint1: CGPoint(x: 121.96, y: 210), controlPoint2: CGPoint(x: 119.9, y: 212.05))
        bezier121Path.close()
        context.saveGState()
        bezier121Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 125.79, y: 212.62), end: CGPoint(x: 120.82, y: 212.62), options: [])
        context.restoreGState()


        //// Bezier 122 Drawing
        let bezier122Path = UIBezierPath()
        bezier122Path.move(to: CGPoint(x: 166.29, y: 220.38))
        bezier122Path.addCurve(to: CGPoint(x: 170.15, y: 221.86), controlPoint1: CGPoint(x: 167.67, y: 222.22), controlPoint2: CGPoint(x: 169.61, y: 222.19))
        bezier122Path.addCurve(to: CGPoint(x: 170.74, y: 218.67), controlPoint1: CGPoint(x: 170.7, y: 221.52), controlPoint2: CGPoint(x: 171.08, y: 219.2))
        bezier122Path.addCurve(to: CGPoint(x: 168.58, y: 216.85), controlPoint1: CGPoint(x: 170.41, y: 218.15), controlPoint2: CGPoint(x: 170.19, y: 217.21))
        bezier122Path.addCurve(to: CGPoint(x: 166.29, y: 220.38), controlPoint1: CGPoint(x: 166.97, y: 216.49), controlPoint2: CGPoint(x: 164.91, y: 218.55))
        bezier122Path.close()
        context.saveGState()
        bezier122Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 170.87, y: 219.42), end: CGPoint(x: 165.84, y: 219.42), options: [])
        context.restoreGState()


        //// Bezier 123 Drawing
        let bezier123Path = UIBezierPath()
        bezier123Path.move(to: CGPoint(x: 123.4, y: 171.86))
        bezier123Path.addCurve(to: CGPoint(x: 126.96, y: 173.36), controlPoint1: CGPoint(x: 124.79, y: 173.7), controlPoint2: CGPoint(x: 126.42, y: 173.7))
        bezier123Path.addCurve(to: CGPoint(x: 127.85, y: 170.15), controlPoint1: CGPoint(x: 127.51, y: 173.03), controlPoint2: CGPoint(x: 128.19, y: 170.68))
        bezier123Path.addCurve(to: CGPoint(x: 126.76, y: 166.63), controlPoint1: CGPoint(x: 127.52, y: 169.62), controlPoint2: CGPoint(x: 128.37, y: 166.99))
        bezier123Path.addCurve(to: CGPoint(x: 123.4, y: 171.86), controlPoint1: CGPoint(x: 125.15, y: 166.27), controlPoint2: CGPoint(x: 122.02, y: 170.02))
        bezier123Path.close()
        context.saveGState()
        bezier123Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 127.94, y: 170.07), end: CGPoint(x: 123.06, y: 170.07), options: [])
        context.restoreGState()


        //// Bezier 124 Drawing
        let bezier124Path = UIBezierPath()
        bezier124Path.move(to: CGPoint(x: 222.15, y: 228.87))
        bezier124Path.addCurve(to: CGPoint(x: 225.71, y: 230.37), controlPoint1: CGPoint(x: 223.54, y: 230.71), controlPoint2: CGPoint(x: 225.17, y: 230.71))
        bezier124Path.addCurve(to: CGPoint(x: 226.6, y: 227.16), controlPoint1: CGPoint(x: 226.26, y: 230.04), controlPoint2: CGPoint(x: 226.94, y: 227.69))
        bezier124Path.addCurve(to: CGPoint(x: 225.51, y: 223.64), controlPoint1: CGPoint(x: 226.27, y: 226.63), controlPoint2: CGPoint(x: 227.12, y: 224))
        bezier124Path.addCurve(to: CGPoint(x: 222.15, y: 228.87), controlPoint1: CGPoint(x: 223.91, y: 223.28), controlPoint2: CGPoint(x: 220.77, y: 227.03))
        bezier124Path.close()
        context.saveGState()
        bezier124Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 226.69, y: 227.08), end: CGPoint(x: 221.81, y: 227.08), options: [])
        context.restoreGState()


        //// Bezier 125 Drawing
        let bezier125Path = UIBezierPath()
        bezier125Path.move(to: CGPoint(x: 318.24, y: 243.87))
        bezier125Path.addCurve(to: CGPoint(x: 321.8, y: 245.37), controlPoint1: CGPoint(x: 319.62, y: 245.71), controlPoint2: CGPoint(x: 321.25, y: 245.71))
        bezier125Path.addCurve(to: CGPoint(x: 322.69, y: 242.16), controlPoint1: CGPoint(x: 322.34, y: 245.04), controlPoint2: CGPoint(x: 323.02, y: 242.69))
        bezier125Path.addCurve(to: CGPoint(x: 321.6, y: 238.64), controlPoint1: CGPoint(x: 322.36, y: 241.63), controlPoint2: CGPoint(x: 323.2, y: 239))
        bezier125Path.addCurve(to: CGPoint(x: 318.24, y: 243.87), controlPoint1: CGPoint(x: 319.99, y: 238.28), controlPoint2: CGPoint(x: 316.86, y: 242.03))
        bezier125Path.close()
        context.saveGState()
        bezier125Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 322.78, y: 242.08), end: CGPoint(x: 317.9, y: 242.08), options: [])
        context.restoreGState()


        //// Bezier 126 Drawing
        let bezier126Path = UIBezierPath()
        bezier126Path.move(to: CGPoint(x: 138.09, y: 216.34))
        bezier126Path.addCurve(to: CGPoint(x: 145.14, y: 217.56), controlPoint1: CGPoint(x: 141.01, y: 219.83), controlPoint2: CGPoint(x: 143.98, y: 218.2))
        bezier126Path.addCurve(to: CGPoint(x: 147.48, y: 210.27), controlPoint1: CGPoint(x: 146.29, y: 216.93), controlPoint2: CGPoint(x: 148.19, y: 211.27))
        bezier126Path.addCurve(to: CGPoint(x: 139.81, y: 209.11), controlPoint1: CGPoint(x: 146.77, y: 209.26), controlPoint2: CGPoint(x: 143.21, y: 209.79))
        bezier126Path.addCurve(to: CGPoint(x: 138.09, y: 216.34), controlPoint1: CGPoint(x: 136.41, y: 208.43), controlPoint2: CGPoint(x: 135.16, y: 212.84))
        bezier126Path.close()
        context.saveGState()
        bezier126Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 147.63, y: 213.77), end: CGPoint(x: 136.45, y: 213.77), options: [])
        context.restoreGState()


        //// Bezier 127 Drawing
        let bezier127Path = UIBezierPath()
        bezier127Path.move(to: CGPoint(x: 93.7, y: 134.38))
        bezier127Path.addCurve(to: CGPoint(x: 97.34, y: 127.94), controlPoint1: CGPoint(x: 96.7, y: 128.38), controlPoint2: CGPoint(x: 94.7, y: 130.27))
        bezier127Path.addCurve(to: CGPoint(x: 108, y: 131.58), controlPoint1: CGPoint(x: 99.97, y: 125.61), controlPoint2: CGPoint(x: 106.13, y: 130.03))
        bezier127Path.addCurve(to: CGPoint(x: 107.54, y: 140.34), controlPoint1: CGPoint(x: 109.87, y: 133.13), controlPoint2: CGPoint(x: 112.6, y: 136.96))
        bezier127Path.addCurve(to: CGPoint(x: 93.1, y: 145.53), controlPoint1: CGPoint(x: 102.48, y: 143.72), controlPoint2: CGPoint(x: 95.94, y: 146.44))
        bezier127Path.addCurve(to: CGPoint(x: 88.17, y: 141.17), controlPoint1: CGPoint(x: 90.26, y: 144.62), controlPoint2: CGPoint(x: 86.59, y: 145.02))
        bezier127Path.addCurve(to: CGPoint(x: 93.7, y: 134.38), controlPoint1: CGPoint(x: 89.75, y: 137.32), controlPoint2: CGPoint(x: 90.7, y: 140.38))
        bezier127Path.close()
        context.saveGState()
        bezier127Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 110.44, y: 136.49), end: CGPoint(x: 87.79, y: 136.49), options: [])
        context.restoreGState()


        //// Bezier 128 Drawing
        let bezier128Path = UIBezierPath()
        bezier128Path.move(to: CGPoint(x: 131.04, y: 139.88))
        bezier128Path.addCurve(to: CGPoint(x: 139.96, y: 136.59), controlPoint1: CGPoint(x: 134.04, y: 133.88), controlPoint2: CGPoint(x: 137.33, y: 138.93))
        bezier128Path.addCurve(to: CGPoint(x: 149.93, y: 138.51), controlPoint1: CGPoint(x: 142.6, y: 134.26), controlPoint2: CGPoint(x: 148.06, y: 136.96))
        bezier128Path.addCurve(to: CGPoint(x: 147.29, y: 145.79), controlPoint1: CGPoint(x: 151.8, y: 140.06), controlPoint2: CGPoint(x: 152.36, y: 142.41))
        bezier128Path.addCurve(to: CGPoint(x: 139.47, y: 154.22), controlPoint1: CGPoint(x: 142.23, y: 149.17), controlPoint2: CGPoint(x: 142.31, y: 155.13))
        bezier128Path.addCurve(to: CGPoint(x: 130.1, y: 148.09), controlPoint1: CGPoint(x: 136.63, y: 153.31), controlPoint2: CGPoint(x: 128.52, y: 151.94))
        bezier128Path.addCurve(to: CGPoint(x: 131.04, y: 139.88), controlPoint1: CGPoint(x: 131.68, y: 144.24), controlPoint2: CGPoint(x: 128.04, y: 145.88))
        bezier128Path.close()
        context.saveGState()
        bezier128Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 151.27, y: 145), end: CGPoint(x: 129.81, y: 145), options: [])
        context.restoreGState()


        //// Bezier 129 Drawing
        let bezier129Path = UIBezierPath()
        bezier129Path.move(to: CGPoint(x: 179.69, y: 188.01))
        bezier129Path.addCurve(to: CGPoint(x: 181.55, y: 180.06), controlPoint1: CGPoint(x: 182.69, y: 182.01), controlPoint2: CGPoint(x: 178.92, y: 182.39))
        bezier129Path.addCurve(to: CGPoint(x: 193.77, y: 186.15), controlPoint1: CGPoint(x: 184.18, y: 177.73), controlPoint2: CGPoint(x: 191.9, y: 184.6))
        bezier129Path.addCurve(to: CGPoint(x: 191.23, y: 193.53), controlPoint1: CGPoint(x: 195.64, y: 187.7), controlPoint2: CGPoint(x: 196.29, y: 190.15))
        bezier129Path.addCurve(to: CGPoint(x: 179.74, y: 206.07), controlPoint1: CGPoint(x: 186.17, y: 196.91), controlPoint2: CGPoint(x: 182.58, y: 206.98))
        bezier129Path.addCurve(to: CGPoint(x: 174.04, y: 195.83), controlPoint1: CGPoint(x: 176.9, y: 205.16), controlPoint2: CGPoint(x: 172.46, y: 199.69))
        bezier129Path.addCurve(to: CGPoint(x: 179.69, y: 188.01), controlPoint1: CGPoint(x: 175.62, y: 191.98), controlPoint2: CGPoint(x: 176.69, y: 194.01))
        bezier129Path.close()
        context.saveGState()
        bezier129Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 195.15, y: 192.86), end: CGPoint(x: 173.71, y: 192.86), options: [])
        context.restoreGState()


        //// Bezier 130 Drawing
        let bezier130Path = UIBezierPath()
        bezier130Path.move(to: CGPoint(x: 195.68, y: 146.73))
        bezier130Path.addCurve(to: CGPoint(x: 204.6, y: 143.44), controlPoint1: CGPoint(x: 198.68, y: 140.73), controlPoint2: CGPoint(x: 201.97, y: 145.78))
        bezier130Path.addCurve(to: CGPoint(x: 214.57, y: 145.36), controlPoint1: CGPoint(x: 207.23, y: 141.11), controlPoint2: CGPoint(x: 212.7, y: 143.81))
        bezier130Path.addCurve(to: CGPoint(x: 211.93, y: 152.64), controlPoint1: CGPoint(x: 216.44, y: 146.91), controlPoint2: CGPoint(x: 216.99, y: 149.26))
        bezier130Path.addCurve(to: CGPoint(x: 204.11, y: 161.07), controlPoint1: CGPoint(x: 206.87, y: 156.02), controlPoint2: CGPoint(x: 206.95, y: 161.98))
        bezier130Path.addCurve(to: CGPoint(x: 199.86, y: 155.85), controlPoint1: CGPoint(x: 201.26, y: 160.16), controlPoint2: CGPoint(x: 198.28, y: 159.7))
        bezier130Path.addCurve(to: CGPoint(x: 195.68, y: 146.73), controlPoint1: CGPoint(x: 201.44, y: 152), controlPoint2: CGPoint(x: 192.68, y: 152.73))
        bezier130Path.close()
        context.saveGState()
        bezier130Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 215.91, y: 151.85), end: CGPoint(x: 195.05, y: 151.85), options: [])
        context.restoreGState()


        //// Bezier 131 Drawing
        let bezier131Path = UIBezierPath()
        bezier131Path.move(to: CGPoint(x: 99.86, y: 192.57))
        bezier131Path.addCurve(to: CGPoint(x: 108.95, y: 190.12), controlPoint1: CGPoint(x: 102.86, y: 186.57), controlPoint2: CGPoint(x: 106.32, y: 192.46))
        bezier131Path.addCurve(to: CGPoint(x: 115.3, y: 192.92), controlPoint1: CGPoint(x: 111.58, y: 187.79), controlPoint2: CGPoint(x: 113.43, y: 191.37))
        bezier131Path.addCurve(to: CGPoint(x: 118.84, y: 200.99), controlPoint1: CGPoint(x: 117.17, y: 194.47), controlPoint2: CGPoint(x: 123.9, y: 197.61))
        bezier131Path.addCurve(to: CGPoint(x: 109.38, y: 204.51), controlPoint1: CGPoint(x: 113.78, y: 204.37), controlPoint2: CGPoint(x: 112.22, y: 205.42))
        bezier131Path.addCurve(to: CGPoint(x: 101.48, y: 199.94), controlPoint1: CGPoint(x: 106.54, y: 203.6), controlPoint2: CGPoint(x: 99.9, y: 203.79))
        bezier131Path.addCurve(to: CGPoint(x: 99.86, y: 192.57), controlPoint1: CGPoint(x: 103.06, y: 196.09), controlPoint2: CGPoint(x: 96.86, y: 198.57))
        bezier131Path.close()
        context.saveGState()
        bezier131Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 120.69, y: 197.09), end: CGPoint(x: 99.03, y: 197.09), options: [])
        context.restoreGState()


        //// Bezier 132 Drawing
        let bezier132Path = UIBezierPath()
        bezier132Path.move(to: CGPoint(x: 128.56, y: 261.99))
        bezier132Path.addCurve(to: CGPoint(x: 137.65, y: 259.55), controlPoint1: CGPoint(x: 131.56, y: 255.99), controlPoint2: CGPoint(x: 135.01, y: 261.88))
        bezier132Path.addCurve(to: CGPoint(x: 147.24, y: 260.12), controlPoint1: CGPoint(x: 140.28, y: 257.22), controlPoint2: CGPoint(x: 145.37, y: 258.57))
        bezier132Path.addCurve(to: CGPoint(x: 147.54, y: 270.41), controlPoint1: CGPoint(x: 149.12, y: 261.67), controlPoint2: CGPoint(x: 152.6, y: 267.03))
        bezier132Path.addCurve(to: CGPoint(x: 136.39, y: 278.92), controlPoint1: CGPoint(x: 142.48, y: 273.79), controlPoint2: CGPoint(x: 139.23, y: 279.83))
        bezier132Path.addCurve(to: CGPoint(x: 130.18, y: 269.37), controlPoint1: CGPoint(x: 133.55, y: 278.01), controlPoint2: CGPoint(x: 128.6, y: 273.22))
        bezier132Path.addCurve(to: CGPoint(x: 128.56, y: 261.99), controlPoint1: CGPoint(x: 131.76, y: 265.52), controlPoint2: CGPoint(x: 125.56, y: 267.99))
        bezier132Path.close()
        context.saveGState()
        bezier132Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 150.16, y: 268.65), end: CGPoint(x: 127.73, y: 268.65), options: [])
        context.restoreGState()


        //// Bezier 133 Drawing
        let bezier133Path = UIBezierPath()
        bezier133Path.move(to: CGPoint(x: 201.38, y: 242.91))
        bezier133Path.addCurve(to: CGPoint(x: 214.28, y: 238.9), controlPoint1: CGPoint(x: 204.38, y: 236.91), controlPoint2: CGPoint(x: 211.65, y: 241.23))
        bezier133Path.addCurve(to: CGPoint(x: 222.96, y: 245.96), controlPoint1: CGPoint(x: 216.92, y: 236.56), controlPoint2: CGPoint(x: 221.09, y: 244.41))
        bezier133Path.addCurve(to: CGPoint(x: 220.87, y: 263.58), controlPoint1: CGPoint(x: 224.83, y: 247.51), controlPoint2: CGPoint(x: 225.93, y: 260.2))
        bezier133Path.addCurve(to: CGPoint(x: 208.95, y: 265.67), controlPoint1: CGPoint(x: 215.81, y: 266.96), controlPoint2: CGPoint(x: 211.79, y: 266.58))
        bezier133Path.addCurve(to: CGPoint(x: 200.94, y: 253.4), controlPoint1: CGPoint(x: 206.11, y: 264.76), controlPoint2: CGPoint(x: 199.36, y: 257.25))
        bezier133Path.addCurve(to: CGPoint(x: 201.38, y: 242.91), controlPoint1: CGPoint(x: 202.52, y: 249.55), controlPoint2: CGPoint(x: 198.38, y: 248.91))
        bezier133Path.close()
        context.saveGState()
        bezier133Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 224.53, y: 252.38), end: CGPoint(x: 200.25, y: 252.38), options: [])
        context.restoreGState()


        //// Bezier 134 Drawing
        let bezier134Path = UIBezierPath()
        bezier134Path.move(to: CGPoint(x: 261.55, y: 214.25))
        bezier134Path.addCurve(to: CGPoint(x: 270.36, y: 214.47), controlPoint1: CGPoint(x: 264.55, y: 208.25), controlPoint2: CGPoint(x: 267.73, y: 216.81))
        bezier134Path.addCurve(to: CGPoint(x: 274.32, y: 214.2), controlPoint1: CGPoint(x: 271.42, y: 213.54), controlPoint2: CGPoint(x: 273.25, y: 214.21))
        bezier134Path.addCurve(to: CGPoint(x: 277.84, y: 214.87), controlPoint1: CGPoint(x: 275.92, y: 214.19), controlPoint2: CGPoint(x: 276.72, y: 213.94))
        bezier134Path.addCurve(to: CGPoint(x: 275.75, y: 232.48), controlPoint1: CGPoint(x: 279.71, y: 216.42), controlPoint2: CGPoint(x: 280.81, y: 229.1))
        bezier134Path.addCurve(to: CGPoint(x: 265.41, y: 230.3), controlPoint1: CGPoint(x: 270.69, y: 235.86), controlPoint2: CGPoint(x: 268.26, y: 231.21))
        bezier134Path.addCurve(to: CGPoint(x: 255.82, y: 222.3), controlPoint1: CGPoint(x: 262.57, y: 229.39), controlPoint2: CGPoint(x: 254.24, y: 226.15))
        bezier134Path.addCurve(to: CGPoint(x: 261.55, y: 214.25), controlPoint1: CGPoint(x: 257.4, y: 218.45), controlPoint2: CGPoint(x: 258.55, y: 220.25))
        bezier134Path.close()
        context.saveGState()
        bezier134Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 279.41, y: 222.88), end: CGPoint(x: 255.62, y: 222.88), options: [])
        context.restoreGState()


        //// Bezier 135 Drawing
        let bezier135Path = UIBezierPath()
        bezier135Path.move(to: CGPoint(x: 243.1, y: 258.75))
        bezier135Path.addCurve(to: CGPoint(x: 251.92, y: 258.98), controlPoint1: CGPoint(x: 246.1, y: 252.75), controlPoint2: CGPoint(x: 249.28, y: 261.31))
        bezier135Path.addCurve(to: CGPoint(x: 259.39, y: 259.37), controlPoint1: CGPoint(x: 252.97, y: 258.04), controlPoint2: CGPoint(x: 258.27, y: 258.44))
        bezier135Path.addCurve(to: CGPoint(x: 259.57, y: 272.55), controlPoint1: CGPoint(x: 261.26, y: 260.92), controlPoint2: CGPoint(x: 264.63, y: 269.17))
        bezier135Path.addCurve(to: CGPoint(x: 246.97, y: 274.81), controlPoint1: CGPoint(x: 254.51, y: 275.93), controlPoint2: CGPoint(x: 249.81, y: 275.72))
        bezier135Path.addCurve(to: CGPoint(x: 237.37, y: 266.8), controlPoint1: CGPoint(x: 244.13, y: 273.9), controlPoint2: CGPoint(x: 235.79, y: 270.65))
        bezier135Path.addCurve(to: CGPoint(x: 243.1, y: 258.75), controlPoint1: CGPoint(x: 238.95, y: 262.95), controlPoint2: CGPoint(x: 240.1, y: 264.75))
        bezier135Path.close()
        context.saveGState()
        bezier135Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 262.24, y: 265.98), end: CGPoint(x: 237.18, y: 265.98), options: [])
        context.restoreGState()


        //// Bezier 136 Drawing
        let bezier136Path = UIBezierPath()
        bezier136Path.move(to: CGPoint(x: 215.3, y: 183.92))
        bezier136Path.addCurve(to: CGPoint(x: 223.05, y: 186.12), controlPoint1: CGPoint(x: 216.68, y: 185.76), controlPoint2: CGPoint(x: 222.5, y: 186.45))
        bezier136Path.addCurve(to: CGPoint(x: 221.64, y: 180.17), controlPoint1: CGPoint(x: 223.59, y: 185.78), controlPoint2: CGPoint(x: 224.38, y: 183.06))
        bezier136Path.addCurve(to: CGPoint(x: 217.4, y: 177.03), controlPoint1: CGPoint(x: 218.91, y: 177.29), controlPoint2: CGPoint(x: 219, y: 177.39))
        bezier136Path.addCurve(to: CGPoint(x: 215.3, y: 183.92), controlPoint1: CGPoint(x: 215.79, y: 176.68), controlPoint2: CGPoint(x: 213.92, y: 182.09))
        bezier136Path.close()
        context.saveGState()
        bezier136Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 223.59, y: 181.61), end: CGPoint(x: 214.82, y: 181.61), options: [])
        context.restoreGState()


        //// Bezier 137 Drawing
        let bezier137Path = UIBezierPath()
        bezier137Path.move(to: CGPoint(x: 236.06, y: 213.83))
        bezier137Path.addCurve(to: CGPoint(x: 243.81, y: 216.03), controlPoint1: CGPoint(x: 237.45, y: 215.67), controlPoint2: CGPoint(x: 243.26, y: 216.36))
        bezier137Path.addCurve(to: CGPoint(x: 244.15, y: 208.23), controlPoint1: CGPoint(x: 244.36, y: 215.69), controlPoint2: CGPoint(x: 244.48, y: 208.76))
        bezier137Path.addCurve(to: CGPoint(x: 238.16, y: 206.94), controlPoint1: CGPoint(x: 243.81, y: 207.71), controlPoint2: CGPoint(x: 239.76, y: 207.3))
        bezier137Path.addCurve(to: CGPoint(x: 236.06, y: 213.83), controlPoint1: CGPoint(x: 236.55, y: 206.59), controlPoint2: CGPoint(x: 234.68, y: 211.99))
        bezier137Path.close()
        context.saveGState()
        bezier137Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 244.33, y: 211.52), end: CGPoint(x: 235.58, y: 211.52), options: [])
        context.restoreGState()


        //// Bezier 138 Drawing
        let bezier138Path = UIBezierPath()
        bezier138Path.move(to: CGPoint(x: 142.74, y: 187.81))
        bezier138Path.addCurve(to: CGPoint(x: 146.6, y: 189.29), controlPoint1: CGPoint(x: 144.13, y: 189.65), controlPoint2: CGPoint(x: 146.06, y: 189.62))
        bezier138Path.addCurve(to: CGPoint(x: 147.19, y: 186.1), controlPoint1: CGPoint(x: 147.15, y: 188.95), controlPoint2: CGPoint(x: 147.53, y: 186.63))
        bezier138Path.addCurve(to: CGPoint(x: 145.03, y: 184.28), controlPoint1: CGPoint(x: 146.86, y: 185.58), controlPoint2: CGPoint(x: 146.64, y: 184.64))
        bezier138Path.addCurve(to: CGPoint(x: 142.74, y: 187.81), controlPoint1: CGPoint(x: 143.42, y: 183.92), controlPoint2: CGPoint(x: 141.36, y: 185.98))
        bezier138Path.close()
        context.saveGState()
        bezier138Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 147.32, y: 186.85), end: CGPoint(x: 142.29, y: 186.85), options: [])
        context.restoreGState()


        //// Bezier 139 Drawing
        let bezier139Path = UIBezierPath()
        bezier139Path.move(to: CGPoint(x: 167.46, y: 172.58))
        bezier139Path.addCurve(to: CGPoint(x: 171.32, y: 174.05), controlPoint1: CGPoint(x: 168.84, y: 174.42), controlPoint2: CGPoint(x: 170.77, y: 174.38))
        bezier139Path.addCurve(to: CGPoint(x: 171.91, y: 170.87), controlPoint1: CGPoint(x: 171.86, y: 173.72), controlPoint2: CGPoint(x: 172.24, y: 171.4))
        bezier139Path.addCurve(to: CGPoint(x: 169.75, y: 169.04), controlPoint1: CGPoint(x: 171.57, y: 170.34), controlPoint2: CGPoint(x: 171.35, y: 169.4))
        bezier139Path.addCurve(to: CGPoint(x: 167.46, y: 172.58), controlPoint1: CGPoint(x: 168.14, y: 168.68), controlPoint2: CGPoint(x: 166.07, y: 170.74))
        bezier139Path.close()
        context.saveGState()
        bezier139Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 172.03, y: 171.61), end: CGPoint(x: 167, y: 171.61), options: [])
        context.restoreGState()


        //// Bezier 140 Drawing
        let bezier140Path = UIBezierPath()
        bezier140Path.move(to: CGPoint(x: 71.24, y: 204.7))
        bezier140Path.addCurve(to: CGPoint(x: 75.1, y: 206.17), controlPoint1: CGPoint(x: 72.63, y: 206.54), controlPoint2: CGPoint(x: 74.56, y: 206.51))
        bezier140Path.addCurve(to: CGPoint(x: 75.69, y: 202.99), controlPoint1: CGPoint(x: 75.65, y: 205.84), controlPoint2: CGPoint(x: 76.03, y: 203.52))
        bezier140Path.addCurve(to: CGPoint(x: 73.53, y: 201.16), controlPoint1: CGPoint(x: 75.36, y: 202.46), controlPoint2: CGPoint(x: 75.14, y: 201.52))
        bezier140Path.addCurve(to: CGPoint(x: 71.24, y: 204.7), controlPoint1: CGPoint(x: 71.93, y: 200.8), controlPoint2: CGPoint(x: 69.86, y: 202.86))
        bezier140Path.close()
        context.saveGState()
        bezier140Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 75.82, y: 203.74), end: CGPoint(x: 70.79, y: 203.74), options: [])
        context.restoreGState()


        //// Bezier 141 Drawing
        let bezier141Path = UIBezierPath()
        bezier141Path.move(to: CGPoint(x: 77.63, y: 186.37))
        bezier141Path.addCurve(to: CGPoint(x: 80.76, y: 186.76), controlPoint1: CGPoint(x: 79.01, y: 188.21), controlPoint2: CGPoint(x: 80.21, y: 187.1))
        bezier141Path.addCurve(to: CGPoint(x: 82.08, y: 184.66), controlPoint1: CGPoint(x: 81.31, y: 186.43), controlPoint2: CGPoint(x: 82.41, y: 185.19))
        bezier141Path.addCurve(to: CGPoint(x: 79.91, y: 182.83), controlPoint1: CGPoint(x: 81.74, y: 184.13), controlPoint2: CGPoint(x: 81.52, y: 183.19))
        bezier141Path.addCurve(to: CGPoint(x: 77.63, y: 186.37), controlPoint1: CGPoint(x: 78.31, y: 182.47), controlPoint2: CGPoint(x: 76.24, y: 184.53))
        bezier141Path.close()
        context.saveGState()
        bezier141Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 82.14, y: 185.1), end: CGPoint(x: 77.17, y: 185.1), options: [])
        context.restoreGState()


        //// Bezier 142 Drawing
        let bezier142Path = UIBezierPath()
        bezier142Path.move(to: CGPoint(x: 149.08, y: 205.03))
        bezier142Path.addCurve(to: CGPoint(x: 152.21, y: 205.43), controlPoint1: CGPoint(x: 150.46, y: 206.87), controlPoint2: CGPoint(x: 151.67, y: 205.76))
        bezier142Path.addCurve(to: CGPoint(x: 153.53, y: 203.32), controlPoint1: CGPoint(x: 152.76, y: 205.09), controlPoint2: CGPoint(x: 153.86, y: 203.85))
        bezier142Path.addCurve(to: CGPoint(x: 151.37, y: 201.5), controlPoint1: CGPoint(x: 153.2, y: 202.8), controlPoint2: CGPoint(x: 152.97, y: 201.86))
        bezier142Path.addCurve(to: CGPoint(x: 149.08, y: 205.03), controlPoint1: CGPoint(x: 149.76, y: 201.14), controlPoint2: CGPoint(x: 147.7, y: 203.19))
        bezier142Path.close()
        context.saveGState()
        bezier142Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 153.59, y: 203.76), end: CGPoint(x: 148.63, y: 203.76), options: [])
        context.restoreGState()


        //// Bezier 143 Drawing
        let bezier143Path = UIBezierPath()
        bezier143Path.move(to: CGPoint(x: 175.01, y: 222.29))
        bezier143Path.addCurve(to: CGPoint(x: 178.14, y: 222.68), controlPoint1: CGPoint(x: 176.39, y: 224.12), controlPoint2: CGPoint(x: 177.6, y: 223.01))
        bezier143Path.addCurve(to: CGPoint(x: 179.46, y: 220.58), controlPoint1: CGPoint(x: 178.69, y: 222.35), controlPoint2: CGPoint(x: 179.79, y: 221.1))
        bezier143Path.addCurve(to: CGPoint(x: 177.3, y: 218.75), controlPoint1: CGPoint(x: 179.12, y: 220.05), controlPoint2: CGPoint(x: 178.9, y: 219.11))
        bezier143Path.addCurve(to: CGPoint(x: 175.01, y: 222.29), controlPoint1: CGPoint(x: 175.69, y: 218.39), controlPoint2: CGPoint(x: 173.62, y: 220.45))
        bezier143Path.close()
        context.saveGState()
        bezier143Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 179.52, y: 221.01), end: CGPoint(x: 174.55, y: 221.01), options: [])
        context.restoreGState()


        //// Bezier 144 Drawing
        let bezier144Path = UIBezierPath()
        bezier144Path.move(to: CGPoint(x: 205.08, y: 209.41))
        bezier144Path.addCurve(to: CGPoint(x: 208.22, y: 209.8), controlPoint1: CGPoint(x: 206.47, y: 211.25), controlPoint2: CGPoint(x: 207.67, y: 210.14))
        bezier144Path.addCurve(to: CGPoint(x: 209.53, y: 207.7), controlPoint1: CGPoint(x: 208.77, y: 209.47), controlPoint2: CGPoint(x: 209.87, y: 208.22))
        bezier144Path.addCurve(to: CGPoint(x: 207.37, y: 205.87), controlPoint1: CGPoint(x: 209.2, y: 207.17), controlPoint2: CGPoint(x: 208.98, y: 206.23))
        bezier144Path.addCurve(to: CGPoint(x: 205.08, y: 209.41), controlPoint1: CGPoint(x: 205.77, y: 205.51), controlPoint2: CGPoint(x: 203.7, y: 207.57))
        bezier144Path.close()
        context.saveGState()
        bezier144Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 209.6, y: 208.13), end: CGPoint(x: 204.63, y: 208.13), options: [])
        context.restoreGState()


        //// Bezier 145 Drawing
        let bezier145Path = UIBezierPath()
        bezier145Path.move(to: CGPoint(x: 160.29, y: 165.85))
        bezier145Path.addCurve(to: CGPoint(x: 163.42, y: 166.24), controlPoint1: CGPoint(x: 161.67, y: 167.69), controlPoint2: CGPoint(x: 162.87, y: 166.58))
        bezier145Path.addCurve(to: CGPoint(x: 164.74, y: 164.14), controlPoint1: CGPoint(x: 163.97, y: 165.91), controlPoint2: CGPoint(x: 165.07, y: 164.67))
        bezier145Path.addCurve(to: CGPoint(x: 162.57, y: 162.31), controlPoint1: CGPoint(x: 164.4, y: 163.61), controlPoint2: CGPoint(x: 164.18, y: 162.67))
        bezier145Path.addCurve(to: CGPoint(x: 160.29, y: 165.85), controlPoint1: CGPoint(x: 160.97, y: 161.95), controlPoint2: CGPoint(x: 158.9, y: 164.01))
        bezier145Path.close()
        context.saveGState()
        bezier145Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 164.8, y: 164.58), end: CGPoint(x: 159.83, y: 164.58), options: [])
        context.restoreGState()


        //// Bezier 146 Drawing
        let bezier146Path = UIBezierPath()
        bezier146Path.move(to: CGPoint(x: 60.82, y: 156.97))
        bezier146Path.addCurve(to: CGPoint(x: 63.96, y: 157.37), controlPoint1: CGPoint(x: 62.21, y: 158.81), controlPoint2: CGPoint(x: 63.41, y: 157.7))
        bezier146Path.addCurve(to: CGPoint(x: 65.27, y: 155.26), controlPoint1: CGPoint(x: 64.5, y: 157.03), controlPoint2: CGPoint(x: 65.61, y: 155.79))
        bezier146Path.addCurve(to: CGPoint(x: 63.11, y: 153.44), controlPoint1: CGPoint(x: 64.94, y: 154.73), controlPoint2: CGPoint(x: 64.72, y: 153.8))
        bezier146Path.addCurve(to: CGPoint(x: 60.82, y: 156.97), controlPoint1: CGPoint(x: 61.51, y: 153.08), controlPoint2: CGPoint(x: 59.44, y: 155.13))
        bezier146Path.close()
        context.saveGState()
        bezier146Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 65.33, y: 155.7), end: CGPoint(x: 60.37, y: 155.7), options: [])
        context.restoreGState()


        //// Bezier 147 Drawing
        let bezier147Path = UIBezierPath()
        bezier147Path.move(to: CGPoint(x: 93.3, y: 157.84))
        bezier147Path.addCurve(to: CGPoint(x: 96.43, y: 158.24), controlPoint1: CGPoint(x: 94.68, y: 159.68), controlPoint2: CGPoint(x: 95.88, y: 158.57))
        bezier147Path.addCurve(to: CGPoint(x: 97.75, y: 156.13), controlPoint1: CGPoint(x: 96.98, y: 157.9), controlPoint2: CGPoint(x: 98.08, y: 156.66))
        bezier147Path.addCurve(to: CGPoint(x: 95.58, y: 154.31), controlPoint1: CGPoint(x: 97.41, y: 155.6), controlPoint2: CGPoint(x: 97.19, y: 154.66))
        bezier147Path.addCurve(to: CGPoint(x: 93.3, y: 157.84), controlPoint1: CGPoint(x: 93.98, y: 153.95), controlPoint2: CGPoint(x: 91.91, y: 156))
        bezier147Path.close()
        context.saveGState()
        bezier147Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 97.81, y: 156.57), end: CGPoint(x: 92.84, y: 156.57), options: [])
        context.restoreGState()


        //// Bezier 148 Drawing
        let bezier148Path = UIBezierPath()
        bezier148Path.move(to: CGPoint(x: 117.48, y: 159.04))
        bezier148Path.addCurve(to: CGPoint(x: 121.04, y: 160.54), controlPoint1: CGPoint(x: 118.86, y: 160.88), controlPoint2: CGPoint(x: 120.49, y: 160.87))
        bezier148Path.addCurve(to: CGPoint(x: 121.93, y: 157.33), controlPoint1: CGPoint(x: 121.59, y: 160.2), controlPoint2: CGPoint(x: 122.27, y: 157.85))
        bezier148Path.addCurve(to: CGPoint(x: 120.84, y: 153.81), controlPoint1: CGPoint(x: 121.6, y: 156.8), controlPoint2: CGPoint(x: 122.44, y: 154.16))
        bezier148Path.addCurve(to: CGPoint(x: 117.48, y: 159.04), controlPoint1: CGPoint(x: 119.23, y: 153.45), controlPoint2: CGPoint(x: 116.1, y: 157.2))
        bezier148Path.close()
        context.saveGState()
        bezier148Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 122.02, y: 157.25), end: CGPoint(x: 117.14, y: 157.25), options: [])
        context.restoreGState()


        //// Bezier 149 Drawing
        let bezier149Path = UIBezierPath()
        bezier149Path.move(to: CGPoint(x: 99.58, y: 216.48))
        bezier149Path.addCurve(to: CGPoint(x: 103.13, y: 217.98), controlPoint1: CGPoint(x: 100.96, y: 218.32), controlPoint2: CGPoint(x: 102.59, y: 218.31))
        bezier149Path.addCurve(to: CGPoint(x: 104.03, y: 214.77), controlPoint1: CGPoint(x: 103.68, y: 217.65), controlPoint2: CGPoint(x: 104.36, y: 215.3))
        bezier149Path.addCurve(to: CGPoint(x: 102.93, y: 211.25), controlPoint1: CGPoint(x: 103.69, y: 214.24), controlPoint2: CGPoint(x: 104.54, y: 211.61))
        bezier149Path.addCurve(to: CGPoint(x: 99.58, y: 216.48), controlPoint1: CGPoint(x: 101.33, y: 210.89), controlPoint2: CGPoint(x: 98.19, y: 214.64))
        bezier149Path.close()
        context.saveGState()
        bezier149Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 104.12, y: 214.69), end: CGPoint(x: 99.23, y: 214.69), options: [])
        context.restoreGState()


        //// Bezier 150 Drawing
        let bezier150Path = UIBezierPath()
        bezier150Path.move(to: CGPoint(x: 48.76, y: 126.34))
        bezier150Path.addCurve(to: CGPoint(x: 52.32, y: 127.84), controlPoint1: CGPoint(x: 50.15, y: 128.17), controlPoint2: CGPoint(x: 51.78, y: 128.17))
        bezier150Path.addCurve(to: CGPoint(x: 53.21, y: 124.62), controlPoint1: CGPoint(x: 52.87, y: 127.5), controlPoint2: CGPoint(x: 53.55, y: 125.15))
        bezier150Path.addCurve(to: CGPoint(x: 52.12, y: 121.1), controlPoint1: CGPoint(x: 52.88, y: 124.1), controlPoint2: CGPoint(x: 53.73, y: 121.46))
        bezier150Path.addCurve(to: CGPoint(x: 48.76, y: 126.34), controlPoint1: CGPoint(x: 50.52, y: 120.75), controlPoint2: CGPoint(x: 47.38, y: 124.5))
        bezier150Path.close()
        context.saveGState()
        bezier150Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 53.3, y: 124.54), end: CGPoint(x: 48.42, y: 124.54), options: [])
        context.restoreGState()


        //// Bezier 151 Drawing
        let bezier151Path = UIBezierPath()
        bezier151Path.move(to: CGPoint(x: 265.14, y: 187.59))
        bezier151Path.addCurve(to: CGPoint(x: 268.7, y: 189.1), controlPoint1: CGPoint(x: 266.53, y: 189.43), controlPoint2: CGPoint(x: 268.16, y: 189.43))
        bezier151Path.addCurve(to: CGPoint(x: 269.59, y: 185.88), controlPoint1: CGPoint(x: 269.25, y: 188.76), controlPoint2: CGPoint(x: 269.93, y: 186.41))
        bezier151Path.addCurve(to: CGPoint(x: 268.5, y: 182.36), controlPoint1: CGPoint(x: 269.26, y: 185.36), controlPoint2: CGPoint(x: 270.11, y: 182.72))
        bezier151Path.addCurve(to: CGPoint(x: 265.14, y: 187.59), controlPoint1: CGPoint(x: 266.89, y: 182), controlPoint2: CGPoint(x: 263.76, y: 185.75))
        bezier151Path.close()
        context.saveGState()
        bezier151Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 269.68, y: 185.8), end: CGPoint(x: 264.8, y: 185.8), options: [])
        context.restoreGState()


        //// Bezier 152 Drawing
        let bezier152Path = UIBezierPath()
        bezier152Path.move(to: CGPoint(x: 52.86, y: 114.68))
        bezier152Path.addCurve(to: CGPoint(x: 56, y: 115.08), controlPoint1: CGPoint(x: 54.25, y: 116.52), controlPoint2: CGPoint(x: 55.45, y: 115.41))
        bezier152Path.addCurve(to: CGPoint(x: 57.31, y: 112.97), controlPoint1: CGPoint(x: 56.54, y: 114.74), controlPoint2: CGPoint(x: 57.65, y: 113.5))
        bezier152Path.addCurve(to: CGPoint(x: 55.15, y: 111.15), controlPoint1: CGPoint(x: 56.98, y: 112.44), controlPoint2: CGPoint(x: 56.76, y: 111.5))
        bezier152Path.addCurve(to: CGPoint(x: 52.86, y: 114.68), controlPoint1: CGPoint(x: 53.55, y: 110.79), controlPoint2: CGPoint(x: 51.48, y: 112.84))
        bezier152Path.close()
        context.saveGState()
        bezier152Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 57.37, y: 113.41), end: CGPoint(x: 52.41, y: 113.41), options: [])
        context.restoreGState()


        //// Bezier 153 Drawing
        let bezier153Path = UIBezierPath()
        bezier153Path.move(to: CGPoint(x: 28.39, y: 109.69))
        bezier153Path.addCurve(to: CGPoint(x: 31.53, y: 110.08), controlPoint1: CGPoint(x: 29.77, y: 111.53), controlPoint2: CGPoint(x: 30.98, y: 110.42))
        bezier153Path.addCurve(to: CGPoint(x: 32.84, y: 107.98), controlPoint1: CGPoint(x: 32.07, y: 109.75), controlPoint2: CGPoint(x: 33.18, y: 108.51))
        bezier153Path.addCurve(to: CGPoint(x: 30.68, y: 106.15), controlPoint1: CGPoint(x: 32.51, y: 107.45), controlPoint2: CGPoint(x: 32.29, y: 106.51))
        bezier153Path.addCurve(to: CGPoint(x: 28.39, y: 109.69), controlPoint1: CGPoint(x: 29.07, y: 105.79), controlPoint2: CGPoint(x: 27.01, y: 107.85))
        bezier153Path.close()
        context.saveGState()
        bezier153Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 32.9, y: 108.42), end: CGPoint(x: 27.94, y: 108.42), options: [])
        context.restoreGState()


        //// Bezier 154 Drawing
        let bezier154Path = UIBezierPath()
        bezier154Path.move(to: CGPoint(x: 35.95, y: 173.12))
        bezier154Path.addCurve(to: CGPoint(x: 39.08, y: 173.52), controlPoint1: CGPoint(x: 37.33, y: 174.96), controlPoint2: CGPoint(x: 38.54, y: 173.85))
        bezier154Path.addCurve(to: CGPoint(x: 40.4, y: 171.41), controlPoint1: CGPoint(x: 39.63, y: 173.18), controlPoint2: CGPoint(x: 40.73, y: 171.94))
        bezier154Path.addCurve(to: CGPoint(x: 38.24, y: 169.59), controlPoint1: CGPoint(x: 40.06, y: 170.89), controlPoint2: CGPoint(x: 39.84, y: 169.95))
        bezier154Path.addCurve(to: CGPoint(x: 35.95, y: 173.12), controlPoint1: CGPoint(x: 36.63, y: 169.23), controlPoint2: CGPoint(x: 34.57, y: 171.28))
        bezier154Path.close()
        context.saveGState()
        bezier154Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 40.46, y: 171.85), end: CGPoint(x: 35.49, y: 171.85), options: [])
        context.restoreGState()


        //// Bezier 155 Drawing
        let bezier155Path = UIBezierPath()
        bezier155Path.move(to: CGPoint(x: 45.95, y: 183.12))
        bezier155Path.addCurve(to: CGPoint(x: 49.08, y: 183.52), controlPoint1: CGPoint(x: 47.33, y: 184.96), controlPoint2: CGPoint(x: 48.54, y: 183.85))
        bezier155Path.addCurve(to: CGPoint(x: 50.4, y: 181.41), controlPoint1: CGPoint(x: 49.63, y: 183.18), controlPoint2: CGPoint(x: 50.73, y: 181.94))
        bezier155Path.addCurve(to: CGPoint(x: 48.24, y: 179.59), controlPoint1: CGPoint(x: 50.06, y: 180.89), controlPoint2: CGPoint(x: 49.84, y: 179.95))
        bezier155Path.addCurve(to: CGPoint(x: 45.95, y: 183.12), controlPoint1: CGPoint(x: 46.63, y: 179.23), controlPoint2: CGPoint(x: 44.57, y: 181.28))
        bezier155Path.close()
        context.saveGState()
        bezier155Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 50.46, y: 181.85), end: CGPoint(x: 45.49, y: 181.85), options: [])
        context.restoreGState()


        //// Bezier 156 Drawing
        let bezier156Path = UIBezierPath()
        bezier156Path.move(to: CGPoint(x: 79.34, y: 138.41))
        bezier156Path.addCurve(to: CGPoint(x: 82.48, y: 138.8), controlPoint1: CGPoint(x: 80.73, y: 140.25), controlPoint2: CGPoint(x: 81.93, y: 139.14))
        bezier156Path.addCurve(to: CGPoint(x: 83.79, y: 136.7), controlPoint1: CGPoint(x: 83.02, y: 138.47), controlPoint2: CGPoint(x: 84.13, y: 137.23))
        bezier156Path.addCurve(to: CGPoint(x: 81.63, y: 134.87), controlPoint1: CGPoint(x: 83.46, y: 136.17), controlPoint2: CGPoint(x: 83.24, y: 135.23))
        bezier156Path.addCurve(to: CGPoint(x: 79.34, y: 138.41), controlPoint1: CGPoint(x: 80.02, y: 134.51), controlPoint2: CGPoint(x: 77.96, y: 136.57))
        bezier156Path.close()
        context.saveGState()
        bezier156Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 83.85, y: 137.14), end: CGPoint(x: 78.89, y: 137.14), options: [])
        context.restoreGState()


        //// Bezier 157 Drawing
        let bezier157Path = UIBezierPath()
        bezier157Path.move(to: CGPoint(x: 129.7, y: 97.38))
        bezier157Path.addCurve(to: CGPoint(x: 132.32, y: 102.26), controlPoint1: CGPoint(x: 129.7, y: 97.38), controlPoint2: CGPoint(x: 127.74, y: 102.1))
        bezier157Path.addCurve(to: CGPoint(x: 140.48, y: 99.85), controlPoint1: CGPoint(x: 136.9, y: 102.42), controlPoint2: CGPoint(x: 139.69, y: 101.58))
        bezier157Path.addCurve(to: CGPoint(x: 139.53, y: 93.67), controlPoint1: CGPoint(x: 141.28, y: 98.13), controlPoint2: CGPoint(x: 141.93, y: 95))
        bezier157Path.addCurve(to: CGPoint(x: 131.54, y: 93.88), controlPoint1: CGPoint(x: 137.12, y: 92.34), controlPoint2: CGPoint(x: 133.75, y: 91.79))
        bezier157Path.addCurve(to: CGPoint(x: 129.7, y: 97.38), controlPoint1: CGPoint(x: 129.34, y: 95.98), controlPoint2: CGPoint(x: 129.7, y: 97.38))
        bezier157Path.close()
        context.saveGState()
        bezier157Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 141.21, y: 97.38), end: CGPoint(x: 129.28, y: 97.38), options: [])
        context.restoreGState()


        //// Bezier 158 Drawing
        let bezier158Path = UIBezierPath()
        bezier158Path.move(to: CGPoint(x: 106.18, y: 105.67))
        bezier158Path.addCurve(to: CGPoint(x: 108.69, y: 99.96), controlPoint1: CGPoint(x: 107.42, y: 103.77), controlPoint2: CGPoint(x: 105.96, y: 100.42))
        bezier158Path.addCurve(to: CGPoint(x: 113.96, y: 102.26), controlPoint1: CGPoint(x: 111.42, y: 99.51), controlPoint2: CGPoint(x: 113.5, y: 100.1))
        bezier158Path.addCurve(to: CGPoint(x: 111.34, y: 109.07), controlPoint1: CGPoint(x: 114.42, y: 104.42), controlPoint2: CGPoint(x: 119.1, y: 107.59))
        bezier158Path.addCurve(to: CGPoint(x: 106.18, y: 105.67), controlPoint1: CGPoint(x: 103.58, y: 110.56), controlPoint2: CGPoint(x: 104.93, y: 107.56))
        bezier158Path.close()
        context.saveGState()
        bezier158Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 115.78, y: 104.65), end: CGPoint(x: 105.22, y: 104.65), options: [])
        context.restoreGState()


        //// Bezier 159 Drawing
        let bezier159Path = UIBezierPath()
        bezier159Path.move(to: CGPoint(x: 138.04, y: 123.66))
        bezier159Path.addCurve(to: CGPoint(x: 142.74, y: 120.19), controlPoint1: CGPoint(x: 139.28, y: 121.76), controlPoint2: CGPoint(x: 140.01, y: 120.64))
        bezier159Path.addCurve(to: CGPoint(x: 148.01, y: 122.49), controlPoint1: CGPoint(x: 145.47, y: 119.74), controlPoint2: CGPoint(x: 147.55, y: 120.33))
        bezier159Path.addCurve(to: CGPoint(x: 145.39, y: 129.3), controlPoint1: CGPoint(x: 148.47, y: 124.65), controlPoint2: CGPoint(x: 153.14, y: 127.82))
        bezier159Path.addCurve(to: CGPoint(x: 138.04, y: 123.66), controlPoint1: CGPoint(x: 137.63, y: 130.78), controlPoint2: CGPoint(x: 136.79, y: 125.56))
        bezier159Path.close()
        context.saveGState()
        bezier159Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 149.82, y: 124.81), end: CGPoint(x: 137.57, y: 124.81), options: [])
        context.restoreGState()


        //// Bezier 160 Drawing
        let bezier160Path = UIBezierPath()
        bezier160Path.move(to: CGPoint(x: 173.1, y: 155.93))
        bezier160Path.addCurve(to: CGPoint(x: 176.83, y: 152.28), controlPoint1: CGPoint(x: 173.33, y: 153.76), controlPoint2: CGPoint(x: 174.1, y: 152.73))
        bezier160Path.addCurve(to: CGPoint(x: 182.09, y: 154.58), controlPoint1: CGPoint(x: 179.56, y: 151.83), controlPoint2: CGPoint(x: 181.64, y: 152.42))
        bezier160Path.addCurve(to: CGPoint(x: 181.06, y: 158.7), controlPoint1: CGPoint(x: 182.55, y: 156.73), controlPoint2: CGPoint(x: 183.85, y: 157.85))
        bezier160Path.addCurve(to: CGPoint(x: 173.1, y: 155.93), controlPoint1: CGPoint(x: 178.27, y: 159.55), controlPoint2: CGPoint(x: 172.87, y: 158.11))
        bezier160Path.close()
        context.saveGState()
        bezier160Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 182.8, y: 155.54), end: CGPoint(x: 173.1, y: 155.54), options: [])
        context.restoreGState()


        //// Bezier 161 Drawing
        let bezier161Path = UIBezierPath()
        bezier161Path.move(to: CGPoint(x: 183.94, y: 169.18))
        bezier161Path.addCurve(to: CGPoint(x: 189.8, y: 166.86), controlPoint1: CGPoint(x: 184.17, y: 167.01), controlPoint2: CGPoint(x: 187.07, y: 167.31))
        bezier161Path.addCurve(to: CGPoint(x: 197.53, y: 170.65), controlPoint1: CGPoint(x: 192.53, y: 166.41), controlPoint2: CGPoint(x: 197.08, y: 168.49))
        bezier161Path.addCurve(to: CGPoint(x: 191.1, y: 175.18), controlPoint1: CGPoint(x: 197.99, y: 172.8), controlPoint2: CGPoint(x: 193.89, y: 174.33))
        bezier161Path.addCurve(to: CGPoint(x: 183.94, y: 169.18), controlPoint1: CGPoint(x: 188.3, y: 176.03), controlPoint2: CGPoint(x: 183.71, y: 171.35))
        bezier161Path.close()
        context.saveGState()
        bezier161Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 197.57, y: 171.04), end: CGPoint(x: 183.93, y: 171.04), options: [])
        context.restoreGState()


        //// Bezier 162 Drawing
        let bezier162Path = UIBezierPath()
        bezier162Path.move(to: CGPoint(x: 233.14, y: 168.92))
        bezier162Path.addCurve(to: CGPoint(x: 238.92, y: 165.78), controlPoint1: CGPoint(x: 233.39, y: 165.34), controlPoint2: CGPoint(x: 235.24, y: 165.42))
        bezier162Path.addCurve(to: CGPoint(x: 246.65, y: 169.57), controlPoint1: CGPoint(x: 242.59, y: 166.15), controlPoint2: CGPoint(x: 246.19, y: 167.41))
        bezier162Path.addCurve(to: CGPoint(x: 240.21, y: 174.1), controlPoint1: CGPoint(x: 247.11, y: 171.72), controlPoint2: CGPoint(x: 244.08, y: 173.94))
        bezier162Path.addCurve(to: CGPoint(x: 233.14, y: 168.92), controlPoint1: CGPoint(x: 236.34, y: 174.27), controlPoint2: CGPoint(x: 232.89, y: 172.49))
        bezier162Path.close()
        context.saveGState()
        bezier162Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 246.7, y: 169.86), end: CGPoint(x: 233.12, y: 169.86), options: [])
        context.restoreGState()


        //// Bezier 163 Drawing
        let bezier163Path = UIBezierPath()
        bezier163Path.move(to: CGPoint(x: 241.77, y: 193.49))
        bezier163Path.addCurve(to: CGPoint(x: 247.94, y: 189.14), controlPoint1: CGPoint(x: 242.01, y: 189.91), controlPoint2: CGPoint(x: 244.87, y: 189.34))
        bezier163Path.addCurve(to: CGPoint(x: 253.86, y: 194.32), controlPoint1: CGPoint(x: 251, y: 188.94), controlPoint2: CGPoint(x: 253.4, y: 192.16))
        bezier163Path.addCurve(to: CGPoint(x: 248.84, y: 198.68), controlPoint1: CGPoint(x: 254.32, y: 196.48), controlPoint2: CGPoint(x: 252.71, y: 198.51))
        bezier163Path.addCurve(to: CGPoint(x: 241.77, y: 193.49), controlPoint1: CGPoint(x: 244.97, y: 198.84), controlPoint2: CGPoint(x: 241.52, y: 197.07))
        bezier163Path.close()
        context.saveGState()
        bezier163Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 253.94, y: 193.91), end: CGPoint(x: 241.75, y: 193.91), options: [])
        context.restoreGState()


        //// Bezier 164 Drawing
        let bezier164Path = UIBezierPath()
        bezier164Path.move(to: CGPoint(x: 249.43, y: 186.23))
        bezier164Path.addCurve(to: CGPoint(x: 255.6, y: 181.88), controlPoint1: CGPoint(x: 249.92, y: 183.72), controlPoint2: CGPoint(x: 253.81, y: 181.66))
        bezier164Path.addCurve(to: CGPoint(x: 258.6, y: 187.23), controlPoint1: CGPoint(x: 257.38, y: 182.1), controlPoint2: CGPoint(x: 259.16, y: 185.6))
        bezier164Path.addCurve(to: CGPoint(x: 254.82, y: 190.46), controlPoint1: CGPoint(x: 258.04, y: 188.85), controlPoint2: CGPoint(x: 256.55, y: 190.47))
        bezier164Path.addCurve(to: CGPoint(x: 249.43, y: 186.23), controlPoint1: CGPoint(x: 253.08, y: 190.44), controlPoint2: CGPoint(x: 248.93, y: 188.73))
        bezier164Path.close()
        context.saveGState()
        bezier164Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 258.7, y: 186.16), end: CGPoint(x: 249.39, y: 186.16), options: [])
        context.restoreGState()


        //// Bezier 165 Drawing
        let bezier165Path = UIBezierPath()
        bezier165Path.move(to: CGPoint(x: 286.53, y: 223.94))
        bezier165Path.addCurve(to: CGPoint(x: 292.7, y: 219.59), controlPoint1: CGPoint(x: 287.02, y: 221.44), controlPoint2: CGPoint(x: 290.91, y: 219.37))
        bezier165Path.addCurve(to: CGPoint(x: 295.7, y: 224.94), controlPoint1: CGPoint(x: 294.49, y: 219.82), controlPoint2: CGPoint(x: 296.26, y: 223.31))
        bezier165Path.addCurve(to: CGPoint(x: 291.92, y: 228.17), controlPoint1: CGPoint(x: 295.14, y: 226.56), controlPoint2: CGPoint(x: 293.66, y: 228.18))
        bezier165Path.addCurve(to: CGPoint(x: 286.53, y: 223.94), controlPoint1: CGPoint(x: 290.18, y: 228.16), controlPoint2: CGPoint(x: 286.04, y: 226.44))
        bezier165Path.close()
        context.saveGState()
        bezier165Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 295.81, y: 223.87), end: CGPoint(x: 286.49, y: 223.87), options: [])
        context.restoreGState()


        //// Bezier 166 Drawing
        let bezier166Path = UIBezierPath()
        bezier166Path.move(to: CGPoint(x: 270.21, y: 244.13))
        bezier166Path.addCurve(to: CGPoint(x: 276.37, y: 237.99), controlPoint1: CGPoint(x: 270.05, y: 242.32), controlPoint2: CGPoint(x: 270.02, y: 237.04))
        bezier166Path.addCurve(to: CGPoint(x: 280.54, y: 245.32), controlPoint1: CGPoint(x: 282.72, y: 238.95), controlPoint2: CGPoint(x: 281.51, y: 242.36))
        bezier166Path.addCurve(to: CGPoint(x: 275.84, y: 250.01), controlPoint1: CGPoint(x: 279.56, y: 248.27), controlPoint2: CGPoint(x: 279.36, y: 250.35))
        bezier166Path.addCurve(to: CGPoint(x: 270.21, y: 244.13), controlPoint1: CGPoint(x: 272.32, y: 249.67), controlPoint2: CGPoint(x: 270.38, y: 245.94))
        bezier166Path.close()
        context.saveGState()
        bezier166Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 281.32, y: 243.96), end: CGPoint(x: 270.17, y: 243.96), options: [])
        context.restoreGState()


        //// Bezier 30 Drawing
        let bezier30Path = UIBezierPath()
        bezier30Path.move(to: CGPoint(x: 56.06, y: 0.43))
        bezier30Path.addCurve(to: CGPoint(x: 42.2, y: 4.03), controlPoint1: CGPoint(x: 47.06, y: -1.57), controlPoint2: CGPoint(x: 42.2, y: 4.03))
        bezier30Path.addCurve(to: CGPoint(x: 35.29, y: 16.68), controlPoint1: CGPoint(x: 42.2, y: 4.03), controlPoint2: CGPoint(x: 35.18, y: 10.09))
        bezier30Path.addCurve(to: CGPoint(x: 42.67, y: 30.39), controlPoint1: CGPoint(x: 35.41, y: 23.27), controlPoint2: CGPoint(x: 39.63, y: 30.35))
        bezier30Path.addCurve(to: CGPoint(x: 50.46, y: 22.26), controlPoint1: CGPoint(x: 45.71, y: 30.43), controlPoint2: CGPoint(x: 45.68, y: 26.97))
        bezier30Path.addCurve(to: CGPoint(x: 60.75, y: 19.4), controlPoint1: CGPoint(x: 55.23, y: 17.54), controlPoint2: CGPoint(x: 60.43, y: 17.33))
        bezier30Path.addCurve(to: CGPoint(x: 62.85, y: 28.52), controlPoint1: CGPoint(x: 61.07, y: 21.48), controlPoint2: CGPoint(x: 59.16, y: 30.19))
        bezier30Path.addCurve(to: CGPoint(x: 74.66, y: 15.96), controlPoint1: CGPoint(x: 66.54, y: 26.84), controlPoint2: CGPoint(x: 76.23, y: 22.12))
        bezier30Path.addCurve(to: CGPoint(x: 65.24, y: 1.97), controlPoint1: CGPoint(x: 73.08, y: 9.8), controlPoint2: CGPoint(x: 68.72, y: 3.42))
        bezier30Path.addCurve(to: CGPoint(x: 56.06, y: 0.43), controlPoint1: CGPoint(x: 61.76, y: 0.51), controlPoint2: CGPoint(x: 65.06, y: 2.43))
        bezier30Path.close()
        context.saveGState()
        bezier30Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 74.83, y: 15.2), end: CGPoint(x: 35.29, y: 15.2), options: [])
        context.restoreGState()


        //// Bezier 66 Drawing
        let bezier66Path = UIBezierPath()
        bezier66Path.move(to: CGPoint(x: 104.8, y: 22.97))
        bezier66Path.addCurve(to: CGPoint(x: 111.5, y: 25.14), controlPoint1: CGPoint(x: 110.8, y: 26.97), controlPoint2: CGPoint(x: 108.25, y: 25.07))
        bezier66Path.addCurve(to: CGPoint(x: 114.96, y: 17.62), controlPoint1: CGPoint(x: 114.75, y: 25.21), controlPoint2: CGPoint(x: 115.38, y: 18.54))
        bezier66Path.addCurve(to: CGPoint(x: 109.64, y: 14.78), controlPoint1: CGPoint(x: 114.54, y: 16.7), controlPoint2: CGPoint(x: 112.82, y: 13.66))
        bezier66Path.addCurve(to: CGPoint(x: 104.8, y: 22.97), controlPoint1: CGPoint(x: 106.46, y: 15.89), controlPoint2: CGPoint(x: 98.8, y: 18.97))
        bezier66Path.close()
        context.saveGState()
        bezier66Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 115.07, y: 20.03), end: CGPoint(x: 102.57, y: 20.03), options: [])
        context.restoreGState()


        //// Bezier 67 Drawing
        let bezier67Path = UIBezierPath()
        bezier67Path.move(to: CGPoint(x: 121.38, y: 18.01))
        bezier67Path.addCurve(to: CGPoint(x: 131.98, y: 22.18), controlPoint1: CGPoint(x: 127.38, y: 22.01), controlPoint2: CGPoint(x: 128.73, y: 22.11))
        bezier67Path.addCurve(to: CGPoint(x: 131.54, y: 12.67), controlPoint1: CGPoint(x: 135.23, y: 22.25), controlPoint2: CGPoint(x: 131.96, y: 13.58))
        bezier67Path.addCurve(to: CGPoint(x: 126.22, y: 9.83), controlPoint1: CGPoint(x: 131.12, y: 11.75), controlPoint2: CGPoint(x: 129.39, y: 8.71))
        bezier67Path.addCurve(to: CGPoint(x: 121.38, y: 18.01), controlPoint1: CGPoint(x: 123.04, y: 10.94), controlPoint2: CGPoint(x: 115.38, y: 14.01))
        bezier67Path.close()
        context.saveGState()
        bezier67Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 133.4, y: 15.88), end: CGPoint(x: 119.15, y: 15.88), options: [])
        context.restoreGState()


        //// Bezier 168 Drawing
        let bezier168Path = UIBezierPath()
        bezier168Path.move(to: CGPoint(x: 41.7, y: 131.38))
        bezier168Path.addCurve(to: CGPoint(x: 39.79, y: 139.01), controlPoint1: CGPoint(x: 38.32, y: 133.86), controlPoint2: CGPoint(x: 38, y: 136.18))
        bezier168Path.addCurve(to: CGPoint(x: 48.86, y: 142.69), controlPoint1: CGPoint(x: 41.58, y: 141.84), controlPoint2: CGPoint(x: 45.38, y: 143.25))
        bezier168Path.addCurve(to: CGPoint(x: 53.7, y: 136.77), controlPoint1: CGPoint(x: 52.34, y: 142.13), controlPoint2: CGPoint(x: 53.7, y: 136.77))
        bezier168Path.addCurve(to: CGPoint(x: 53.29, y: 129.08), controlPoint1: CGPoint(x: 53.7, y: 136.77), controlPoint2: CGPoint(x: 60.55, y: 129.6))
        bezier168Path.addCurve(to: CGPoint(x: 41.7, y: 131.38), controlPoint1: CGPoint(x: 46.02, y: 128.56), controlPoint2: CGPoint(x: 45.07, y: 128.9))
        bezier168Path.close()
        context.saveGState()
        bezier168Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 56.63, y: 135.84), end: CGPoint(x: 38.71, y: 135.84), options: [])
        context.restoreGState()


        //// Bezier 169 Drawing
        let bezier169Path = UIBezierPath()
        bezier169Path.move(to: CGPoint(x: 18.6, y: 148.36))
        bezier169Path.addCurve(to: CGPoint(x: 16.69, y: 155.98), controlPoint1: CGPoint(x: 15.23, y: 150.84), controlPoint2: CGPoint(x: 14.9, y: 153.15))
        bezier169Path.addCurve(to: CGPoint(x: 25.77, y: 159.67), controlPoint1: CGPoint(x: 18.48, y: 158.81), controlPoint2: CGPoint(x: 22.29, y: 160.23))
        bezier169Path.addCurve(to: CGPoint(x: 30.61, y: 153.74), controlPoint1: CGPoint(x: 29.25, y: 159.11), controlPoint2: CGPoint(x: 30.61, y: 153.74))
        bezier169Path.addCurve(to: CGPoint(x: 28.61, y: 147.7), controlPoint1: CGPoint(x: 30.61, y: 153.74), controlPoint2: CGPoint(x: 32.16, y: 147.69))
        bezier169Path.addCurve(to: CGPoint(x: 18.6, y: 148.36), controlPoint1: CGPoint(x: 25.05, y: 147.72), controlPoint2: CGPoint(x: 21.98, y: 145.87))
        bezier169Path.close()
        context.saveGState()
        bezier169Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 30.95, y: 153.42), end: CGPoint(x: 15.62, y: 153.42), options: [])
        context.restoreGState()


        //// Bezier 170 Drawing
        let bezier170Path = UIBezierPath()
        bezier170Path.move(to: CGPoint(x: 37.21, y: 101.44))
        bezier170Path.addCurve(to: CGPoint(x: 36.5, y: 110.39), controlPoint1: CGPoint(x: 33.84, y: 103.92), controlPoint2: CGPoint(x: 34.71, y: 107.56))
        bezier170Path.addCurve(to: CGPoint(x: 43.81, y: 116.88), controlPoint1: CGPoint(x: 38.29, y: 113.21), controlPoint2: CGPoint(x: 40.33, y: 117.44))
        bezier170Path.addCurve(to: CGPoint(x: 52.32, y: 105.82), controlPoint1: CGPoint(x: 47.29, y: 116.32), controlPoint2: CGPoint(x: 52, y: 108.52))
        bezier170Path.addCurve(to: CGPoint(x: 45.03, y: 103.73), controlPoint1: CGPoint(x: 52.64, y: 103.12), controlPoint2: CGPoint(x: 47.66, y: 105.59))
        bezier170Path.addCurve(to: CGPoint(x: 37.21, y: 101.44), controlPoint1: CGPoint(x: 42.41, y: 101.87), controlPoint2: CGPoint(x: 40.59, y: 98.96))
        bezier170Path.close()
        context.saveGState()
        bezier170Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 52.33, y: 108.71), end: CGPoint(x: 34.92, y: 108.71), options: [])
        context.restoreGState()


        //// Bezier 171 Drawing
        let bezier171Path = UIBezierPath()
        bezier171Path.move(to: CGPoint(x: 3.13, y: 117.55))
        bezier171Path.addCurve(to: CGPoint(x: 1.31, y: 119.02), controlPoint1: CGPoint(x: 2.3, y: 118.16), controlPoint2: CGPoint(x: 1.81, y: 118.45))
        bezier171Path.addCurve(to: CGPoint(x: 0.9, y: 124.84), controlPoint1: CGPoint(x: -0.24, y: 120.76), controlPoint2: CGPoint(x: -0.46, y: 122.7))
        bezier171Path.addCurve(to: CGPoint(x: 8.21, y: 131.33), controlPoint1: CGPoint(x: 2.69, y: 127.66), controlPoint2: CGPoint(x: 4.73, y: 131.89))
        bezier171Path.addCurve(to: CGPoint(x: 13.74, y: 123.25), controlPoint1: CGPoint(x: 11.68, y: 130.77), controlPoint2: CGPoint(x: 13.42, y: 125.95))
        bezier171Path.addCurve(to: CGPoint(x: 9.43, y: 118.18), controlPoint1: CGPoint(x: 14.06, y: 120.55), controlPoint2: CGPoint(x: 10.5, y: 119.16))
        bezier171Path.addCurve(to: CGPoint(x: 3.13, y: 117.55), controlPoint1: CGPoint(x: 8.36, y: 117.2), controlPoint2: CGPoint(x: 6.5, y: 115.07))
        bezier171Path.close()
        context.saveGState()
        bezier171Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 13.76, y: 123.89), end: CGPoint(x: -0, y: 123.89), options: [])
        context.restoreGState()


        //// Bezier 172 Drawing
        let bezier172Path = UIBezierPath()
        bezier172Path.move(to: CGPoint(x: 35.13, y: 178.71))
        bezier172Path.addCurve(to: CGPoint(x: 33.31, y: 180.17), controlPoint1: CGPoint(x: 34.31, y: 179.32), controlPoint2: CGPoint(x: 33.82, y: 179.61))
        bezier172Path.addCurve(to: CGPoint(x: 32.9, y: 185.99), controlPoint1: CGPoint(x: 31.76, y: 181.92), controlPoint2: CGPoint(x: 31.55, y: 183.86))
        bezier172Path.addCurve(to: CGPoint(x: 40.21, y: 192.49), controlPoint1: CGPoint(x: 34.69, y: 188.82), controlPoint2: CGPoint(x: 36.73, y: 193.05))
        bezier172Path.addCurve(to: CGPoint(x: 45.74, y: 184.41), controlPoint1: CGPoint(x: 43.69, y: 191.93), controlPoint2: CGPoint(x: 45.42, y: 187.11))
        bezier172Path.addCurve(to: CGPoint(x: 41.44, y: 179.33), controlPoint1: CGPoint(x: 46.06, y: 181.71), controlPoint2: CGPoint(x: 42.51, y: 180.31))
        bezier172Path.addCurve(to: CGPoint(x: 35.13, y: 178.71), controlPoint1: CGPoint(x: 40.37, y: 178.35), controlPoint2: CGPoint(x: 38.51, y: 176.23))
        bezier172Path.close()
        context.saveGState()
        bezier172Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 45.76, y: 185.04), end: CGPoint(x: 32, y: 185.04), options: [])
        context.restoreGState()


        //// Bezier 173 Drawing
        let bezier173Path = UIBezierPath()
        bezier173Path.move(to: CGPoint(x: 60.87, y: 163.7))
        bezier173Path.addCurve(to: CGPoint(x: 60.46, y: 169.52), controlPoint1: CGPoint(x: 59.32, y: 165.45), controlPoint2: CGPoint(x: 59.1, y: 167.39))
        bezier173Path.addCurve(to: CGPoint(x: 67.77, y: 176.02), controlPoint1: CGPoint(x: 62.25, y: 172.35), controlPoint2: CGPoint(x: 64.29, y: 176.58))
        bezier173Path.addCurve(to: CGPoint(x: 69.86, y: 169.59), controlPoint1: CGPoint(x: 71.24, y: 175.46), controlPoint2: CGPoint(x: 69.54, y: 172.29))
        bezier173Path.addCurve(to: CGPoint(x: 68.45, y: 165.27), controlPoint1: CGPoint(x: 70.18, y: 166.89), controlPoint2: CGPoint(x: 69.52, y: 166.25))
        bezier173Path.addCurve(to: CGPoint(x: 60.87, y: 163.7), controlPoint1: CGPoint(x: 67.38, y: 164.29), controlPoint2: CGPoint(x: 61.37, y: 163.14))
        bezier173Path.close()
        context.saveGState()
        bezier173Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 70, y: 169.81), end: CGPoint(x: 59.56, y: 169.81), options: [])
        context.restoreGState()


        //// Bezier 174 Drawing
        let bezier174Path = UIBezierPath()
        bezier174Path.move(to: CGPoint(x: 33.32, y: 122.84))
        bezier174Path.addCurve(to: CGPoint(x: 29.65, y: 127.05), controlPoint1: CGPoint(x: 31.77, y: 124.59), controlPoint2: CGPoint(x: 28.3, y: 124.92))
        bezier174Path.addCurve(to: CGPoint(x: 36.96, y: 133.55), controlPoint1: CGPoint(x: 31.44, y: 129.88), controlPoint2: CGPoint(x: 33.48, y: 134.11))
        bezier174Path.addCurve(to: CGPoint(x: 39.74, y: 129.15), controlPoint1: CGPoint(x: 40.44, y: 132.99), controlPoint2: CGPoint(x: 39.42, y: 131.85))
        bezier174Path.addCurve(to: CGPoint(x: 37.71, y: 123.9), controlPoint1: CGPoint(x: 40.06, y: 126.45), controlPoint2: CGPoint(x: 38.78, y: 124.88))
        bezier174Path.addCurve(to: CGPoint(x: 33.32, y: 122.84), controlPoint1: CGPoint(x: 36.64, y: 122.92), controlPoint2: CGPoint(x: 33.83, y: 122.27))
        bezier174Path.close()
        context.saveGState()
        bezier174Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 39.79, y: 128.11), end: CGPoint(x: 29.34, y: 128.11), options: [])
        context.restoreGState()


        //// Bezier 175 Drawing
        let bezier175Path = UIBezierPath()
        bezier175Path.move(to: CGPoint(x: 16.92, y: 134.36))
        bezier175Path.addCurve(to: CGPoint(x: 16.17, y: 140.46), controlPoint1: CGPoint(x: 15.36, y: 136.11), controlPoint2: CGPoint(x: 16.1, y: 138.11))
        bezier175Path.addCurve(to: CGPoint(x: 20.55, y: 145.07), controlPoint1: CGPoint(x: 16.25, y: 143.58), controlPoint2: CGPoint(x: 17.07, y: 145.63))
        bezier175Path.addCurve(to: CGPoint(x: 23.34, y: 140.66), controlPoint1: CGPoint(x: 24.03, y: 144.51), controlPoint2: CGPoint(x: 23.02, y: 143.36))
        bezier175Path.addCurve(to: CGPoint(x: 21.3, y: 135.41), controlPoint1: CGPoint(x: 23.66, y: 137.96), controlPoint2: CGPoint(x: 22.37, y: 136.39))
        bezier175Path.addCurve(to: CGPoint(x: 16.92, y: 134.36), controlPoint1: CGPoint(x: 20.24, y: 134.43), controlPoint2: CGPoint(x: 17.42, y: 133.79))
        bezier175Path.close()
        context.saveGState()
        bezier175Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 23.39, y: 139.65), end: CGPoint(x: 15.94, y: 139.65), options: [])
        context.restoreGState()


        //// Bezier 176 Drawing
        let bezier176Path = UIBezierPath()
        bezier176Path.move(to: CGPoint(x: 81.5, y: 101.8))
        bezier176Path.addCurve(to: CGPoint(x: 77.79, y: 107), controlPoint1: CGPoint(x: 77.51, y: 104.43), controlPoint2: CGPoint(x: 77.72, y: 104.64))
        bezier176Path.addCurve(to: CGPoint(x: 85.56, y: 110.72), controlPoint1: CGPoint(x: 77.87, y: 110.12), controlPoint2: CGPoint(x: 82.08, y: 111.28))
        bezier176Path.addCurve(to: CGPoint(x: 88.34, y: 106.32), controlPoint1: CGPoint(x: 89.04, y: 110.16), controlPoint2: CGPoint(x: 88.02, y: 109.02))
        bezier176Path.addCurve(to: CGPoint(x: 86.31, y: 101.07), controlPoint1: CGPoint(x: 88.66, y: 103.62), controlPoint2: CGPoint(x: 87.38, y: 102.05))
        bezier176Path.addCurve(to: CGPoint(x: 81.5, y: 101.8), controlPoint1: CGPoint(x: 85.24, y: 100.09), controlPoint2: CGPoint(x: 82.79, y: 100.94))
        bezier176Path.close()
        context.saveGState()
        bezier176Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 88.39, y: 105.75), end: CGPoint(x: 77.76, y: 105.75), options: [])
        context.restoreGState()


        //// Bezier 177 Drawing
        let bezier177Path = UIBezierPath()
        bezier177Path.move(to: CGPoint(x: 104.37, y: 148))
        bezier177Path.addCurve(to: CGPoint(x: 101.27, y: 155.44), controlPoint1: CGPoint(x: 100.39, y: 150.63), controlPoint2: CGPoint(x: 101.21, y: 153.08))
        bezier177Path.addCurve(to: CGPoint(x: 109.14, y: 162.06), controlPoint1: CGPoint(x: 101.36, y: 158.55), controlPoint2: CGPoint(x: 105.66, y: 162.62))
        bezier177Path.addCurve(to: CGPoint(x: 115.35, y: 155.03), controlPoint1: CGPoint(x: 112.62, y: 161.5), controlPoint2: CGPoint(x: 115.03, y: 157.73))
        bezier177Path.addCurve(to: CGPoint(x: 111.77, y: 145.2), controlPoint1: CGPoint(x: 115.67, y: 152.33), controlPoint2: CGPoint(x: 114.09, y: 146.15))
        bezier177Path.addCurve(to: CGPoint(x: 104.37, y: 148), controlPoint1: CGPoint(x: 109.45, y: 144.25), controlPoint2: CGPoint(x: 105.67, y: 147.15))
        bezier177Path.close()
        context.saveGState()
        bezier177Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 115.39, y: 153.56), end: CGPoint(x: 101.16, y: 153.56), options: [])
        context.restoreGState()


        //// Bezier 178 Drawing
        let bezier178Path = UIBezierPath()
        bezier178Path.move(to: CGPoint(x: 176.32, y: 91.97))
        bezier178Path.addCurve(to: CGPoint(x: 183.38, y: 93.2), controlPoint1: CGPoint(x: 179.25, y: 95.47), controlPoint2: CGPoint(x: 182.22, y: 93.83))
        bezier178Path.addCurve(to: CGPoint(x: 182.96, y: 87.3), controlPoint1: CGPoint(x: 184.53, y: 92.57), controlPoint2: CGPoint(x: 183.17, y: 88.1))
        bezier178Path.addCurve(to: CGPoint(x: 178.68, y: 84.82), controlPoint1: CGPoint(x: 182.76, y: 86.49), controlPoint2: CGPoint(x: 180.23, y: 83.84))
        bezier178Path.addCurve(to: CGPoint(x: 176.32, y: 91.97), controlPoint1: CGPoint(x: 177.13, y: 85.79), controlPoint2: CGPoint(x: 173.4, y: 88.48))
        bezier178Path.close()
        context.saveGState()
        bezier178Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 183.83, y: 89.37), end: CGPoint(x: 175.24, y: 89.37), options: [])
        context.restoreGState()


        //// Bezier 179 Drawing
        let bezier179Path = UIBezierPath()
        bezier179Path.move(to: CGPoint(x: 173.99, y: 63.74))
        bezier179Path.addCurve(to: CGPoint(x: 176.51, y: 58.04), controlPoint1: CGPoint(x: 175.23, y: 61.85), controlPoint2: CGPoint(x: 173.78, y: 58.49))
        bezier179Path.addCurve(to: CGPoint(x: 181.77, y: 60.34), controlPoint1: CGPoint(x: 179.24, y: 57.59), controlPoint2: CGPoint(x: 181.31, y: 58.18))
        bezier179Path.addCurve(to: CGPoint(x: 179.15, y: 67.15), controlPoint1: CGPoint(x: 182.23, y: 62.49), controlPoint2: CGPoint(x: 186.91, y: 65.67))
        bezier179Path.addCurve(to: CGPoint(x: 173.99, y: 63.74), controlPoint1: CGPoint(x: 171.4, y: 68.63), controlPoint2: CGPoint(x: 172.74, y: 65.64))
        bezier179Path.close()
        context.saveGState()
        bezier179Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 183.59, y: 62.72), end: CGPoint(x: 173.03, y: 62.72), options: [])
        context.restoreGState()


        //// Bezier 180 Drawing
        let bezier180Path = UIBezierPath()
        bezier180Path.move(to: CGPoint(x: 158.01, y: 55.32))
        bezier180Path.addCurve(to: CGPoint(x: 161.57, y: 56.82), controlPoint1: CGPoint(x: 159.39, y: 57.16), controlPoint2: CGPoint(x: 161.02, y: 57.16))
        bezier180Path.addCurve(to: CGPoint(x: 162.46, y: 53.61), controlPoint1: CGPoint(x: 162.11, y: 56.49), controlPoint2: CGPoint(x: 162.79, y: 54.14))
        bezier180Path.addCurve(to: CGPoint(x: 160.46, y: 51.67), controlPoint1: CGPoint(x: 162.12, y: 53.08), controlPoint2: CGPoint(x: 162.07, y: 52.03))
        bezier180Path.addCurve(to: CGPoint(x: 158.01, y: 55.32), controlPoint1: CGPoint(x: 158.86, y: 51.32), controlPoint2: CGPoint(x: 156.62, y: 53.48))
        bezier180Path.close()
        context.saveGState()
        bezier180Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 162.55, y: 54.31), end: CGPoint(x: 157.57, y: 54.31), options: [])
        context.restoreGState()


        //// Bezier 181 Drawing
        let bezier181Path = UIBezierPath()
        bezier181Path.move(to: CGPoint(x: 204.06, y: 75.19))
        bezier181Path.addCurve(to: CGPoint(x: 207.62, y: 76.7), controlPoint1: CGPoint(x: 205.45, y: 77.03), controlPoint2: CGPoint(x: 207.08, y: 77.03))
        bezier181Path.addCurve(to: CGPoint(x: 208.52, y: 73.48), controlPoint1: CGPoint(x: 208.17, y: 76.36), controlPoint2: CGPoint(x: 208.85, y: 74.01))
        bezier181Path.addCurve(to: CGPoint(x: 206.52, y: 71.55), controlPoint1: CGPoint(x: 208.18, y: 72.96), controlPoint2: CGPoint(x: 208.13, y: 71.91))
        bezier181Path.addCurve(to: CGPoint(x: 204.06, y: 75.19), controlPoint1: CGPoint(x: 204.92, y: 71.19), controlPoint2: CGPoint(x: 202.68, y: 73.36))
        bezier181Path.close()
        context.saveGState()
        bezier181Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 208.6, y: 74.19), end: CGPoint(x: 203.63, y: 74.19), options: [])
        context.restoreGState()


        //// Bezier 182 Drawing
        let bezier182Path = UIBezierPath()
        bezier182Path.move(to: CGPoint(x: 107.56, y: 76.45))
        bezier182Path.addCurve(to: CGPoint(x: 111.12, y: 77.95), controlPoint1: CGPoint(x: 108.95, y: 78.28), controlPoint2: CGPoint(x: 110.57, y: 78.28))
        bezier182Path.addCurve(to: CGPoint(x: 112.01, y: 74.73), controlPoint1: CGPoint(x: 111.67, y: 77.61), controlPoint2: CGPoint(x: 112.35, y: 75.26))
        bezier182Path.addCurve(to: CGPoint(x: 110.02, y: 72.8), controlPoint1: CGPoint(x: 111.68, y: 74.21), controlPoint2: CGPoint(x: 111.63, y: 73.16))
        bezier182Path.addCurve(to: CGPoint(x: 107.56, y: 76.45), controlPoint1: CGPoint(x: 108.41, y: 72.44), controlPoint2: CGPoint(x: 106.18, y: 74.61))
        bezier182Path.close()
        context.saveGState()
        bezier182Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 112.1, y: 75.44), end: CGPoint(x: 107.13, y: 75.44), options: [])
        context.restoreGState()


        //// Bezier 183 Drawing
        let bezier183Path = UIBezierPath()
        bezier183Path.move(to: CGPoint(x: 194.57, y: 36.73))
        bezier183Path.addCurve(to: CGPoint(x: 198.13, y: 38.23), controlPoint1: CGPoint(x: 195.96, y: 38.57), controlPoint2: CGPoint(x: 197.59, y: 38.57))
        bezier183Path.addCurve(to: CGPoint(x: 199.02, y: 35.02), controlPoint1: CGPoint(x: 198.68, y: 37.9), controlPoint2: CGPoint(x: 199.36, y: 35.55))
        bezier183Path.addCurve(to: CGPoint(x: 197.93, y: 31.5), controlPoint1: CGPoint(x: 198.69, y: 34.49), controlPoint2: CGPoint(x: 199.54, y: 31.86))
        bezier183Path.addCurve(to: CGPoint(x: 194.57, y: 36.73), controlPoint1: CGPoint(x: 196.32, y: 31.14), controlPoint2: CGPoint(x: 193.19, y: 34.89))
        bezier183Path.close()
        context.saveGState()
        bezier183Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 199.11, y: 34.94), end: CGPoint(x: 194.23, y: 34.94), options: [])
        context.restoreGState()


        //// Bezier 184 Drawing
        let bezier184Path = UIBezierPath()
        bezier184Path.move(to: CGPoint(x: 122.96, y: 40.22))
        bezier184Path.addCurve(to: CGPoint(x: 126.09, y: 40.61), controlPoint1: CGPoint(x: 124.34, y: 42.06), controlPoint2: CGPoint(x: 125.54, y: 40.95))
        bezier184Path.addCurve(to: CGPoint(x: 127.41, y: 38.51), controlPoint1: CGPoint(x: 126.64, y: 40.28), controlPoint2: CGPoint(x: 127.74, y: 39.04))
        bezier184Path.addCurve(to: CGPoint(x: 125.24, y: 36.68), controlPoint1: CGPoint(x: 127.07, y: 37.98), controlPoint2: CGPoint(x: 126.85, y: 37.04))
        bezier184Path.addCurve(to: CGPoint(x: 122.96, y: 40.22), controlPoint1: CGPoint(x: 123.64, y: 36.32), controlPoint2: CGPoint(x: 121.57, y: 38.38))
        bezier184Path.close()
        context.saveGState()
        bezier184Path.addClip()
        context.drawLinearGradient(meteorit, start: CGPoint(x: 127.47, y: 38.95), end: CGPoint(x: 122.5, y: 38.95), options: [])
        context.restoreGState()



        context.restoreGState()


        //// Cover
        context.saveGState()
        context.setBlendMode(.destinationIn)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Mask 2 Drawing
        context.saveGState()
        context.translateBy(x: 0, y: 0.05)
        context.scaleBy(x: 1, y: expression4)

        let mask2Path = UIBezierPath()
        mask2Path.move(to: CGPoint(x: 0, y: 108.71))
        mask2Path.addCurve(to: CGPoint(x: 64.61, y: 82.44), controlPoint1: CGPoint(x: 0, y: 108.71), controlPoint2: CGPoint(x: 17.39, y: 69.97))
        mask2Path.addCurve(to: CGPoint(x: 192.28, y: 156.6), controlPoint1: CGPoint(x: 111.82, y: 94.91), controlPoint2: CGPoint(x: 136.24, y: 151.4))
        mask2Path.addCurve(to: CGPoint(x: 288.79, y: 103.25), controlPoint1: CGPoint(x: 248.33, y: 161.81), controlPoint2: CGPoint(x: 233.44, y: 110.85))
        mask2Path.addCurve(to: CGPoint(x: 414, y: 126.21), controlPoint1: CGPoint(x: 344.14, y: 95.66), controlPoint2: CGPoint(x: 414, y: 126.21))
        mask2Path.addLine(to: CGPoint(x: 414, y: -0))
        mask2Path.addLine(to: CGPoint(x: 0, y: -0))
        mask2Path.addLine(to: CGPoint(x: 0, y: 108.71))
        mask2Path.close()
        context.saveGState()
        mask2Path.addClip()
        context.drawLinearGradient(paint0_linear4, start: CGPoint(x: 207, y: -0), end: CGPoint(x: 207, y: 156.98), options: [])
        context.restoreGState()

        context.restoreGState()


        //// Mask 3 Drawing
        context.saveGState()
        context.translateBy(x: 1.87, y: 30.99)
        context.scaleBy(x: 1, y: 1.6)

        let mask3Path = UIBezierPath()
        mask3Path.move(to: CGPoint(x: 0, y: 78.63))
        mask3Path.addCurve(to: CGPoint(x: 51.38, y: 48.96), controlPoint1: CGPoint(x: 0, y: 78.63), controlPoint2: CGPoint(x: 4.26, y: 49.09))
        mask3Path.addCurve(to: CGPoint(x: 194.98, y: 115.98), controlPoint1: CGPoint(x: 98.51, y: 48.82), controlPoint2: CGPoint(x: 140.99, y: 115.75))
        mask3Path.addCurve(to: CGPoint(x: 301.67, y: 68.04), controlPoint1: CGPoint(x: 248.97, y: 116.21), controlPoint2: CGPoint(x: 237.91, y: 68.31))
        mask3Path.addCurve(to: CGPoint(x: 414, y: 89.33), controlPoint1: CGPoint(x: 365.43, y: 67.76), controlPoint2: CGPoint(x: 414, y: 89.33))
        mask3Path.addLine(to: CGPoint(x: 409.92, y: 538.58))
        mask3Path.addLine(to: CGPoint(x: 0, y: 538.35))
        mask3Path.addLine(to: CGPoint(x: 0, y: 78.63))
        mask3Path.close()
        color.setFill()
        mask3Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardSpaceship1(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 896), resizing: ResizingBehavior = .aspectFit, moveToOnboard: CGFloat = 1, onboardAnimation: CGFloat = 0.9, onboardOffset: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 896), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 896)


        //// Color Declarations
        let paint0_linear4Color = UIColor(red: 0.068, green: 0.008, blue: 0.523, alpha: 1.000)
        let paint0_linear4Color2 = UIColor(red: 0.249, green: 0.209, blue: 0.952, alpha: 1.000)
        let color = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 0.000)

        //// Gradient Declarations
        let paint0_linear4 = CGGradient(colorsSpace: nil, colors: [paint0_linear4Color.cgColor, paint0_linear4Color.blended(withFraction: 0.5, of: paint0_linear4Color2).cgColor, paint0_linear4Color2.cgColor] as CFArray, locations: [0, 0.51, 1])!

        //// Image Declarations
        let spaceship = UIImage(named: "spaceship.png")!

        //// Variable Declarations
        let expression4: CGFloat = 15 * moveToOnboard
        let spaceshipMovingExp: CGFloat = onboardAnimation < 0.1 ? 200 : (onboardAnimation >= 0.1 && onboardAnimation <= 0.2 ? 200 + (onboardAnimation - 0.1) * 360 : 200 + (0.2 - 0.1) * 360)
        let spaceshipMovingExp2: CGFloat = onboardAnimation < 0.1 ? 190 : (onboardAnimation >= 0.1 && onboardAnimation <= 0.2 ? 190 - (onboardAnimation - 0.1) * 360 : 190 - (0.2 - 0.1) * 360)
        let spaceshipOpacity1: CGFloat = onboardAnimation < 0.8 ? 1 : 0
        let dialogSpaceship = onboardAnimation >= 0.1 && onboardAnimation < 0.11 ? "Ð¥ÑÑÑÑÐ¾Ð½, ÑÑÐ¾\nÐÐ¾Ð½Ð´-1, Ð¿ÑÐ¸ÐµÐ¼.." : (onboardAnimation >= 0.11 && onboardAnimation < 0.12 ? "Ð­ÑÐ¾ Ð¥ÑÑÑÑÐ¾Ð½, Ð²Ð°Ñ ÑÐ»ÑÑÑ\nÐ¿ÑÐµÐºÑÐ°ÑÐ½Ð¾. ÐÐ¾Ð»Ð¾Ð¶Ð¸ÑÐµ Ð¾Ð±\nÑÑÐ°ÑÑÑÐµ Ð¸ÑÑÐ»ÐµÐ´Ð¾Ð²Ð°Ð½Ð¸Ñ.. Ð¿ÑÐ¸ÐµÐ¼.." : (onboardAnimation >= 0.12 && onboardAnimation < 0.13 ? "ÐÐ¾Ð½Ð´-1: Ð¾ÑÐ½Ð¾Ð²Ð½ÑÐµ Ð¸ÑÑÐ»ÐµÐ´Ð¾Ð²Ð°Ð½Ð¸Ñ \nÐ·Ð°ÐºÐ¾Ð½ÑÐµÐ½Ñ. ÐÑÑÐ°Ð»Ð¾ÑÑ ÑÐ´ÐµÐ»Ð°ÑÑ Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾\nÑÐ¾ÑÐ¾ÑÐ½Ð¸Ð¼ÐºÐ¾Ð² Ð¸ Ð³Ð¾ÑÐ¾Ð²Ð¸Ð¼ÑÑ Ðº Ð²Ð¾Ð·Ð²ÑÐ°ÑÐµÐ½Ð¸Ñ.." : (onboardAnimation >= 0.13 && onboardAnimation < 0.14 ? "Ð¥ÑÑÑÑÐ¾Ð½: Ð²Ð°Ñ Ð¿Ð¾Ð½ÑÐ». ÐÐµ Ð·Ð°Ð±ÑÐ´ÑÑÐµ ÑÐ´ÐµÐ»Ð°ÑÑ ÑÐµÐ»ÑÐ¸ Ð½Ð° ÑÐ¾Ð½Ðµ ÐÐµÐ¿ÑÑÐ½Ð°.. Ð°ÑÐ°ÑÐ°" : (onboardAnimation >= 0.14 && onboardAnimation < 0.15 ? "ÐÐ¾Ð½Ð´-1: ÐµÑÐµ Ð±Ñ.. Ð¶ÐµÐ½Ð° ÑÐºÐ°Ð·Ð°Ð»Ð°, ÑÑÐ¾ Ð¼ÐµÐ½Ñ Ð´Ð¾Ð¼Ð¾Ð¹ Ð½Ðµ Ð¿ÑÑÑÐ¸Ñ Ð±ÐµÐ· ÑÑÐ¾Ð³Ð¾ ÑÐ¾ÑÐ¾.. " : (onboardAnimation >= 0.15 && onboardAnimation < 0.16 ? "Ð¥ÑÑÑÑÐ¾Ð½: ÐÐ½Ð¸Ð¼Ð°Ð½Ð¸Ðµ, ÐÐ¾Ð½Ð´-1. ÐÐ°Ð¼ÐµÑÐ¸Ð» ÑÑÑÐ°Ð½Ð½ÑÐ¹ Ð¿ÑÐ¸Ð±Ð»Ð¸Ð¶Ð°ÑÑÐ¸Ð¹ÑÑ Ð¾Ð±ÑÐµÐºÑ, Ð»ÐµÑÑÑÐ¸Ð¹ Ð² Ð²Ð°ÑÑ ÑÑÐ¾ÑÐ¾Ð½Ñ!" : (onboardAnimation >= 0.16 && onboardAnimation < 0.17 ? "ÐÐ¾Ð½Ð´-1: ÐÐ½Ð¸Ð¼Ð°Ð½Ð¸Ðµ Ð²ÑÐµÐ¼Ñ ÑÐºÐ¸Ð¿Ð°Ð¶Ñ, ÑÐ±Ð°Ð²Ð¸ÑÑ Ð´Ð²Ð¸Ð³Ð°ÑÐµÐ»Ð¸" : (onboardAnimation >= 0.17 && onboardAnimation < 0.18 ? "Ð¥ÑÑÑÑÐ¾Ð½: ÐÐµÑÐ¸Ñ Ð¿ÑÑÐ¼Ð¾ Ð½Ð° Ð²Ð°Ñ.. Ð¡ÑÐ¾ÑÐ½Ð¾ ÑÑÐ¾Ð´Ð¸ÑÐµ Ð² ÑÑÐ¾ÑÐ¾Ð½Ñ!" : (onboardAnimation >= 0.18 && onboardAnimation < 0.19 ? "ÐÐ¾Ð½Ð´-1: ÐÑ ÐµÐ³Ð¾ Ð²Ð¸Ð´Ð¸Ð¼!" : (onboardAnimation >= 0.19 && onboardAnimation <= 0.2 ? "ÐÐ¾Ð½Ð´-1: ÐÐµ ÑÑÐ¿ÐµÐ²Ð°ÐµÐ¼! ÐÐ°Ð°Ð°..." : (onboardAnimation >= 1 && onboardAnimation < 1.1 ? "Ð¥ÑÑÑÑÐ¾Ð½: ÐÐ¾Ð½Ð´-1, Ð²Ñ ÑÐµÐ»Ñ?" : (onboardAnimation >= 1.1 && onboardAnimation <= 1.2 ? "ÐÐ¾Ð½Ð´-1: ÐÐ°, Ð²ÑÐµ Ð¶Ð¸Ð²Ñ. ÐÐ¾ Ð¿Ð¾ÑÐ¾Ð¶Ðµ ÐºÐ¾ÑÐ°Ð±Ð»Ñ ÑÐ¸Ð»ÑÐ½Ð¾ Ð¿Ð¾Ð²ÑÐµÐ¶Ð´ÐµÐ½. ÐÐ°Ð¼ Ð¿Ð¾ÑÑÐµÐ±ÑÐµÑÑÑ Ð²ÑÐµÐ¼Ñ, ÑÑÐ¾Ð±Ñ ÐµÐ³Ð¾ Ð²Ð¾ÑÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÑ" : "")))))))))))
        let dialogOpacity: CGFloat = onboardAnimation >= 0.1 && onboardAnimation < 0.8 ? 1 : 0
        let dustOpacity: CGFloat = onboardAnimation <= 0.09 ? 0.05 * onboardAnimation * 11.111 : (onboardAnimation > 0.09 && onboardAnimation < 0.2 ? 0.05 : 0)
        let scaleSpacehipExp: CGFloat = onboardAnimation <= 0.1 ? 0.07 * (1.1 - onboardAnimation) : (onboardAnimation <= 0.2 + onboardOffset ? 0.07 : (onboardAnimation >= 0.2 + onboardOffset && onboardAnimation <= 0.5 + onboardOffset ? (0.5 - onboardAnimation + onboardOffset) * (1.0 / (0.5 - 0.2)) * 0.07 : 0))

        //// SpaceshipPic Drawing
        context.saveGState()
        context.translateBy(x: spaceshipMovingExp, y: 324.86)
        context.scaleBy(x: scaleSpacehipExp, y: scaleSpacehipExp)

        context.saveGState()
        context.setAlpha(spaceshipOpacity1)

        let spaceshipPicRect = CGRect(x: -508.27, y: -2373.93, width: 1238, height: 1708)
        let spaceshipPicPath = UIBezierPath(rect: spaceshipPicRect)
        context.saveGState()
        spaceshipPicPath.addClip()
        context.translateBy(x: floor(spaceshipPicRect.minX + 0.5), y: floor(spaceshipPicRect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -spaceship.size.height)
        context.draw(spaceship.cgImage!, in: CGRect(x: 0, y: 0, width: spaceship.size.width, height: spaceship.size.height))
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Cover
        context.saveGState()
        context.setBlendMode(.destinationIn)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Mask 2 Drawing
        context.saveGState()
        context.translateBy(x: 0, y: 0.05)
        context.scaleBy(x: 1, y: expression4)

        let mask2Path = UIBezierPath()
        mask2Path.move(to: CGPoint(x: 0, y: 108.71))
        mask2Path.addCurve(to: CGPoint(x: 64.61, y: 82.44), controlPoint1: CGPoint(x: 0, y: 108.71), controlPoint2: CGPoint(x: 17.39, y: 69.97))
        mask2Path.addCurve(to: CGPoint(x: 192.28, y: 156.6), controlPoint1: CGPoint(x: 111.82, y: 94.91), controlPoint2: CGPoint(x: 136.24, y: 151.4))
        mask2Path.addCurve(to: CGPoint(x: 288.79, y: 103.25), controlPoint1: CGPoint(x: 248.33, y: 161.81), controlPoint2: CGPoint(x: 233.44, y: 110.85))
        mask2Path.addCurve(to: CGPoint(x: 414, y: 126.21), controlPoint1: CGPoint(x: 344.14, y: 95.66), controlPoint2: CGPoint(x: 414, y: 126.21))
        mask2Path.addLine(to: CGPoint(x: 414, y: -0))
        mask2Path.addLine(to: CGPoint(x: 0, y: -0))
        mask2Path.addLine(to: CGPoint(x: 0, y: 108.71))
        mask2Path.close()
        context.saveGState()
        mask2Path.addClip()
        context.drawLinearGradient(paint0_linear4, start: CGPoint(x: 207, y: -0), end: CGPoint(x: 207, y: 156.98), options: [])
        context.restoreGState()

        context.restoreGState()


        //// Mask 3 Drawing
        context.saveGState()
        context.translateBy(x: 1.87, y: 30.99)
        context.scaleBy(x: 1, y: 1.6)

        let mask3Path = UIBezierPath()
        mask3Path.move(to: CGPoint(x: 0, y: 78.63))
        mask3Path.addCurve(to: CGPoint(x: 51.38, y: 48.96), controlPoint1: CGPoint(x: 0, y: 78.63), controlPoint2: CGPoint(x: 4.26, y: 49.09))
        mask3Path.addCurve(to: CGPoint(x: 194.98, y: 115.98), controlPoint1: CGPoint(x: 98.51, y: 48.82), controlPoint2: CGPoint(x: 140.99, y: 115.75))
        mask3Path.addCurve(to: CGPoint(x: 301.67, y: 68.04), controlPoint1: CGPoint(x: 248.97, y: 116.21), controlPoint2: CGPoint(x: 237.91, y: 68.31))
        mask3Path.addCurve(to: CGPoint(x: 414, y: 89.33), controlPoint1: CGPoint(x: 365.43, y: 67.76), controlPoint2: CGPoint(x: 414, y: 89.33))
        mask3Path.addLine(to: CGPoint(x: 409.92, y: 538.58))
        mask3Path.addLine(to: CGPoint(x: 0, y: 538.35))
        mask3Path.addLine(to: CGPoint(x: 0, y: 78.63))
        mask3Path.close()
        color.setFill()
        mask3Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle Drawing
        context.saveGState()
        context.setAlpha(dialogOpacity)

        let rectanglePath = UIBezierPath(roundedRect: CGRect(x: 30, y: 37, width: 176, height: 101), cornerRadius: 20)
        UIColor.gray.setFill()
        rectanglePath.fill()

        context.restoreGState()


        //// Text Drawing
        context.saveGState()
        context.setAlpha(dialogOpacity)

        let textRect = CGRect(x: 41.22, y: 43.43, width: 160.47, height: 87.88)
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .left
        let textFontAttributes = [
            .font: UIFont(name: "Play", size: 13)!,
            .foregroundColor: UIColor.white,
            .paragraphStyle: textStyle,
        ] as [NSAttributedString.Key: Any]

        let textTextHeight: CGFloat = dialogSpaceship.boundingRect(with: CGSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: textRect)
        dialogSpaceship.draw(in: CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        context.restoreGState()

        context.restoreGState()


        //// Oval Drawing
        context.saveGState()
        context.setAlpha(dialogOpacity)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 138, y: 145, width: 18, height: 18))
        UIColor.gray.setFill()
        ovalPath.fill()

        context.restoreGState()


        //// Oval 2 Drawing
        context.saveGState()
        context.setAlpha(dialogOpacity)

        let oval2Path = UIBezierPath(ovalIn: CGRect(x: 157.84, y: 166.33, width: 11.04, height: 10.4))
        UIColor.gray.setFill()
        oval2Path.fill()

        context.restoreGState()


        //// Oval 3 Drawing
        context.saveGState()
        context.translateBy(x: 292.25, y: 311.95)

        context.saveGState()
        context.setAlpha(dustOpacity)

        let oval3Path = UIBezierPath(ovalIn: CGRect(x: (spaceshipMovingExp2 - 190.54296875), y: -4.94, width: 3, height: 3))
        UIColor.white.setFill()
        oval3Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Oval 4 Drawing
        context.saveGState()
        context.translateBy(x: 258.25, y: 344.77)

        context.saveGState()
        context.setAlpha(dustOpacity)

        let oval4Path = UIBezierPath(ovalIn: CGRect(x: (spaceshipMovingExp2 - 190.200195312), y: -4.91, width: 3, height: 3))
        UIColor.white.setFill()
        oval4Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Oval 5 Drawing
        context.saveGState()
        context.translateBy(x: 256.6, y: 318.31)

        context.saveGState()
        context.setAlpha(dustOpacity)

        let oval5Path = UIBezierPath(ovalIn: CGRect(x: (spaceshipMovingExp2 - 190.54296875), y: -4.94, width: 3, height: 3))
        UIColor.white.setFill()
        oval5Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: (spaceshipMovingExp2 - 36.2637396885), y: 339.35)

        context.saveGState()
        context.setAlpha(dustOpacity)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 94.68, y: 2.65))
        bezier2Path.addCurve(to: CGPoint(x: 103.37, y: 1.33), controlPoint1: CGPoint(x: 97.86, y: 1.96), controlPoint2: CGPoint(x: 98.39, y: 1.12))
        bezier2Path.addCurve(to: CGPoint(x: 114.56, y: 3.5), controlPoint1: CGPoint(x: 108.34, y: 1.54), controlPoint2: CGPoint(x: 109.74, y: 3.28))
        bezier2Path.addCurve(to: CGPoint(x: 122.66, y: 2.19), controlPoint1: CGPoint(x: 119.39, y: 3.71), controlPoint2: CGPoint(x: 118.23, y: 2.04))
        bezier2Path.addCurve(to: CGPoint(x: 132.28, y: 4.09), controlPoint1: CGPoint(x: 127.09, y: 2.34), controlPoint2: CGPoint(x: 132.28, y: 4.09))
        bezier2Path.addCurve(to: CGPoint(x: 139.38, y: 3.98), controlPoint1: CGPoint(x: 132.28, y: 4.09), controlPoint2: CGPoint(x: 135.63, y: 3.47))
        bezier2Path.addCurve(to: CGPoint(x: 147.27, y: 6.12), controlPoint1: CGPoint(x: 143.12, y: 4.48), controlPoint2: CGPoint(x: 147.27, y: 6.12))
        bezier2Path.addCurve(to: CGPoint(x: 139.35, y: 6.85), controlPoint1: CGPoint(x: 147.27, y: 6.12), controlPoint2: CGPoint(x: 143.06, y: 6.8))
        bezier2Path.addCurve(to: CGPoint(x: 132.42, y: 6.34), controlPoint1: CGPoint(x: 135.63, y: 6.91), controlPoint2: CGPoint(x: 136.69, y: 6.05))
        bezier2Path.addCurve(to: CGPoint(x: 122.25, y: 8.04), controlPoint1: CGPoint(x: 128.15, y: 6.64), controlPoint2: CGPoint(x: 126.38, y: 7.97))
        bezier2Path.addCurve(to: CGPoint(x: 115.89, y: 6.61), controlPoint1: CGPoint(x: 118.12, y: 8.1), controlPoint2: CGPoint(x: 120.71, y: 6.2))
        bezier2Path.addCurve(to: CGPoint(x: 102.94, y: 9.71), controlPoint1: CGPoint(x: 111.06, y: 7.03), controlPoint2: CGPoint(x: 108.02, y: 9.58))
        bezier2Path.addCurve(to: CGPoint(x: 95.59, y: 7.11), controlPoint1: CGPoint(x: 97.87, y: 9.83), controlPoint2: CGPoint(x: 101.8, y: 6.93))
        bezier2Path.addCurve(to: CGPoint(x: 76.3, y: 8.67), controlPoint1: CGPoint(x: 89.38, y: 7.29), controlPoint2: CGPoint(x: 83.08, y: 9.12))
        bezier2Path.addCurve(to: CGPoint(x: 52.69, y: 9.87), controlPoint1: CGPoint(x: 75.17, y: 8.59), controlPoint2: CGPoint(x: 63.39, y: 9.8))
        bezier2Path.addCurve(to: CGPoint(x: 37.33, y: 8.71), controlPoint1: CGPoint(x: 46.39, y: 9.91), controlPoint2: CGPoint(x: 40.38, y: 8.98))
        bezier2Path.addCurve(to: CGPoint(x: 24.46, y: 9.95), controlPoint1: CGPoint(x: 34.68, y: 8.49), controlPoint2: CGPoint(x: 27.45, y: 9.96))
        bezier2Path.addCurve(to: CGPoint(x: 12.07, y: 8.19), controlPoint1: CGPoint(x: 16.02, y: 9.9), controlPoint2: CGPoint(x: 20.47, y: 8.3))
        bezier2Path.addCurve(to: CGPoint(x: 0.25, y: 6.95), controlPoint1: CGPoint(x: -1.9, y: 8), controlPoint2: CGPoint(x: -0.06, y: 7.66))
        bezier2Path.addCurve(to: CGPoint(x: 11.05, y: 4.23), controlPoint1: CGPoint(x: 1.03, y: 5.2), controlPoint2: CGPoint(x: 4.85, y: 3.77))
        bezier2Path.addCurve(to: CGPoint(x: 24.61, y: 1.16), controlPoint1: CGPoint(x: 14.62, y: 4.49), controlPoint2: CGPoint(x: 19.9, y: 1.62))
        bezier2Path.addCurve(to: CGPoint(x: 37.22, y: 2.12), controlPoint1: CGPoint(x: 29.22, y: 0.72), controlPoint2: CGPoint(x: 32.76, y: 2.23))
        bezier2Path.addCurve(to: CGPoint(x: 50.65, y: 0.04), controlPoint1: CGPoint(x: 45.23, y: 1.93), controlPoint2: CGPoint(x: 49.39, y: 0.17))
        bezier2Path.addCurve(to: CGPoint(x: 64.35, y: 2.56), controlPoint1: CGPoint(x: 54.92, y: -0.38), controlPoint2: CGPoint(x: 57.39, y: 2.61))
        bezier2Path.addCurve(to: CGPoint(x: 78.85, y: 1.43), controlPoint1: CGPoint(x: 71.3, y: 2.51), controlPoint2: CGPoint(x: 73.83, y: 1.25))
        bezier2Path.addCurve(to: CGPoint(x: 90.63, y: 4.08), controlPoint1: CGPoint(x: 85.87, y: 1.67), controlPoint2: CGPoint(x: 90.63, y: 4.08))
        bezier2Path.addCurve(to: CGPoint(x: 94.68, y: 2.65), controlPoint1: CGPoint(x: 90.63, y: 4.08), controlPoint2: CGPoint(x: 91.5, y: 3.33))
        bezier2Path.close()
        UIColor.lightGray.setFill()
        bezier2Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: spaceshipMovingExp, y: 292.9)

        context.saveGState()
        context.setAlpha(dustOpacity)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 97.84, y: 7.13))
        bezierPath.addCurve(to: CGPoint(x: 110.32, y: 0), controlPoint1: CGPoint(x: 100.28, y: 4.01), controlPoint2: CGPoint(x: 105.89, y: -0.14))
        bezierPath.addCurve(to: CGPoint(x: 125.03, y: 16.33), controlPoint1: CGPoint(x: 114.75, y: 0.15), controlPoint2: CGPoint(x: 124.6, y: 9.58))
        bezierPath.addCurve(to: CGPoint(x: 112.05, y: 27), controlPoint1: CGPoint(x: 125.47, y: 23.08), controlPoint2: CGPoint(x: 115.16, y: 25.29))
        bezierPath.addCurve(to: CGPoint(x: 95.88, y: 25.8), controlPoint1: CGPoint(x: 108.95, y: 28.72), controlPoint2: CGPoint(x: 95.88, y: 25.8))
        bezierPath.addCurve(to: CGPoint(x: 84.84, y: 26.58), controlPoint1: CGPoint(x: 95.88, y: 25.8), controlPoint2: CGPoint(x: 88.56, y: 26.52))
        bezierPath.addCurve(to: CGPoint(x: 83.6, y: 32.3), controlPoint1: CGPoint(x: 81.13, y: 26.63), controlPoint2: CGPoint(x: 87.88, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 80.13, y: 38.76), controlPoint1: CGPoint(x: 79.33, y: 32.6), controlPoint2: CGPoint(x: 84.26, y: 38.7))
        bezierPath.addCurve(to: CGPoint(x: 76.77, y: 43.59), controlPoint1: CGPoint(x: 75.99, y: 38.83), controlPoint2: CGPoint(x: 81.6, y: 43.17))
        bezierPath.addCurve(to: CGPoint(x: 68.46, y: 42.03), controlPoint1: CGPoint(x: 71.95, y: 44.01), controlPoint2: CGPoint(x: 74.03, y: 37.63))
        bezierPath.addCurve(to: CGPoint(x: 60.59, y: 52.4), controlPoint1: CGPoint(x: 62.89, y: 46.43), controlPoint2: CGPoint(x: 66.4, y: 52.19))
        bezierPath.addCurve(to: CGPoint(x: 47.44, y: 52.68), controlPoint1: CGPoint(x: 54.78, y: 52.6), controlPoint2: CGPoint(x: 54.22, y: 53.13))
        bezierPath.addCurve(to: CGPoint(x: 36.79, y: 44.75), controlPoint1: CGPoint(x: 46.3, y: 52.6), controlPoint2: CGPoint(x: 47.49, y: 44.68))
        bezierPath.addCurve(to: CGPoint(x: 35.13, y: 30.17), controlPoint1: CGPoint(x: 30.48, y: 44.79), controlPoint2: CGPoint(x: 38.18, y: 30.43))
        bezierPath.addCurve(to: CGPoint(x: 20.61, y: 25.92), controlPoint1: CGPoint(x: 32.48, y: 29.94), controlPoint2: CGPoint(x: 23.6, y: 25.94))
        bezierPath.addCurve(to: CGPoint(x: 8.22, y: 24.16), controlPoint1: CGPoint(x: 12.17, y: 25.88), controlPoint2: CGPoint(x: 16.62, y: 24.28))
        bezierPath.addCurve(to: CGPoint(x: 7.19, y: 20.21), controlPoint1: CGPoint(x: -5.75, y: 23.98), controlPoint2: CGPoint(x: 1, y: 19.75))
        bezierPath.addCurve(to: CGPoint(x: 20.76, y: 17.14), controlPoint1: CGPoint(x: 10.77, y: 20.47), controlPoint2: CGPoint(x: 16.05, y: 17.59))
        bezierPath.addCurve(to: CGPoint(x: 33.37, y: 18.1), controlPoint1: CGPoint(x: 25.37, y: 16.7), controlPoint2: CGPoint(x: 28.91, y: 18.2))
        bezierPath.addCurve(to: CGPoint(x: 46.79, y: 16.02), controlPoint1: CGPoint(x: 41.38, y: 17.91), controlPoint2: CGPoint(x: 45.53, y: 16.14))
        bezierPath.addCurve(to: CGPoint(x: 62.23, y: 24.01), controlPoint1: CGPoint(x: 51.06, y: 15.59), controlPoint2: CGPoint(x: 55.28, y: 24.06))
        bezierPath.addCurve(to: CGPoint(x: 74.27, y: 18.7), controlPoint1: CGPoint(x: 69.18, y: 23.95), controlPoint2: CGPoint(x: 71.84, y: 17.79))
        bezierPath.addCurve(to: CGPoint(x: 83.07, y: 6.87), controlPoint1: CGPoint(x: 77.66, y: 19.96), controlPoint2: CGPoint(x: 77.36, y: 9.44))
        bezierPath.addCurve(to: CGPoint(x: 97.84, y: 7.13), controlPoint1: CGPoint(x: 88.77, y: 4.31), controlPoint2: CGPoint(x: 95.4, y: 10.25))
        bezierPath.close()
        UIColor.lightGray.setFill()
        bezierPath.fill()

        context.restoreGState()

        context.restoreGState()


        //// Bezier 3 Drawing
        context.saveGState()
        context.translateBy(x: spaceshipMovingExp2, y: 268.67)

        context.saveGState()
        context.setAlpha(dustOpacity)

        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 98.1, y: 0.25))
        bezier3Path.addCurve(to: CGPoint(x: 99.91, y: 7.52), controlPoint1: CGPoint(x: 101.48, y: -1.61), controlPoint2: CGPoint(x: 95.48, y: 7.37))
        bezier3Path.addCurve(to: CGPoint(x: 134.24, y: 12.2), controlPoint1: CGPoint(x: 104.34, y: 7.67), controlPoint2: CGPoint(x: 132.22, y: 9.68))
        bezier3Path.addCurve(to: CGPoint(x: 106.32, y: 11.25), controlPoint1: CGPoint(x: 136.26, y: 14.72), controlPoint2: CGPoint(x: 110.8, y: 11.53))
        bezier3Path.addCurve(to: CGPoint(x: 81.56, y: 16.81), controlPoint1: CGPoint(x: 101.84, y: 10.98), controlPoint2: CGPoint(x: 86.42, y: 15.39))
        bezier3Path.addCurve(to: CGPoint(x: 75.86, y: 33.23), controlPoint1: CGPoint(x: 76.71, y: 18.23), controlPoint2: CGPoint(x: 80.68, y: 32.81))
        bezier3Path.addCurve(to: CGPoint(x: 55.56, y: 25.94), controlPoint1: CGPoint(x: 71.03, y: 33.65), controlPoint2: CGPoint(x: 64.26, y: 27.29))
        bezier3Path.addCurve(to: CGPoint(x: 38.62, y: 26.26), controlPoint1: CGPoint(x: 46.86, y: 24.6), controlPoint2: CGPoint(x: 44.43, y: 26.06))
        bezier3Path.addCurve(to: CGPoint(x: 0, y: 25.3), controlPoint1: CGPoint(x: 32.82, y: 26.46), controlPoint2: CGPoint(x: 0.02, y: 30.26))
        bezier3Path.addCurve(to: CGPoint(x: 46.47, y: 20), controlPoint1: CGPoint(x: -0.01, y: 24.06), controlPoint2: CGPoint(x: 57.18, y: 19.92))
        bezier3Path.addCurve(to: CGPoint(x: 44.72, y: 16.13), controlPoint1: CGPoint(x: 40.17, y: 20.04), controlPoint2: CGPoint(x: 43.46, y: 16.26))
        bezier3Path.addCurve(to: CGPoint(x: 62.63, y: 16.59), controlPoint1: CGPoint(x: 48.99, y: 15.71), controlPoint2: CGPoint(x: 55.68, y: 16.64))
        bezier3Path.addCurve(to: CGPoint(x: 87.37, y: 7.43), controlPoint1: CGPoint(x: 69.58, y: 16.54), controlPoint2: CGPoint(x: 81.66, y: 10))
        bezier3Path.addCurve(to: CGPoint(x: 98.1, y: 0.25), controlPoint1: CGPoint(x: 93.08, y: 4.86), controlPoint2: CGPoint(x: 94.72, y: 2.12))
        bezier3Path.close()
        UIColor.lightGray.setFill()
        bezier3Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Oval 6 Drawing
        context.saveGState()
        context.translateBy(x: 261.31, y: 360.79)

        context.saveGState()
        context.setAlpha(dustOpacity)

        let oval6Path = UIBezierPath(ovalIn: CGRect(x: (spaceshipMovingExp2 - 190.54296875), y: -4.94, width: 3, height: 3))
        UIColor.white.setFill()
        oval6Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Oval 7 Drawing
        context.saveGState()
        context.translateBy(x: 227.32, y: 393.61)

        context.saveGState()
        context.setAlpha(dustOpacity)

        let oval7Path = UIBezierPath(ovalIn: CGRect(x: (spaceshipMovingExp2 - 190.200195312), y: -4.91, width: 3, height: 3))
        UIColor.white.setFill()
        oval7Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Oval 8 Drawing
        context.saveGState()
        context.translateBy(x: 225.67, y: 367.15)

        context.saveGState()
        context.setAlpha(dustOpacity)

        let oval8Path = UIBezierPath(ovalIn: CGRect(x: (spaceshipMovingExp2 - 190.54296875), y: -4.94, width: 3, height: 3))
        UIColor.white.setFill()
        oval8Path.fill()

        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardSpaceship3(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 896), resizing: ResizingBehavior = .aspectFit, onboardAnimation: CGFloat = 0.9, onboardOffset: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 896), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 896)



        //// Image Declarations
        let brokenSpaceship = UIImage(named: "brokenSpaceship.png")!

        //// Variable Declarations
        let spaceshipOpacity3: CGFloat = onboardAnimation > 1 ? 1 : 0
        let scaleSpacehipExp: CGFloat = onboardAnimation <= 0.1 ? 0.07 * (1.1 - onboardAnimation) : (onboardAnimation <= 0.2 + onboardOffset ? 0.07 : (onboardAnimation >= 0.2 + onboardOffset && onboardAnimation <= 0.5 + onboardOffset ? (0.5 - onboardAnimation + onboardOffset) * (1.0 / (0.5 - 0.2)) * 0.07 : 0))

        //// Picture 2 Drawing
        context.saveGState()
        context.translateBy(x: 234.42, y: 328.35)
        context.scaleBy(x: scaleSpacehipExp, y: scaleSpacehipExp)

        context.saveGState()
        context.setAlpha(spaceshipOpacity3)

        let picture2Path = UIBezierPath(rect: CGRect(x: -448.49, y: -2248.75, width: 1162, height: 1435))
        context.saveGState()
        picture2Path.addClip()
        context.translateBy(x: -448, y: -2249)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -brokenSpaceship.size.height)
        context.draw(brokenSpaceship.cgImage!, in: CGRect(x: 0, y: 0, width: brokenSpaceship.size.width, height: brokenSpaceship.size.height))
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardCosmosDust(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 896), resizing: ResizingBehavior = .aspectFit, onboardAnimation: CGFloat = 0.9) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 896), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 896)


        //// Color Declarations
        let color2 = UIColor(red: 0.178, green: 0.220, blue: 0.494, alpha: 1.000)

        //// Variable Declarations
        let spaceshipMovingExp2: CGFloat = onboardAnimation < 0.1 ? 190 : (onboardAnimation >= 0.1 && onboardAnimation <= 0.2 ? 190 - (onboardAnimation - 0.1) * 360 : 190 - (0.2 - 0.1) * 360)

        //// Oval 3 Drawing
        context.saveGState()
        context.translateBy(x: 292.25, y: 311.95)

        context.saveGState()
        context.setAlpha(0.1)

        let oval3Path = UIBezierPath(ovalIn: CGRect(x: (spaceshipMovingExp2 - 190.54296875), y: -4.94, width: 9.23, height: 9.21))
        UIColor.white.setFill()
        oval3Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Oval Drawing
        context.saveGState()
        context.translateBy(x: 258.25, y: 344.77)

        context.saveGState()
        context.setAlpha(0.1)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: (spaceshipMovingExp2 - 190.200195312), y: -4.91, width: 9.23, height: 9.21))
        UIColor.white.setFill()
        ovalPath.fill()

        context.restoreGState()

        context.restoreGState()


        //// Oval 2 Drawing
        context.saveGState()
        context.translateBy(x: 256.6, y: 318.31)

        context.saveGState()
        context.setAlpha(0.1)

        let oval2Path = UIBezierPath(ovalIn: CGRect(x: (spaceshipMovingExp2 - 190.54296875), y: -4.94, width: 9.23, height: 9.21))
        UIColor.white.setFill()
        oval2Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: spaceshipMovingExp2, y: 339.15)

        context.saveGState()
        context.setAlpha(0.5)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 26.44, y: 1.35))
        bezierPath.addCurve(to: CGPoint(x: 35.12, y: 0.03), controlPoint1: CGPoint(x: 29.62, y: 0.66), controlPoint2: CGPoint(x: 30.15, y: -0.18))
        bezierPath.addCurve(to: CGPoint(x: 46.32, y: 2.2), controlPoint1: CGPoint(x: 40.1, y: 0.25), controlPoint2: CGPoint(x: 41.5, y: 1.99))
        bezierPath.addCurve(to: CGPoint(x: 54.42, y: 0.9), controlPoint1: CGPoint(x: 51.15, y: 2.42), controlPoint2: CGPoint(x: 49.99, y: 0.75))
        bezierPath.addCurve(to: CGPoint(x: 64.04, y: 2.79), controlPoint1: CGPoint(x: 58.85, y: 1.04), controlPoint2: CGPoint(x: 64.04, y: 2.79))
        bezierPath.addCurve(to: CGPoint(x: 71.14, y: 2.68), controlPoint1: CGPoint(x: 64.04, y: 2.79), controlPoint2: CGPoint(x: 67.39, y: 2.17))
        bezierPath.addCurve(to: CGPoint(x: 79.03, y: 4.83), controlPoint1: CGPoint(x: 74.88, y: 3.19), controlPoint2: CGPoint(x: 79.03, y: 4.83))
        bezierPath.addCurve(to: CGPoint(x: 71.11, y: 5.55), controlPoint1: CGPoint(x: 79.03, y: 4.83), controlPoint2: CGPoint(x: 74.82, y: 5.5))
        bezierPath.addCurve(to: CGPoint(x: 64.18, y: 5.05), controlPoint1: CGPoint(x: 67.39, y: 5.61), controlPoint2: CGPoint(x: 68.45, y: 4.75))
        bezierPath.addCurve(to: CGPoint(x: 54.01, y: 6.74), controlPoint1: CGPoint(x: 59.9, y: 5.34), controlPoint2: CGPoint(x: 58.14, y: 6.67))
        bezierPath.addCurve(to: CGPoint(x: 47.64, y: 5.32), controlPoint1: CGPoint(x: 49.87, y: 6.81), controlPoint2: CGPoint(x: 52.47, y: 4.9))
        bezierPath.addCurve(to: CGPoint(x: 34.7, y: 8.41), controlPoint1: CGPoint(x: 42.82, y: 5.73), controlPoint2: CGPoint(x: 39.78, y: 8.29))
        bezierPath.addCurve(to: CGPoint(x: 27.35, y: 5.81), controlPoint1: CGPoint(x: 29.63, y: 8.54), controlPoint2: CGPoint(x: 33.56, y: 5.64))
        bezierPath.addCurve(to: CGPoint(x: 9.86, y: 9.13), controlPoint1: CGPoint(x: 21.14, y: 5.99), controlPoint2: CGPoint(x: 16.64, y: 9.58))
        bezierPath.addCurve(to: CGPoint(x: 0.23, y: 4), controlPoint1: CGPoint(x: 3.08, y: 8.67), controlPoint2: CGPoint(x: -1.04, y: 6.02))
        bezierPath.addCurve(to: CGPoint(x: 14.95, y: 1.03), controlPoint1: CGPoint(x: 1.5, y: 1.97), controlPoint2: CGPoint(x: 9.41, y: 1.33))
        bezierPath.addCurve(to: CGPoint(x: 22.39, y: 2.79), controlPoint1: CGPoint(x: 20.49, y: 0.72), controlPoint2: CGPoint(x: 22.39, y: 2.79))
        bezierPath.addCurve(to: CGPoint(x: 26.44, y: 1.35), controlPoint1: CGPoint(x: 22.39, y: 2.79), controlPoint2: CGPoint(x: 23.25, y: 2.04))
        bezierPath.close()
        color2.setFill()
        bezierPath.fill()

        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOnboardExplosion(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 896), resizing: ResizingBehavior = .aspectFit, onboardAnimation: CGFloat = 0.9) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 896), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 896)



        //// Variable Declarations
        let explosiveDetail1 = onboardAnimation <= 0.8 ? CGPoint(x: 234, y: -104) : (onboardAnimation >= 0.8 && onboardAnimation <= 1 ? CGPoint(x: 234 * (1 - onboardAnimation) * 5, y: -104 * (1 - onboardAnimation) * 5) : CGPoint(x: 0, y: 0))
        let explosiveDetail = onboardAnimation <= 0.8 ? CGPoint(x: -166, y: -150) : (onboardAnimation >= 0.8 && onboardAnimation <= 1 ? CGPoint(x: -166 * (1 - onboardAnimation) * 5, y: -150 * (1 - onboardAnimation) * 5) : CGPoint(x: 0, y: 0))
        let explosiveDetail3 = onboardAnimation <= 0.8 ? CGPoint(x: 247, y: -670) : (onboardAnimation >= 0.8 && onboardAnimation <= 1 ? CGPoint(x: 247 * (1 - onboardAnimation) * 5, y: -670 * (1 - onboardAnimation) * 5) : CGPoint(x: 0, y: 0))
        let explosiveDetail4 = onboardAnimation <= 0.8 ? CGPoint(x: 244, y: -483) : (onboardAnimation >= 0.8 && onboardAnimation <= 1 ? CGPoint(x: 244 * (1 - onboardAnimation) * 5, y: -483 * (1 - onboardAnimation) * 5) : CGPoint(x: 0, y: 0))
        let explosiveDetail2 = onboardAnimation <= 0.8 ? CGPoint(x: -200, y: 192) : (onboardAnimation >= 0.8 && onboardAnimation <= 1 ? CGPoint(x: -200 * (1 - onboardAnimation) * 5, y: 192 * (1 - onboardAnimation) * 5) : CGPoint(x: 0, y: 0))
        let explosiveOpacity: CGFloat = onboardAnimation >= 0.8 && onboardAnimation <= 1 ? 1 : 0

        //// Rectangle 5 Drawing
        context.saveGState()
        context.translateBy(x: -2.48, y: 302.72)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle5Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail1.x, y: explosiveDetail1.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle5Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle 6 Drawing
        context.saveGState()
        context.translateBy(x: 426.38, y: 354.54)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle6Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail.x, y: explosiveDetail.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle6Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle 7 Drawing
        context.saveGState()
        context.translateBy(x: -21.88, y: 888.71)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle7Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail3.x, y: explosiveDetail3.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle7Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle 8 Drawing
        context.saveGState()
        context.translateBy(x: -21.57, y: 695.37)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle8Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail4.x, y: explosiveDetail4.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle8Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle 10 Drawing
        context.saveGState()
        context.translateBy(x: 453.52, y: 3.33)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle10Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail2.x, y: explosiveDetail2.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle10Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle Drawing
        context.saveGState()
        context.translateBy(x: -6.79, y: 280.77)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectanglePath = UIBezierPath(roundedRect: CGRect(x: explosiveDetail1.x, y: explosiveDetail1.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectanglePath.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle 2 Drawing
        context.saveGState()
        context.translateBy(x: -5.23, y: 334.29)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle2Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail1.x, y: explosiveDetail1.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle2Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle 3 Drawing
        context.saveGState()
        context.translateBy(x: -17.36, y: 269.38)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle3Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail1.x, y: explosiveDetail1.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle3Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle 4 Drawing
        context.saveGState()
        context.translateBy(x: 430.16, y: 335.48)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle4Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail.x, y: explosiveDetail.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle4Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle 9 Drawing
        context.saveGState()
        context.translateBy(x: 420.47, y: 379.52)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle9Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail.x, y: explosiveDetail.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle9Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle 11 Drawing
        context.saveGState()
        context.translateBy(x: 437.4, y: 371.97)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle11Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail.x, y: explosiveDetail.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle11Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle 12 Drawing
        context.saveGState()
        context.translateBy(x: 446.91, y: 38.19)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle12Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail2.x, y: explosiveDetail2.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle12Path.fill()

        context.restoreGState()

        context.restoreGState()


        //// Rectangle 13 Drawing
        context.saveGState()
        context.translateBy(x: 419.51, y: 23.62)

        context.saveGState()
        context.setAlpha(explosiveOpacity)

        let rectangle13Path = UIBezierPath(roundedRect: CGRect(x: explosiveDetail2.x, y: explosiveDetail2.y, width: 3, height: 2.62), cornerRadius: 1.31)
        UIColor.red.setFill()
        rectangle13Path.fill()

        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }




    @objc(OnboardKitResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}



private extension UIColor {
    func blended(withFraction fraction: CGFloat, of color: UIColor) -> UIColor {
        var r1: CGFloat = 1, g1: CGFloat = 1, b1: CGFloat = 1, a1: CGFloat = 1
        var r2: CGFloat = 1, g2: CGFloat = 1, b2: CGFloat = 1, a2: CGFloat = 1

        self.getRed(&r1, green: &g1, blue: &b1, alpha: &a1)
        color.getRed(&r2, green: &g2, blue: &b2, alpha: &a2)

        return UIColor(red: r1 * (1 - fraction) + r2 * fraction,
            green: g1 * (1 - fraction) + g2 * fraction,
            blue: b1 * (1 - fraction) + b2 * fraction,
            alpha: a1 * (1 - fraction) + a2 * fraction);
    }
}
