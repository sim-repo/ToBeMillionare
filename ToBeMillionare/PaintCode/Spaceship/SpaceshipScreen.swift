//
//  SpaceshipScreen.swift
//  Millionare
//
//  Created by Igor Ivanov on 18.07.2020.
//  Copyright Â© 2020 None. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class SpaceshipScreen : NSObject {

    //// Cache

    private struct Cache {
        static let gradientColor: UIColor = UIColor(red: 0.071, green: 0.306, blue: 0.937, alpha: 1.000)
        static let gradientColor2: UIColor = UIColor(red: 0.870, green: 0.000, blue: 1.000, alpha: 1.000)
        static let gradientColor3: UIColor = UIColor(red: 0.082, green: 0.627, blue: 1.000, alpha: 1.000)
        static let mainBackground: UIColor = UIColor(red: 0.141, green: 0.082, blue: 0.424, alpha: 1.000)
        static let primaryTextColor: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        static let honeycombesStrokeColor1: UIColor = UIColor(red: 0.000, green: 0.820, blue: 1.000, alpha: 1.000)
        static let markPGradientColor4: UIColor = UIColor(red: 0.988, green: 0.671, blue: 0.208, alpha: 0.500)
        static let gradientColor6: UIColor = UIColor(red: 0.145, green: 0.102, blue: 0.498, alpha: 1.000)
        static let gradientColor7: UIColor = UIColor(red: 0.224, green: 0.176, blue: 0.624, alpha: 1.000)
        static let lighting: UIColor = UIColor(red: 0.094, green: 0.114, blue: 0.847, alpha: 1.000)
        static let cubeConture: UIColor = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1.000)
        static let spaceship_floorColor: UIColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        static let spaceship_floorColor2: UIColor = UIColor(red: 0.204, green: 0.127, blue: 0.752, alpha: 1.000)
        static let paint0_linear: CGGradient = CGGradient(colorsSpace: nil, colors: [SpaceshipScreen.gradientColor.cgColor, SpaceshipScreen.gradientColor2.cgColor, SpaceshipScreen.gradientColor3.cgColor] as CFArray, locations: [0, 0.5, 1])!
        static let button_linear: CGGradient = CGGradient(colorsSpace: nil, colors: [SpaceshipScreen.gradientColor6.cgColor, SpaceshipScreen.gradientColor7.cgColor] as CFArray, locations: [0, 1])!
    }

    //// Colors

    @objc dynamic public class var gradientColor: UIColor { return Cache.gradientColor }
    @objc dynamic public class var gradientColor2: UIColor { return Cache.gradientColor2 }
    @objc dynamic public class var gradientColor3: UIColor { return Cache.gradientColor3 }
    @objc dynamic public class var mainBackground: UIColor { return Cache.mainBackground }
    @objc dynamic public class var primaryTextColor: UIColor { return Cache.primaryTextColor }
    @objc dynamic public class var honeycombesStrokeColor1: UIColor { return Cache.honeycombesStrokeColor1 }
    @objc dynamic public class var markPGradientColor4: UIColor { return Cache.markPGradientColor4 }
    @objc dynamic public class var gradientColor6: UIColor { return Cache.gradientColor6 }
    @objc dynamic public class var gradientColor7: UIColor { return Cache.gradientColor7 }
    @objc dynamic public class var lighting: UIColor { return Cache.lighting }
    @objc dynamic public class var cubeConture: UIColor { return Cache.cubeConture }
    @objc dynamic public class var spaceship_floorColor: UIColor { return Cache.spaceship_floorColor }
    @objc dynamic public class var spaceship_floorColor2: UIColor { return Cache.spaceship_floorColor2 }

    //// Gradients

    @objc dynamic public class var paint0_linear: CGGradient { return Cache.paint0_linear }
    @objc dynamic public class var button_linear: CGGradient { return Cache.button_linear }

    //// Drawing Methods

    @objc dynamic public class func drawSpaceshipLoadingAnimationLayer2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 375, height: 812), resizing: ResizingBehavior = .aspectFit, spreadWings: CGFloat = 1, disc1PathOpacity: CGFloat = 1, disc1Move: CGFloat = 1, disc2PathOpacity: CGFloat = 0.908, disc2Move: CGFloat = 1, disc3PathOpacity: CGFloat = 1, disc3Move: CGFloat = 1, disc4PathOpacity: CGFloat = 1, disc4Move: CGFloat = 1, arc1Move: CGFloat = 1, arc2Move: CGFloat = 1, arc3Move: CGFloat = 1, arc4Move: CGFloat = 1, circlesMove: CGFloat = 1, redCubeMove: CGFloat = 1, redCubePathOpacity: CGFloat = 0, redCube2Move: CGFloat = 1, redCubePath2Opacity: CGFloat = 0, button1Opacity: CGFloat = 1, towerLightOpacity: CGFloat = 0, rayOpacity: CGFloat = 1, redCube3PathOpacity: CGFloat = 0, redCube3Move: CGFloat = 1, discPassLight1: CGFloat = 0, discPassLight2: CGFloat = 0, discPassLight3: CGFloat = 0, discPassLight4: CGFloat = 0, antennaMove1: CGFloat = 1, antennaMove2: CGFloat = 1, spaceDustMove: CGFloat = 0) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 375, height: 812), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 375, y: resizedFrame.height / 812)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 375, resizedFrame.height / 812)


        //// Color Declarations
        let wingsColor = UIColor(red: 0.000, green: 0.203, blue: 1.000, alpha: 0.797)
        let wingsColor2 = UIColor(red: 0.129, green: 0.127, blue: 0.140, alpha: 0.752)
        let wingPlastineColor2 = UIColor(red: 0.022, green: 0.015, blue: 0.218, alpha: 1.000)
        let wingPlastine2Color = UIColor(red: 0.082, green: 0.481, blue: 0.490, alpha: 1.000)
        let wingPlastineColor = UIColor(red: 0.000, green: 0.902, blue: 0.922, alpha: 1.000)
        let discPathColor2 = UIColor(red: 0.686, green: 0.022, blue: 0.958, alpha: 0.003)
        let discPathColor = UIColor(red: 0.883, green: 0.075, blue: 0.251, alpha: 0.395)
        let cubePathColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.294)
        let discCircle1Color2 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let gradientColor106 = UIColor(red: 0.109, green: 0.339, blue: 0.728, alpha: 1.000)
        let darkPrimary = UIColor(red: 0.128, green: 0.449, blue: 0.479, alpha: 1.000)
        let background = UIColor(red: 0.047, green: 0.049, blue: 0.299, alpha: 1.000)
        let gradientColor107 = UIColor(red: 0.024, green: 0.709, blue: 0.982, alpha: 1.000)
        let cubePathColor2 = UIColor(red: 0.543, green: 0.110, blue: 0.742, alpha: 0.404)
        let discCircle1Color = UIColor(red: 0.407, green: 0.063, blue: 0.165, alpha: 1.000)
        let primary = UIColor(red: 0.000, green: 0.902, blue: 0.922, alpha: 1.000)
        let spaceshipLightColor = UIColor(red: 0.110, green: 0.725, blue: 0.860, alpha: 0.411)
        let spaceshipLightColor2 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.359)
        let spaceshipLight2Color = UIColor(red: 0.987, green: 0.000, blue: 0.000, alpha: 0.323)
        let spaceshipLight2Color2 = UIColor(red: 0.143, green: 0.030, blue: 0.896, alpha: 0.000)
        let spaceshipLight6Color = UIColor(red: 0.454, green: 0.005, blue: 1.000, alpha: 0.741)
        let spaceshipLight6Color2 = UIColor(red: 0.042, green: 0.048, blue: 0.097, alpha: 0.000)
        let fillColor3 = UIColor(red: 0.441, green: 0.163, blue: 0.479, alpha: 1.000)
        let fillColor6 = UIColor(red: 0.508, green: 0.272, blue: 0.539, alpha: 1.000)
        let fillColor7 = UIColor(red: 0.386, green: 0.081, blue: 0.221, alpha: 1.000)
        let fillColor8 = UIColor(red: 0.726, green: 0.154, blue: 0.391, alpha: 1.000)
        let fillColor9 = UIColor(red: 0.642, green: 0.135, blue: 0.350, alpha: 1.000)
        let fillColor10 = UIColor(red: 0.260, green: 0.518, blue: 0.664, alpha: 1.000)
        let discCircle2Color = UIColor(red: 0.490, green: 0.109, blue: 0.775, alpha: 1.000)
        let discCircle3Color = UIColor(red: 0.374, green: 0.170, blue: 1.000, alpha: 1.000)
        let discCircle4Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Gradient Declarations
        let wings = CGGradient(colorsSpace: nil, colors: [wingsColor.cgColor, wingsColor.blended(withFraction: 0.5, of: wingsColor2).cgColor, wingsColor2.cgColor] as CFArray, locations: [0, 0.29, 0.98])!
        let wingPlastine2 = CGGradient(colorsSpace: nil, colors: [wingPlastine2Color.cgColor, wingPlastine2Color.blended(withFraction: 0.5, of: wingPlastineColor2).cgColor, wingPlastineColor2.cgColor] as CFArray, locations: [0, 0.22, 1])!
        let wingPlastine = CGGradient(colorsSpace: nil, colors: [wingPlastineColor.cgColor, wingPlastineColor.blended(withFraction: 0.5, of: wingPlastineColor2).cgColor, wingPlastineColor2.cgColor] as CFArray, locations: [0, 0.36, 1])!
        let discPath = CGGradient(colorsSpace: nil, colors: [discPathColor.cgColor, discPathColor2.cgColor] as CFArray, locations: [0, 1])!
        let arc = CGGradient(colorsSpace: nil, colors: [gradientColor107.cgColor, gradientColor106.cgColor] as CFArray, locations: [0, 1])!
        let cubePath = CGGradient(colorsSpace: nil, colors: [cubePathColor.cgColor, cubePathColor2.cgColor] as CFArray, locations: [0, 1])!
        let discCircle1 = CGGradient(colorsSpace: nil, colors: [discCircle1Color.cgColor, discCircle1Color2.cgColor] as CFArray, locations: [0, 0.99])!
        let discCircle2 = CGGradient(colorsSpace: nil, colors: [discCircle2Color.cgColor, discCircle1Color2.cgColor] as CFArray, locations: [0, 0.99])!
        let discCircle3 = CGGradient(colorsSpace: nil, colors: [discCircle3Color.cgColor, discCircle1Color2.cgColor] as CFArray, locations: [0, 0.99])!
        let discCircle4 = CGGradient(colorsSpace: nil, colors: [discCircle4Color.cgColor, discCircle1Color2.cgColor] as CFArray, locations: [0, 0.99])!
        let spaceshipLight = CGGradient(colorsSpace: nil, colors: [UIColor.clear.cgColor, UIColor.clear.blended(withFraction: 0.5, of: spaceshipLightColor2).cgColor, spaceshipLightColor2.cgColor, spaceshipLightColor2.blended(withFraction: 0.5, of: spaceshipLightColor).cgColor, spaceshipLightColor.cgColor] as CFArray, locations: [0, 0.21, 0.39, 0.73, 1])!
        let spaceshipLight2 = CGGradient(colorsSpace: nil, colors: [spaceshipLight2Color.cgColor, spaceshipLight2Color2.cgColor] as CFArray, locations: [0, 1])!
        let spaceshipLight6 = CGGradient(colorsSpace: nil, colors: [spaceshipLight6Color.cgColor, spaceshipLight6Color.blended(withFraction: 0.5, of: spaceshipLight6Color2).cgColor, spaceshipLight6Color2.cgColor] as CFArray, locations: [0, 0.39, 0.58])!

        //// Shadow Declarations
        let shadow3 = NSShadow()
        shadow3.shadowColor = SpaceshipScreen.gradientColor2
        shadow3.shadowOffset = CGSize(width: 0, height: 0)
        shadow3.shadowBlurRadius = 5
        let cubeShadow = NSShadow()
        cubeShadow.shadowColor = SpaceshipScreen.cubeConture
        cubeShadow.shadowOffset = CGSize(width: 0, height: 0)
        cubeShadow.shadowBlurRadius = 4

        //// Image Declarations
        let layer4_2 = UIImage(named: "layer4_2.png")!
        let layer4_1 = UIImage(named: "layer4_1.png")!
        let layer_4_3 = UIImage(named: "layer_4_3.png")!
        let layer10 = UIImage(named: "layer10.png")!
        let layer11 = UIImage(named: "layer11.png")!
        let layer12 = UIImage(named: "layer12.png")!
        let layer9 = UIImage(named: "layer9.png")!
        let layer_6_1 = UIImage(named: "layer_6_1.png")!
        let layer_6_2 = UIImage(named: "layer_6_2.png")!

        //// Variable Declarations
        let plate3ExprX: CGFloat = 1166 * spreadWings + (1 - spreadWings) * 818
        let plate3ExprY: CGFloat = 323 * spreadWings + (1 - spreadWings) * 265
        let plate2ExprX: CGFloat = 991 * spreadWings + (1 - spreadWings) * 818
        let plate2ExprY: CGFloat = 295 * spreadWings + (1 - spreadWings) * 265
        let plate4ExprX: CGFloat = 0 + (1 - spreadWings) * 326
        let plate4ExprY: CGFloat = 0 + (1 - spreadWings) * 52
        let plate5ExprX: CGFloat = 158 * spreadWings + (1 - spreadWings) * 326
        let plate5ExprY: CGFloat = 24 * spreadWings + (1 - spreadWings) * 52
        let disc1ExprX: CGFloat = 545 * disc1Move + 230 * (1 - disc1Move)
        let disc1ExprY: CGFloat = 316 * disc1Move + 508 * (1 - disc1Move)
        let disc2ExprX: CGFloat = 526 * disc2Move + 210 * (1 - disc2Move)
        let disc2ExprY: CGFloat = 298 * disc2Move + 492 * (1 - disc2Move)
        let disc3ExprX: CGFloat = 508 * disc3Move + 190 * (1 - disc3Move)
        let disc3ExprY: CGFloat = 288 * disc3Move + 480 * (1 - disc3Move)
        let disc4ExprX: CGFloat = 486 * disc4Move + 168 * (1 - disc4Move)
        let disc4ExprY: CGFloat = 274 * disc4Move + 466 * (1 - disc4Move)
        let arc1ExprX: CGFloat = 452 * arc1Move + 112 * (1 - arc1Move)
        let arc1ExprY: CGFloat = 518 * arc1Move + 766 * (1 - arc1Move)
        let arc2ExprX: CGFloat = 512 * arc2Move + 314 * (1 - arc2Move)
        let arc2ExprY: CGFloat = 626 * arc2Move + 922 * (1 - arc2Move)
        let arc3ExprX: CGFloat = 716 * arc3Move + 1034 * (1 - arc3Move)
        let arc3ExprY: CGFloat = 530 * arc3Move + 766 * (1 - arc3Move)
        let arc4ExprX: CGFloat = 782 * arc4Move + 1068 * (1 - arc4Move)
        let arc4ExprY: CGFloat = 562 * arc4Move + 662 * (1 - arc4Move)
        let bigCircleExprY: CGFloat = 700 * circlesMove + 600 * (1 - circlesMove)
        let midCircle2ExprY: CGFloat = 740 * circlesMove + 810 * (1 - circlesMove)
        let smallCircle3ExprY: CGFloat = 810 * circlesMove + 820 * (1 - circlesMove)
        let redCubeExprX: CGFloat = 578 * redCubeMove + 88 * (1 - redCubeMove)
        let redCubeExprY: CGFloat = 406 * redCubeMove + 424 * (1 - redCubeMove)
        let redCube2ExprX: CGFloat = 690 * redCube2Move + 1058 * (1 - redCube2Move)
        let redCube2ExprY: CGFloat = 404 * redCube2Move + 404 * (1 - redCube2Move)
        let redCube3ExprX: CGFloat = 720 * redCube3Move + 896 * (1 - redCube3Move)
        let redCube3ExprY: CGFloat = 578 * redCube3Move + 686 * (1 - redCube3Move)
        let antennaRotationPhase1: CGFloat = 180 * antennaMove1
        let antennaRotationPhase2: CGFloat = 180 * antennaMove2
        let spaceDustExprY: CGFloat = 700 * spaceDustMove + 860 * (1 - spaceDustMove)

        //// Group 7
        context.saveGState()
        context.translateBy(x: 69, y: 49)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 8
        context.saveGState()
        context.translateBy(x: 485.96, y: (spaceDustExprY + 10))

        context.setAlpha(rayOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Oval 39 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval39Path = UIBezierPath(ovalIn: CGRect(x: 49.34, y: 265.33, width: 2, height: 4))
        UIColor.white.setFill()
        oval39Path.fill()

        context.restoreGState()


        //// Oval 40 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval40Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 261.52, width: 3, height: 4))
        UIColor.white.setFill()
        oval40Path.fill()

        context.restoreGState()


        //// Oval 41 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval41Path = UIBezierPath(ovalIn: CGRect(x: 33, y: 329.21, width: 2, height: 5))
        UIColor.white.setFill()
        oval41Path.fill()

        context.restoreGState()


        //// Oval 42 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval42Path = UIBezierPath(ovalIn: CGRect(x: 75.34, y: 318.33, width: 3, height: 5))
        UIColor.white.setFill()
        oval42Path.fill()

        context.restoreGState()


        //// Oval 43 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval43Path = UIBezierPath(ovalIn: CGRect(x: 61.8, y: 435.59, width: 3, height: 4))
        UIColor.white.setFill()
        oval43Path.fill()

        context.restoreGState()


        //// Oval 44 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval44Path = UIBezierPath(ovalIn: CGRect(x: 21.14, y: 410.35, width: 1, height: 4))
        UIColor.white.setFill()
        oval44Path.fill()

        context.restoreGState()


        //// Oval 45 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval45Path = UIBezierPath(ovalIn: CGRect(x: 91.24, y: 560.64, width: 2, height: 4))
        UIColor.white.setFill()
        oval45Path.fill()

        context.restoreGState()


        //// Oval 46 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval46Path = UIBezierPath(ovalIn: CGRect(x: 110.34, y: 387.33, width: 2, height: 7))
        UIColor.white.setFill()
        oval46Path.fill()

        context.restoreGState()


        //// Oval 47 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval47Path = UIBezierPath(ovalIn: CGRect(x: 100.48, y: 267.14, width: 3, height: 6))
        UIColor.white.setFill()
        oval47Path.fill()

        context.restoreGState()


        //// Oval 48 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval48Path = UIBezierPath(ovalIn: CGRect(x: 31.26, y: 528.71, width: 2, height: 5))
        UIColor.white.setFill()
        oval48Path.fill()

        context.restoreGState()


        //// Oval 49 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval49Path = UIBezierPath(ovalIn: CGRect(x: 137.34, y: 441.33, width: 2, height: 7))
        UIColor.white.setFill()
        oval49Path.fill()

        context.restoreGState()


        //// Oval 50 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval50Path = UIBezierPath(ovalIn: CGRect(x: 59.89, y: 140.07, width: 2, height: 4))
        UIColor.white.setFill()
        oval50Path.fill()

        context.restoreGState()


        //// Oval 51 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval51Path = UIBezierPath(ovalIn: CGRect(x: 22.09, y: 88.14, width: 2, height: 5))
        UIColor.white.setFill()
        oval51Path.fill()

        context.restoreGState()


        //// Oval 52 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval52Path = UIBezierPath(ovalIn: CGRect(x: 117.34, y: 303.33, width: 3, height: 4))
        UIColor.white.setFill()
        oval52Path.fill()

        context.restoreGState()


        //// Oval 53 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval53Path = UIBezierPath(ovalIn: CGRect(x: 121.59, y: 59, width: 2, height: 5))
        UIColor.white.setFill()
        oval53Path.fill()

        context.restoreGState()


        //// Oval 54 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval54Path = UIBezierPath(ovalIn: CGRect(x: 21.21, y: 184.2, width: 1, height: 5))
        UIColor.white.setFill()
        oval54Path.fill()

        context.restoreGState()


        //// Oval 55 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval55Path = UIBezierPath(ovalIn: CGRect(x: 126.87, y: 166.16, width: 2, height: 7))
        UIColor.white.setFill()
        oval55Path.fill()

        context.restoreGState()


        //// Oval 56 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval56Path = UIBezierPath(ovalIn: CGRect(x: 152.34, y: 374.33, width: 3, height: 4))
        UIColor.white.setFill()
        oval56Path.fill()

        context.restoreGState()


        //// Oval 57 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval57Path = UIBezierPath(ovalIn: CGRect(x: 59.34, y: 254.33, width: 2, height: 4))
        UIColor.white.setFill()
        oval57Path.fill()

        context.restoreGState()


        //// Oval 58 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval58Path = UIBezierPath(ovalIn: CGRect(x: 10, y: 249.52, width: 3, height: 5))
        UIColor.white.setFill()
        oval58Path.fill()

        context.restoreGState()


        //// Oval 59 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval59Path = UIBezierPath(ovalIn: CGRect(x: 43, y: 318.21, width: 2, height: 5))
        UIColor.white.setFill()
        oval59Path.fill()

        context.restoreGState()


        //// Oval 60 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval60Path = UIBezierPath(ovalIn: CGRect(x: 85.34, y: 259.33, width: 3, height: 5))
        UIColor.white.setFill()
        oval60Path.fill()

        context.restoreGState()


        //// Oval 61 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval61Path = UIBezierPath(ovalIn: CGRect(x: 71.8, y: 375.59, width: 3, height: 5))
        UIColor.white.setFill()
        oval61Path.fill()

        context.restoreGState()


        //// Oval 62 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval62Path = UIBezierPath(ovalIn: CGRect(x: 31.14, y: 351.35, width: 1, height: 4))
        UIColor.white.setFill()
        oval62Path.fill()

        context.restoreGState()


        //// Oval 63 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval63Path = UIBezierPath(ovalIn: CGRect(x: 101.24, y: 500.64, width: 2, height: 5))
        UIColor.white.setFill()
        oval63Path.fill()

        context.restoreGState()


        //// Oval 64 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval64Path = UIBezierPath(ovalIn: CGRect(x: 120.34, y: 328.33, width: 2, height: 7))
        UIColor.white.setFill()
        oval64Path.fill()

        context.restoreGState()


        //// Oval 65 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval65Path = UIBezierPath(ovalIn: CGRect(x: 110.48, y: 208.14, width: 3, height: 6))
        UIColor.white.setFill()
        oval65Path.fill()

        context.restoreGState()


        //// Oval 66 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval66Path = UIBezierPath(ovalIn: CGRect(x: 41.26, y: 469.71, width: 2, height: 5))
        UIColor.white.setFill()
        oval66Path.fill()

        context.restoreGState()


        //// Oval 67 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval67Path = UIBezierPath(ovalIn: CGRect(x: 147.34, y: 382.33, width: 2, height: 6))
        UIColor.white.setFill()
        oval67Path.fill()

        context.restoreGState()


        //// Oval 68 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval68Path = UIBezierPath(ovalIn: CGRect(x: 69.89, y: 80.07, width: 2, height: 5))
        UIColor.white.setFill()
        oval68Path.fill()

        context.restoreGState()


        //// Oval 69 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval69Path = UIBezierPath(ovalIn: CGRect(x: 32.09, y: 29.14, width: 2, height: 5))
        UIColor.white.setFill()
        oval69Path.fill()

        context.restoreGState()


        //// Oval 70 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval70Path = UIBezierPath(ovalIn: CGRect(x: 127.34, y: 244.33, width: 3, height: 4))
        UIColor.white.setFill()
        oval70Path.fill()

        context.restoreGState()


        //// Oval 71 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval71Path = UIBezierPath(ovalIn: CGRect(x: 131.59, y: 0, width: 2, height: 4))
        UIColor.white.setFill()
        oval71Path.fill()

        context.restoreGState()


        //// Oval 72 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval72Path = UIBezierPath(ovalIn: CGRect(x: 31.21, y: 125.2, width: 1, height: 5))
        UIColor.white.setFill()
        oval72Path.fill()

        context.restoreGState()


        //// Oval 73 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval73Path = UIBezierPath(ovalIn: CGRect(x: 136.87, y: 107.16, width: 2, height: 7))
        UIColor.white.setFill()
        oval73Path.fill()

        context.restoreGState()


        //// Oval 74 Drawing
        context.saveGState()
        context.setAlpha(0.7)

        let oval74Path = UIBezierPath(ovalIn: CGRect(x: 162.34, y: 315.33, width: 3, height: 4))
        UIColor.white.setFill()
        oval74Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 4
        context.saveGState()
        context.setAlpha(rayOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Oval 21 Drawing
        let oval21Path = UIBezierPath(ovalIn: CGRect(x: 531.3, y: 915.99, width: 3, height: 3))
        UIColor.white.setFill()
        oval21Path.fill()


        //// Oval 22 Drawing
        let oval22Path = UIBezierPath(ovalIn: CGRect(x: 474.96, y: 914.18, width: 3, height: 3))
        UIColor.white.setFill()
        oval22Path.fill()


        //// Oval 23 Drawing
        let oval23Path = UIBezierPath(ovalIn: CGRect(x: 511.96, y: 952.87, width: 3, height: 3))
        UIColor.white.setFill()
        oval23Path.fill()


        //// Oval 24 Drawing
        let oval24Path = UIBezierPath(ovalIn: CGRect(x: 561.3, y: 945.99, width: 3, height: 3))
        UIColor.white.setFill()
        oval24Path.fill()


        //// Oval 25 Drawing
        let oval25Path = UIBezierPath(ovalIn: CGRect(x: 545.76, y: 1012.25, width: 3, height: 3))
        UIColor.white.setFill()
        oval25Path.fill()


        //// Oval 26 Drawing
        let oval26Path = UIBezierPath(ovalIn: CGRect(x: 498.1, y: 998.01, width: 3, height: 3))
        UIColor.white.setFill()
        oval26Path.fill()


        //// Oval 27 Drawing
        let oval27Path = UIBezierPath(ovalIn: CGRect(x: 579.2, y: 1082.3, width: 3, height: 3))
        UIColor.white.setFill()
        oval27Path.fill()


        //// Oval 28 Drawing
        let oval28Path = UIBezierPath(ovalIn: CGRect(x: 601.3, y: 985.99, width: 3, height: 3))
        UIColor.white.setFill()
        oval28Path.fill()


        //// Oval 29 Drawing
        let oval29Path = UIBezierPath(ovalIn: CGRect(x: 589.44, y: 917.8, width: 3, height: 3))
        UIColor.white.setFill()
        oval29Path.fill()


        //// Oval 30 Drawing
        let oval30Path = UIBezierPath(ovalIn: CGRect(x: 510.22, y: 1064.38, width: 3, height: 3))
        UIColor.white.setFill()
        oval30Path.fill()


        //// Oval 31 Drawing
        let oval31Path = UIBezierPath(ovalIn: CGRect(x: 631.3, y: 1015.99, width: 3, height: 3))
        UIColor.white.setFill()
        oval31Path.fill()


        //// Oval 32 Drawing
        let oval32Path = UIBezierPath(ovalIn: CGRect(x: 542.85, y: 845.73, width: 3, height: 3))
        UIColor.white.setFill()
        oval32Path.fill()


        //// Oval 33 Drawing
        let oval33Path = UIBezierPath(ovalIn: CGRect(x: 500.05, y: 816.8, width: 3, height: 3))
        UIColor.white.setFill()
        oval33Path.fill()


        //// Oval 34 Drawing
        let oval34Path = UIBezierPath(ovalIn: CGRect(x: 609.3, y: 937.99, width: 3, height: 3))
        UIColor.white.setFill()
        oval34Path.fill()


        //// Oval 35 Drawing
        let oval35Path = UIBezierPath(ovalIn: CGRect(x: 613.55, y: 800.66, width: 3, height: 3))
        UIColor.white.setFill()
        oval35Path.fill()


        //// Oval 36 Drawing
        let oval36Path = UIBezierPath(ovalIn: CGRect(x: 498.17, y: 870.86, width: 3, height: 3))
        UIColor.white.setFill()
        oval36Path.fill()


        //// Oval 37 Drawing
        let oval37Path = UIBezierPath(ovalIn: CGRect(x: 618.83, y: 861.82, width: 3, height: 3))
        UIColor.white.setFill()
        oval37Path.fill()


        //// Oval 38 Drawing
        let oval38Path = UIBezierPath(ovalIn: CGRect(x: 649.3, y: 977.99, width: 3, height: 3))
        UIColor.white.setFill()
        oval38Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_42 Drawing
        context.saveGState()
        context.setAlpha(rayOpacity)

        let layer_1_42Path = UIBezierPath()
        layer_1_42Path.move(to: CGPoint(x: 511.82, y: 750))
        layer_1_42Path.addLine(to: CGPoint(x: 403.82, y: 1183))
        layer_1_42Path.addLine(to: CGPoint(x: 716.82, y: 1183))
        layer_1_42Path.addLine(to: CGPoint(x: 622.82, y: 750))
        layer_1_42Path.addLine(to: CGPoint(x: 511.82, y: 750))
        layer_1_42Path.close()
        context.saveGState()
        layer_1_42Path.addClip()
        context.drawLinearGradient(spaceshipLight, start: CGPoint(x: 560.32, y: 1183), end: CGPoint(x: 560.32, y: 750), options: [])
        context.restoreGState()

        context.restoreGState()


        //// layer_1_40 Drawing
        let layer_1_40Rect = CGRect(x: 441.82, y: (smallCircle3ExprY + 303.671875), width: 255, height: 152)
        let layer_1_40Path = UIBezierPath(rect: layer_1_40Rect)
        context.saveGState()
        layer_1_40Path.addClip()
        context.translateBy(x: floor(layer_1_40Rect.minX + 0.5), y: floor(layer_1_40Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer12.size.height)
        context.draw(layer12.cgImage!, in: CGRect(x: 0, y: 0, width: layer12.size.width, height: layer12.size.height))
        context.restoreGState()


        //// Group 3
        context.saveGState()
        context.translateBy(x: 409.06, y: midCircle2ExprY)



        //// layer_1_39 Drawing
        let layer_1_39Path = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 317, height: 191))
        context.saveGState()
        layer_1_39Path.addClip()
        context.translateBy(x: 0, y: 0)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer11.size.height)
        context.draw(layer11.cgImage!, in: CGRect(x: 0, y: 0, width: layer11.size.width, height: layer11.size.height))
        context.restoreGState()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: 290.43, y: (bigCircleExprY - 1.6640625))



        //// layer_1_41 Drawing
        let layer_1_41Path = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 551, height: 331))
        context.saveGState()
        layer_1_41Path.addClip()
        context.translateBy(x: 0, y: 0)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer10.size.height)
        context.draw(layer10.cgImage!, in: CGRect(x: 0, y: 0, width: layer10.size.width, height: layer10.size.height))
        context.restoreGState()



        context.restoreGState()


        //// layer_1_38 Drawing
        let layer_1_38Path = UIBezierPath(rect: CGRect(x: 339.82, y: 350, width: 452, height: 269))
        context.saveGState()
        layer_1_38Path.addClip()
        context.translateBy(x: 340, y: 350)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer_4_3.size.height)
        context.draw(layer_4_3.cgImage!, in: CGRect(x: 0, y: 0, width: layer_4_3.size.width, height: layer_4_3.size.height))
        context.restoreGState()


        //// layer_1_37 Drawing
        let layer_1_37Path = UIBezierPath(rect: CGRect(x: 339.82, y: 430, width: 453, height: 339))
        context.saveGState()
        layer_1_37Path.addClip()
        context.translateBy(x: 340, y: 430)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer9.size.height)
        context.draw(layer9.cgImage!, in: CGRect(x: 0, y: 0, width: layer9.size.width, height: layer9.size.height))
        context.restoreGState()


        //// layer_1_36
        context.saveGState()
        context.translateBy(x: (arc4ExprX - 110.576679056), y: (arc4ExprY - 1.474609375))



        //// Bezier 57 Drawing
        let bezier57Path = UIBezierPath()
        bezier57Path.move(to: CGPoint(x: 123.77, y: 0))
        bezier57Path.addCurve(to: CGPoint(x: 56.6, y: 92.78), controlPoint1: CGPoint(x: 123.95, y: 33.59), controlPoint2: CGPoint(x: 101.58, y: 67.16))
        bezier57Path.addLine(to: CGPoint(x: 0.2, y: 60.86))
        bezier57Path.addCurve(to: CGPoint(x: 44.26, y: 0), controlPoint1: CGPoint(x: 29.71, y: 44.06), controlPoint2: CGPoint(x: 44.38, y: 22.03))
        bezier57Path.addLine(to: CGPoint(x: 123.77, y: 0))
        bezier57Path.close()
        context.saveGState()
        bezier57Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 0.2, y: 46.39),
            end: CGPoint(x: 123.76, y: 46.39),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 58 Drawing
        let bezier58Path = UIBezierPath()
        bezier58Path.move(to: CGPoint(x: 124.13, y: 0))
        bezier58Path.addCurve(to: CGPoint(x: 124.09, y: 3), controlPoint1: CGPoint(x: 124.14, y: 1), controlPoint2: CGPoint(x: 124.12, y: 2))
        bezier58Path.addCurve(to: CGPoint(x: 124.07, y: 3.37), controlPoint1: CGPoint(x: 124.08, y: 3.12), controlPoint2: CGPoint(x: 124.07, y: 3.25))
        bezier58Path.addCurve(to: CGPoint(x: 123.91, y: 6.18), controlPoint1: CGPoint(x: 124.03, y: 4.31), controlPoint2: CGPoint(x: 123.98, y: 5.24))
        bezier58Path.addCurve(to: CGPoint(x: 123.88, y: 6.51), controlPoint1: CGPoint(x: 123.9, y: 6.29), controlPoint2: CGPoint(x: 123.89, y: 6.39))
        bezier58Path.addCurve(to: CGPoint(x: 123.6, y: 9.35), controlPoint1: CGPoint(x: 123.8, y: 7.45), controlPoint2: CGPoint(x: 123.71, y: 8.4))
        bezier58Path.addCurve(to: CGPoint(x: 123.57, y: 9.62), controlPoint1: CGPoint(x: 123.59, y: 9.44), controlPoint2: CGPoint(x: 123.57, y: 9.53))
        bezier58Path.addCurve(to: CGPoint(x: 123.15, y: 12.52), controlPoint1: CGPoint(x: 123.44, y: 10.59), controlPoint2: CGPoint(x: 123.31, y: 11.56))
        bezier58Path.addCurve(to: CGPoint(x: 123.12, y: 12.72), controlPoint1: CGPoint(x: 123.14, y: 12.59), controlPoint2: CGPoint(x: 123.13, y: 12.65))
        bezier58Path.addCurve(to: CGPoint(x: 122.57, y: 15.68), controlPoint1: CGPoint(x: 122.96, y: 13.7), controlPoint2: CGPoint(x: 122.78, y: 14.69))
        bezier58Path.addCurve(to: CGPoint(x: 121.86, y: 18.84), controlPoint1: CGPoint(x: 122.36, y: 16.73), controlPoint2: CGPoint(x: 122.12, y: 17.79))
        bezier58Path.addCurve(to: CGPoint(x: 121.8, y: 19.05), controlPoint1: CGPoint(x: 121.84, y: 18.91), controlPoint2: CGPoint(x: 121.82, y: 18.98))
        bezier58Path.addCurve(to: CGPoint(x: 121, y: 22), controlPoint1: CGPoint(x: 121.55, y: 20.03), controlPoint2: CGPoint(x: 121.29, y: 21.01))
        bezier58Path.addCurve(to: CGPoint(x: 120.67, y: 23.07), controlPoint1: CGPoint(x: 120.9, y: 22.36), controlPoint2: CGPoint(x: 120.77, y: 22.71))
        bezier58Path.addCurve(to: CGPoint(x: 120.02, y: 25.14), controlPoint1: CGPoint(x: 120.46, y: 23.76), controlPoint2: CGPoint(x: 120.25, y: 24.45))
        bezier58Path.addCurve(to: CGPoint(x: 119.56, y: 26.4), controlPoint1: CGPoint(x: 119.87, y: 25.56), controlPoint2: CGPoint(x: 119.71, y: 25.98))
        bezier58Path.addCurve(to: CGPoint(x: 118.89, y: 28.27), controlPoint1: CGPoint(x: 119.34, y: 27.02), controlPoint2: CGPoint(x: 119.13, y: 27.65))
        bezier58Path.addCurve(to: CGPoint(x: 117.78, y: 31.03), controlPoint1: CGPoint(x: 118.54, y: 29.19), controlPoint2: CGPoint(x: 118.17, y: 30.11))
        bezier58Path.addCurve(to: CGPoint(x: 117.64, y: 31.36), controlPoint1: CGPoint(x: 117.74, y: 31.14), controlPoint2: CGPoint(x: 117.69, y: 31.25))
        bezier58Path.addCurve(to: CGPoint(x: 116.43, y: 34.08), controlPoint1: CGPoint(x: 117.26, y: 32.27), controlPoint2: CGPoint(x: 116.85, y: 33.17))
        bezier58Path.addCurve(to: CGPoint(x: 116.25, y: 34.47), controlPoint1: CGPoint(x: 116.37, y: 34.21), controlPoint2: CGPoint(x: 116.31, y: 34.34))
        bezier58Path.addCurve(to: CGPoint(x: 114.93, y: 37.14), controlPoint1: CGPoint(x: 115.83, y: 35.36), controlPoint2: CGPoint(x: 115.39, y: 36.25))
        bezier58Path.addCurve(to: CGPoint(x: 114.72, y: 37.55), controlPoint1: CGPoint(x: 114.86, y: 37.28), controlPoint2: CGPoint(x: 114.79, y: 37.41))
        bezier58Path.addCurve(to: CGPoint(x: 113.3, y: 40.19), controlPoint1: CGPoint(x: 114.26, y: 38.43), controlPoint2: CGPoint(x: 113.79, y: 39.32))
        bezier58Path.addCurve(to: CGPoint(x: 113.06, y: 40.61), controlPoint1: CGPoint(x: 113.22, y: 40.33), controlPoint2: CGPoint(x: 113.14, y: 40.47))
        bezier58Path.addCurve(to: CGPoint(x: 111.51, y: 43.26), controlPoint1: CGPoint(x: 112.56, y: 41.5), controlPoint2: CGPoint(x: 112.04, y: 42.38))
        bezier58Path.addCurve(to: CGPoint(x: 111.26, y: 43.67), controlPoint1: CGPoint(x: 111.43, y: 43.4), controlPoint2: CGPoint(x: 111.35, y: 43.53))
        bezier58Path.addCurve(to: CGPoint(x: 109.53, y: 46.38), controlPoint1: CGPoint(x: 110.7, y: 44.57), controlPoint2: CGPoint(x: 110.13, y: 45.48))
        bezier58Path.addCurve(to: CGPoint(x: 109.47, y: 46.47), controlPoint1: CGPoint(x: 109.51, y: 46.41), controlPoint2: CGPoint(x: 109.5, y: 46.44))
        bezier58Path.addCurve(to: CGPoint(x: 107.65, y: 49.15), controlPoint1: CGPoint(x: 108.88, y: 47.37), controlPoint2: CGPoint(x: 108.27, y: 48.26))
        bezier58Path.addCurve(to: CGPoint(x: 107.41, y: 49.49), controlPoint1: CGPoint(x: 107.57, y: 49.26), controlPoint2: CGPoint(x: 107.49, y: 49.38))
        bezier58Path.addCurve(to: CGPoint(x: 105.51, y: 52.08), controlPoint1: CGPoint(x: 106.79, y: 50.36), controlPoint2: CGPoint(x: 106.16, y: 51.22))
        bezier58Path.addCurve(to: CGPoint(x: 105.16, y: 52.54), controlPoint1: CGPoint(x: 105.39, y: 52.23), controlPoint2: CGPoint(x: 105.27, y: 52.39))
        bezier58Path.addCurve(to: CGPoint(x: 103.19, y: 55.05), controlPoint1: CGPoint(x: 104.52, y: 53.38), controlPoint2: CGPoint(x: 103.86, y: 54.22))
        bezier58Path.addCurve(to: CGPoint(x: 102.73, y: 55.62), controlPoint1: CGPoint(x: 103.03, y: 55.24), controlPoint2: CGPoint(x: 102.88, y: 55.43))
        bezier58Path.addCurve(to: CGPoint(x: 100.89, y: 57.8), controlPoint1: CGPoint(x: 102.12, y: 56.35), controlPoint2: CGPoint(x: 101.51, y: 57.08))
        bezier58Path.addCurve(to: CGPoint(x: 100.46, y: 58.3), controlPoint1: CGPoint(x: 100.74, y: 57.97), controlPoint2: CGPoint(x: 100.61, y: 58.14))
        bezier58Path.addCurve(to: CGPoint(x: 98.22, y: 60.82), controlPoint1: CGPoint(x: 99.73, y: 59.15), controlPoint2: CGPoint(x: 98.98, y: 59.98))
        bezier58Path.addCurve(to: CGPoint(x: 97.7, y: 61.38), controlPoint1: CGPoint(x: 98.05, y: 61.01), controlPoint2: CGPoint(x: 97.87, y: 61.19))
        bezier58Path.addCurve(to: CGPoint(x: 95.66, y: 63.53), controlPoint1: CGPoint(x: 97.03, y: 62.1), controlPoint2: CGPoint(x: 96.36, y: 62.81))
        bezier58Path.addCurve(to: CGPoint(x: 95.2, y: 64.01), controlPoint1: CGPoint(x: 95.51, y: 63.69), controlPoint2: CGPoint(x: 95.35, y: 63.85))
        bezier58Path.addCurve(to: CGPoint(x: 92.73, y: 66.47), controlPoint1: CGPoint(x: 94.39, y: 64.84), controlPoint2: CGPoint(x: 93.56, y: 65.65))
        bezier58Path.addCurve(to: CGPoint(x: 92.15, y: 67.02), controlPoint1: CGPoint(x: 92.53, y: 66.66), controlPoint2: CGPoint(x: 92.34, y: 66.84))
        bezier58Path.addCurve(to: CGPoint(x: 89.9, y: 69.13), controlPoint1: CGPoint(x: 91.41, y: 67.73), controlPoint2: CGPoint(x: 90.66, y: 68.43))
        bezier58Path.addCurve(to: CGPoint(x: 89.41, y: 69.59), controlPoint1: CGPoint(x: 89.74, y: 69.28), controlPoint2: CGPoint(x: 89.58, y: 69.44))
        bezier58Path.addCurve(to: CGPoint(x: 87.88, y: 70.94), controlPoint1: CGPoint(x: 88.91, y: 70.04), controlPoint2: CGPoint(x: 88.39, y: 70.49))
        bezier58Path.addCurve(to: CGPoint(x: 86.24, y: 72.4), controlPoint1: CGPoint(x: 87.34, y: 71.43), controlPoint2: CGPoint(x: 86.79, y: 71.91))
        bezier58Path.addCurve(to: CGPoint(x: 84.69, y: 73.69), controlPoint1: CGPoint(x: 85.73, y: 72.83), controlPoint2: CGPoint(x: 85.21, y: 73.26))
        bezier58Path.addCurve(to: CGPoint(x: 82.98, y: 75.12), controlPoint1: CGPoint(x: 84.12, y: 74.17), controlPoint2: CGPoint(x: 83.56, y: 74.65))
        bezier58Path.addCurve(to: CGPoint(x: 81.37, y: 76.41), controlPoint1: CGPoint(x: 82.45, y: 75.55), controlPoint2: CGPoint(x: 81.91, y: 75.98))
        bezier58Path.addCurve(to: CGPoint(x: 79.59, y: 77.81), controlPoint1: CGPoint(x: 80.78, y: 76.88), controlPoint2: CGPoint(x: 80.19, y: 77.34))
        bezier58Path.addCurve(to: CGPoint(x: 77.9, y: 79.09), controlPoint1: CGPoint(x: 79.04, y: 78.24), controlPoint2: CGPoint(x: 78.47, y: 78.66))
        bezier58Path.addCurve(to: CGPoint(x: 76.07, y: 80.46), controlPoint1: CGPoint(x: 77.29, y: 79.54), controlPoint2: CGPoint(x: 76.69, y: 80))
        bezier58Path.addCurve(to: CGPoint(x: 74.31, y: 81.72), controlPoint1: CGPoint(x: 75.49, y: 80.88), controlPoint2: CGPoint(x: 74.9, y: 81.3))
        bezier58Path.addCurve(to: CGPoint(x: 72.41, y: 83.07), controlPoint1: CGPoint(x: 73.68, y: 82.17), controlPoint2: CGPoint(x: 73.05, y: 82.62))
        bezier58Path.addCurve(to: CGPoint(x: 70.59, y: 84.31), controlPoint1: CGPoint(x: 71.81, y: 83.49), controlPoint2: CGPoint(x: 71.2, y: 83.9))
        bezier58Path.addCurve(to: CGPoint(x: 68.61, y: 85.64), controlPoint1: CGPoint(x: 69.93, y: 84.76), controlPoint2: CGPoint(x: 69.28, y: 85.2))
        bezier58Path.addCurve(to: CGPoint(x: 66.73, y: 86.86), controlPoint1: CGPoint(x: 67.99, y: 86.05), controlPoint2: CGPoint(x: 67.36, y: 86.46))
        bezier58Path.addCurve(to: CGPoint(x: 64.68, y: 88.17), controlPoint1: CGPoint(x: 66.05, y: 87.3), controlPoint2: CGPoint(x: 65.37, y: 87.73))
        bezier58Path.addCurve(to: CGPoint(x: 62.73, y: 89.37), controlPoint1: CGPoint(x: 64.04, y: 88.57), controlPoint2: CGPoint(x: 63.38, y: 88.97))
        bezier58Path.addCurve(to: CGPoint(x: 60.62, y: 90.65), controlPoint1: CGPoint(x: 62.03, y: 89.8), controlPoint2: CGPoint(x: 61.34, y: 90.23))
        bezier58Path.addCurve(to: CGPoint(x: 56.97, y: 92.78), controlPoint1: CGPoint(x: 59.42, y: 91.37), controlPoint2: CGPoint(x: 58.21, y: 92.08))
        bezier58Path.addLine(to: CGPoint(x: 56.77, y: 161.73))
        bezier58Path.addCurve(to: CGPoint(x: 59.95, y: 159.88), controlPoint1: CGPoint(x: 57.84, y: 161.12), controlPoint2: CGPoint(x: 58.9, y: 160.5))
        bezier58Path.addCurve(to: CGPoint(x: 60.42, y: 159.59), controlPoint1: CGPoint(x: 60.11, y: 159.78), controlPoint2: CGPoint(x: 60.26, y: 159.68))
        bezier58Path.addCurve(to: CGPoint(x: 62.53, y: 158.31), controlPoint1: CGPoint(x: 61.14, y: 159.16), controlPoint2: CGPoint(x: 61.83, y: 158.73))
        bezier58Path.addCurve(to: CGPoint(x: 64.48, y: 157.11), controlPoint1: CGPoint(x: 63.18, y: 157.91), controlPoint2: CGPoint(x: 63.85, y: 157.51))
        bezier58Path.addCurve(to: CGPoint(x: 66.53, y: 155.8), controlPoint1: CGPoint(x: 65.17, y: 156.68), controlPoint2: CGPoint(x: 65.85, y: 156.24))
        bezier58Path.addCurve(to: CGPoint(x: 68.41, y: 154.58), controlPoint1: CGPoint(x: 67.16, y: 155.4), controlPoint2: CGPoint(x: 67.79, y: 154.99))
        bezier58Path.addCurve(to: CGPoint(x: 70.39, y: 153.25), controlPoint1: CGPoint(x: 69.08, y: 154.14), controlPoint2: CGPoint(x: 69.73, y: 153.69))
        bezier58Path.addCurve(to: CGPoint(x: 72.2, y: 152.01), controlPoint1: CGPoint(x: 70.99, y: 152.84), controlPoint2: CGPoint(x: 71.61, y: 152.43))
        bezier58Path.addCurve(to: CGPoint(x: 74.11, y: 150.66), controlPoint1: CGPoint(x: 72.85, y: 151.56), controlPoint2: CGPoint(x: 73.48, y: 151.11))
        bezier58Path.addCurve(to: CGPoint(x: 75.87, y: 149.4), controlPoint1: CGPoint(x: 74.7, y: 150.24), controlPoint2: CGPoint(x: 75.29, y: 149.82))
        bezier58Path.addCurve(to: CGPoint(x: 77.71, y: 148.02), controlPoint1: CGPoint(x: 76.49, y: 148.95), controlPoint2: CGPoint(x: 77.09, y: 148.48))
        bezier58Path.addCurve(to: CGPoint(x: 79.39, y: 146.75), controlPoint1: CGPoint(x: 78.27, y: 147.6), controlPoint2: CGPoint(x: 78.84, y: 147.18))
        bezier58Path.addCurve(to: CGPoint(x: 81.17, y: 145.35), controlPoint1: CGPoint(x: 79.99, y: 146.29), controlPoint2: CGPoint(x: 80.57, y: 145.82))
        bezier58Path.addCurve(to: CGPoint(x: 82.78, y: 144.06), controlPoint1: CGPoint(x: 81.7, y: 144.92), controlPoint2: CGPoint(x: 82.25, y: 144.49))
        bezier58Path.addCurve(to: CGPoint(x: 84.49, y: 142.63), controlPoint1: CGPoint(x: 83.36, y: 143.59), controlPoint2: CGPoint(x: 83.92, y: 143.11))
        bezier58Path.addCurve(to: CGPoint(x: 86.04, y: 141.34), controlPoint1: CGPoint(x: 85.01, y: 142.2), controlPoint2: CGPoint(x: 85.53, y: 141.77))
        bezier58Path.addCurve(to: CGPoint(x: 87.68, y: 139.88), controlPoint1: CGPoint(x: 86.59, y: 140.85), controlPoint2: CGPoint(x: 87.14, y: 140.37))
        bezier58Path.addCurve(to: CGPoint(x: 88.97, y: 138.75), controlPoint1: CGPoint(x: 88.11, y: 139.5), controlPoint2: CGPoint(x: 88.55, y: 139.13))
        bezier58Path.addCurve(to: CGPoint(x: 89.21, y: 138.53), controlPoint1: CGPoint(x: 89.05, y: 138.68), controlPoint2: CGPoint(x: 89.12, y: 138.61))
        bezier58Path.addCurve(to: CGPoint(x: 89.7, y: 138.07), controlPoint1: CGPoint(x: 89.38, y: 138.38), controlPoint2: CGPoint(x: 89.54, y: 138.22))
        bezier58Path.addCurve(to: CGPoint(x: 91.95, y: 135.97), controlPoint1: CGPoint(x: 90.47, y: 137.37), controlPoint2: CGPoint(x: 91.21, y: 136.67))
        bezier58Path.addCurve(to: CGPoint(x: 92.53, y: 135.41), controlPoint1: CGPoint(x: 92.14, y: 135.78), controlPoint2: CGPoint(x: 92.33, y: 135.59))
        bezier58Path.addCurve(to: CGPoint(x: 95, y: 132.95), controlPoint1: CGPoint(x: 93.36, y: 134.59), controlPoint2: CGPoint(x: 94.19, y: 133.77))
        bezier58Path.addCurve(to: CGPoint(x: 95.46, y: 132.47), controlPoint1: CGPoint(x: 95.15, y: 132.79), controlPoint2: CGPoint(x: 95.31, y: 132.62))
        bezier58Path.addCurve(to: CGPoint(x: 97.5, y: 130.32), controlPoint1: CGPoint(x: 96.16, y: 131.75), controlPoint2: CGPoint(x: 96.83, y: 131.04))
        bezier58Path.addCurve(to: CGPoint(x: 98.02, y: 129.76), controlPoint1: CGPoint(x: 97.67, y: 130.13), controlPoint2: CGPoint(x: 97.85, y: 129.94))
        bezier58Path.addCurve(to: CGPoint(x: 100.26, y: 127.25), controlPoint1: CGPoint(x: 98.78, y: 128.92), controlPoint2: CGPoint(x: 99.53, y: 128.09))
        bezier58Path.addCurve(to: CGPoint(x: 100.69, y: 126.74), controlPoint1: CGPoint(x: 100.41, y: 127.08), controlPoint2: CGPoint(x: 100.55, y: 126.91))
        bezier58Path.addCurve(to: CGPoint(x: 102.53, y: 124.56), controlPoint1: CGPoint(x: 101.32, y: 126.01), controlPoint2: CGPoint(x: 101.92, y: 125.29))
        bezier58Path.addCurve(to: CGPoint(x: 102.99, y: 123.99), controlPoint1: CGPoint(x: 102.68, y: 124.37), controlPoint2: CGPoint(x: 102.83, y: 124.18))
        bezier58Path.addCurve(to: CGPoint(x: 103.27, y: 123.65), controlPoint1: CGPoint(x: 103.08, y: 123.88), controlPoint2: CGPoint(x: 103.18, y: 123.76))
        bezier58Path.addCurve(to: CGPoint(x: 104.96, y: 121.48), controlPoint1: CGPoint(x: 103.85, y: 122.93), controlPoint2: CGPoint(x: 104.4, y: 122.21))
        bezier58Path.addCurve(to: CGPoint(x: 105.31, y: 121.01), controlPoint1: CGPoint(x: 105.07, y: 121.33), controlPoint2: CGPoint(x: 105.19, y: 121.17))
        bezier58Path.addCurve(to: CGPoint(x: 107.21, y: 118.43), controlPoint1: CGPoint(x: 105.96, y: 120.16), controlPoint2: CGPoint(x: 106.59, y: 119.29))
        bezier58Path.addCurve(to: CGPoint(x: 107.45, y: 118.09), controlPoint1: CGPoint(x: 107.29, y: 118.32), controlPoint2: CGPoint(x: 107.37, y: 118.2))
        bezier58Path.addCurve(to: CGPoint(x: 109.28, y: 115.41), controlPoint1: CGPoint(x: 108.07, y: 117.2), controlPoint2: CGPoint(x: 108.69, y: 116.3))
        bezier58Path.addCurve(to: CGPoint(x: 109.33, y: 115.32), controlPoint1: CGPoint(x: 109.3, y: 115.38), controlPoint2: CGPoint(x: 109.32, y: 115.35))
        bezier58Path.addCurve(to: CGPoint(x: 111.06, y: 112.6), controlPoint1: CGPoint(x: 109.93, y: 114.42), controlPoint2: CGPoint(x: 110.5, y: 113.51))
        bezier58Path.addCurve(to: CGPoint(x: 111.31, y: 112.2), controlPoint1: CGPoint(x: 111.15, y: 112.47), controlPoint2: CGPoint(x: 111.23, y: 112.34))
        bezier58Path.addCurve(to: CGPoint(x: 112.5, y: 110.19), controlPoint1: CGPoint(x: 111.72, y: 111.53), controlPoint2: CGPoint(x: 112.12, y: 110.86))
        bezier58Path.addCurve(to: CGPoint(x: 112.86, y: 109.55), controlPoint1: CGPoint(x: 112.63, y: 109.97), controlPoint2: CGPoint(x: 112.74, y: 109.76))
        bezier58Path.addCurve(to: CGPoint(x: 113.1, y: 109.13), controlPoint1: CGPoint(x: 112.94, y: 109.41), controlPoint2: CGPoint(x: 113.02, y: 109.27))
        bezier58Path.addCurve(to: CGPoint(x: 114.52, y: 106.49), controlPoint1: CGPoint(x: 113.59, y: 108.26), controlPoint2: CGPoint(x: 114.06, y: 107.38))
        bezier58Path.addCurve(to: CGPoint(x: 114.73, y: 106.08), controlPoint1: CGPoint(x: 114.59, y: 106.36), controlPoint2: CGPoint(x: 114.66, y: 106.21))
        bezier58Path.addCurve(to: CGPoint(x: 116.05, y: 103.41), controlPoint1: CGPoint(x: 115.19, y: 105.19), controlPoint2: CGPoint(x: 115.63, y: 104.3))
        bezier58Path.addCurve(to: CGPoint(x: 116.23, y: 103.02), controlPoint1: CGPoint(x: 116.11, y: 103.28), controlPoint2: CGPoint(x: 116.17, y: 103.15))
        bezier58Path.addCurve(to: CGPoint(x: 117.45, y: 100.3), controlPoint1: CGPoint(x: 116.65, y: 102.11), controlPoint2: CGPoint(x: 117.06, y: 101.21))
        bezier58Path.addCurve(to: CGPoint(x: 117.58, y: 99.97), controlPoint1: CGPoint(x: 117.49, y: 100.19), controlPoint2: CGPoint(x: 117.54, y: 100.08))
        bezier58Path.addCurve(to: CGPoint(x: 118.65, y: 97.32), controlPoint1: CGPoint(x: 117.95, y: 99.09), controlPoint2: CGPoint(x: 118.31, y: 98.21))
        bezier58Path.addCurve(to: CGPoint(x: 118.69, y: 97.21), controlPoint1: CGPoint(x: 118.67, y: 97.29), controlPoint2: CGPoint(x: 118.68, y: 97.25))
        bezier58Path.addCurve(to: CGPoint(x: 119.37, y: 95.34), controlPoint1: CGPoint(x: 118.93, y: 96.59), controlPoint2: CGPoint(x: 119.15, y: 95.96))
        bezier58Path.addCurve(to: CGPoint(x: 119.82, y: 94.08), controlPoint1: CGPoint(x: 119.52, y: 94.92), controlPoint2: CGPoint(x: 119.68, y: 94.5))
        bezier58Path.addCurve(to: CGPoint(x: 120.47, y: 92.01), controlPoint1: CGPoint(x: 120.05, y: 93.39), controlPoint2: CGPoint(x: 120.26, y: 92.7))
        bezier58Path.addCurve(to: CGPoint(x: 120.8, y: 90.94), controlPoint1: CGPoint(x: 120.58, y: 91.65), controlPoint2: CGPoint(x: 120.7, y: 91.29))
        bezier58Path.addCurve(to: CGPoint(x: 121.61, y: 87.97), controlPoint1: CGPoint(x: 121.09, y: 89.95), controlPoint2: CGPoint(x: 121.36, y: 88.96))
        bezier58Path.addCurve(to: CGPoint(x: 121.66, y: 87.78), controlPoint1: CGPoint(x: 121.62, y: 87.91), controlPoint2: CGPoint(x: 121.64, y: 87.84))
        bezier58Path.addCurve(to: CGPoint(x: 122.37, y: 84.61), controlPoint1: CGPoint(x: 121.92, y: 86.73), controlPoint2: CGPoint(x: 122.16, y: 85.67))
        bezier58Path.addCurve(to: CGPoint(x: 122.38, y: 84.58), controlPoint1: CGPoint(x: 122.38, y: 84.6), controlPoint2: CGPoint(x: 122.38, y: 84.59))
        bezier58Path.addCurve(to: CGPoint(x: 122.92, y: 81.65), controlPoint1: CGPoint(x: 122.58, y: 83.61), controlPoint2: CGPoint(x: 122.76, y: 82.63))
        bezier58Path.addCurve(to: CGPoint(x: 122.95, y: 81.46), controlPoint1: CGPoint(x: 122.93, y: 81.59), controlPoint2: CGPoint(x: 122.94, y: 81.52))
        bezier58Path.addCurve(to: CGPoint(x: 123.37, y: 78.56), controlPoint1: CGPoint(x: 123.11, y: 80.5), controlPoint2: CGPoint(x: 123.25, y: 79.53))
        bezier58Path.addCurve(to: CGPoint(x: 123.4, y: 78.29), controlPoint1: CGPoint(x: 123.37, y: 78.47), controlPoint2: CGPoint(x: 123.39, y: 78.38))
        bezier58Path.addCurve(to: CGPoint(x: 123.68, y: 75.45), controlPoint1: CGPoint(x: 123.51, y: 77.34), controlPoint2: CGPoint(x: 123.6, y: 76.4))
        bezier58Path.addCurve(to: CGPoint(x: 123.71, y: 75.11), controlPoint1: CGPoint(x: 123.69, y: 75.34), controlPoint2: CGPoint(x: 123.7, y: 75.22))
        bezier58Path.addCurve(to: CGPoint(x: 123.87, y: 72.32), controlPoint1: CGPoint(x: 123.78, y: 74.18), controlPoint2: CGPoint(x: 123.83, y: 73.25))
        bezier58Path.addCurve(to: CGPoint(x: 123.89, y: 71.94), controlPoint1: CGPoint(x: 123.87, y: 72.19), controlPoint2: CGPoint(x: 123.88, y: 72.07))
        bezier58Path.addCurve(to: CGPoint(x: 123.9, y: 71.59), controlPoint1: CGPoint(x: 123.89, y: 71.82), controlPoint2: CGPoint(x: 123.9, y: 71.71))
        bezier58Path.addCurve(to: CGPoint(x: 123.93, y: 68.94), controlPoint1: CGPoint(x: 123.93, y: 70.71), controlPoint2: CGPoint(x: 123.94, y: 69.82))
        bezier58Path.addLine(to: CGPoint(x: 124.13, y: 0))
        bezier58Path.close()
        context.saveGState()
        bezier58Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: -7.76, y: 242.89),
            end: CGPoint(x: 133.25, y: 27.54),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 59 Drawing
        let bezier59Path = UIBezierPath()
        bezier59Path.move(to: CGPoint(x: 56.6, y: 92.78))
        bezier59Path.addLine(to: CGPoint(x: 56.4, y: 161.73))
        bezier59Path.addLine(to: CGPoint(x: 0, y: 129.81))
        bezier59Path.addLine(to: CGPoint(x: 0.2, y: 60.86))
        bezier59Path.addLine(to: CGPoint(x: 56.6, y: 92.78))
        bezier59Path.close()
        context.saveGState()
        bezier59Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 121.99, y: 61.2),
            end: CGPoint(x: -22.29, y: 138.34),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// layer_1_35
        context.saveGState()
        context.translateBy(x: (arc2ExprX - 104.588397806), y: (arc2ExprY - 2.296875))



        //// Bezier 52 Drawing
        let bezier52Path = UIBezierPath()
        bezier52Path.move(to: CGPoint(x: 160.2, y: 25.4))
        bezier52Path.addLine(to: CGPoint(x: 160.45, y: 70.89))
        bezier52Path.addCurve(to: CGPoint(x: 0.19, y: 32.16), controlPoint1: CGPoint(x: 102.53, y: 70.89), controlPoint2: CGPoint(x: 44.53, y: 57.98))
        bezier52Path.addLine(to: CGPoint(x: 55.07, y: 0))
        bezier52Path.addCurve(to: CGPoint(x: 160.2, y: 25.4), controlPoint1: CGPoint(x: 84.15, y: 16.94), controlPoint2: CGPoint(x: 122.2, y: 25.4))
        bezier52Path.close()
        context.saveGState()
        bezier52Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 0.19, y: 35.44),
            end: CGPoint(x: 160.45, y: 35.44),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 53 Drawing
        let bezier53Path = UIBezierPath()
        bezier53Path.move(to: CGPoint(x: 160.2, y: 140.35))
        bezier53Path.addCurve(to: CGPoint(x: 160.26, y: 140.35), controlPoint1: CGPoint(x: 160.22, y: 140.35), controlPoint2: CGPoint(x: 160.24, y: 140.35))
        bezier53Path.addLine(to: CGPoint(x: 160.45, y: 70.89))
        bezier53Path.addCurve(to: CGPoint(x: 155.27, y: 70.85), controlPoint1: CGPoint(x: 158.73, y: 70.89), controlPoint2: CGPoint(x: 156.99, y: 70.87))
        bezier53Path.addCurve(to: CGPoint(x: 153.55, y: 70.82), controlPoint1: CGPoint(x: 154.7, y: 70.84), controlPoint2: CGPoint(x: 154.12, y: 70.83))
        bezier53Path.addCurve(to: CGPoint(x: 150.12, y: 70.75), controlPoint1: CGPoint(x: 152.41, y: 70.8), controlPoint2: CGPoint(x: 151.26, y: 70.78))
        bezier53Path.addCurve(to: CGPoint(x: 147.15, y: 70.65), controlPoint1: CGPoint(x: 149.13, y: 70.72), controlPoint2: CGPoint(x: 148.14, y: 70.68))
        bezier53Path.addCurve(to: CGPoint(x: 144.62, y: 70.56), controlPoint1: CGPoint(x: 146.3, y: 70.62), controlPoint2: CGPoint(x: 145.46, y: 70.6))
        bezier53Path.addCurve(to: CGPoint(x: 141.61, y: 70.42), controlPoint1: CGPoint(x: 143.61, y: 70.52), controlPoint2: CGPoint(x: 142.61, y: 70.47))
        bezier53Path.addCurve(to: CGPoint(x: 139.13, y: 70.3), controlPoint1: CGPoint(x: 140.78, y: 70.38), controlPoint2: CGPoint(x: 139.95, y: 70.34))
        bezier53Path.addCurve(to: CGPoint(x: 136.06, y: 70.11), controlPoint1: CGPoint(x: 138.11, y: 70.24), controlPoint2: CGPoint(x: 137.08, y: 70.17))
        bezier53Path.addCurve(to: CGPoint(x: 133.64, y: 69.96), controlPoint1: CGPoint(x: 135.26, y: 70.06), controlPoint2: CGPoint(x: 134.45, y: 70.01))
        bezier53Path.addCurve(to: CGPoint(x: 130.48, y: 69.72), controlPoint1: CGPoint(x: 132.59, y: 69.89), controlPoint2: CGPoint(x: 131.53, y: 69.8))
        bezier53Path.addCurve(to: CGPoint(x: 128.17, y: 69.54), controlPoint1: CGPoint(x: 129.71, y: 69.66), controlPoint2: CGPoint(x: 128.94, y: 69.61))
        bezier53Path.addCurve(to: CGPoint(x: 124.86, y: 69.24), controlPoint1: CGPoint(x: 127.07, y: 69.45), controlPoint2: CGPoint(x: 125.96, y: 69.35))
        bezier53Path.addCurve(to: CGPoint(x: 122.72, y: 69.05), controlPoint1: CGPoint(x: 124.14, y: 69.18), controlPoint2: CGPoint(x: 123.43, y: 69.11))
        bezier53Path.addCurve(to: CGPoint(x: 119.03, y: 68.66), controlPoint1: CGPoint(x: 121.49, y: 68.92), controlPoint2: CGPoint(x: 120.26, y: 68.79))
        bezier53Path.addCurve(to: CGPoint(x: 117.28, y: 68.47), controlPoint1: CGPoint(x: 118.45, y: 68.6), controlPoint2: CGPoint(x: 117.87, y: 68.54))
        bezier53Path.addCurve(to: CGPoint(x: 111.86, y: 67.82), controlPoint1: CGPoint(x: 115.47, y: 68.27), controlPoint2: CGPoint(x: 113.67, y: 68.05))
        bezier53Path.addCurve(to: CGPoint(x: 111.82, y: 67.82), controlPoint1: CGPoint(x: 111.85, y: 67.82), controlPoint2: CGPoint(x: 111.83, y: 67.82))
        bezier53Path.addCurve(to: CGPoint(x: 106.47, y: 67.09), controlPoint1: CGPoint(x: 110.04, y: 67.59), controlPoint2: CGPoint(x: 108.25, y: 67.35))
        bezier53Path.addCurve(to: CGPoint(x: 105.21, y: 66.9), controlPoint1: CGPoint(x: 106.05, y: 67.03), controlPoint2: CGPoint(x: 105.63, y: 66.97))
        bezier53Path.addCurve(to: CGPoint(x: 101, y: 66.27), controlPoint1: CGPoint(x: 103.81, y: 66.7), controlPoint2: CGPoint(x: 102.4, y: 66.49))
        bezier53Path.addCurve(to: CGPoint(x: 98.99, y: 65.94), controlPoint1: CGPoint(x: 100.33, y: 66.16), controlPoint2: CGPoint(x: 99.66, y: 66.05))
        bezier53Path.addCurve(to: CGPoint(x: 95.56, y: 65.36), controlPoint1: CGPoint(x: 97.85, y: 65.75), controlPoint2: CGPoint(x: 96.7, y: 65.56))
        bezier53Path.addCurve(to: CGPoint(x: 93.33, y: 64.96), controlPoint1: CGPoint(x: 94.81, y: 65.23), controlPoint2: CGPoint(x: 94.08, y: 65.1))
        bezier53Path.addCurve(to: CGPoint(x: 90.15, y: 64.38), controlPoint1: CGPoint(x: 92.27, y: 64.77), controlPoint2: CGPoint(x: 91.21, y: 64.58))
        bezier53Path.addCurve(to: CGPoint(x: 87.83, y: 63.93), controlPoint1: CGPoint(x: 89.37, y: 64.23), controlPoint2: CGPoint(x: 88.6, y: 64.08))
        bezier53Path.addCurve(to: CGPoint(x: 84.77, y: 63.31), controlPoint1: CGPoint(x: 86.81, y: 63.72), controlPoint2: CGPoint(x: 85.79, y: 63.52))
        bezier53Path.addCurve(to: CGPoint(x: 82.63, y: 62.86), controlPoint1: CGPoint(x: 84.06, y: 63.16), controlPoint2: CGPoint(x: 83.34, y: 63.01))
        bezier53Path.addCurve(to: CGPoint(x: 79.06, y: 62.08), controlPoint1: CGPoint(x: 81.44, y: 62.6), controlPoint2: CGPoint(x: 80.25, y: 62.35))
        bezier53Path.addCurve(to: CGPoint(x: 76.87, y: 61.58), controlPoint1: CGPoint(x: 78.33, y: 61.91), controlPoint2: CGPoint(x: 77.6, y: 61.75))
        bezier53Path.addCurve(to: CGPoint(x: 73.39, y: 60.76), controlPoint1: CGPoint(x: 75.71, y: 61.31), controlPoint2: CGPoint(x: 74.55, y: 61.03))
        bezier53Path.addCurve(to: CGPoint(x: 71.24, y: 60.23), controlPoint1: CGPoint(x: 72.67, y: 60.58), controlPoint2: CGPoint(x: 71.96, y: 60.41))
        bezier53Path.addCurve(to: CGPoint(x: 67.64, y: 59.3), controlPoint1: CGPoint(x: 70.03, y: 59.93), controlPoint2: CGPoint(x: 68.84, y: 59.62))
        bezier53Path.addCurve(to: CGPoint(x: 65.7, y: 58.8), controlPoint1: CGPoint(x: 66.99, y: 59.13), controlPoint2: CGPoint(x: 66.34, y: 58.97))
        bezier53Path.addCurve(to: CGPoint(x: 61.33, y: 57.58), controlPoint1: CGPoint(x: 64.24, y: 58.4), controlPoint2: CGPoint(x: 62.78, y: 58))
        bezier53Path.addCurve(to: CGPoint(x: 60.19, y: 57.27), controlPoint1: CGPoint(x: 60.95, y: 57.48), controlPoint2: CGPoint(x: 60.57, y: 57.37))
        bezier53Path.addCurve(to: CGPoint(x: 59.62, y: 57.1), controlPoint1: CGPoint(x: 60, y: 57.21), controlPoint2: CGPoint(x: 59.81, y: 57.15))
        bezier53Path.addCurve(to: CGPoint(x: 55.73, y: 55.95), controlPoint1: CGPoint(x: 58.32, y: 56.72), controlPoint2: CGPoint(x: 57.03, y: 56.34))
        bezier53Path.addCurve(to: CGPoint(x: 54.5, y: 55.57), controlPoint1: CGPoint(x: 55.32, y: 55.82), controlPoint2: CGPoint(x: 54.91, y: 55.69))
        bezier53Path.addCurve(to: CGPoint(x: 50.64, y: 54.35), controlPoint1: CGPoint(x: 53.21, y: 55.17), controlPoint2: CGPoint(x: 51.92, y: 54.76))
        bezier53Path.addCurve(to: CGPoint(x: 50.09, y: 54.17), controlPoint1: CGPoint(x: 50.46, y: 54.29), controlPoint2: CGPoint(x: 50.28, y: 54.23))
        bezier53Path.addCurve(to: CGPoint(x: 45.79, y: 52.73), controlPoint1: CGPoint(x: 48.65, y: 53.7), controlPoint2: CGPoint(x: 47.21, y: 53.22))
        bezier53Path.addCurve(to: CGPoint(x: 44.66, y: 52.34), controlPoint1: CGPoint(x: 45.41, y: 52.6), controlPoint2: CGPoint(x: 45.03, y: 52.47))
        bezier53Path.addCurve(to: CGPoint(x: 41.23, y: 51.12), controlPoint1: CGPoint(x: 43.51, y: 51.94), controlPoint2: CGPoint(x: 42.36, y: 51.54))
        bezier53Path.addCurve(to: CGPoint(x: 40.23, y: 50.76), controlPoint1: CGPoint(x: 40.9, y: 51), controlPoint2: CGPoint(x: 40.56, y: 50.88))
        bezier53Path.addCurve(to: CGPoint(x: 36.03, y: 49.19), controlPoint1: CGPoint(x: 38.82, y: 50.25), controlPoint2: CGPoint(x: 37.42, y: 49.73))
        bezier53Path.addCurve(to: CGPoint(x: 35.17, y: 48.86), controlPoint1: CGPoint(x: 35.75, y: 49.08), controlPoint2: CGPoint(x: 35.46, y: 48.97))
        bezier53Path.addCurve(to: CGPoint(x: 32.04, y: 47.62), controlPoint1: CGPoint(x: 34.12, y: 48.45), controlPoint2: CGPoint(x: 33.08, y: 48.04))
        bezier53Path.addCurve(to: CGPoint(x: 30.03, y: 46.8), controlPoint1: CGPoint(x: 31.37, y: 47.35), controlPoint2: CGPoint(x: 30.7, y: 47.08))
        bezier53Path.addCurve(to: CGPoint(x: 27.54, y: 45.76), controlPoint1: CGPoint(x: 29.2, y: 46.46), controlPoint2: CGPoint(x: 28.37, y: 46.11))
        bezier53Path.addCurve(to: CGPoint(x: 25.57, y: 44.92), controlPoint1: CGPoint(x: 26.88, y: 45.49), controlPoint2: CGPoint(x: 26.22, y: 45.2))
        bezier53Path.addCurve(to: CGPoint(x: 23.1, y: 43.84), controlPoint1: CGPoint(x: 24.74, y: 44.56), controlPoint2: CGPoint(x: 23.92, y: 44.2))
        bezier53Path.addCurve(to: CGPoint(x: 21.16, y: 42.96), controlPoint1: CGPoint(x: 22.46, y: 43.55), controlPoint2: CGPoint(x: 21.81, y: 43.26))
        bezier53Path.addCurve(to: CGPoint(x: 18.71, y: 41.83), controlPoint1: CGPoint(x: 20.34, y: 42.59), controlPoint2: CGPoint(x: 19.53, y: 42.21))
        bezier53Path.addCurve(to: CGPoint(x: 16.83, y: 40.94), controlPoint1: CGPoint(x: 18.08, y: 41.53), controlPoint2: CGPoint(x: 17.46, y: 41.24))
        bezier53Path.addCurve(to: CGPoint(x: 14.36, y: 39.74), controlPoint1: CGPoint(x: 16, y: 40.55), controlPoint2: CGPoint(x: 15.18, y: 40.15))
        bezier53Path.addCurve(to: CGPoint(x: 12.57, y: 38.85), controlPoint1: CGPoint(x: 13.76, y: 39.45), controlPoint2: CGPoint(x: 13.16, y: 39.15))
        bezier53Path.addCurve(to: CGPoint(x: 10.03, y: 37.55), controlPoint1: CGPoint(x: 11.72, y: 38.42), controlPoint2: CGPoint(x: 10.87, y: 37.99))
        bezier53Path.addCurve(to: CGPoint(x: 8.37, y: 36.69), controlPoint1: CGPoint(x: 9.48, y: 37.26), controlPoint2: CGPoint(x: 8.92, y: 36.98))
        bezier53Path.addCurve(to: CGPoint(x: 5.61, y: 35.21), controlPoint1: CGPoint(x: 7.44, y: 36.2), controlPoint2: CGPoint(x: 6.53, y: 35.7))
        bezier53Path.addCurve(to: CGPoint(x: 4.24, y: 34.46), controlPoint1: CGPoint(x: 5.16, y: 34.96), controlPoint2: CGPoint(x: 4.7, y: 34.71))
        bezier53Path.addCurve(to: CGPoint(x: 0.19, y: 32.16), controlPoint1: CGPoint(x: 2.88, y: 33.71), controlPoint2: CGPoint(x: 1.53, y: 32.94))
        bezier53Path.addLine(to: CGPoint(x: 0, y: 101.63))
        bezier53Path.addCurve(to: CGPoint(x: 4.05, y: 103.93), controlPoint1: CGPoint(x: 1.34, y: 102.41), controlPoint2: CGPoint(x: 2.69, y: 103.17))
        bezier53Path.addCurve(to: CGPoint(x: 5.42, y: 104.67), controlPoint1: CGPoint(x: 4.5, y: 104.18), controlPoint2: CGPoint(x: 4.97, y: 104.42))
        bezier53Path.addCurve(to: CGPoint(x: 8.17, y: 106.16), controlPoint1: CGPoint(x: 6.34, y: 105.17), controlPoint2: CGPoint(x: 7.25, y: 105.67))
        bezier53Path.addCurve(to: CGPoint(x: 9.83, y: 107.02), controlPoint1: CGPoint(x: 8.72, y: 106.45), controlPoint2: CGPoint(x: 9.28, y: 106.73))
        bezier53Path.addCurve(to: CGPoint(x: 12.37, y: 108.32), controlPoint1: CGPoint(x: 10.68, y: 107.45), controlPoint2: CGPoint(x: 11.52, y: 107.89))
        bezier53Path.addCurve(to: CGPoint(x: 14.17, y: 109.2), controlPoint1: CGPoint(x: 12.96, y: 108.62), controlPoint2: CGPoint(x: 13.57, y: 108.91))
        bezier53Path.addCurve(to: CGPoint(x: 16.64, y: 110.41), controlPoint1: CGPoint(x: 14.99, y: 109.61), controlPoint2: CGPoint(x: 15.81, y: 110.01))
        bezier53Path.addCurve(to: CGPoint(x: 18.52, y: 111.3), controlPoint1: CGPoint(x: 17.26, y: 110.71), controlPoint2: CGPoint(x: 17.89, y: 111))
        bezier53Path.addCurve(to: CGPoint(x: 20.97, y: 112.43), controlPoint1: CGPoint(x: 19.33, y: 111.68), controlPoint2: CGPoint(x: 20.15, y: 112.06))
        bezier53Path.addCurve(to: CGPoint(x: 22.91, y: 113.3), controlPoint1: CGPoint(x: 21.61, y: 112.72), controlPoint2: CGPoint(x: 22.26, y: 113.01))
        bezier53Path.addCurve(to: CGPoint(x: 25.37, y: 114.38), controlPoint1: CGPoint(x: 23.73, y: 113.67), controlPoint2: CGPoint(x: 24.55, y: 114.03))
        bezier53Path.addCurve(to: CGPoint(x: 27.35, y: 115.23), controlPoint1: CGPoint(x: 26.03, y: 114.67), controlPoint2: CGPoint(x: 26.69, y: 114.95))
        bezier53Path.addCurve(to: CGPoint(x: 29.84, y: 116.27), controlPoint1: CGPoint(x: 28.17, y: 115.58), controlPoint2: CGPoint(x: 29.01, y: 115.92))
        bezier53Path.addCurve(to: CGPoint(x: 31.84, y: 117.08), controlPoint1: CGPoint(x: 30.51, y: 116.54), controlPoint2: CGPoint(x: 31.17, y: 116.81))
        bezier53Path.addCurve(to: CGPoint(x: 32.88, y: 117.51), controlPoint1: CGPoint(x: 32.19, y: 117.23), controlPoint2: CGPoint(x: 32.53, y: 117.37))
        bezier53Path.addCurve(to: CGPoint(x: 34.97, y: 118.32), controlPoint1: CGPoint(x: 33.58, y: 117.78), controlPoint2: CGPoint(x: 34.28, y: 118.05))
        bezier53Path.addCurve(to: CGPoint(x: 35.84, y: 118.66), controlPoint1: CGPoint(x: 35.26, y: 118.43), controlPoint2: CGPoint(x: 35.55, y: 118.55))
        bezier53Path.addCurve(to: CGPoint(x: 40.03, y: 120.23), controlPoint1: CGPoint(x: 37.23, y: 119.19), controlPoint2: CGPoint(x: 38.63, y: 119.72))
        bezier53Path.addCurve(to: CGPoint(x: 41.03, y: 120.59), controlPoint1: CGPoint(x: 40.37, y: 120.35), controlPoint2: CGPoint(x: 40.7, y: 120.47))
        bezier53Path.addCurve(to: CGPoint(x: 44.46, y: 121.8), controlPoint1: CGPoint(x: 42.17, y: 121), controlPoint2: CGPoint(x: 43.31, y: 121.4))
        bezier53Path.addCurve(to: CGPoint(x: 45.59, y: 122.2), controlPoint1: CGPoint(x: 44.83, y: 121.93), controlPoint2: CGPoint(x: 45.21, y: 122.07))
        bezier53Path.addCurve(to: CGPoint(x: 49.9, y: 123.64), controlPoint1: CGPoint(x: 47.03, y: 122.69), controlPoint2: CGPoint(x: 48.46, y: 123.17))
        bezier53Path.addCurve(to: CGPoint(x: 50.45, y: 123.81), controlPoint1: CGPoint(x: 50.08, y: 123.7), controlPoint2: CGPoint(x: 50.26, y: 123.75))
        bezier53Path.addCurve(to: CGPoint(x: 54.31, y: 125.04), controlPoint1: CGPoint(x: 51.73, y: 124.23), controlPoint2: CGPoint(x: 53.02, y: 124.64))
        bezier53Path.addCurve(to: CGPoint(x: 55.54, y: 125.41), controlPoint1: CGPoint(x: 54.72, y: 125.16), controlPoint2: CGPoint(x: 55.13, y: 125.28))
        bezier53Path.addCurve(to: CGPoint(x: 59.43, y: 126.57), controlPoint1: CGPoint(x: 56.83, y: 125.8), controlPoint2: CGPoint(x: 58.13, y: 126.19))
        bezier53Path.addCurve(to: CGPoint(x: 59.99, y: 126.73), controlPoint1: CGPoint(x: 59.62, y: 126.62), controlPoint2: CGPoint(x: 59.81, y: 126.68))
        bezier53Path.addCurve(to: CGPoint(x: 60.17, y: 126.78), controlPoint1: CGPoint(x: 60.05, y: 126.75), controlPoint2: CGPoint(x: 60.11, y: 126.77))
        bezier53Path.addCurve(to: CGPoint(x: 61.14, y: 127.05), controlPoint1: CGPoint(x: 60.49, y: 126.87), controlPoint2: CGPoint(x: 60.82, y: 126.96))
        bezier53Path.addCurve(to: CGPoint(x: 65.5, y: 128.26), controlPoint1: CGPoint(x: 62.59, y: 127.46), controlPoint2: CGPoint(x: 64.04, y: 127.87))
        bezier53Path.addCurve(to: CGPoint(x: 67.45, y: 128.77), controlPoint1: CGPoint(x: 66.15, y: 128.44), controlPoint2: CGPoint(x: 66.8, y: 128.6))
        bezier53Path.addCurve(to: CGPoint(x: 71.04, y: 129.69), controlPoint1: CGPoint(x: 68.64, y: 129.08), controlPoint2: CGPoint(x: 69.84, y: 129.39))
        bezier53Path.addCurve(to: CGPoint(x: 73.2, y: 130.22), controlPoint1: CGPoint(x: 71.76, y: 129.87), controlPoint2: CGPoint(x: 72.48, y: 130.05))
        bezier53Path.addCurve(to: CGPoint(x: 76.67, y: 131.04), controlPoint1: CGPoint(x: 74.35, y: 130.5), controlPoint2: CGPoint(x: 75.51, y: 130.78))
        bezier53Path.addCurve(to: CGPoint(x: 78.87, y: 131.55), controlPoint1: CGPoint(x: 77.4, y: 131.21), controlPoint2: CGPoint(x: 78.14, y: 131.38))
        bezier53Path.addCurve(to: CGPoint(x: 82.44, y: 132.32), controlPoint1: CGPoint(x: 80.06, y: 131.81), controlPoint2: CGPoint(x: 81.25, y: 132.07))
        bezier53Path.addCurve(to: CGPoint(x: 83.87, y: 132.64), controlPoint1: CGPoint(x: 82.91, y: 132.42), controlPoint2: CGPoint(x: 83.39, y: 132.53))
        bezier53Path.addCurve(to: CGPoint(x: 84.57, y: 132.78), controlPoint1: CGPoint(x: 84.1, y: 132.68), controlPoint2: CGPoint(x: 84.34, y: 132.73))
        bezier53Path.addCurve(to: CGPoint(x: 87.63, y: 133.39), controlPoint1: CGPoint(x: 85.59, y: 132.99), controlPoint2: CGPoint(x: 86.62, y: 133.19))
        bezier53Path.addCurve(to: CGPoint(x: 89.95, y: 133.84), controlPoint1: CGPoint(x: 88.41, y: 133.54), controlPoint2: CGPoint(x: 89.18, y: 133.7))
        bezier53Path.addCurve(to: CGPoint(x: 93.15, y: 134.43), controlPoint1: CGPoint(x: 91.01, y: 134.05), controlPoint2: CGPoint(x: 92.08, y: 134.24))
        bezier53Path.addCurve(to: CGPoint(x: 95.36, y: 134.83), controlPoint1: CGPoint(x: 93.88, y: 134.56), controlPoint2: CGPoint(x: 94.62, y: 134.7))
        bezier53Path.addCurve(to: CGPoint(x: 98.8, y: 135.4), controlPoint1: CGPoint(x: 96.5, y: 135.03), controlPoint2: CGPoint(x: 97.66, y: 135.21))
        bezier53Path.addCurve(to: CGPoint(x: 100.81, y: 135.73), controlPoint1: CGPoint(x: 99.47, y: 135.51), controlPoint2: CGPoint(x: 100.14, y: 135.63))
        bezier53Path.addCurve(to: CGPoint(x: 104.99, y: 136.36), controlPoint1: CGPoint(x: 102.2, y: 135.96), controlPoint2: CGPoint(x: 103.59, y: 136.16))
        bezier53Path.addCurve(to: CGPoint(x: 106.21, y: 136.55), controlPoint1: CGPoint(x: 105.39, y: 136.43), controlPoint2: CGPoint(x: 105.8, y: 136.49))
        bezier53Path.addCurve(to: CGPoint(x: 106.28, y: 136.56), controlPoint1: CGPoint(x: 106.23, y: 136.55), controlPoint2: CGPoint(x: 106.26, y: 136.56))
        bezier53Path.addCurve(to: CGPoint(x: 111.45, y: 137.26), controlPoint1: CGPoint(x: 108, y: 136.81), controlPoint2: CGPoint(x: 109.72, y: 137.04))
        bezier53Path.addCurve(to: CGPoint(x: 111.67, y: 137.29), controlPoint1: CGPoint(x: 111.53, y: 137.27), controlPoint2: CGPoint(x: 111.6, y: 137.28))
        bezier53Path.addCurve(to: CGPoint(x: 117.08, y: 137.94), controlPoint1: CGPoint(x: 113.47, y: 137.52), controlPoint2: CGPoint(x: 115.28, y: 137.74))
        bezier53Path.addCurve(to: CGPoint(x: 118.88, y: 138.13), controlPoint1: CGPoint(x: 117.68, y: 138.01), controlPoint2: CGPoint(x: 118.29, y: 138.06))
        bezier53Path.addCurve(to: CGPoint(x: 122.52, y: 138.51), controlPoint1: CGPoint(x: 120.1, y: 138.26), controlPoint2: CGPoint(x: 121.31, y: 138.39))
        bezier53Path.addCurve(to: CGPoint(x: 124.68, y: 138.71), controlPoint1: CGPoint(x: 123.24, y: 138.58), controlPoint2: CGPoint(x: 123.96, y: 138.64))
        bezier53Path.addCurve(to: CGPoint(x: 127.97, y: 139.01), controlPoint1: CGPoint(x: 125.78, y: 138.81), controlPoint2: CGPoint(x: 126.88, y: 138.91))
        bezier53Path.addCurve(to: CGPoint(x: 128.19, y: 139.03), controlPoint1: CGPoint(x: 128.05, y: 139.01), controlPoint2: CGPoint(x: 128.12, y: 139.02))
        bezier53Path.addCurve(to: CGPoint(x: 130.3, y: 139.19), controlPoint1: CGPoint(x: 128.89, y: 139.08), controlPoint2: CGPoint(x: 129.6, y: 139.13))
        bezier53Path.addCurve(to: CGPoint(x: 133.44, y: 139.42), controlPoint1: CGPoint(x: 131.35, y: 139.27), controlPoint2: CGPoint(x: 132.4, y: 139.35))
        bezier53Path.addCurve(to: CGPoint(x: 135.86, y: 139.58), controlPoint1: CGPoint(x: 134.25, y: 139.48), controlPoint2: CGPoint(x: 135.06, y: 139.52))
        bezier53Path.addCurve(to: CGPoint(x: 138.93, y: 139.76), controlPoint1: CGPoint(x: 136.89, y: 139.64), controlPoint2: CGPoint(x: 137.91, y: 139.71))
        bezier53Path.addCurve(to: CGPoint(x: 141.41, y: 139.89), controlPoint1: CGPoint(x: 139.76, y: 139.81), controlPoint2: CGPoint(x: 140.58, y: 139.85))
        bezier53Path.addCurve(to: CGPoint(x: 144.42, y: 140.03), controlPoint1: CGPoint(x: 142.41, y: 139.94), controlPoint2: CGPoint(x: 143.42, y: 139.99))
        bezier53Path.addCurve(to: CGPoint(x: 146.94, y: 140.11), controlPoint1: CGPoint(x: 145.26, y: 140.06), controlPoint2: CGPoint(x: 146.1, y: 140.09))
        bezier53Path.addCurve(to: CGPoint(x: 149.93, y: 140.21), controlPoint1: CGPoint(x: 147.94, y: 140.15), controlPoint2: CGPoint(x: 148.93, y: 140.18))
        bezier53Path.addCurve(to: CGPoint(x: 150.43, y: 140.23), controlPoint1: CGPoint(x: 150.09, y: 140.21), controlPoint2: CGPoint(x: 150.26, y: 140.22))
        bezier53Path.addCurve(to: CGPoint(x: 153.36, y: 140.29), controlPoint1: CGPoint(x: 151.41, y: 140.25), controlPoint2: CGPoint(x: 152.38, y: 140.26))
        bezier53Path.addCurve(to: CGPoint(x: 155.07, y: 140.32), controlPoint1: CGPoint(x: 153.93, y: 140.29), controlPoint2: CGPoint(x: 154.5, y: 140.31))
        bezier53Path.addCurve(to: CGPoint(x: 160.2, y: 140.35), controlPoint1: CGPoint(x: 156.78, y: 140.34), controlPoint2: CGPoint(x: 158.49, y: 140.35))
        bezier53Path.close()
        context.saveGState()
        bezier53Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: -0, y: 86.26),
            end: CGPoint(x: 160.45, y: 86.26),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// layer_1_34
        //// Bezier 64 Drawing
        let bezier64Path = UIBezierPath()
        bezier64Path.move(to: CGPoint(x: 670.99, y: 611.73))
        bezier64Path.addLine(to: CGPoint(x: 728.12, y: 646.87))
        bezier64Path.addCurve(to: CGPoint(x: 562.8, y: 689.18), controlPoint1: CGPoint(x: 682.56, y: 675.08), controlPoint2: CGPoint(x: 622.71, y: 689.18))
        bezier64Path.addLine(to: CGPoint(x: 562.54, y: 639.49))
        bezier64Path.addCurve(to: CGPoint(x: 670.99, y: 611.73), controlPoint1: CGPoint(x: 601.84, y: 639.49), controlPoint2: CGPoint(x: 641.09, y: 630.23))
        bezier64Path.close()
        context.saveGState()
        bezier64Path.addClip()
        context.drawLinearGradient(arc, start: CGPoint(x: 645.33, y: 611.73), end: CGPoint(x: 645.33, y: 689.18), options: [])
        context.restoreGState()


        //// Bezier 65 Drawing
        let bezier65Path = UIBezierPath()
        bezier65Path.move(to: CGPoint(x: 728.07, y: 646.86))
        bezier65Path.addCurve(to: CGPoint(x: 727.87, y: 722.71), controlPoint1: CGPoint(x: 728.07, y: 646.85), controlPoint2: CGPoint(x: 727.87, y: 722.71))
        bezier65Path.addCurve(to: CGPoint(x: 724.03, y: 725.02), controlPoint1: CGPoint(x: 726.6, y: 723.5), controlPoint2: CGPoint(x: 725.31, y: 724.27))
        bezier65Path.addCurve(to: CGPoint(x: 722.97, y: 725.64), controlPoint1: CGPoint(x: 723.68, y: 725.24), controlPoint2: CGPoint(x: 723.33, y: 725.44))
        bezier65Path.addCurve(to: CGPoint(x: 719.67, y: 727.54), controlPoint1: CGPoint(x: 721.88, y: 726.28), controlPoint2: CGPoint(x: 720.78, y: 726.92))
        bezier65Path.addLine(to: CGPoint(x: 718.99, y: 727.92))
        bezier65Path.addCurve(to: CGPoint(x: 715.05, y: 730.07), controlPoint1: CGPoint(x: 717.69, y: 728.65), controlPoint2: CGPoint(x: 716.37, y: 729.37))
        bezier65Path.addCurve(to: CGPoint(x: 714.04, y: 730.6), controlPoint1: CGPoint(x: 714.72, y: 730.25), controlPoint2: CGPoint(x: 714.38, y: 730.43))
        bezier65Path.addCurve(to: CGPoint(x: 710.78, y: 732.29), controlPoint1: CGPoint(x: 712.96, y: 731.17), controlPoint2: CGPoint(x: 711.88, y: 731.73))
        bezier65Path.addCurve(to: CGPoint(x: 709.81, y: 732.78), controlPoint1: CGPoint(x: 710.46, y: 732.45), controlPoint2: CGPoint(x: 710.14, y: 732.62))
        bezier65Path.addCurve(to: CGPoint(x: 705.74, y: 734.78), controlPoint1: CGPoint(x: 708.47, y: 733.46), controlPoint2: CGPoint(x: 707.11, y: 734.13))
        bezier65Path.addCurve(to: CGPoint(x: 704.92, y: 735.17), controlPoint1: CGPoint(x: 705.47, y: 734.92), controlPoint2: CGPoint(x: 705.2, y: 735.04))
        bezier65Path.addCurve(to: CGPoint(x: 701.47, y: 736.78), controlPoint1: CGPoint(x: 703.78, y: 735.72), controlPoint2: CGPoint(x: 702.63, y: 736.26))
        bezier65Path.addLine(to: CGPoint(x: 700.35, y: 737.3))
        bezier65Path.addCurve(to: CGPoint(x: 696.12, y: 739.17), controlPoint1: CGPoint(x: 698.95, y: 737.93), controlPoint2: CGPoint(x: 697.54, y: 738.56))
        bezier65Path.addLine(to: CGPoint(x: 695.85, y: 739.28))
        bezier65Path.addCurve(to: CGPoint(x: 691.81, y: 740.98), controlPoint1: CGPoint(x: 694.51, y: 739.86), controlPoint2: CGPoint(x: 693.16, y: 740.42))
        bezier65Path.addCurve(to: CGPoint(x: 690.63, y: 741.46), controlPoint1: CGPoint(x: 691.42, y: 741.14), controlPoint2: CGPoint(x: 691.02, y: 741.3))
        bezier65Path.addCurve(to: CGPoint(x: 686.84, y: 742.96), controlPoint1: CGPoint(x: 689.37, y: 741.97), controlPoint2: CGPoint(x: 688.11, y: 742.47))
        bezier65Path.addCurve(to: CGPoint(x: 686.23, y: 743.2), controlPoint1: CGPoint(x: 686.64, y: 743.04), controlPoint2: CGPoint(x: 686.43, y: 743.13))
        bezier65Path.addCurve(to: CGPoint(x: 681.85, y: 744.85), controlPoint1: CGPoint(x: 684.78, y: 743.76), controlPoint2: CGPoint(x: 683.32, y: 744.31))
        bezier65Path.addCurve(to: CGPoint(x: 680.71, y: 745.26), controlPoint1: CGPoint(x: 681.47, y: 744.99), controlPoint2: CGPoint(x: 681.09, y: 745.12))
        bezier65Path.addCurve(to: CGPoint(x: 677.1, y: 746.54), controlPoint1: CGPoint(x: 679.51, y: 745.69), controlPoint2: CGPoint(x: 678.31, y: 746.12))
        bezier65Path.addLine(to: CGPoint(x: 676.09, y: 746.89))
        bezier65Path.addLine(to: CGPoint(x: 675.6, y: 747.06))
        bezier65Path.addCurve(to: CGPoint(x: 673.68, y: 747.7), controlPoint1: CGPoint(x: 674.96, y: 747.28), controlPoint2: CGPoint(x: 674.32, y: 747.49))
        bezier65Path.addCurve(to: CGPoint(x: 670.84, y: 748.64), controlPoint1: CGPoint(x: 672.73, y: 748.02), controlPoint2: CGPoint(x: 671.79, y: 748.34))
        bezier65Path.addCurve(to: CGPoint(x: 668.46, y: 749.39), controlPoint1: CGPoint(x: 670.05, y: 748.9), controlPoint2: CGPoint(x: 669.25, y: 749.14))
        bezier65Path.addCurve(to: CGPoint(x: 665.63, y: 750.27), controlPoint1: CGPoint(x: 667.52, y: 749.69), controlPoint2: CGPoint(x: 666.57, y: 749.99))
        bezier65Path.addLine(to: CGPoint(x: 663.2, y: 750.99))
        bezier65Path.addCurve(to: CGPoint(x: 660.37, y: 751.82), controlPoint1: CGPoint(x: 662.25, y: 751.27), controlPoint2: CGPoint(x: 661.31, y: 751.54))
        bezier65Path.addCurve(to: CGPoint(x: 657.89, y: 752.5), controlPoint1: CGPoint(x: 659.54, y: 752.05), controlPoint2: CGPoint(x: 658.72, y: 752.28))
        bezier65Path.addCurve(to: CGPoint(x: 655.05, y: 753.28), controlPoint1: CGPoint(x: 656.95, y: 752.76), controlPoint2: CGPoint(x: 656, y: 753.02))
        bezier65Path.addCurve(to: CGPoint(x: 652.55, y: 753.92), controlPoint1: CGPoint(x: 654.22, y: 753.5), controlPoint2: CGPoint(x: 653.38, y: 753.71))
        bezier65Path.addCurve(to: CGPoint(x: 649.7, y: 754.65), controlPoint1: CGPoint(x: 651.6, y: 754.17), controlPoint2: CGPoint(x: 650.65, y: 754.41))
        bezier65Path.addCurve(to: CGPoint(x: 647.16, y: 755.26), controlPoint1: CGPoint(x: 648.85, y: 754.86), controlPoint2: CGPoint(x: 648.01, y: 755.06))
        bezier65Path.addCurve(to: CGPoint(x: 644.29, y: 755.94), controlPoint1: CGPoint(x: 646.21, y: 755.49), controlPoint2: CGPoint(x: 645.25, y: 755.72))
        bezier65Path.addCurve(to: CGPoint(x: 641.73, y: 756.51), controlPoint1: CGPoint(x: 643.44, y: 756.14), controlPoint2: CGPoint(x: 642.59, y: 756.32))
        bezier65Path.addCurve(to: CGPoint(x: 638.86, y: 757.14), controlPoint1: CGPoint(x: 640.77, y: 756.72), controlPoint2: CGPoint(x: 639.82, y: 756.93))
        bezier65Path.addCurve(to: CGPoint(x: 636.26, y: 757.67), controlPoint1: CGPoint(x: 637.99, y: 757.32), controlPoint2: CGPoint(x: 637.13, y: 757.5))
        bezier65Path.addCurve(to: CGPoint(x: 633.37, y: 758.25), controlPoint1: CGPoint(x: 635.3, y: 757.87), controlPoint2: CGPoint(x: 634.34, y: 758.07))
        bezier65Path.addCurve(to: CGPoint(x: 632.22, y: 758.49), controlPoint1: CGPoint(x: 632.99, y: 758.33), controlPoint2: CGPoint(x: 632.61, y: 758.41))
        bezier65Path.addCurve(to: CGPoint(x: 629.87, y: 758.92), controlPoint1: CGPoint(x: 631.44, y: 758.64), controlPoint2: CGPoint(x: 630.65, y: 758.78))
        bezier65Path.addCurve(to: CGPoint(x: 628.94, y: 759.1), controlPoint1: CGPoint(x: 629.56, y: 758.98), controlPoint2: CGPoint(x: 629.25, y: 759.04))
        bezier65Path.addCurve(to: CGPoint(x: 624.16, y: 759.94), controlPoint1: CGPoint(x: 627.35, y: 759.39), controlPoint2: CGPoint(x: 625.76, y: 759.66))
        bezier65Path.addCurve(to: CGPoint(x: 623.03, y: 760.12), controlPoint1: CGPoint(x: 623.79, y: 760), controlPoint2: CGPoint(x: 623.41, y: 760.06))
        bezier65Path.addCurve(to: CGPoint(x: 619.02, y: 760.75), controlPoint1: CGPoint(x: 621.7, y: 760.34), controlPoint2: CGPoint(x: 620.36, y: 760.55))
        bezier65Path.addCurve(to: CGPoint(x: 617.94, y: 760.92), controlPoint1: CGPoint(x: 618.66, y: 760.81), controlPoint2: CGPoint(x: 618.3, y: 760.87))
        bezier65Path.addCurve(to: CGPoint(x: 613.12, y: 761.61), controlPoint1: CGPoint(x: 616.34, y: 761.16), controlPoint2: CGPoint(x: 614.73, y: 761.39))
        bezier65Path.addCurve(to: CGPoint(x: 612.09, y: 761.75), controlPoint1: CGPoint(x: 612.78, y: 761.66), controlPoint2: CGPoint(x: 612.43, y: 761.7))
        bezier65Path.addCurve(to: CGPoint(x: 608.03, y: 762.26), controlPoint1: CGPoint(x: 610.73, y: 761.93), controlPoint2: CGPoint(x: 609.38, y: 762.1))
        bezier65Path.addLine(to: CGPoint(x: 606.84, y: 762.41))
        bezier65Path.addCurve(to: CGPoint(x: 602.31, y: 762.92), controlPoint1: CGPoint(x: 605.33, y: 762.58), controlPoint2: CGPoint(x: 603.82, y: 762.76))
        bezier65Path.addLine(to: CGPoint(x: 602.05, y: 762.94))
        bezier65Path.addCurve(to: CGPoint(x: 596.01, y: 763.52), controlPoint1: CGPoint(x: 600.04, y: 763.15), controlPoint2: CGPoint(x: 598.03, y: 763.35))
        bezier65Path.addCurve(to: CGPoint(x: 594.77, y: 763.63), controlPoint1: CGPoint(x: 595.6, y: 763.57), controlPoint2: CGPoint(x: 595.18, y: 763.59))
        bezier65Path.addCurve(to: CGPoint(x: 589.95, y: 764.01), controlPoint1: CGPoint(x: 593.16, y: 763.77), controlPoint2: CGPoint(x: 591.56, y: 763.9))
        bezier65Path.addCurve(to: CGPoint(x: 587.8, y: 764.15), controlPoint1: CGPoint(x: 589.24, y: 764.06), controlPoint2: CGPoint(x: 588.52, y: 764.11))
        bezier65Path.addCurve(to: CGPoint(x: 583.85, y: 764.4), controlPoint1: CGPoint(x: 586.48, y: 764.24), controlPoint2: CGPoint(x: 585.17, y: 764.33))
        bezier65Path.addCurve(to: CGPoint(x: 581.47, y: 764.52), controlPoint1: CGPoint(x: 583.06, y: 764.44), controlPoint2: CGPoint(x: 582.26, y: 764.49))
        bezier65Path.addCurve(to: CGPoint(x: 577.7, y: 764.69), controlPoint1: CGPoint(x: 580.22, y: 764.59), controlPoint2: CGPoint(x: 578.96, y: 764.64))
        bezier65Path.addCurve(to: CGPoint(x: 576.41, y: 764.75), controlPoint1: CGPoint(x: 577.27, y: 764.71), controlPoint2: CGPoint(x: 576.84, y: 764.73))
        bezier65Path.addCurve(to: CGPoint(x: 575.34, y: 764.78), controlPoint1: CGPoint(x: 576.05, y: 764.76), controlPoint2: CGPoint(x: 575.7, y: 764.77))
        bezier65Path.addCurve(to: CGPoint(x: 570.95, y: 764.9), controlPoint1: CGPoint(x: 573.88, y: 764.83), controlPoint2: CGPoint(x: 572.42, y: 764.87))
        bezier65Path.addCurve(to: CGPoint(x: 568.94, y: 764.94), controlPoint1: CGPoint(x: 570.28, y: 764.91), controlPoint2: CGPoint(x: 569.61, y: 764.93))
        bezier65Path.addCurve(to: CGPoint(x: 562.8, y: 765), controlPoint1: CGPoint(x: 566.9, y: 764.98), controlPoint2: CGPoint(x: 564.85, y: 765))
        bezier65Path.addCurve(to: CGPoint(x: 562.8, y: 690.75), controlPoint1: CGPoint(x: 562.8, y: 761.54), controlPoint2: CGPoint(x: 562.8, y: 726.49))
        bezier65Path.addCurve(to: CGPoint(x: 562.8, y: 689.14), controlPoint1: CGPoint(x: 562.8, y: 689.71), controlPoint2: CGPoint(x: 562.8, y: 689.14))
        bezier65Path.addCurve(to: CGPoint(x: 569.15, y: 689.08), controlPoint1: CGPoint(x: 564.92, y: 689.14), controlPoint2: CGPoint(x: 567.04, y: 689.12))
        bezier65Path.addCurve(to: CGPoint(x: 571.15, y: 689.04), controlPoint1: CGPoint(x: 569.81, y: 689.07), controlPoint2: CGPoint(x: 570.48, y: 689.05))
        bezier65Path.addCurve(to: CGPoint(x: 575.55, y: 688.92), controlPoint1: CGPoint(x: 572.62, y: 689), controlPoint2: CGPoint(x: 574.08, y: 688.97))
        bezier65Path.addCurve(to: CGPoint(x: 577.9, y: 688.83), controlPoint1: CGPoint(x: 576.33, y: 688.89), controlPoint2: CGPoint(x: 577.12, y: 688.86))
        bezier65Path.addCurve(to: CGPoint(x: 581.68, y: 688.66), controlPoint1: CGPoint(x: 579.16, y: 688.78), controlPoint2: CGPoint(x: 580.42, y: 688.72))
        bezier65Path.addCurve(to: CGPoint(x: 584.05, y: 688.54), controlPoint1: CGPoint(x: 582.47, y: 688.62), controlPoint2: CGPoint(x: 583.26, y: 688.58))
        bezier65Path.addCurve(to: CGPoint(x: 588, y: 688.29), controlPoint1: CGPoint(x: 585.37, y: 688.47), controlPoint2: CGPoint(x: 586.69, y: 688.38))
        bezier65Path.addCurve(to: CGPoint(x: 590.15, y: 688.15), controlPoint1: CGPoint(x: 588.72, y: 688.25), controlPoint2: CGPoint(x: 589.43, y: 688.2))
        bezier65Path.addCurve(to: CGPoint(x: 594.97, y: 687.77), controlPoint1: CGPoint(x: 591.75, y: 688.03), controlPoint2: CGPoint(x: 593.36, y: 687.91))
        bezier65Path.addCurve(to: CGPoint(x: 596.22, y: 687.67), controlPoint1: CGPoint(x: 595.38, y: 687.73), controlPoint2: CGPoint(x: 595.8, y: 687.7))
        bezier65Path.addCurve(to: CGPoint(x: 602.26, y: 687.08), controlPoint1: CGPoint(x: 598.23, y: 687.49), controlPoint2: CGPoint(x: 600.25, y: 687.29))
        bezier65Path.addCurve(to: CGPoint(x: 607.04, y: 686.55), controlPoint1: CGPoint(x: 603.85, y: 686.91), controlPoint2: CGPoint(x: 605.45, y: 686.73))
        bezier65Path.addCurve(to: CGPoint(x: 608.23, y: 686.4), controlPoint1: CGPoint(x: 607.43, y: 686.5), controlPoint2: CGPoint(x: 607.84, y: 686.45))
        bezier65Path.addCurve(to: CGPoint(x: 612.29, y: 685.88), controlPoint1: CGPoint(x: 609.59, y: 686.24), controlPoint2: CGPoint(x: 610.94, y: 686.06))
        bezier65Path.addCurve(to: CGPoint(x: 613.32, y: 685.75), controlPoint1: CGPoint(x: 612.63, y: 685.84), controlPoint2: CGPoint(x: 612.98, y: 685.8))
        bezier65Path.addCurve(to: CGPoint(x: 618.14, y: 685.06), controlPoint1: CGPoint(x: 614.93, y: 685.53), controlPoint2: CGPoint(x: 616.54, y: 685.3))
        bezier65Path.addLine(to: CGPoint(x: 619.23, y: 684.89))
        bezier65Path.addCurve(to: CGPoint(x: 623.23, y: 684.26), controlPoint1: CGPoint(x: 620.56, y: 684.69), controlPoint2: CGPoint(x: 621.9, y: 684.48))
        bezier65Path.addCurve(to: CGPoint(x: 624.37, y: 684.07), controlPoint1: CGPoint(x: 623.61, y: 684.2), controlPoint2: CGPoint(x: 623.99, y: 684.13))
        bezier65Path.addCurve(to: CGPoint(x: 629.14, y: 683.24), controlPoint1: CGPoint(x: 625.96, y: 683.8), controlPoint2: CGPoint(x: 627.55, y: 683.53))
        bezier65Path.addCurve(to: CGPoint(x: 630.06, y: 683.07), controlPoint1: CGPoint(x: 629.45, y: 683.18), controlPoint2: CGPoint(x: 629.76, y: 683.12))
        bezier65Path.addCurve(to: CGPoint(x: 633.58, y: 682.4), controlPoint1: CGPoint(x: 631.24, y: 682.85), controlPoint2: CGPoint(x: 632.41, y: 682.62))
        bezier65Path.addCurve(to: CGPoint(x: 636.46, y: 681.82), controlPoint1: CGPoint(x: 634.54, y: 682.21), controlPoint2: CGPoint(x: 635.51, y: 682.01))
        bezier65Path.addCurve(to: CGPoint(x: 639.06, y: 681.27), controlPoint1: CGPoint(x: 637.33, y: 681.64), controlPoint2: CGPoint(x: 638.2, y: 681.46))
        bezier65Path.addCurve(to: CGPoint(x: 641.93, y: 680.65), controlPoint1: CGPoint(x: 640.02, y: 681.07), controlPoint2: CGPoint(x: 640.98, y: 680.87))
        bezier65Path.addCurve(to: CGPoint(x: 644.5, y: 680.08), controlPoint1: CGPoint(x: 642.79, y: 680.46), controlPoint2: CGPoint(x: 643.64, y: 680.27))
        bezier65Path.addCurve(to: CGPoint(x: 647.36, y: 679.4), controlPoint1: CGPoint(x: 645.45, y: 679.85), controlPoint2: CGPoint(x: 646.41, y: 679.63))
        bezier65Path.addLine(to: CGPoint(x: 649.9, y: 678.79))
        bezier65Path.addCurve(to: CGPoint(x: 652.75, y: 678.07), controlPoint1: CGPoint(x: 650.85, y: 678.55), controlPoint2: CGPoint(x: 651.8, y: 678.31))
        bezier65Path.addLine(to: CGPoint(x: 655.26, y: 677.41))
        bezier65Path.addCurve(to: CGPoint(x: 658.09, y: 676.64), controlPoint1: CGPoint(x: 656.2, y: 677.16), controlPoint2: CGPoint(x: 657.15, y: 676.9))
        bezier65Path.addCurve(to: CGPoint(x: 660.56, y: 675.96), controlPoint1: CGPoint(x: 658.92, y: 676.41), controlPoint2: CGPoint(x: 659.74, y: 676.19))
        bezier65Path.addCurve(to: CGPoint(x: 663.39, y: 675.13), controlPoint1: CGPoint(x: 661.51, y: 675.69), controlPoint2: CGPoint(x: 662.45, y: 675.41))
        bezier65Path.addCurve(to: CGPoint(x: 665.83, y: 674.41), controlPoint1: CGPoint(x: 664.21, y: 674.89), controlPoint2: CGPoint(x: 665.02, y: 674.65))
        bezier65Path.addCurve(to: CGPoint(x: 668.66, y: 673.53), controlPoint1: CGPoint(x: 666.78, y: 674.12), controlPoint2: CGPoint(x: 667.71, y: 673.83))
        bezier65Path.addLine(to: CGPoint(x: 671.04, y: 672.78))
        bezier65Path.addCurve(to: CGPoint(x: 673.88, y: 671.84), controlPoint1: CGPoint(x: 671.99, y: 672.47), controlPoint2: CGPoint(x: 672.93, y: 672.16))
        bezier65Path.addCurve(to: CGPoint(x: 676.3, y: 671.03), controlPoint1: CGPoint(x: 674.69, y: 671.57), controlPoint2: CGPoint(x: 675.49, y: 671.31))
        bezier65Path.addLine(to: CGPoint(x: 677.31, y: 670.68))
        bezier65Path.addCurve(to: CGPoint(x: 680.91, y: 669.4), controlPoint1: CGPoint(x: 678.51, y: 670.26), controlPoint2: CGPoint(x: 679.71, y: 669.84))
        bezier65Path.addLine(to: CGPoint(x: 682.06, y: 668.99))
        bezier65Path.addCurve(to: CGPoint(x: 686.43, y: 667.35), controlPoint1: CGPoint(x: 683.52, y: 668.45), controlPoint2: CGPoint(x: 684.98, y: 667.9))
        bezier65Path.addCurve(to: CGPoint(x: 687.04, y: 667.1), controlPoint1: CGPoint(x: 686.63, y: 667.26), controlPoint2: CGPoint(x: 686.84, y: 667.18))
        bezier65Path.addCurve(to: CGPoint(x: 690.83, y: 665.59), controlPoint1: CGPoint(x: 688.31, y: 666.61), controlPoint2: CGPoint(x: 689.58, y: 666.1))
        bezier65Path.addLine(to: CGPoint(x: 692.01, y: 665.12))
        bezier65Path.addCurve(to: CGPoint(x: 696.06, y: 663.42), controlPoint1: CGPoint(x: 693.36, y: 664.56), controlPoint2: CGPoint(x: 694.71, y: 664))
        bezier65Path.addCurve(to: CGPoint(x: 700.55, y: 661.44), controlPoint1: CGPoint(x: 697.74, y: 662.69), controlPoint2: CGPoint(x: 699.15, y: 662.07))
        bezier65Path.addLine(to: CGPoint(x: 701.67, y: 660.92))
        bezier65Path.addCurve(to: CGPoint(x: 705.13, y: 659.31), controlPoint1: CGPoint(x: 702.83, y: 660.39), controlPoint2: CGPoint(x: 703.98, y: 659.85))
        bezier65Path.addCurve(to: CGPoint(x: 705.94, y: 658.93), controlPoint1: CGPoint(x: 705.4, y: 659.18), controlPoint2: CGPoint(x: 705.67, y: 659.06))
        bezier65Path.addCurve(to: CGPoint(x: 710.01, y: 656.92), controlPoint1: CGPoint(x: 707.31, y: 658.27), controlPoint2: CGPoint(x: 708.67, y: 657.6))
        bezier65Path.addLine(to: CGPoint(x: 710.99, y: 656.43))
        bezier65Path.addCurve(to: CGPoint(x: 714.25, y: 654.74), controlPoint1: CGPoint(x: 712.08, y: 655.88), controlPoint2: CGPoint(x: 713.16, y: 655.31))
        bezier65Path.addLine(to: CGPoint(x: 715.25, y: 654.21))
        bezier65Path.addCurve(to: CGPoint(x: 719.2, y: 652.06), controlPoint1: CGPoint(x: 716.58, y: 653.5), controlPoint2: CGPoint(x: 717.89, y: 652.79))
        bezier65Path.addCurve(to: CGPoint(x: 719.86, y: 651.68), controlPoint1: CGPoint(x: 719.42, y: 651.94), controlPoint2: CGPoint(x: 719.64, y: 651.81))
        bezier65Path.addCurve(to: CGPoint(x: 723.18, y: 649.78), controlPoint1: CGPoint(x: 720.98, y: 651.05), controlPoint2: CGPoint(x: 722.08, y: 650.42))
        bezier65Path.addCurve(to: CGPoint(x: 724.23, y: 649.17), controlPoint1: CGPoint(x: 723.53, y: 649.57), controlPoint2: CGPoint(x: 723.88, y: 649.37))
        bezier65Path.addCurve(to: CGPoint(x: 728.07, y: 646.85), controlPoint1: CGPoint(x: 725.52, y: 648.4), controlPoint2: CGPoint(x: 726.8, y: 647.64))
        bezier65Path.addLine(to: CGPoint(x: 728.07, y: 646.86))
        bezier65Path.close()
        context.saveGState()
        bezier65Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 939.43, y: 657.76),
            end: CGPoint(x: 311.83, y: 766.52),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// layer_1_33
        context.saveGState()
        context.setAlpha(redCube3PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 34 Drawing
        let bezier34Path = UIBezierPath()
        bezier34Path.move(to: CGPoint(x: 639.34, y: 615.32))
        bezier34Path.addLine(to: CGPoint(x: 786.24, y: 698.86))
        bezier34Path.addLine(to: CGPoint(x: 820.71, y: 678.81))
        bezier34Path.addLine(to: CGPoint(x: 671.96, y: 594.98))
        bezier34Path.addLine(to: CGPoint(x: 639.34, y: 615.32))
        bezier34Path.close()
        context.saveGState()
        bezier34Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 730.03, y: 594.98), end: CGPoint(x: 730.03, y: 698.86), options: [])
        context.restoreGState()
        SpaceshipScreen.cubeConture.setStroke()
        bezier34Path.lineWidth = 0.1
        bezier34Path.stroke()


        //// Bezier 41 Drawing
        let bezier41Path = UIBezierPath()
        bezier41Path.move(to: CGPoint(x: 639.61, y: 615.16))
        bezier41Path.addLine(to: CGPoint(x: 639.18, y: 660.17))
        bezier41Path.addLine(to: CGPoint(x: 784.72, y: 743.71))
        bezier41Path.addLine(to: CGPoint(x: 786.18, y: 698.88))
        bezier41Path.addLine(to: CGPoint(x: 639.61, y: 615.16))
        bezier41Path.close()
        context.saveGState()
        bezier41Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 712.68, y: 615.16), end: CGPoint(x: 712.68, y: 743.71), options: [])
        context.restoreGState()
        SpaceshipScreen.cubeConture.setStroke()
        bezier41Path.lineWidth = 0.1
        bezier41Path.stroke()


        //// Bezier 42 Drawing
        let bezier42Path = UIBezierPath()
        bezier42Path.move(to: CGPoint(x: 786.23, y: 698.97))
        bezier42Path.addLine(to: CGPoint(x: 820.57, y: 678.82))
        bezier42Path.addLine(to: CGPoint(x: 820.42, y: 725.69))
        bezier42Path.addCurve(to: CGPoint(x: 784.74, y: 743.81), controlPoint1: CGPoint(x: 820.42, y: 725.69), controlPoint2: CGPoint(x: 784.74, y: 743.77))
        bezier42Path.addCurve(to: CGPoint(x: 786.23, y: 698.97), controlPoint1: CGPoint(x: 784.74, y: 743.85), controlPoint2: CGPoint(x: 786.23, y: 698.97))
        bezier42Path.close()
        context.saveGState()
        bezier42Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 802.66, y: 678.82), end: CGPoint(x: 802.66, y: 743.81), options: [])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_32
        context.saveGState()
        context.translateBy(x: (redCube3ExprX - 64.2837103058), y: (redCube3ExprY - 22.7265625))
        context.scaleBy(x: 2.3, y: 2.3)



        //// Bezier 43 Drawing
        let bezier43Path = UIBezierPath()
        bezier43Path.move(to: CGPoint(x: 10.97, y: -3.11))
        bezier43Path.addLine(to: CGPoint(x: 26.56, y: 5.9))
        bezier43Path.addLine(to: CGPoint(x: 26.5, y: 25.95))
        bezier43Path.addLine(to: CGPoint(x: 11.43, y: 18.07))
        bezier43Path.addLine(to: CGPoint(x: 10.97, y: -3.11))
        bezier43Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier43Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 18.76, y: -3.11), end: CGPoint(x: 18.76, y: 25.95), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier43Path.lineWidth = 0.1
        bezier43Path.stroke()
        context.restoreGState()


        //// Group 12
        context.saveGState()
        context.translateBy(x: -8.65, y: 0.95)
        context.scaleBy(x: 0.15, y: 0.15)



        //// Bezier 91 Drawing
        let bezier91Path = UIBezierPath()
        bezier91Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier91Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier91Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier91Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier91Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier91Path.close()
        fillColor3.setFill()
        bezier91Path.fill()


        //// Bezier 92 Drawing
        let bezier92Path = UIBezierPath()
        bezier92Path.move(to: CGPoint(x: 131.69, y: 29.14))
        bezier92Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier92Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier92Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier92Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier92Path.close()
        fillColor6.setFill()
        bezier92Path.fill()


        //// Bezier 93 Drawing
        let bezier93Path = UIBezierPath()
        bezier93Path.move(to: CGPoint(x: 132.14, y: 109.42))
        bezier93Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier93Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier93Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier93Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier93Path.close()
        fillColor7.setFill()
        bezier93Path.fill()


        //// Star 7 Drawing
        context.saveGState()
        context.translateBy(x: 131.93, y: 69.3)
        context.rotate(by: -90 * CGFloat.pi/180)

        let star7Path = UIBezierPath()
        star7Path.move(to: CGPoint(x: 0, y: -69.3))
        star7Path.addLine(to: CGPoint(x: 40.15, y: 0))
        star7Path.addLine(to: CGPoint(x: 0, y: 69.3))
        star7Path.addLine(to: CGPoint(x: -40.15, y: 0))
        star7Path.close()
        fillColor8.setFill()
        star7Path.fill()

        context.restoreGState()


        //// Group 13
        //// Bezier 94 Drawing
        let bezier94Path = UIBezierPath()
        bezier94Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier94Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier94Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier94Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier94Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier94Path.close()
        fillColor9.setFill()
        bezier94Path.fill()


        //// Star 8 Drawing
        context.saveGState()
        context.translateBy(x: 96.58, y: 130.5)
        context.rotate(by: -30 * CGFloat.pi/180)

        let star8Path = UIBezierPath()
        star8Path.move(to: CGPoint(x: 0, y: -70.7))
        star8Path.addLine(to: CGPoint(x: 40.95, y: 0))
        star8Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star8Path.addLine(to: CGPoint(x: -40.95, y: 0))
        star8Path.close()
        fillColor3.setFill()
        star8Path.fill()

        context.restoreGState()


        //// Star 9 Drawing
        context.saveGState()
        context.translateBy(x: 167.28, y: 130.5)
        context.rotate(by: -150 * CGFloat.pi/180)

        let star9Path = UIBezierPath()
        star9Path.move(to: CGPoint(x: 0, y: -70.7))
        star9Path.addLine(to: CGPoint(x: 40.55, y: 0))
        star9Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star9Path.addLine(to: CGPoint(x: -40.55, y: 0))
        star9Path.close()
        fillColor6.setFill()
        star9Path.fill()

        context.restoreGState()





        context.restoreGState()


        //// Bezier 44 Drawing
        let bezier44Path = UIBezierPath()
        bezier44Path.move(to: CGPoint(x: -3.71, y: 5.96))
        bezier44Path.addLine(to: CGPoint(x: 11.45, y: 14.79))
        bezier44Path.addLine(to: CGPoint(x: 11.42, y: 35.1))
        bezier44Path.addLine(to: CGPoint(x: -3.79, y: 25.86))
        bezier44Path.addLine(to: CGPoint(x: -3.71, y: 5.96))
        bezier44Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier44Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 3.83, y: 5.96), end: CGPoint(x: 3.83, y: 35.1), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier44Path.lineWidth = 0.3
        bezier44Path.stroke()
        context.restoreGState()


        //// Bezier 45 Drawing
        let bezier45Path = UIBezierPath()
        bezier45Path.move(to: CGPoint(x: -3.7, y: 5.97))
        bezier45Path.addLine(to: CGPoint(x: 11, y: -3.12))
        bezier45Path.addCurve(to: CGPoint(x: 26.56, y: 5.92), controlPoint1: CGPoint(x: 11, y: -3.12), controlPoint2: CGPoint(x: 26.58, y: 5.94))
        bezier45Path.addCurve(to: CGPoint(x: 11.42, y: 14.85), controlPoint1: CGPoint(x: 26.54, y: 5.91), controlPoint2: CGPoint(x: 11.48, y: 14.92))
        bezier45Path.addCurve(to: CGPoint(x: -3.7, y: 5.97), controlPoint1: CGPoint(x: 11.37, y: 14.78), controlPoint2: CGPoint(x: -3.7, y: 5.97))
        bezier45Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier45Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 11.43, y: -3.12), end: CGPoint(x: 11.43, y: 14.85), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier45Path.lineWidth = 0.3
        bezier45Path.stroke()
        context.restoreGState()


        //// Bezier 46 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier46Path = UIBezierPath()
        bezier46Path.move(to: CGPoint(x: 11.44, y: 35.06))
        bezier46Path.addLine(to: CGPoint(x: -3.73, y: 25.96))
        bezier46Path.addLine(to: CGPoint(x: 11.44, y: 18.06))
        bezier46Path.addLine(to: CGPoint(x: 26.31, y: 25.93))
        bezier46Path.addLine(to: CGPoint(x: 11.44, y: 35.06))
        bezier46Path.close()
        context.saveGState()
        bezier46Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 11.29, y: 18.06), end: CGPoint(x: 11.29, y: 35.06), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier46Path.lineWidth = 0.1
        bezier46Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 47 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier47Path = UIBezierPath()
        bezier47Path.move(to: CGPoint(x: -3.83, y: 25.94))
        bezier47Path.addLine(to: CGPoint(x: 11.44, y: 18.05))
        bezier47Path.addLine(to: CGPoint(x: 10.98, y: -3.12))
        bezier47Path.addLine(to: CGPoint(x: -3.72, y: 5.97))
        bezier47Path.addLine(to: CGPoint(x: -3.83, y: 25.94))
        bezier47Path.close()
        context.saveGState()
        bezier47Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 3.8, y: -3.12), end: CGPoint(x: 3.8, y: 25.94), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier47Path.lineWidth = 0.1
        bezier47Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 48 Drawing
        let bezier48Path = UIBezierPath()
        bezier48Path.move(to: CGPoint(x: 11.47, y: 35.03))
        bezier48Path.addCurve(to: CGPoint(x: 26.5, y: 25.92), controlPoint1: CGPoint(x: 11.47, y: 35.03), controlPoint2: CGPoint(x: 26.52, y: 25.94))
        bezier48Path.addCurve(to: CGPoint(x: 26.5, y: 5.92), controlPoint1: CGPoint(x: 26.47, y: 25.91), controlPoint2: CGPoint(x: 26.5, y: 5.92))
        bezier48Path.addLine(to: CGPoint(x: 11.38, y: 14.84))
        bezier48Path.addLine(to: CGPoint(x: 11.47, y: 35.03))
        bezier48Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier48Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 18.94, y: 5.92), end: CGPoint(x: 18.94, y: 35.03), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier48Path.lineWidth = 0.5
        bezier48Path.stroke()
        context.restoreGState()



        context.restoreGState()


        //// layer_1_31
        context.saveGState()
        context.translateBy(x: (arc3ExprX - 101.057147806), y: (arc3ExprY - 2.328125))



        //// Bezier 54 Drawing
        let bezier54Path = UIBezierPath()
        bezier54Path.move(to: CGPoint(x: 155.24, y: 20.18))
        bezier54Path.addCurve(to: CGPoint(x: 25.31, y: 86.71), controlPoint1: CGPoint(x: 129.73, y: 50.47), controlPoint2: CGPoint(x: 84.4, y: 75.04))
        bezier54Path.addLine(to: CGPoint(x: 0.2, y: 43.65))
        bezier54Path.addCurve(to: CGPoint(x: 85.43, y: 0), controlPoint1: CGPoint(x: 38.97, y: 36), controlPoint2: CGPoint(x: 68.69, y: 19.88))
        bezier54Path.addLine(to: CGPoint(x: 155.24, y: 20.18))
        bezier54Path.close()
        context.saveGState()
        bezier54Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 0.2, y: 43.36),
            end: CGPoint(x: 155.24, y: 43.36),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 55 Drawing
        let bezier55Path = UIBezierPath()
        bezier55Path.move(to: CGPoint(x: 151.63, y: 93.47))
        bezier55Path.addCurve(to: CGPoint(x: 152.51, y: 92.51), controlPoint1: CGPoint(x: 151.92, y: 93.15), controlPoint2: CGPoint(x: 152.22, y: 92.83))
        bezier55Path.addCurve(to: CGPoint(x: 155.05, y: 89.59), controlPoint1: CGPoint(x: 153.37, y: 91.54), controlPoint2: CGPoint(x: 154.22, y: 90.57))
        bezier55Path.addLine(to: CGPoint(x: 155.24, y: 20.18))
        bezier55Path.addCurve(to: CGPoint(x: 152.71, y: 23.09), controlPoint1: CGPoint(x: 154.41, y: 21.16), controlPoint2: CGPoint(x: 153.57, y: 22.13))
        bezier55Path.addCurve(to: CGPoint(x: 151.83, y: 24.05), controlPoint1: CGPoint(x: 152.42, y: 23.41), controlPoint2: CGPoint(x: 152.12, y: 23.73))
        bezier55Path.addCurve(to: CGPoint(x: 150.04, y: 25.97), controlPoint1: CGPoint(x: 151.24, y: 24.69), controlPoint2: CGPoint(x: 150.65, y: 25.34))
        bezier55Path.addCurve(to: CGPoint(x: 148.94, y: 27.11), controlPoint1: CGPoint(x: 149.68, y: 26.36), controlPoint2: CGPoint(x: 149.31, y: 26.73))
        bezier55Path.addCurve(to: CGPoint(x: 147.26, y: 28.82), controlPoint1: CGPoint(x: 148.39, y: 27.68), controlPoint2: CGPoint(x: 147.83, y: 28.25))
        bezier55Path.addCurve(to: CGPoint(x: 146.04, y: 30.01), controlPoint1: CGPoint(x: 146.86, y: 29.22), controlPoint2: CGPoint(x: 146.44, y: 29.62))
        bezier55Path.addCurve(to: CGPoint(x: 144.36, y: 31.63), controlPoint1: CGPoint(x: 145.48, y: 30.55), controlPoint2: CGPoint(x: 144.92, y: 31.09))
        bezier55Path.addCurve(to: CGPoint(x: 143.02, y: 32.85), controlPoint1: CGPoint(x: 143.92, y: 32.04), controlPoint2: CGPoint(x: 143.47, y: 32.45))
        bezier55Path.addCurve(to: CGPoint(x: 141.35, y: 34.37), controlPoint1: CGPoint(x: 142.47, y: 33.36), controlPoint2: CGPoint(x: 141.92, y: 33.87))
        bezier55Path.addCurve(to: CGPoint(x: 139.95, y: 35.6), controlPoint1: CGPoint(x: 140.89, y: 34.78), controlPoint2: CGPoint(x: 140.42, y: 35.19))
        bezier55Path.addCurve(to: CGPoint(x: 138.22, y: 37.08), controlPoint1: CGPoint(x: 139.38, y: 36.09), controlPoint2: CGPoint(x: 138.8, y: 36.59))
        bezier55Path.addCurve(to: CGPoint(x: 136.76, y: 38.3), controlPoint1: CGPoint(x: 137.74, y: 37.49), controlPoint2: CGPoint(x: 137.25, y: 37.89))
        bezier55Path.addCurve(to: CGPoint(x: 134.99, y: 39.74), controlPoint1: CGPoint(x: 136.17, y: 38.78), controlPoint2: CGPoint(x: 135.58, y: 39.26))
        bezier55Path.addCurve(to: CGPoint(x: 133.46, y: 40.94), controlPoint1: CGPoint(x: 134.48, y: 40.14), controlPoint2: CGPoint(x: 133.97, y: 40.55))
        bezier55Path.addCurve(to: CGPoint(x: 131.63, y: 42.36), controlPoint1: CGPoint(x: 132.85, y: 41.42), controlPoint2: CGPoint(x: 132.24, y: 41.89))
        bezier55Path.addCurve(to: CGPoint(x: 130.05, y: 43.55), controlPoint1: CGPoint(x: 131.11, y: 42.76), controlPoint2: CGPoint(x: 130.58, y: 43.15))
        bezier55Path.addCurve(to: CGPoint(x: 128.15, y: 44.93), controlPoint1: CGPoint(x: 129.42, y: 44.01), controlPoint2: CGPoint(x: 128.79, y: 44.47))
        bezier55Path.addCurve(to: CGPoint(x: 126.52, y: 46.1), controlPoint1: CGPoint(x: 127.62, y: 45.32), controlPoint2: CGPoint(x: 127.07, y: 45.71))
        bezier55Path.addCurve(to: CGPoint(x: 124.57, y: 47.45), controlPoint1: CGPoint(x: 125.88, y: 46.55), controlPoint2: CGPoint(x: 125.22, y: 47))
        bezier55Path.addCurve(to: CGPoint(x: 122.89, y: 48.6), controlPoint1: CGPoint(x: 124.01, y: 47.84), controlPoint2: CGPoint(x: 123.46, y: 48.22))
        bezier55Path.addCurve(to: CGPoint(x: 120.86, y: 49.93), controlPoint1: CGPoint(x: 122.22, y: 49.05), controlPoint2: CGPoint(x: 121.54, y: 49.49))
        bezier55Path.addCurve(to: CGPoint(x: 119.15, y: 51.05), controlPoint1: CGPoint(x: 120.3, y: 50.3), controlPoint2: CGPoint(x: 119.73, y: 50.67))
        bezier55Path.addCurve(to: CGPoint(x: 117.04, y: 52.37), controlPoint1: CGPoint(x: 118.45, y: 51.49), controlPoint2: CGPoint(x: 117.75, y: 51.93))
        bezier55Path.addCurve(to: CGPoint(x: 115.17, y: 53.52), controlPoint1: CGPoint(x: 116.42, y: 52.75), controlPoint2: CGPoint(x: 115.8, y: 53.14))
        bezier55Path.addCurve(to: CGPoint(x: 114.1, y: 54.16), controlPoint1: CGPoint(x: 114.82, y: 53.73), controlPoint2: CGPoint(x: 114.46, y: 53.95))
        bezier55Path.addCurve(to: CGPoint(x: 111.56, y: 55.66), controlPoint1: CGPoint(x: 113.26, y: 54.66), controlPoint2: CGPoint(x: 112.41, y: 55.16))
        bezier55Path.addCurve(to: CGPoint(x: 110.51, y: 56.26), controlPoint1: CGPoint(x: 111.21, y: 55.86), controlPoint2: CGPoint(x: 110.86, y: 56.06))
        bezier55Path.addCurve(to: CGPoint(x: 106.94, y: 58.26), controlPoint1: CGPoint(x: 109.33, y: 56.93), controlPoint2: CGPoint(x: 108.15, y: 57.6))
        bezier55Path.addCurve(to: CGPoint(x: 106.83, y: 58.32), controlPoint1: CGPoint(x: 106.9, y: 58.28), controlPoint2: CGPoint(x: 106.87, y: 58.3))
        bezier55Path.addCurve(to: CGPoint(x: 103.28, y: 60.21), controlPoint1: CGPoint(x: 105.66, y: 58.96), controlPoint2: CGPoint(x: 104.47, y: 59.59))
        bezier55Path.addCurve(to: CGPoint(x: 102.16, y: 60.79), controlPoint1: CGPoint(x: 102.91, y: 60.41), controlPoint2: CGPoint(x: 102.53, y: 60.6))
        bezier55Path.addCurve(to: CGPoint(x: 99.41, y: 62.18), controlPoint1: CGPoint(x: 101.25, y: 61.25), controlPoint2: CGPoint(x: 100.34, y: 61.72))
        bezier55Path.addCurve(to: CGPoint(x: 98.26, y: 62.76), controlPoint1: CGPoint(x: 99.03, y: 62.37), controlPoint2: CGPoint(x: 98.64, y: 62.57))
        bezier55Path.addCurve(to: CGPoint(x: 94.74, y: 64.45), controlPoint1: CGPoint(x: 97.1, y: 63.33), controlPoint2: CGPoint(x: 95.92, y: 63.9))
        bezier55Path.addCurve(to: CGPoint(x: 94.41, y: 64.61), controlPoint1: CGPoint(x: 94.63, y: 64.51), controlPoint2: CGPoint(x: 94.52, y: 64.56))
        bezier55Path.addCurve(to: CGPoint(x: 90.49, y: 66.41), controlPoint1: CGPoint(x: 93.12, y: 65.22), controlPoint2: CGPoint(x: 91.81, y: 65.82))
        bezier55Path.addCurve(to: CGPoint(x: 89.34, y: 66.92), controlPoint1: CGPoint(x: 90.11, y: 66.58), controlPoint2: CGPoint(x: 89.72, y: 66.75))
        bezier55Path.addCurve(to: CGPoint(x: 86.39, y: 68.21), controlPoint1: CGPoint(x: 88.36, y: 67.35), controlPoint2: CGPoint(x: 87.38, y: 67.78))
        bezier55Path.addCurve(to: CGPoint(x: 85.12, y: 68.74), controlPoint1: CGPoint(x: 85.97, y: 68.39), controlPoint2: CGPoint(x: 85.54, y: 68.57))
        bezier55Path.addCurve(to: CGPoint(x: 81.65, y: 70.18), controlPoint1: CGPoint(x: 83.97, y: 69.23), controlPoint2: CGPoint(x: 82.82, y: 69.71))
        bezier55Path.addCurve(to: CGPoint(x: 81, y: 70.44), controlPoint1: CGPoint(x: 81.44, y: 70.27), controlPoint2: CGPoint(x: 81.22, y: 70.35))
        bezier55Path.addCurve(to: CGPoint(x: 76.84, y: 72.08), controlPoint1: CGPoint(x: 79.63, y: 71), controlPoint2: CGPoint(x: 78.23, y: 71.54))
        bezier55Path.addCurve(to: CGPoint(x: 75.68, y: 72.52), controlPoint1: CGPoint(x: 76.45, y: 72.23), controlPoint2: CGPoint(x: 76.06, y: 72.37))
        bezier55Path.addCurve(to: CGPoint(x: 72.5, y: 73.69), controlPoint1: CGPoint(x: 74.62, y: 72.91), controlPoint2: CGPoint(x: 73.57, y: 73.31))
        bezier55Path.addCurve(to: CGPoint(x: 71.14, y: 74.19), controlPoint1: CGPoint(x: 72.05, y: 73.86), controlPoint2: CGPoint(x: 71.59, y: 74.03))
        bezier55Path.addCurve(to: CGPoint(x: 67.67, y: 75.4), controlPoint1: CGPoint(x: 69.99, y: 74.6), controlPoint2: CGPoint(x: 68.83, y: 75))
        bezier55Path.addCurve(to: CGPoint(x: 66.75, y: 75.72), controlPoint1: CGPoint(x: 67.36, y: 75.51), controlPoint2: CGPoint(x: 67.06, y: 75.62))
        bezier55Path.addCurve(to: CGPoint(x: 62.38, y: 77.17), controlPoint1: CGPoint(x: 65.3, y: 76.21), controlPoint2: CGPoint(x: 63.85, y: 76.7))
        bezier55Path.addCurve(to: CGPoint(x: 60.69, y: 77.7), controlPoint1: CGPoint(x: 61.82, y: 77.35), controlPoint2: CGPoint(x: 61.25, y: 77.52))
        bezier55Path.addCurve(to: CGPoint(x: 57.64, y: 78.66), controlPoint1: CGPoint(x: 59.67, y: 78.02), controlPoint2: CGPoint(x: 58.66, y: 78.34))
        bezier55Path.addCurve(to: CGPoint(x: 55.72, y: 79.23), controlPoint1: CGPoint(x: 57, y: 78.85), controlPoint2: CGPoint(x: 56.36, y: 79.04))
        bezier55Path.addCurve(to: CGPoint(x: 52.8, y: 80.08), controlPoint1: CGPoint(x: 54.75, y: 79.52), controlPoint2: CGPoint(x: 53.78, y: 79.8))
        bezier55Path.addCurve(to: CGPoint(x: 50.78, y: 80.66), controlPoint1: CGPoint(x: 52.13, y: 80.27), controlPoint2: CGPoint(x: 51.45, y: 80.47))
        bezier55Path.addCurve(to: CGPoint(x: 47.88, y: 81.45), controlPoint1: CGPoint(x: 49.82, y: 80.93), controlPoint2: CGPoint(x: 48.85, y: 81.19))
        bezier55Path.addCurve(to: CGPoint(x: 45.81, y: 82), controlPoint1: CGPoint(x: 47.19, y: 81.64), controlPoint2: CGPoint(x: 46.5, y: 81.82))
        bezier55Path.addCurve(to: CGPoint(x: 42.85, y: 82.77), controlPoint1: CGPoint(x: 44.83, y: 82.26), controlPoint2: CGPoint(x: 43.84, y: 82.52))
        bezier55Path.addCurve(to: CGPoint(x: 40.78, y: 83.29), controlPoint1: CGPoint(x: 42.16, y: 82.94), controlPoint2: CGPoint(x: 41.47, y: 83.11))
        bezier55Path.addCurve(to: CGPoint(x: 37.68, y: 84.03), controlPoint1: CGPoint(x: 39.75, y: 83.54), controlPoint2: CGPoint(x: 38.72, y: 83.78))
        bezier55Path.addCurve(to: CGPoint(x: 35.69, y: 84.5), controlPoint1: CGPoint(x: 37.01, y: 84.18), controlPoint2: CGPoint(x: 36.36, y: 84.34))
        bezier55Path.addCurve(to: CGPoint(x: 32.24, y: 85.26), controlPoint1: CGPoint(x: 34.55, y: 84.76), controlPoint2: CGPoint(x: 33.39, y: 85.01))
        bezier55Path.addCurve(to: CGPoint(x: 30.53, y: 85.64), controlPoint1: CGPoint(x: 31.67, y: 85.39), controlPoint2: CGPoint(x: 31.1, y: 85.51))
        bezier55Path.addCurve(to: CGPoint(x: 25.31, y: 86.71), controlPoint1: CGPoint(x: 28.8, y: 86.01), controlPoint2: CGPoint(x: 27.06, y: 86.37))
        bezier55Path.addLine(to: CGPoint(x: 25.11, y: 156.13))
        bezier55Path.addCurve(to: CGPoint(x: 30.34, y: 155.06), controlPoint1: CGPoint(x: 26.86, y: 155.78), controlPoint2: CGPoint(x: 28.61, y: 155.42))
        bezier55Path.addCurve(to: CGPoint(x: 32.04, y: 154.68), controlPoint1: CGPoint(x: 30.91, y: 154.93), controlPoint2: CGPoint(x: 31.47, y: 154.8))
        bezier55Path.addCurve(to: CGPoint(x: 35.49, y: 153.91), controlPoint1: CGPoint(x: 33.2, y: 154.43), controlPoint2: CGPoint(x: 34.35, y: 154.17))
        bezier55Path.addCurve(to: CGPoint(x: 37.49, y: 153.44), controlPoint1: CGPoint(x: 36.16, y: 153.76), controlPoint2: CGPoint(x: 36.82, y: 153.6))
        bezier55Path.addCurve(to: CGPoint(x: 40.58, y: 152.7), controlPoint1: CGPoint(x: 38.52, y: 153.2), controlPoint2: CGPoint(x: 39.56, y: 152.95))
        bezier55Path.addCurve(to: CGPoint(x: 42.66, y: 152.18), controlPoint1: CGPoint(x: 41.28, y: 152.53), controlPoint2: CGPoint(x: 41.97, y: 152.35))
        bezier55Path.addCurve(to: CGPoint(x: 45.61, y: 151.42), controlPoint1: CGPoint(x: 43.65, y: 151.93), controlPoint2: CGPoint(x: 44.63, y: 151.68))
        bezier55Path.addCurve(to: CGPoint(x: 47.69, y: 150.87), controlPoint1: CGPoint(x: 46.3, y: 151.24), controlPoint2: CGPoint(x: 47, y: 151.05))
        bezier55Path.addCurve(to: CGPoint(x: 50.58, y: 150.07), controlPoint1: CGPoint(x: 48.66, y: 150.6), controlPoint2: CGPoint(x: 49.62, y: 150.34))
        bezier55Path.addCurve(to: CGPoint(x: 52.61, y: 149.5), controlPoint1: CGPoint(x: 51.26, y: 149.88), controlPoint2: CGPoint(x: 51.94, y: 149.69))
        bezier55Path.addCurve(to: CGPoint(x: 55.51, y: 148.65), controlPoint1: CGPoint(x: 53.58, y: 149.22), controlPoint2: CGPoint(x: 54.55, y: 148.93))
        bezier55Path.addCurve(to: CGPoint(x: 57.44, y: 148.07), controlPoint1: CGPoint(x: 56.16, y: 148.45), controlPoint2: CGPoint(x: 56.8, y: 148.27))
        bezier55Path.addCurve(to: CGPoint(x: 60.49, y: 147.12), controlPoint1: CGPoint(x: 58.46, y: 147.76), controlPoint2: CGPoint(x: 59.47, y: 147.44))
        bezier55Path.addCurve(to: CGPoint(x: 62.18, y: 146.58), controlPoint1: CGPoint(x: 61.05, y: 146.94), controlPoint2: CGPoint(x: 61.62, y: 146.76))
        bezier55Path.addCurve(to: CGPoint(x: 62.56, y: 146.47), controlPoint1: CGPoint(x: 62.31, y: 146.55), controlPoint2: CGPoint(x: 62.44, y: 146.5))
        bezier55Path.addCurve(to: CGPoint(x: 66.56, y: 145.14), controlPoint1: CGPoint(x: 63.9, y: 146.03), controlPoint2: CGPoint(x: 65.23, y: 145.59))
        bezier55Path.addCurve(to: CGPoint(x: 67.48, y: 144.82), controlPoint1: CGPoint(x: 66.86, y: 145.03), controlPoint2: CGPoint(x: 67.17, y: 144.92))
        bezier55Path.addCurve(to: CGPoint(x: 70.94, y: 143.6), controlPoint1: CGPoint(x: 68.64, y: 144.42), controlPoint2: CGPoint(x: 69.79, y: 144.01))
        bezier55Path.addCurve(to: CGPoint(x: 72.31, y: 143.11), controlPoint1: CGPoint(x: 71.39, y: 143.44), controlPoint2: CGPoint(x: 71.85, y: 143.27))
        bezier55Path.addCurve(to: CGPoint(x: 75.48, y: 141.93), controlPoint1: CGPoint(x: 73.37, y: 142.72), controlPoint2: CGPoint(x: 74.42, y: 142.33))
        bezier55Path.addCurve(to: CGPoint(x: 76.64, y: 141.49), controlPoint1: CGPoint(x: 75.87, y: 141.79), controlPoint2: CGPoint(x: 76.25, y: 141.64))
        bezier55Path.addCurve(to: CGPoint(x: 80.81, y: 139.86), controlPoint1: CGPoint(x: 78.04, y: 140.96), controlPoint2: CGPoint(x: 79.43, y: 140.41))
        bezier55Path.addCurve(to: CGPoint(x: 81.46, y: 139.59), controlPoint1: CGPoint(x: 81.03, y: 139.77), controlPoint2: CGPoint(x: 81.24, y: 139.68))
        bezier55Path.addCurve(to: CGPoint(x: 84.92, y: 138.16), controlPoint1: CGPoint(x: 82.62, y: 139.12), controlPoint2: CGPoint(x: 83.78, y: 138.64))
        bezier55Path.addCurve(to: CGPoint(x: 86.2, y: 137.62), controlPoint1: CGPoint(x: 85.35, y: 137.98), controlPoint2: CGPoint(x: 85.78, y: 137.8))
        bezier55Path.addCurve(to: CGPoint(x: 89.13, y: 136.34), controlPoint1: CGPoint(x: 87.18, y: 137.19), controlPoint2: CGPoint(x: 88.16, y: 136.77))
        bezier55Path.addCurve(to: CGPoint(x: 90.3, y: 135.82), controlPoint1: CGPoint(x: 89.52, y: 136.17), controlPoint2: CGPoint(x: 89.91, y: 136))
        bezier55Path.addCurve(to: CGPoint(x: 94.21, y: 134.03), controlPoint1: CGPoint(x: 91.61, y: 135.23), controlPoint2: CGPoint(x: 92.92, y: 134.64))
        bezier55Path.addCurve(to: CGPoint(x: 94.55, y: 133.87), controlPoint1: CGPoint(x: 94.32, y: 133.98), controlPoint2: CGPoint(x: 94.43, y: 133.92))
        bezier55Path.addCurve(to: CGPoint(x: 98.06, y: 132.17), controlPoint1: CGPoint(x: 95.73, y: 133.31), controlPoint2: CGPoint(x: 96.9, y: 132.74))
        bezier55Path.addCurve(to: CGPoint(x: 99.23, y: 131.59), controlPoint1: CGPoint(x: 98.45, y: 131.98), controlPoint2: CGPoint(x: 98.83, y: 131.79))
        bezier55Path.addCurve(to: CGPoint(x: 101.96, y: 130.2), controlPoint1: CGPoint(x: 100.14, y: 131.14), controlPoint2: CGPoint(x: 101.06, y: 130.67))
        bezier55Path.addCurve(to: CGPoint(x: 103.08, y: 129.62), controlPoint1: CGPoint(x: 102.34, y: 130.01), controlPoint2: CGPoint(x: 102.71, y: 129.82))
        bezier55Path.addCurve(to: CGPoint(x: 106.62, y: 127.74), controlPoint1: CGPoint(x: 104.27, y: 129.01), controlPoint2: CGPoint(x: 105.46, y: 128.38))
        bezier55Path.addCurve(to: CGPoint(x: 106.75, y: 127.67), controlPoint1: CGPoint(x: 106.66, y: 127.72), controlPoint2: CGPoint(x: 106.71, y: 127.7))
        bezier55Path.addCurve(to: CGPoint(x: 110.32, y: 125.68), controlPoint1: CGPoint(x: 107.95, y: 127.02), controlPoint2: CGPoint(x: 109.14, y: 126.35))
        bezier55Path.addCurve(to: CGPoint(x: 111.36, y: 125.07), controlPoint1: CGPoint(x: 110.67, y: 125.47), controlPoint2: CGPoint(x: 111.01, y: 125.27))
        bezier55Path.addCurve(to: CGPoint(x: 113.91, y: 123.58), controlPoint1: CGPoint(x: 112.22, y: 124.58), controlPoint2: CGPoint(x: 113.07, y: 124.08))
        bezier55Path.addCurve(to: CGPoint(x: 114.98, y: 122.93), controlPoint1: CGPoint(x: 114.27, y: 123.36), controlPoint2: CGPoint(x: 114.62, y: 123.15))
        bezier55Path.addCurve(to: CGPoint(x: 115.64, y: 122.54), controlPoint1: CGPoint(x: 115.2, y: 122.8), controlPoint2: CGPoint(x: 115.42, y: 122.67))
        bezier55Path.addCurve(to: CGPoint(x: 116.85, y: 121.78), controlPoint1: CGPoint(x: 116.05, y: 122.29), controlPoint2: CGPoint(x: 116.44, y: 122.03))
        bezier55Path.addCurve(to: CGPoint(x: 118.95, y: 120.46), controlPoint1: CGPoint(x: 117.55, y: 121.34), controlPoint2: CGPoint(x: 118.26, y: 120.9))
        bezier55Path.addCurve(to: CGPoint(x: 120.67, y: 119.35), controlPoint1: CGPoint(x: 119.53, y: 120.09), controlPoint2: CGPoint(x: 120.1, y: 119.72))
        bezier55Path.addCurve(to: CGPoint(x: 122.7, y: 118.01), controlPoint1: CGPoint(x: 121.35, y: 118.91), controlPoint2: CGPoint(x: 122.03, y: 118.46))
        bezier55Path.addCurve(to: CGPoint(x: 124.37, y: 116.87), controlPoint1: CGPoint(x: 123.26, y: 117.63), controlPoint2: CGPoint(x: 123.82, y: 117.25))
        bezier55Path.addCurve(to: CGPoint(x: 126.33, y: 115.51), controlPoint1: CGPoint(x: 125.03, y: 116.42), controlPoint2: CGPoint(x: 125.68, y: 115.97))
        bezier55Path.addCurve(to: CGPoint(x: 127.96, y: 114.34), controlPoint1: CGPoint(x: 126.88, y: 115.12), controlPoint2: CGPoint(x: 127.42, y: 114.73))
        bezier55Path.addCurve(to: CGPoint(x: 129.85, y: 112.96), controlPoint1: CGPoint(x: 128.6, y: 113.89), controlPoint2: CGPoint(x: 129.23, y: 113.43))
        bezier55Path.addCurve(to: CGPoint(x: 131.43, y: 111.77), controlPoint1: CGPoint(x: 130.38, y: 112.57), controlPoint2: CGPoint(x: 130.91, y: 112.17))
        bezier55Path.addCurve(to: CGPoint(x: 133.26, y: 110.36), controlPoint1: CGPoint(x: 132.05, y: 111.3), controlPoint2: CGPoint(x: 132.66, y: 110.83))
        bezier55Path.addCurve(to: CGPoint(x: 134.79, y: 109.15), controlPoint1: CGPoint(x: 133.78, y: 109.96), controlPoint2: CGPoint(x: 134.29, y: 109.56))
        bezier55Path.addCurve(to: CGPoint(x: 136.56, y: 107.71), controlPoint1: CGPoint(x: 135.39, y: 108.68), controlPoint2: CGPoint(x: 135.97, y: 108.2))
        bezier55Path.addCurve(to: CGPoint(x: 138.03, y: 106.49), controlPoint1: CGPoint(x: 137.05, y: 107.31), controlPoint2: CGPoint(x: 137.55, y: 106.9))
        bezier55Path.addCurve(to: CGPoint(x: 139.75, y: 105.02), controlPoint1: CGPoint(x: 138.61, y: 106), controlPoint2: CGPoint(x: 139.18, y: 105.51))
        bezier55Path.addCurve(to: CGPoint(x: 141.16, y: 103.78), controlPoint1: CGPoint(x: 140.22, y: 104.6), controlPoint2: CGPoint(x: 140.69, y: 104.2))
        bezier55Path.addCurve(to: CGPoint(x: 142.83, y: 102.27), controlPoint1: CGPoint(x: 141.72, y: 103.28), controlPoint2: CGPoint(x: 142.27, y: 102.78))
        bezier55Path.addCurve(to: CGPoint(x: 143.8, y: 101.38), controlPoint1: CGPoint(x: 143.15, y: 101.98), controlPoint2: CGPoint(x: 143.48, y: 101.68))
        bezier55Path.addCurve(to: CGPoint(x: 144.16, y: 101.04), controlPoint1: CGPoint(x: 143.92, y: 101.27), controlPoint2: CGPoint(x: 144.04, y: 101.15))
        bezier55Path.addCurve(to: CGPoint(x: 145.84, y: 99.43), controlPoint1: CGPoint(x: 144.73, y: 100.5), controlPoint2: CGPoint(x: 145.28, y: 99.97))
        bezier55Path.addCurve(to: CGPoint(x: 147.07, y: 98.23), controlPoint1: CGPoint(x: 146.25, y: 99.03), controlPoint2: CGPoint(x: 146.66, y: 98.64))
        bezier55Path.addCurve(to: CGPoint(x: 148.74, y: 96.53), controlPoint1: CGPoint(x: 147.63, y: 97.67), controlPoint2: CGPoint(x: 148.19, y: 97.1))
        bezier55Path.addCurve(to: CGPoint(x: 149.85, y: 95.39), controlPoint1: CGPoint(x: 149.11, y: 96.15), controlPoint2: CGPoint(x: 149.49, y: 95.77))
        bezier55Path.addCurve(to: CGPoint(x: 151.63, y: 93.47), controlPoint1: CGPoint(x: 150.45, y: 94.75), controlPoint2: CGPoint(x: 151.04, y: 94.11))
        bezier55Path.close()
        context.saveGState()
        bezier55Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 25.11, y: 88.15),
            end: CGPoint(x: 155.24, y: 88.15),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 56 Drawing
        let bezier56Path = UIBezierPath()
        bezier56Path.move(to: CGPoint(x: 25.31, y: 86.71))
        bezier56Path.addLine(to: CGPoint(x: 25.11, y: 156.13))
        bezier56Path.addLine(to: CGPoint(x: 0, y: 113.07))
        bezier56Path.addLine(to: CGPoint(x: 0.2, y: 43.65))
        bezier56Path.addLine(to: CGPoint(x: 25.31, y: 86.71))
        bezier56Path.close()
        context.saveGState()
        bezier56Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 0, y: 99.89),
            end: CGPoint(x: 25.31, y: 99.89),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// layer_1_30
        context.saveGState()
        context.translateBy(x: (arc1ExprX - 99.4848821808), y: (arc1ExprY + 2.322265625))



        //// Bezier 49 Drawing
        let bezier49Path = UIBezierPath()
        bezier49Path.move(to: CGPoint(x: 73.76, y: 0))
        bezier49Path.addCurve(to: CGPoint(x: 109.48, y: 33.32), controlPoint1: CGPoint(x: 81.38, y: 12.99), controlPoint2: CGPoint(x: 93.8, y: 24.25))
        bezier49Path.addCurve(to: CGPoint(x: 148.69, y: 49.63), controlPoint1: CGPoint(x: 121, y: 39.99), controlPoint2: CGPoint(x: 134.27, y: 45.49))
        bezier49Path.addLine(to: CGPoint(x: 114.42, y: 90.1))
        bezier49Path.addCurve(to: CGPoint(x: 54.64, y: 65.24), controlPoint1: CGPoint(x: 92.43, y: 83.78), controlPoint2: CGPoint(x: 72.2, y: 75.41))
        bezier49Path.addCurve(to: CGPoint(x: 0.2, y: 14.44), controlPoint1: CGPoint(x: 30.74, y: 51.4), controlPoint2: CGPoint(x: 11.81, y: 34.24))
        bezier49Path.addLine(to: CGPoint(x: 73.76, y: 0))
        bezier49Path.close()
        context.saveGState()
        bezier49Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 1227.87, y: 296.93),
            end: CGPoint(x: -628.46, y: -115.47),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 50 Drawing
        let bezier50Path = UIBezierPath()
        bezier50Path.move(to: CGPoint(x: 148.69, y: 49.63))
        bezier50Path.addLine(to: CGPoint(x: 148.5, y: 118.6))
        bezier50Path.addLine(to: CGPoint(x: 114.22, y: 159.07))
        bezier50Path.addLine(to: CGPoint(x: 114.42, y: 90.1))
        bezier50Path.addLine(to: CGPoint(x: 148.69, y: 49.63))
        bezier50Path.close()
        context.saveGState()
        bezier50Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 114.22, y: 104.35),
            end: CGPoint(x: 148.69, y: 104.35),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 51 Drawing
        let bezier51Path = UIBezierPath()
        bezier51Path.move(to: CGPoint(x: 93.97, y: 152.48))
        bezier51Path.addCurve(to: CGPoint(x: 95.01, y: 152.86), controlPoint1: CGPoint(x: 94.31, y: 152.61), controlPoint2: CGPoint(x: 94.67, y: 152.73))
        bezier51Path.addCurve(to: CGPoint(x: 97.63, y: 153.79), controlPoint1: CGPoint(x: 95.88, y: 153.17), controlPoint2: CGPoint(x: 96.75, y: 153.49))
        bezier51Path.addCurve(to: CGPoint(x: 99, y: 154.26), controlPoint1: CGPoint(x: 98.08, y: 153.95), controlPoint2: CGPoint(x: 98.54, y: 154.11))
        bezier51Path.addCurve(to: CGPoint(x: 101.36, y: 155.07), controlPoint1: CGPoint(x: 99.78, y: 154.53), controlPoint2: CGPoint(x: 100.57, y: 154.8))
        bezier51Path.addCurve(to: CGPoint(x: 102.81, y: 155.55), controlPoint1: CGPoint(x: 101.84, y: 155.23), controlPoint2: CGPoint(x: 102.32, y: 155.39))
        bezier51Path.addCurve(to: CGPoint(x: 105.17, y: 156.31), controlPoint1: CGPoint(x: 103.6, y: 155.81), controlPoint2: CGPoint(x: 104.38, y: 156.06))
        bezier51Path.addCurve(to: CGPoint(x: 106.6, y: 156.77), controlPoint1: CGPoint(x: 105.64, y: 156.46), controlPoint2: CGPoint(x: 106.12, y: 156.62))
        bezier51Path.addCurve(to: CGPoint(x: 109.17, y: 157.57), controlPoint1: CGPoint(x: 107.45, y: 157.04), controlPoint2: CGPoint(x: 108.31, y: 157.3))
        bezier51Path.addCurve(to: CGPoint(x: 110.4, y: 157.94), controlPoint1: CGPoint(x: 109.58, y: 157.69), controlPoint2: CGPoint(x: 109.99, y: 157.82))
        bezier51Path.addCurve(to: CGPoint(x: 114.22, y: 159.07), controlPoint1: CGPoint(x: 111.67, y: 158.32), controlPoint2: CGPoint(x: 112.94, y: 158.7))
        bezier51Path.addLine(to: CGPoint(x: 114.42, y: 90.1))
        bezier51Path.addCurve(to: CGPoint(x: 110.59, y: 88.97), controlPoint1: CGPoint(x: 113.14, y: 89.73), controlPoint2: CGPoint(x: 111.86, y: 89.35))
        bezier51Path.addCurve(to: CGPoint(x: 109.37, y: 88.59), controlPoint1: CGPoint(x: 110.19, y: 88.85), controlPoint2: CGPoint(x: 109.78, y: 88.72))
        bezier51Path.addCurve(to: CGPoint(x: 106.79, y: 87.8), controlPoint1: CGPoint(x: 108.51, y: 88.33), controlPoint2: CGPoint(x: 107.65, y: 88.07))
        bezier51Path.addCurve(to: CGPoint(x: 105.37, y: 87.35), controlPoint1: CGPoint(x: 106.32, y: 87.65), controlPoint2: CGPoint(x: 105.84, y: 87.5))
        bezier51Path.addCurve(to: CGPoint(x: 103, y: 86.58), controlPoint1: CGPoint(x: 104.58, y: 87.09), controlPoint2: CGPoint(x: 103.79, y: 86.84))
        bezier51Path.addCurve(to: CGPoint(x: 101.55, y: 86.1), controlPoint1: CGPoint(x: 102.52, y: 86.42), controlPoint2: CGPoint(x: 102.04, y: 86.25))
        bezier51Path.addCurve(to: CGPoint(x: 99.18, y: 85.29), controlPoint1: CGPoint(x: 100.76, y: 85.83), controlPoint2: CGPoint(x: 99.97, y: 85.56))
        bezier51Path.addCurve(to: CGPoint(x: 97.83, y: 84.82), controlPoint1: CGPoint(x: 98.73, y: 85.13), controlPoint2: CGPoint(x: 98.28, y: 84.98))
        bezier51Path.addCurve(to: CGPoint(x: 95.2, y: 83.89), controlPoint1: CGPoint(x: 96.95, y: 84.51), controlPoint2: CGPoint(x: 96.08, y: 84.2))
        bezier51Path.addCurve(to: CGPoint(x: 94.16, y: 83.51), controlPoint1: CGPoint(x: 94.86, y: 83.76), controlPoint2: CGPoint(x: 94.51, y: 83.64))
        bezier51Path.addCurve(to: CGPoint(x: 90.55, y: 82.16), controlPoint1: CGPoint(x: 92.95, y: 83.07), controlPoint2: CGPoint(x: 91.74, y: 82.62))
        bezier51Path.addCurve(to: CGPoint(x: 89.93, y: 81.93), controlPoint1: CGPoint(x: 90.34, y: 82.08), controlPoint2: CGPoint(x: 90.14, y: 82.01))
        bezier51Path.addCurve(to: CGPoint(x: 87.04, y: 80.8), controlPoint1: CGPoint(x: 88.96, y: 81.55), controlPoint2: CGPoint(x: 88, y: 81.18))
        bezier51Path.addCurve(to: CGPoint(x: 83.7, y: 79.45), controlPoint1: CGPoint(x: 85.92, y: 80.36), controlPoint2: CGPoint(x: 84.8, y: 79.9))
        bezier51Path.addCurve(to: CGPoint(x: 82.95, y: 79.15), controlPoint1: CGPoint(x: 83.45, y: 79.34), controlPoint2: CGPoint(x: 83.2, y: 79.25))
        bezier51Path.addCurve(to: CGPoint(x: 78.94, y: 77.44), controlPoint1: CGPoint(x: 81.6, y: 78.59), controlPoint2: CGPoint(x: 80.26, y: 78.02))
        bezier51Path.addCurve(to: CGPoint(x: 77.78, y: 76.93), controlPoint1: CGPoint(x: 78.55, y: 77.27), controlPoint2: CGPoint(x: 78.17, y: 77.1))
        bezier51Path.addCurve(to: CGPoint(x: 74.97, y: 75.68), controlPoint1: CGPoint(x: 76.84, y: 76.52), controlPoint2: CGPoint(x: 75.91, y: 76.1))
        bezier51Path.addCurve(to: CGPoint(x: 73.51, y: 75), controlPoint1: CGPoint(x: 74.48, y: 75.45), controlPoint2: CGPoint(x: 74, y: 75.22))
        bezier51Path.addCurve(to: CGPoint(x: 71.06, y: 73.85), controlPoint1: CGPoint(x: 72.69, y: 74.62), controlPoint2: CGPoint(x: 71.87, y: 74.24))
        bezier51Path.addCurve(to: CGPoint(x: 69.52, y: 73.11), controlPoint1: CGPoint(x: 70.54, y: 73.61), controlPoint2: CGPoint(x: 70.03, y: 73.36))
        bezier51Path.addCurve(to: CGPoint(x: 67.19, y: 71.97), controlPoint1: CGPoint(x: 68.74, y: 72.73), controlPoint2: CGPoint(x: 67.96, y: 72.35))
        bezier51Path.addCurve(to: CGPoint(x: 65.67, y: 71.21), controlPoint1: CGPoint(x: 66.68, y: 71.71), controlPoint2: CGPoint(x: 66.18, y: 71.46))
        bezier51Path.addCurve(to: CGPoint(x: 63.34, y: 70.01), controlPoint1: CGPoint(x: 64.89, y: 70.81), controlPoint2: CGPoint(x: 64.12, y: 70.41))
        bezier51Path.addCurve(to: CGPoint(x: 61.91, y: 69.26), controlPoint1: CGPoint(x: 62.87, y: 69.76), controlPoint2: CGPoint(x: 62.39, y: 69.51))
        bezier51Path.addCurve(to: CGPoint(x: 59.43, y: 67.92), controlPoint1: CGPoint(x: 61.08, y: 68.82), controlPoint2: CGPoint(x: 60.25, y: 68.37))
        bezier51Path.addCurve(to: CGPoint(x: 58.24, y: 67.27), controlPoint1: CGPoint(x: 59.03, y: 67.7), controlPoint2: CGPoint(x: 58.63, y: 67.49))
        bezier51Path.addCurve(to: CGPoint(x: 54.64, y: 65.24), controlPoint1: CGPoint(x: 57.03, y: 66.6), controlPoint2: CGPoint(x: 55.83, y: 65.93))
        bezier51Path.addCurve(to: CGPoint(x: 0.2, y: 14.44), controlPoint1: CGPoint(x: 30.74, y: 51.4), controlPoint2: CGPoint(x: 11.81, y: 34.24))
        bezier51Path.addLine(to: CGPoint(x: 0, y: 83.41))
        bezier51Path.addCurve(to: CGPoint(x: 54.45, y: 134.21), controlPoint1: CGPoint(x: 11.61, y: 103.21), controlPoint2: CGPoint(x: 30.55, y: 120.37))
        bezier51Path.addCurve(to: CGPoint(x: 58.04, y: 136.25), controlPoint1: CGPoint(x: 55.63, y: 134.9), controlPoint2: CGPoint(x: 56.83, y: 135.57))
        bezier51Path.addCurve(to: CGPoint(x: 59.23, y: 136.89), controlPoint1: CGPoint(x: 58.44, y: 136.46), controlPoint2: CGPoint(x: 58.83, y: 136.68))
        bezier51Path.addCurve(to: CGPoint(x: 61.72, y: 138.24), controlPoint1: CGPoint(x: 60.05, y: 137.34), controlPoint2: CGPoint(x: 60.88, y: 137.79))
        bezier51Path.addCurve(to: CGPoint(x: 63.15, y: 138.98), controlPoint1: CGPoint(x: 62.19, y: 138.49), controlPoint2: CGPoint(x: 62.67, y: 138.73))
        bezier51Path.addCurve(to: CGPoint(x: 65.48, y: 140.18), controlPoint1: CGPoint(x: 63.92, y: 139.38), controlPoint2: CGPoint(x: 64.69, y: 139.78))
        bezier51Path.addCurve(to: CGPoint(x: 66.99, y: 140.94), controlPoint1: CGPoint(x: 65.98, y: 140.44), controlPoint2: CGPoint(x: 66.49, y: 140.69))
        bezier51Path.addCurve(to: CGPoint(x: 69.33, y: 142.09), controlPoint1: CGPoint(x: 67.77, y: 141.33), controlPoint2: CGPoint(x: 68.55, y: 141.71))
        bezier51Path.addCurve(to: CGPoint(x: 70.86, y: 142.82), controlPoint1: CGPoint(x: 69.84, y: 142.33), controlPoint2: CGPoint(x: 70.35, y: 142.58))
        bezier51Path.addCurve(to: CGPoint(x: 73.32, y: 143.98), controlPoint1: CGPoint(x: 71.68, y: 143.21), controlPoint2: CGPoint(x: 72.5, y: 143.59))
        bezier51Path.addCurve(to: CGPoint(x: 74.78, y: 144.64), controlPoint1: CGPoint(x: 73.81, y: 144.2), controlPoint2: CGPoint(x: 74.28, y: 144.42))
        bezier51Path.addCurve(to: CGPoint(x: 77.59, y: 145.9), controlPoint1: CGPoint(x: 75.71, y: 145.07), controlPoint2: CGPoint(x: 76.65, y: 145.49))
        bezier51Path.addCurve(to: CGPoint(x: 78.74, y: 146.41), controlPoint1: CGPoint(x: 77.98, y: 146.07), controlPoint2: CGPoint(x: 78.35, y: 146.24))
        bezier51Path.addCurve(to: CGPoint(x: 82.76, y: 148.12), controlPoint1: CGPoint(x: 80.07, y: 146.99), controlPoint2: CGPoint(x: 81.41, y: 147.56))
        bezier51Path.addCurve(to: CGPoint(x: 83.48, y: 148.41), controlPoint1: CGPoint(x: 83, y: 148.22), controlPoint2: CGPoint(x: 83.25, y: 148.31))
        bezier51Path.addCurve(to: CGPoint(x: 86.85, y: 149.78), controlPoint1: CGPoint(x: 84.6, y: 148.87), controlPoint2: CGPoint(x: 85.72, y: 149.33))
        bezier51Path.addCurve(to: CGPoint(x: 87.18, y: 149.91), controlPoint1: CGPoint(x: 86.96, y: 149.82), controlPoint2: CGPoint(x: 87.07, y: 149.86))
        bezier51Path.addCurve(to: CGPoint(x: 89.72, y: 150.89), controlPoint1: CGPoint(x: 88.02, y: 150.24), controlPoint2: CGPoint(x: 88.87, y: 150.57))
        bezier51Path.addCurve(to: CGPoint(x: 90.35, y: 151.14), controlPoint1: CGPoint(x: 89.93, y: 150.97), controlPoint2: CGPoint(x: 90.14, y: 151.06))
        bezier51Path.addCurve(to: CGPoint(x: 93.97, y: 152.48), controlPoint1: CGPoint(x: 91.55, y: 151.59), controlPoint2: CGPoint(x: 92.76, y: 152.04))
        bezier51Path.close()
        context.saveGState()
        bezier51Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 88.55, y: 59.58),
            end: CGPoint(x: 41.26, y: 100.58),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// layer_1_29
        context.saveGState()
        context.translateBy(x: 2.81, y: 138.06)
        context.rotate(by: 1 * CGFloat.pi/180)



        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 29.18, y: 20.1))
        bezier8Path.addLine(to: CGPoint(x: 439.18, y: 82.1))
        bezier8Path.addLine(to: CGPoint(x: 413.18, y: 161.1))
        bezier8Path.addLine(to: CGPoint(x: 8.18, y: 95.1))
        bezier8Path.addLine(to: CGPoint(x: 29.18, y: 20.1))
        bezier8Path.close()
        context.saveGState()
        bezier8Path.addClip()
        context.drawLinearGradient(wings, start: CGPoint(x: 223.68, y: 20.1), end: CGPoint(x: 223.68, y: 161.1), options: [])
        context.restoreGState()


        //// plate 4
        context.saveGState()
        context.translateBy(x: plate4ExprX, y: plate4ExprY)



        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 107.84, y: 42.69))
        bezier9Path.addCurve(to: CGPoint(x: 106.12, y: 35.09), controlPoint1: CGPoint(x: 107.88, y: 42.12), controlPoint2: CGPoint(x: 106.12, y: 35.09))
        bezier9Path.addCurve(to: CGPoint(x: 97.76, y: 29.12), controlPoint1: CGPoint(x: 104.36, y: 31.99), controlPoint2: CGPoint(x: 101.42, y: 29.68))
        bezier9Path.addLine(to: CGPoint(x: 34.59, y: 19.49))
        bezier9Path.addCurve(to: CGPoint(x: 22.43, y: 26.6), controlPoint1: CGPoint(x: 29.56, y: 18.72), controlPoint2: CGPoint(x: 24.65, y: 21.6))
        bezier9Path.addLine(to: CGPoint(x: 2.67, y: 71.2))
        bezier9Path.addLine(to: CGPoint(x: 0.36, y: 81.29))
        bezier9Path.addLine(to: CGPoint(x: 0.54, y: 81.58))
        bezier9Path.addCurve(to: CGPoint(x: 10.21, y: 92.03), controlPoint1: CGPoint(x: 1.37, y: 86.71), controlPoint2: CGPoint(x: 5.03, y: 91.11))
        bezier9Path.addLine(to: CGPoint(x: 74.74, y: 103.47))
        bezier9Path.addCurve(to: CGPoint(x: 87.35, y: 95.94), controlPoint1: CGPoint(x: 80.02, y: 104.41), controlPoint2: CGPoint(x: 85.2, y: 101.31))
        bezier9Path.addLine(to: CGPoint(x: 106.88, y: 46.99))
        bezier9Path.addCurve(to: CGPoint(x: 107.58, y: 44.67), controlPoint1: CGPoint(x: 107.19, y: 46.23), controlPoint2: CGPoint(x: 107.42, y: 45.45))
        bezier9Path.addLine(to: CGPoint(x: 107.84, y: 44.18))
        bezier9Path.addLine(to: CGPoint(x: 107.84, y: 42.69))
        bezier9Path.close()
        darkPrimary.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 1.17, y: 50.39))
        bezier10Path.addLine(to: CGPoint(x: 21.75, y: 6.71))
        bezier10Path.addCurve(to: CGPoint(x: 33.73, y: 0.11), controlPoint1: CGPoint(x: 23.94, y: 2.06), controlPoint2: CGPoint(x: 28.78, y: -0.6))
        bezier10Path.addLine(to: CGPoint(x: 95.98, y: 9.04))
        bezier10Path.addCurve(to: CGPoint(x: 104.97, y: 25.6), controlPoint1: CGPoint(x: 103.56, y: 10.12), controlPoint2: CGPoint(x: 108.03, y: 18.37))
        bezier10Path.addLine(to: CGPoint(x: 85.72, y: 70.97))
        bezier10Path.addCurve(to: CGPoint(x: 73.29, y: 77.96), controlPoint1: CGPoint(x: 83.61, y: 75.95), controlPoint2: CGPoint(x: 78.5, y: 78.82))
        bezier10Path.addLine(to: CGPoint(x: 9.71, y: 67.35))
        bezier10Path.addCurve(to: CGPoint(x: 1.17, y: 50.39), controlPoint1: CGPoint(x: 2.08, y: 66.08), controlPoint2: CGPoint(x: -2.21, y: 57.57))
        bezier10Path.close()
        primary.setFill()
        bezier10Path.fill()



        context.restoreGState()


        //// plate 5
        context.saveGState()
        context.translateBy(x: plate5ExprX, y: plate5ExprY)



        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 107.84, y: 41.29))
        bezier11Path.addCurve(to: CGPoint(x: 106.12, y: 33.76), controlPoint1: CGPoint(x: 107.88, y: 40.72), controlPoint2: CGPoint(x: 106.12, y: 33.76))
        bezier11Path.addCurve(to: CGPoint(x: 97.76, y: 27.84), controlPoint1: CGPoint(x: 104.36, y: 30.69), controlPoint2: CGPoint(x: 101.42, y: 28.4))
        bezier11Path.addLine(to: CGPoint(x: 34.59, y: 18.31))
        bezier11Path.addCurve(to: CGPoint(x: 22.43, y: 25.35), controlPoint1: CGPoint(x: 29.56, y: 17.55), controlPoint2: CGPoint(x: 24.65, y: 20.4))
        bezier11Path.addLine(to: CGPoint(x: 2.67, y: 69.52))
        bezier11Path.addLine(to: CGPoint(x: 0.36, y: 79.5))
        bezier11Path.addLine(to: CGPoint(x: 0.54, y: 79.8))
        bezier11Path.addCurve(to: CGPoint(x: 10.21, y: 90.14), controlPoint1: CGPoint(x: 1.37, y: 84.88), controlPoint2: CGPoint(x: 5.03, y: 89.23))
        bezier11Path.addLine(to: CGPoint(x: 74.74, y: 101.47))
        bezier11Path.addCurve(to: CGPoint(x: 87.35, y: 94.01), controlPoint1: CGPoint(x: 80.02, y: 102.4), controlPoint2: CGPoint(x: 85.2, y: 99.33))
        bezier11Path.addLine(to: CGPoint(x: 106.88, y: 45.54))
        bezier11Path.addCurve(to: CGPoint(x: 107.58, y: 43.25), controlPoint1: CGPoint(x: 107.19, y: 44.78), controlPoint2: CGPoint(x: 107.42, y: 44.02))
        bezier11Path.addLine(to: CGPoint(x: 107.84, y: 42.76))
        bezier11Path.addLine(to: CGPoint(x: 107.84, y: 41.29))
        bezier11Path.close()
        darkPrimary.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: 1.17, y: 49.9))
        bezier12Path.addLine(to: CGPoint(x: 21.75, y: 6.64))
        bezier12Path.addCurve(to: CGPoint(x: 33.73, y: 0.11), controlPoint1: CGPoint(x: 23.94, y: 2.04), controlPoint2: CGPoint(x: 28.78, y: -0.59))
        bezier12Path.addLine(to: CGPoint(x: 95.98, y: 8.95))
        bezier12Path.addCurve(to: CGPoint(x: 104.97, y: 25.35), controlPoint1: CGPoint(x: 103.56, y: 10.02), controlPoint2: CGPoint(x: 108.03, y: 18.19))
        bezier12Path.addLine(to: CGPoint(x: 85.72, y: 70.28))
        bezier12Path.addCurve(to: CGPoint(x: 73.29, y: 77.2), controlPoint1: CGPoint(x: 83.61, y: 75.21), controlPoint2: CGPoint(x: 78.5, y: 78.06))
        bezier12Path.addLine(to: CGPoint(x: 9.71, y: 66.69))
        bezier12Path.addCurve(to: CGPoint(x: 1.17, y: 49.9), controlPoint1: CGPoint(x: 2.08, y: 65.43), controlPoint2: CGPoint(x: -2.21, y: 57.01))
        bezier12Path.close()
        wingPlastineColor.setFill()
        bezier12Path.fill()



        context.restoreGState()


        //// plate 6
        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: 433.84, y: 97.69))
        bezier13Path.addCurve(to: CGPoint(x: 432.12, y: 90.09), controlPoint1: CGPoint(x: 433.88, y: 97.12), controlPoint2: CGPoint(x: 432.12, y: 90.09))
        bezier13Path.addCurve(to: CGPoint(x: 423.76, y: 84.12), controlPoint1: CGPoint(x: 430.36, y: 86.99), controlPoint2: CGPoint(x: 427.42, y: 84.68))
        bezier13Path.addLine(to: CGPoint(x: 360.59, y: 74.49))
        bezier13Path.addCurve(to: CGPoint(x: 348.43, y: 81.6), controlPoint1: CGPoint(x: 355.56, y: 73.72), controlPoint2: CGPoint(x: 350.65, y: 76.6))
        bezier13Path.addLine(to: CGPoint(x: 328.67, y: 126.2))
        bezier13Path.addLine(to: CGPoint(x: 326.36, y: 136.28))
        bezier13Path.addLine(to: CGPoint(x: 326.54, y: 136.58))
        bezier13Path.addCurve(to: CGPoint(x: 336.21, y: 147.03), controlPoint1: CGPoint(x: 327.37, y: 141.71), controlPoint2: CGPoint(x: 331.03, y: 146.11))
        bezier13Path.addLine(to: CGPoint(x: 400.74, y: 158.47))
        bezier13Path.addCurve(to: CGPoint(x: 413.35, y: 150.94), controlPoint1: CGPoint(x: 406.02, y: 159.41), controlPoint2: CGPoint(x: 411.2, y: 156.31))
        bezier13Path.addLine(to: CGPoint(x: 432.88, y: 101.99))
        bezier13Path.addCurve(to: CGPoint(x: 433.58, y: 99.67), controlPoint1: CGPoint(x: 433.19, y: 101.22), controlPoint2: CGPoint(x: 433.42, y: 100.45))
        bezier13Path.addLine(to: CGPoint(x: 433.84, y: 99.18))
        bezier13Path.addLine(to: CGPoint(x: 433.84, y: 97.69))
        bezier13Path.close()
        darkPrimary.setFill()
        bezier13Path.fill()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: 327.17, y: 102.39))
        bezier14Path.addLine(to: CGPoint(x: 347.75, y: 58.71))
        bezier14Path.addCurve(to: CGPoint(x: 359.73, y: 52.11), controlPoint1: CGPoint(x: 349.94, y: 54.06), controlPoint2: CGPoint(x: 354.78, y: 51.4))
        bezier14Path.addLine(to: CGPoint(x: 421.98, y: 61.04))
        bezier14Path.addCurve(to: CGPoint(x: 430.97, y: 77.6), controlPoint1: CGPoint(x: 429.56, y: 62.12), controlPoint2: CGPoint(x: 434.03, y: 70.37))
        bezier14Path.addLine(to: CGPoint(x: 411.72, y: 122.97))
        bezier14Path.addCurve(to: CGPoint(x: 399.29, y: 129.96), controlPoint1: CGPoint(x: 409.61, y: 127.95), controlPoint2: CGPoint(x: 404.5, y: 130.82))
        bezier14Path.addLine(to: CGPoint(x: 335.71, y: 119.35))
        bezier14Path.addCurve(to: CGPoint(x: 327.17, y: 102.39), controlPoint1: CGPoint(x: 328.08, y: 118.08), controlPoint2: CGPoint(x: 323.79, y: 109.57))
        bezier14Path.close()
        wingPlastineColor.setFill()
        bezier14Path.fill()





        context.restoreGState()


        //// layer_1_28
        //// Bezier 62 Drawing
        let bezier62Path = UIBezierPath()
        bezier62Path.move(to: CGPoint(x: 614.56, y: 570.75))
        bezier62Path.addLine(to: CGPoint(x: 639.62, y: 614.77))
        bezier62Path.addCurve(to: CGPoint(x: 467.34, y: 607.83), controlPoint1: CGPoint(x: 580.67, y: 626.7), controlPoint2: CGPoint(x: 519.14, y: 623.17))
        bezier62Path.addLine(to: CGPoint(x: 501.55, y: 566.19))
        bezier62Path.addCurve(to: CGPoint(x: 614.56, y: 570.75), controlPoint1: CGPoint(x: 535.53, y: 576.26), controlPoint2: CGPoint(x: 575.89, y: 578.57))
        bezier62Path.close()
        context.saveGState()
        bezier62Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 1561.12, y: 823.21),
            end: CGPoint(x: -291.91, y: 398.9),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 63 Drawing
        let bezier63Path = UIBezierPath()
        bezier63Path.move(to: CGPoint(x: 468.89, y: 608.28))
        bezier63Path.addCurve(to: CGPoint(x: 473.04, y: 609.45), controlPoint1: CGPoint(x: 470.27, y: 608.68), controlPoint2: CGPoint(x: 471.65, y: 609.07))
        bezier63Path.addCurve(to: CGPoint(x: 474.97, y: 609.97), controlPoint1: CGPoint(x: 473.68, y: 609.63), controlPoint2: CGPoint(x: 474.33, y: 609.8))
        bezier63Path.addCurve(to: CGPoint(x: 478.59, y: 610.93), controlPoint1: CGPoint(x: 476.17, y: 610.3), controlPoint2: CGPoint(x: 477.38, y: 610.61))
        bezier63Path.addLine(to: CGPoint(x: 480.67, y: 611.45))
        bezier63Path.addCurve(to: CGPoint(x: 484.3, y: 612.34), controlPoint1: CGPoint(x: 481.87, y: 611.75), controlPoint2: CGPoint(x: 483.09, y: 612.05))
        bezier63Path.addCurve(to: CGPoint(x: 486.31, y: 612.81), controlPoint1: CGPoint(x: 484.97, y: 612.49), controlPoint2: CGPoint(x: 485.64, y: 612.66))
        bezier63Path.addCurve(to: CGPoint(x: 490.48, y: 613.74), controlPoint1: CGPoint(x: 487.69, y: 613.13), controlPoint2: CGPoint(x: 489.09, y: 613.44))
        bezier63Path.addCurve(to: CGPoint(x: 491.98, y: 614.08), controlPoint1: CGPoint(x: 490.98, y: 613.85), controlPoint2: CGPoint(x: 491.48, y: 613.97))
        bezier63Path.addCurve(to: CGPoint(x: 495.96, y: 614.89), controlPoint1: CGPoint(x: 493.3, y: 614.35), controlPoint2: CGPoint(x: 494.63, y: 614.63))
        bezier63Path.addCurve(to: CGPoint(x: 497.31, y: 615.17), controlPoint1: CGPoint(x: 496.41, y: 614.98), controlPoint2: CGPoint(x: 496.86, y: 615.08))
        bezier63Path.addCurve(to: CGPoint(x: 502.7, y: 616.18), controlPoint1: CGPoint(x: 499.1, y: 615.52), controlPoint2: CGPoint(x: 500.9, y: 615.85))
        bezier63Path.addCurve(to: CGPoint(x: 504.02, y: 616.41), controlPoint1: CGPoint(x: 503.13, y: 616.25), controlPoint2: CGPoint(x: 503.58, y: 616.33))
        bezier63Path.addCurve(to: CGPoint(x: 508.12, y: 617.11), controlPoint1: CGPoint(x: 505.38, y: 616.65), controlPoint2: CGPoint(x: 506.75, y: 616.88))
        bezier63Path.addCurve(to: CGPoint(x: 510.15, y: 617.43), controlPoint1: CGPoint(x: 508.8, y: 617.22), controlPoint2: CGPoint(x: 509.48, y: 617.32))
        bezier63Path.addCurve(to: CGPoint(x: 513.6, y: 617.96), controlPoint1: CGPoint(x: 511.3, y: 617.61), controlPoint2: CGPoint(x: 512.45, y: 617.79))
        bezier63Path.addCurve(to: CGPoint(x: 516.11, y: 618.32), controlPoint1: CGPoint(x: 514.44, y: 618.09), controlPoint2: CGPoint(x: 515.27, y: 618.2))
        bezier63Path.addCurve(to: CGPoint(x: 518.94, y: 618.71), controlPoint1: CGPoint(x: 517.05, y: 618.45), controlPoint2: CGPoint(x: 517.99, y: 618.58))
        bezier63Path.addCurve(to: CGPoint(x: 521.5, y: 619.03), controlPoint1: CGPoint(x: 519.78, y: 618.82), controlPoint2: CGPoint(x: 520.64, y: 618.92))
        bezier63Path.addCurve(to: CGPoint(x: 524.32, y: 619.38), controlPoint1: CGPoint(x: 522.44, y: 619.15), controlPoint2: CGPoint(x: 523.38, y: 619.27))
        bezier63Path.addCurve(to: CGPoint(x: 526.92, y: 619.67), controlPoint1: CGPoint(x: 525.19, y: 619.48), controlPoint2: CGPoint(x: 526.05, y: 619.57))
        bezier63Path.addCurve(to: CGPoint(x: 529.74, y: 619.98), controlPoint1: CGPoint(x: 527.86, y: 619.78), controlPoint2: CGPoint(x: 528.8, y: 619.88))
        bezier63Path.addCurve(to: CGPoint(x: 532.36, y: 620.23), controlPoint1: CGPoint(x: 530.61, y: 620.06), controlPoint2: CGPoint(x: 531.48, y: 620.14))
        bezier63Path.addCurve(to: CGPoint(x: 535.19, y: 620.49), controlPoint1: CGPoint(x: 533.3, y: 620.32), controlPoint2: CGPoint(x: 534.24, y: 620.41))
        bezier63Path.addCurve(to: CGPoint(x: 537.88, y: 620.71), controlPoint1: CGPoint(x: 536.09, y: 620.57), controlPoint2: CGPoint(x: 536.98, y: 620.64))
        bezier63Path.addCurve(to: CGPoint(x: 540.62, y: 620.92), controlPoint1: CGPoint(x: 538.79, y: 620.79), controlPoint2: CGPoint(x: 539.7, y: 620.86))
        bezier63Path.addCurve(to: CGPoint(x: 543.32, y: 621.1), controlPoint1: CGPoint(x: 541.52, y: 620.99), controlPoint2: CGPoint(x: 542.42, y: 621.05))
        bezier63Path.addLine(to: CGPoint(x: 546.08, y: 621.28))
        bezier63Path.addLine(to: CGPoint(x: 548.8, y: 621.42))
        bezier63Path.addCurve(to: CGPoint(x: 551.56, y: 621.55), controlPoint1: CGPoint(x: 549.72, y: 621.46), controlPoint2: CGPoint(x: 550.64, y: 621.52))
        bezier63Path.addCurve(to: CGPoint(x: 554.29, y: 621.65), controlPoint1: CGPoint(x: 552.47, y: 621.59), controlPoint2: CGPoint(x: 553.38, y: 621.62))
        bezier63Path.addCurve(to: CGPoint(x: 557.07, y: 621.75), controlPoint1: CGPoint(x: 555.21, y: 621.69), controlPoint2: CGPoint(x: 556.14, y: 621.72))
        bezier63Path.addCurve(to: CGPoint(x: 559.72, y: 621.81), controlPoint1: CGPoint(x: 557.95, y: 621.77), controlPoint2: CGPoint(x: 558.83, y: 621.79))
        bezier63Path.addCurve(to: CGPoint(x: 562.67, y: 621.86), controlPoint1: CGPoint(x: 560.7, y: 621.83), controlPoint2: CGPoint(x: 561.68, y: 621.85))
        bezier63Path.addCurve(to: CGPoint(x: 565.33, y: 621.88), controlPoint1: CGPoint(x: 563.56, y: 621.87), controlPoint2: CGPoint(x: 564.44, y: 621.88))
        bezier63Path.addCurve(to: CGPoint(x: 568.28, y: 621.89), controlPoint1: CGPoint(x: 566.31, y: 621.89), controlPoint2: CGPoint(x: 567.3, y: 621.89))
        bezier63Path.addCurve(to: CGPoint(x: 570.95, y: 621.87), controlPoint1: CGPoint(x: 569.17, y: 621.89), controlPoint2: CGPoint(x: 570.06, y: 621.88))
        bezier63Path.addCurve(to: CGPoint(x: 573.91, y: 621.84), controlPoint1: CGPoint(x: 571.94, y: 621.86), controlPoint2: CGPoint(x: 572.92, y: 621.86))
        bezier63Path.addCurve(to: CGPoint(x: 576.59, y: 621.78), controlPoint1: CGPoint(x: 574.8, y: 621.82), controlPoint2: CGPoint(x: 575.7, y: 621.8))
        bezier63Path.addLine(to: CGPoint(x: 579.54, y: 621.7))
        bezier63Path.addCurve(to: CGPoint(x: 582.1, y: 621.6), controlPoint1: CGPoint(x: 580.4, y: 621.67), controlPoint2: CGPoint(x: 581.25, y: 621.64))
        bezier63Path.addCurve(to: CGPoint(x: 585.52, y: 621.46), controlPoint1: CGPoint(x: 583.24, y: 621.56), controlPoint2: CGPoint(x: 584.38, y: 621.51))
        bezier63Path.addLine(to: CGPoint(x: 588.04, y: 621.33))
        bezier63Path.addCurve(to: CGPoint(x: 591.46, y: 621.12), controlPoint1: CGPoint(x: 589.18, y: 621.26), controlPoint2: CGPoint(x: 590.32, y: 621.19))
        bezier63Path.addCurve(to: CGPoint(x: 593.95, y: 620.95), controlPoint1: CGPoint(x: 592.29, y: 621.06), controlPoint2: CGPoint(x: 593.12, y: 621.01))
        bezier63Path.addCurve(to: CGPoint(x: 597.45, y: 620.68), controlPoint1: CGPoint(x: 595.11, y: 620.87), controlPoint2: CGPoint(x: 596.28, y: 620.78))
        bezier63Path.addLine(to: CGPoint(x: 599.86, y: 620.48))
        bezier63Path.addCurve(to: CGPoint(x: 603.55, y: 620.14), controlPoint1: CGPoint(x: 601.09, y: 620.38), controlPoint2: CGPoint(x: 602.32, y: 620.26))
        bezier63Path.addLine(to: CGPoint(x: 605.92, y: 619.91))
        bezier63Path.addCurve(to: CGPoint(x: 606.93, y: 619.8), controlPoint1: CGPoint(x: 606.25, y: 619.87), controlPoint2: CGPoint(x: 606.59, y: 619.84))
        bezier63Path.addCurve(to: CGPoint(x: 611.2, y: 619.32), controlPoint1: CGPoint(x: 608.35, y: 619.65), controlPoint2: CGPoint(x: 609.78, y: 619.48))
        bezier63Path.addCurve(to: CGPoint(x: 612.13, y: 619.2), controlPoint1: CGPoint(x: 611.51, y: 619.28), controlPoint2: CGPoint(x: 611.82, y: 619.24))
        bezier63Path.addCurve(to: CGPoint(x: 616.99, y: 618.58), controlPoint1: CGPoint(x: 613.75, y: 619.01), controlPoint2: CGPoint(x: 615.37, y: 618.8))
        bezier63Path.addCurve(to: CGPoint(x: 618.08, y: 618.43), controlPoint1: CGPoint(x: 617.36, y: 618.53), controlPoint2: CGPoint(x: 617.72, y: 618.48))
        bezier63Path.addCurve(to: CGPoint(x: 622.43, y: 617.8), controlPoint1: CGPoint(x: 619.54, y: 618.23), controlPoint2: CGPoint(x: 620.98, y: 618.02))
        bezier63Path.addLine(to: CGPoint(x: 623.18, y: 617.69))
        bezier63Path.addCurve(to: CGPoint(x: 628.05, y: 616.9), controlPoint1: CGPoint(x: 624.8, y: 617.44), controlPoint2: CGPoint(x: 626.43, y: 617.17))
        bezier63Path.addLine(to: CGPoint(x: 629.19, y: 616.71))
        bezier63Path.addCurve(to: CGPoint(x: 633.68, y: 615.91), controlPoint1: CGPoint(x: 630.69, y: 616.45), controlPoint2: CGPoint(x: 632.19, y: 616.19))
        bezier63Path.addCurve(to: CGPoint(x: 634.2, y: 615.82), controlPoint1: CGPoint(x: 633.85, y: 615.88), controlPoint2: CGPoint(x: 634.03, y: 615.85))
        bezier63Path.addCurve(to: CGPoint(x: 639.62, y: 614.77), controlPoint1: CGPoint(x: 636.01, y: 615.49), controlPoint2: CGPoint(x: 637.81, y: 615.14))
        bezier63Path.addLine(to: CGPoint(x: 639.42, y: 685.74))
        bezier63Path.addCurve(to: CGPoint(x: 634.19, y: 686.75), controlPoint1: CGPoint(x: 637.68, y: 686.08), controlPoint2: CGPoint(x: 635.94, y: 686.42))
        bezier63Path.addLine(to: CGPoint(x: 633.49, y: 686.87))
        bezier63Path.addCurve(to: CGPoint(x: 629, y: 687.67), controlPoint1: CGPoint(x: 631.99, y: 687.15), controlPoint2: CGPoint(x: 630.5, y: 687.42))
        bezier63Path.addLine(to: CGPoint(x: 627.85, y: 687.87))
        bezier63Path.addCurve(to: CGPoint(x: 622.99, y: 688.65), controlPoint1: CGPoint(x: 626.23, y: 688.14), controlPoint2: CGPoint(x: 624.61, y: 688.4))
        bezier63Path.addCurve(to: CGPoint(x: 622.23, y: 688.76), controlPoint1: CGPoint(x: 622.73, y: 688.69), controlPoint2: CGPoint(x: 622.48, y: 688.72))
        bezier63Path.addCurve(to: CGPoint(x: 617.89, y: 689.39), controlPoint1: CGPoint(x: 620.78, y: 688.98), controlPoint2: CGPoint(x: 619.34, y: 689.19))
        bezier63Path.addCurve(to: CGPoint(x: 616.8, y: 689.54), controlPoint1: CGPoint(x: 617.53, y: 689.44), controlPoint2: CGPoint(x: 617.16, y: 689.49))
        bezier63Path.addCurve(to: CGPoint(x: 611.93, y: 690.17), controlPoint1: CGPoint(x: 615.18, y: 689.76), controlPoint2: CGPoint(x: 613.56, y: 689.97))
        bezier63Path.addCurve(to: CGPoint(x: 611.01, y: 690.28), controlPoint1: CGPoint(x: 611.63, y: 690.21), controlPoint2: CGPoint(x: 611.32, y: 690.24))
        bezier63Path.addCurve(to: CGPoint(x: 606.73, y: 690.76), controlPoint1: CGPoint(x: 609.58, y: 690.45), controlPoint2: CGPoint(x: 608.16, y: 690.61))
        bezier63Path.addCurve(to: CGPoint(x: 605.73, y: 690.87), controlPoint1: CGPoint(x: 606.4, y: 690.8), controlPoint2: CGPoint(x: 606.06, y: 690.83))
        bezier63Path.addCurve(to: CGPoint(x: 605.13, y: 690.93), controlPoint1: CGPoint(x: 605.53, y: 690.89), controlPoint2: CGPoint(x: 605.33, y: 690.92))
        bezier63Path.addCurve(to: CGPoint(x: 603.36, y: 691.1), controlPoint1: CGPoint(x: 604.54, y: 690.99), controlPoint2: CGPoint(x: 603.95, y: 691.04))
        bezier63Path.addCurve(to: CGPoint(x: 599.67, y: 691.45), controlPoint1: CGPoint(x: 602.13, y: 691.22), controlPoint2: CGPoint(x: 600.9, y: 691.34))
        bezier63Path.addCurve(to: CGPoint(x: 597.25, y: 691.64), controlPoint1: CGPoint(x: 598.86, y: 691.52), controlPoint2: CGPoint(x: 598.06, y: 691.58))
        bezier63Path.addCurve(to: CGPoint(x: 593.76, y: 691.92), controlPoint1: CGPoint(x: 596.09, y: 691.74), controlPoint2: CGPoint(x: 594.92, y: 691.83))
        bezier63Path.addLine(to: CGPoint(x: 591.26, y: 692.08))
        bezier63Path.addCurve(to: CGPoint(x: 587.84, y: 692.29), controlPoint1: CGPoint(x: 590.12, y: 692.15), controlPoint2: CGPoint(x: 588.98, y: 692.22))
        bezier63Path.addCurve(to: CGPoint(x: 585.33, y: 692.42), controlPoint1: CGPoint(x: 587, y: 692.33), controlPoint2: CGPoint(x: 586.16, y: 692.38))
        bezier63Path.addCurve(to: CGPoint(x: 581.91, y: 692.57), controlPoint1: CGPoint(x: 584.19, y: 692.47), controlPoint2: CGPoint(x: 583.05, y: 692.52))
        bezier63Path.addLine(to: CGPoint(x: 581.22, y: 692.6))
        bezier63Path.addLine(to: CGPoint(x: 553.51, y: 692.6))
        bezier63Path.addCurve(to: CGPoint(x: 551.37, y: 692.51), controlPoint1: CGPoint(x: 552.79, y: 692.57), controlPoint2: CGPoint(x: 552.08, y: 692.54))
        bezier63Path.addCurve(to: CGPoint(x: 548.6, y: 692.38), controlPoint1: CGPoint(x: 550.44, y: 692.48), controlPoint2: CGPoint(x: 549.52, y: 692.43))
        bezier63Path.addCurve(to: CGPoint(x: 545.89, y: 692.24), controlPoint1: CGPoint(x: 547.7, y: 692.34), controlPoint2: CGPoint(x: 546.79, y: 692.29))
        bezier63Path.addCurve(to: CGPoint(x: 543.13, y: 692.07), controlPoint1: CGPoint(x: 544.96, y: 692.19), controlPoint2: CGPoint(x: 544.04, y: 692.13))
        bezier63Path.addCurve(to: CGPoint(x: 540.42, y: 691.89), controlPoint1: CGPoint(x: 542.23, y: 692.01), controlPoint2: CGPoint(x: 541.32, y: 691.95))
        bezier63Path.addCurve(to: CGPoint(x: 537.68, y: 691.67), controlPoint1: CGPoint(x: 539.51, y: 691.82), controlPoint2: CGPoint(x: 538.59, y: 691.75))
        bezier63Path.addLine(to: CGPoint(x: 535.71, y: 691.52))
        bezier63Path.addCurve(to: CGPoint(x: 535, y: 691.46), controlPoint1: CGPoint(x: 535.47, y: 691.5), controlPoint2: CGPoint(x: 535.24, y: 691.47))
        bezier63Path.addCurve(to: CGPoint(x: 532.15, y: 691.19), controlPoint1: CGPoint(x: 534.05, y: 691.37), controlPoint2: CGPoint(x: 533.1, y: 691.28))
        bezier63Path.addCurve(to: CGPoint(x: 529.55, y: 690.94), controlPoint1: CGPoint(x: 531.28, y: 691.11), controlPoint2: CGPoint(x: 530.41, y: 691.03))
        bezier63Path.addCurve(to: CGPoint(x: 526.71, y: 690.63), controlPoint1: CGPoint(x: 528.6, y: 690.84), controlPoint2: CGPoint(x: 527.65, y: 690.73))
        bezier63Path.addCurve(to: CGPoint(x: 524.13, y: 690.34), controlPoint1: CGPoint(x: 525.85, y: 690.54), controlPoint2: CGPoint(x: 524.99, y: 690.45))
        bezier63Path.addCurve(to: CGPoint(x: 521.29, y: 690), controlPoint1: CGPoint(x: 523.18, y: 690.23), controlPoint2: CGPoint(x: 522.24, y: 690.11))
        bezier63Path.addCurve(to: CGPoint(x: 518.74, y: 689.67), controlPoint1: CGPoint(x: 520.44, y: 689.89), controlPoint2: CGPoint(x: 519.59, y: 689.78))
        bezier63Path.addCurve(to: CGPoint(x: 515.91, y: 689.28), controlPoint1: CGPoint(x: 517.8, y: 689.55), controlPoint2: CGPoint(x: 516.86, y: 689.41))
        bezier63Path.addCurve(to: CGPoint(x: 513.88, y: 689), controlPoint1: CGPoint(x: 515.24, y: 689.18), controlPoint2: CGPoint(x: 514.55, y: 689.1))
        bezier63Path.addCurve(to: CGPoint(x: 513.41, y: 688.93), controlPoint1: CGPoint(x: 513.72, y: 688.97), controlPoint2: CGPoint(x: 513.56, y: 688.95))
        bezier63Path.addCurve(to: CGPoint(x: 509.96, y: 688.39), controlPoint1: CGPoint(x: 512.25, y: 688.75), controlPoint2: CGPoint(x: 511.11, y: 688.57))
        bezier63Path.addCurve(to: CGPoint(x: 507.93, y: 688.07), controlPoint1: CGPoint(x: 509.28, y: 688.28), controlPoint2: CGPoint(x: 508.61, y: 688.18))
        bezier63Path.addCurve(to: CGPoint(x: 503.82, y: 687.37), controlPoint1: CGPoint(x: 506.56, y: 687.85), controlPoint2: CGPoint(x: 505.19, y: 687.61))
        bezier63Path.addCurve(to: CGPoint(x: 502.5, y: 687.14), controlPoint1: CGPoint(x: 503.38, y: 687.29), controlPoint2: CGPoint(x: 502.94, y: 687.22))
        bezier63Path.addCurve(to: CGPoint(x: 497.12, y: 686.13), controlPoint1: CGPoint(x: 500.7, y: 686.81), controlPoint2: CGPoint(x: 498.91, y: 686.48))
        bezier63Path.addCurve(to: CGPoint(x: 495.76, y: 685.85), controlPoint1: CGPoint(x: 496.66, y: 686.04), controlPoint2: CGPoint(x: 496.22, y: 685.94))
        bezier63Path.addCurve(to: CGPoint(x: 491.78, y: 685.03), controlPoint1: CGPoint(x: 494.43, y: 685.58), controlPoint2: CGPoint(x: 493.1, y: 685.31))
        bezier63Path.addCurve(to: CGPoint(x: 490.29, y: 684.71), controlPoint1: CGPoint(x: 491.1, y: 684.89), controlPoint2: CGPoint(x: 490.7, y: 684.79))
        bezier63Path.addCurve(to: CGPoint(x: 486.57, y: 683.88), controlPoint1: CGPoint(x: 489.05, y: 684.44), controlPoint2: CGPoint(x: 487.81, y: 684.16))
        bezier63Path.addLine(to: CGPoint(x: 486.11, y: 683.77))
        bezier63Path.addCurve(to: CGPoint(x: 484.11, y: 683.3), controlPoint1: CGPoint(x: 485.44, y: 683.62), controlPoint2: CGPoint(x: 484.78, y: 683.46))
        bezier63Path.addCurve(to: CGPoint(x: 480.47, y: 682.42), controlPoint1: CGPoint(x: 482.89, y: 683.01), controlPoint2: CGPoint(x: 481.68, y: 682.72))
        bezier63Path.addCurve(to: CGPoint(x: 478.39, y: 681.89), controlPoint1: CGPoint(x: 479.78, y: 682.24), controlPoint2: CGPoint(x: 479.08, y: 682.07))
        bezier63Path.addCurve(to: CGPoint(x: 474.78, y: 680.94), controlPoint1: CGPoint(x: 477.18, y: 681.58), controlPoint2: CGPoint(x: 475.98, y: 681.26))
        bezier63Path.addCurve(to: CGPoint(x: 472.84, y: 680.41), controlPoint1: CGPoint(x: 474.13, y: 680.76), controlPoint2: CGPoint(x: 473.48, y: 680.59))
        bezier63Path.addCurve(to: CGPoint(x: 468.69, y: 679.24), controlPoint1: CGPoint(x: 471.45, y: 680.03), controlPoint2: CGPoint(x: 470.07, y: 679.64))
        bezier63Path.addCurve(to: CGPoint(x: 467.61, y: 678.93), controlPoint1: CGPoint(x: 468.33, y: 679.13), controlPoint2: CGPoint(x: 467.97, y: 679.03))
        bezier63Path.addLine(to: CGPoint(x: 467.14, y: 678.79))
        bezier63Path.addLine(to: CGPoint(x: 467.34, y: 607.83))
        bezier63Path.addCurve(to: CGPoint(x: 468.89, y: 608.28), controlPoint1: CGPoint(x: 467.85, y: 607.98), controlPoint2: CGPoint(x: 468.37, y: 608.13))
        bezier63Path.close()
        context.saveGState()
        bezier63Path.addClip()
        context.drawLinearGradient(arc,
            start: CGPoint(x: 838.57, y: 562.93),
            end: CGPoint(x: 489.73, y: 665.49),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// layer_1_27 Drawing
        let layer_1_27Path = UIBezierPath(rect: CGRect(x: 336.82, y: 356, width: 453, height: 268))
        context.saveGState()
        layer_1_27Path.addClip()
        context.translateBy(x: 337, y: 356)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer4_1.size.height)
        context.draw(layer4_1.cgImage!, in: CGRect(x: 0, y: 0, width: layer4_1.size.width, height: layer4_1.size.height))
        context.restoreGState()


        //// layer_1_26 Drawing
        let layer_1_26Path = UIBezierPath(rect: CGRect(x: 482.82, y: 364, width: 70, height: 79))
        context.saveGState()
        layer_1_26Path.addClip()
        context.translateBy(x: 483, y: 364)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer4_2.size.height)
        context.draw(layer4_2.cgImage!, in: CGRect(x: 0, y: 0, width: layer4_2.size.width, height: layer4_2.size.height))
        context.restoreGState()


        //// layer_1_25
        //// Group
        context.saveGState()
        context.setAlpha(redCubePathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 31 Drawing
        let bezier31Path = UIBezierPath()
        bezier31Path.move(to: CGPoint(x: 22.82, y: 432))
        bezier31Path.addLine(to: CGPoint(x: 484.39, y: 410.12))
        bezier31Path.addCurve(to: CGPoint(x: 492.82, y: 420.75), controlPoint1: CGPoint(x: 484.39, y: 410.12), controlPoint2: CGPoint(x: 486.34, y: 414.25))
        bezier31Path.addCurve(to: CGPoint(x: 507.89, y: 432.1), controlPoint1: CGPoint(x: 499.3, y: 427.26), controlPoint2: CGPoint(x: 507.89, y: 432.1))
        bezier31Path.addLine(to: CGPoint(x: 39.82, y: 453))
        bezier31Path.addLine(to: CGPoint(x: 22.82, y: 432))
        bezier31Path.close()
        context.saveGState()
        bezier31Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 265.36, y: 410.12), end: CGPoint(x: 265.36, y: 453), options: [])
        context.restoreGState()
        SpaceshipScreen.cubeConture.setStroke()
        bezier31Path.lineWidth = 0.2
        bezier31Path.stroke()


        //// Bezier 32 Drawing
        let bezier32Path = UIBezierPath()
        bezier32Path.move(to: CGPoint(x: 39.82, y: 490))
        bezier32Path.addLine(to: CGPoint(x: 39.82, y: 453))
        bezier32Path.addLine(to: CGPoint(x: 507.72, y: 432.38))
        bezier32Path.addLine(to: CGPoint(x: 506.58, y: 472.18))
        bezier32Path.addLine(to: CGPoint(x: 39.82, y: 490))
        bezier32Path.close()
        context.saveGState()
        bezier32Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 273.77, y: 432.38), end: CGPoint(x: 273.77, y: 490), options: [])
        context.restoreGState()
        UIColor.red.setStroke()
        bezier32Path.lineWidth = 0.1
        bezier32Path.stroke()


        //// Bezier 33 Drawing
        let bezier33Path = UIBezierPath()
        bezier33Path.move(to: CGPoint(x: 22.82, y: 432))
        bezier33Path.addLine(to: CGPoint(x: 39.82, y: 453))
        bezier33Path.addLine(to: CGPoint(x: 39.82, y: 490))
        bezier33Path.addLine(to: CGPoint(x: 22.82, y: 466))
        bezier33Path.addLine(to: CGPoint(x: 22.82, y: 432))
        bezier33Path.close()
        context.saveGState()
        bezier33Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 31.32, y: 432), end: CGPoint(x: 31.32, y: 490), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier33Path.lineWidth = 0.1
        bezier33Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()




        //// layer_1_24
        context.saveGState()
        context.translateBy(x: (redCubeExprX - 103.111998066), y: (redCubeExprY + 1.92770865886))
        context.scaleBy(x: 2, y: 2)



        //// Bezier 35 Drawing
        let bezier35Path = UIBezierPath()
        bezier35Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier35Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier35Path.addLine(to: CGPoint(x: 18.02, y: 20.82))
        bezier35Path.addLine(to: CGPoint(x: 0.52, y: 21.32))
        bezier35Path.addLine(to: CGPoint(x: 0.52, y: 4.32))
        bezier35Path.close()
        context.saveGState()
        bezier35Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 9.27, y: 3.82), end: CGPoint(x: 9.27, y: 21.32), options: [])
        context.restoreGState()
        SpaceshipScreen.cubeConture.setStroke()
        bezier35Path.lineWidth = 0.1
        bezier35Path.stroke()


        //// Group 6
        context.saveGState()
        context.translateBy(x: -1.16, y: 6.31)
        context.scaleBy(x: 0.11, y: 0.11)



        //// Bezier 83 Drawing
        let bezier83Path = UIBezierPath()
        bezier83Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier83Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier83Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier83Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier83Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier83Path.close()
        fillColor3.setFill()
        bezier83Path.fill()


        //// Bezier 84 Drawing
        let bezier84Path = UIBezierPath()
        bezier84Path.move(to: CGPoint(x: 131.69, y: 29.14))
        bezier84Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier84Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier84Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier84Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier84Path.close()
        fillColor6.setFill()
        bezier84Path.fill()


        //// Bezier 85 Drawing
        let bezier85Path = UIBezierPath()
        bezier85Path.move(to: CGPoint(x: 132.14, y: 109.42))
        bezier85Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier85Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier85Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier85Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier85Path.close()
        fillColor7.setFill()
        bezier85Path.fill()


        //// Star Drawing
        context.saveGState()
        context.translateBy(x: 131.93, y: 69.3)
        context.rotate(by: -90 * CGFloat.pi/180)

        let starPath = UIBezierPath()
        starPath.move(to: CGPoint(x: 0, y: -69.3))
        starPath.addLine(to: CGPoint(x: 40.15, y: 0))
        starPath.addLine(to: CGPoint(x: 0, y: 69.3))
        starPath.addLine(to: CGPoint(x: -40.15, y: 0))
        starPath.close()
        fillColor8.setFill()
        starPath.fill()

        context.restoreGState()


        //// Group 10
        //// Bezier 86 Drawing
        let bezier86Path = UIBezierPath()
        bezier86Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier86Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier86Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier86Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier86Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier86Path.close()
        fillColor9.setFill()
        bezier86Path.fill()


        //// Star 2 Drawing
        context.saveGState()
        context.translateBy(x: 96.58, y: 130.5)
        context.rotate(by: -30 * CGFloat.pi/180)

        let star2Path = UIBezierPath()
        star2Path.move(to: CGPoint(x: 0, y: -70.7))
        star2Path.addLine(to: CGPoint(x: 40.95, y: 0))
        star2Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star2Path.addLine(to: CGPoint(x: -40.95, y: 0))
        star2Path.close()
        fillColor3.setFill()
        star2Path.fill()

        context.restoreGState()


        //// Star 3 Drawing
        context.saveGState()
        context.translateBy(x: 167.28, y: 130.5)
        context.rotate(by: -150 * CGFloat.pi/180)

        let star3Path = UIBezierPath()
        star3Path.move(to: CGPoint(x: 0, y: -70.7))
        star3Path.addLine(to: CGPoint(x: 40.55, y: 0))
        star3Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star3Path.addLine(to: CGPoint(x: -40.55, y: 0))
        star3Path.close()
        fillColor6.setFill()
        star3Path.fill()

        context.restoreGState()





        context.restoreGState()


        //// Bezier 36 Drawing
        let bezier36Path = UIBezierPath()
        bezier36Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier36Path.addLine(to: CGPoint(x: 9.02, y: 14.82))
        bezier36Path.addLine(to: CGPoint(x: 9.02, y: 32.82))
        bezier36Path.addLine(to: CGPoint(x: 0.52, y: 21.32))
        bezier36Path.addLine(to: CGPoint(x: 0.52, y: 4.32))
        bezier36Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier36Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 4.77, y: 4.32), end: CGPoint(x: 4.77, y: 32.82), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier36Path.lineWidth = 0.3
        bezier36Path.stroke()
        context.restoreGState()


        //// Bezier 37 Drawing
        let bezier37Path = UIBezierPath()
        bezier37Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier37Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier37Path.addCurve(to: CGPoint(x: 26.52, y: 14.82), controlPoint1: CGPoint(x: 18.02, y: 3.82), controlPoint2: CGPoint(x: 26.54, y: 14.84))
        bezier37Path.addCurve(to: CGPoint(x: 9.02, y: 14.82), controlPoint1: CGPoint(x: 26.5, y: 14.81), controlPoint2: CGPoint(x: 9.07, y: 14.9))
        bezier37Path.addCurve(to: CGPoint(x: 0.52, y: 4.32), controlPoint1: CGPoint(x: 8.97, y: 14.75), controlPoint2: CGPoint(x: 0.52, y: 4.32))
        bezier37Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier37Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 13.52, y: 3.82), end: CGPoint(x: 13.52, y: 14.85), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier37Path.lineWidth = 0.3
        bezier37Path.stroke()
        context.restoreGState()


        //// Bezier 38 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier38Path = UIBezierPath()
        bezier38Path.move(to: CGPoint(x: 11.44, y: 35.06))
        bezier38Path.addLine(to: CGPoint(x: -3.73, y: 25.96))
        bezier38Path.addLine(to: CGPoint(x: 11.44, y: 18.06))
        bezier38Path.addLine(to: CGPoint(x: 26.31, y: 25.93))
        bezier38Path.addLine(to: CGPoint(x: 11.44, y: 35.06))
        bezier38Path.close()
        context.saveGState()
        bezier38Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 11.29, y: 18.06), end: CGPoint(x: 11.29, y: 35.06), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier38Path.lineWidth = 0.1
        bezier38Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 39 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier39Path = UIBezierPath()
        bezier39Path.move(to: CGPoint(x: -3.83, y: 25.94))
        bezier39Path.addLine(to: CGPoint(x: 11.44, y: 18.05))
        bezier39Path.addLine(to: CGPoint(x: 10.98, y: -3.12))
        bezier39Path.addLine(to: CGPoint(x: -3.72, y: 5.97))
        bezier39Path.addLine(to: CGPoint(x: -3.83, y: 25.94))
        bezier39Path.close()
        context.saveGState()
        bezier39Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 3.8, y: -3.12), end: CGPoint(x: 3.8, y: 25.94), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier39Path.lineWidth = 0.1
        bezier39Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 40 Drawing
        let bezier40Path = UIBezierPath()
        bezier40Path.move(to: CGPoint(x: 9.15, y: 32.95))
        bezier40Path.addCurve(to: CGPoint(x: 26.4, y: 32.7), controlPoint1: CGPoint(x: 9.15, y: 32.95), controlPoint2: CGPoint(x: 26.42, y: 32.71))
        bezier40Path.addCurve(to: CGPoint(x: 26.4, y: 14.45), controlPoint1: CGPoint(x: 26.37, y: 32.68), controlPoint2: CGPoint(x: 26.4, y: 14.45))
        bezier40Path.addLine(to: CGPoint(x: 9.15, y: 14.7))
        bezier40Path.addLine(to: CGPoint(x: 9.15, y: 32.95))
        bezier40Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier40Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 17.77, y: 14.45), end: CGPoint(x: 17.77, y: 32.95), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier40Path.lineWidth = 0.5
        bezier40Path.stroke()
        context.restoreGState()


        //// Bezier 68 Drawing
        let bezier68Path = UIBezierPath()
        bezier68Path.move(to: CGPoint(x: 18.02, y: 3.82))
        bezier68Path.addLine(to: CGPoint(x: 26.52, y: 14.32))
        bezier68Path.addLine(to: CGPoint(x: 26.52, y: 32.32))
        bezier68Path.addLine(to: CGPoint(x: 18.02, y: 20.82))
        bezier68Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier68Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier68Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 22.27, y: 3.82), end: CGPoint(x: 22.27, y: 32.32), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier68Path.lineWidth = 0.3
        bezier68Path.stroke()
        context.restoreGState()



        context.restoreGState()


        //// layer_1_23 Drawing
        let layer_1_23Path = UIBezierPath(rect: CGRect(x: 573.82, y: 373, width: 71, height: 80))
        context.saveGState()
        layer_1_23Path.addClip()
        context.translateBy(x: 574, y: 373)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer_6_2.size.height)
        context.draw(layer_6_2.cgImage!, in: CGRect(x: 0, y: 0, width: layer_6_2.size.width, height: layer_6_2.size.height))
        context.restoreGState()


        //// layer_1_22
        context.saveGState()
        context.translateBy(x: (redCube2ExprX - 96.5102728058), y: (redCube2ExprY - 3))
        context.scaleBy(x: 2, y: 2)



        //// Bezier 70 Drawing
        let bezier70Path = UIBezierPath()
        bezier70Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier70Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier70Path.addLine(to: CGPoint(x: 18.02, y: 20.82))
        bezier70Path.addLine(to: CGPoint(x: 0.52, y: 21.32))
        bezier70Path.addLine(to: CGPoint(x: 0.52, y: 4.32))
        bezier70Path.close()
        context.saveGState()
        bezier70Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 9.27, y: 3.82), end: CGPoint(x: 9.27, y: 21.32), options: [])
        context.restoreGState()
        SpaceshipScreen.cubeConture.setStroke()
        bezier70Path.lineWidth = 0.1
        bezier70Path.stroke()


        //// Group 5
        context.saveGState()
        context.translateBy(x: 0.01, y: 9.63)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Bezier 87 Drawing
        let bezier87Path = UIBezierPath()
        bezier87Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier87Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier87Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier87Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier87Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier87Path.close()
        fillColor3.setFill()
        bezier87Path.fill()


        //// Bezier 88 Drawing
        let bezier88Path = UIBezierPath()
        bezier88Path.move(to: CGPoint(x: 131.69, y: 29.14))
        bezier88Path.addLine(to: CGPoint(x: 131.46, y: 110.65))
        bezier88Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier88Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier88Path.addLine(to: CGPoint(x: 131.69, y: 29.14))
        bezier88Path.close()
        fillColor6.setFill()
        bezier88Path.fill()


        //// Bezier 89 Drawing
        let bezier89Path = UIBezierPath()
        bezier89Path.move(to: CGPoint(x: 132.14, y: 109.42))
        bezier89Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier89Path.addLine(to: CGPoint(x: 62.39, y: 150.79))
        bezier89Path.addLine(to: CGPoint(x: 62.62, y: 69.28))
        bezier89Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier89Path.close()
        fillColor7.setFill()
        bezier89Path.fill()


        //// Star 4 Drawing
        context.saveGState()
        context.translateBy(x: 131.93, y: 69.3)
        context.rotate(by: -90 * CGFloat.pi/180)

        let star4Path = UIBezierPath()
        star4Path.move(to: CGPoint(x: 0, y: -69.3))
        star4Path.addLine(to: CGPoint(x: 40.15, y: 0))
        star4Path.addLine(to: CGPoint(x: 0, y: 69.3))
        star4Path.addLine(to: CGPoint(x: -40.15, y: 0))
        star4Path.close()
        fillColor8.setFill()
        star4Path.fill()

        context.restoreGState()


        //// Group 11
        //// Bezier 90 Drawing
        let bezier90Path = UIBezierPath()
        bezier90Path.move(to: CGPoint(x: 201.21, y: 69.28))
        bezier90Path.addLine(to: CGPoint(x: 200.98, y: 150.79))
        bezier90Path.addLine(to: CGPoint(x: 131.91, y: 190.93))
        bezier90Path.addLine(to: CGPoint(x: 132.14, y: 109.42))
        bezier90Path.addLine(to: CGPoint(x: 201.21, y: 69.28))
        bezier90Path.close()
        fillColor9.setFill()
        bezier90Path.fill()


        //// Star 5 Drawing
        context.saveGState()
        context.translateBy(x: 96.58, y: 130.5)
        context.rotate(by: -30 * CGFloat.pi/180)

        let star5Path = UIBezierPath()
        star5Path.move(to: CGPoint(x: 0, y: -70.7))
        star5Path.addLine(to: CGPoint(x: 40.95, y: 0))
        star5Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star5Path.addLine(to: CGPoint(x: -40.95, y: 0))
        star5Path.close()
        fillColor3.setFill()
        star5Path.fill()

        context.restoreGState()


        //// Star 6 Drawing
        context.saveGState()
        context.translateBy(x: 167.28, y: 130.5)
        context.rotate(by: -150 * CGFloat.pi/180)

        let star6Path = UIBezierPath()
        star6Path.move(to: CGPoint(x: 0, y: -70.7))
        star6Path.addLine(to: CGPoint(x: 40.55, y: 0))
        star6Path.addLine(to: CGPoint(x: 0, y: 70.7))
        star6Path.addLine(to: CGPoint(x: -40.55, y: 0))
        star6Path.close()
        fillColor6.setFill()
        star6Path.fill()

        context.restoreGState()





        context.restoreGState()


        //// Bezier 71 Drawing
        let bezier71Path = UIBezierPath()
        bezier71Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier71Path.addLine(to: CGPoint(x: 9.02, y: 14.82))
        bezier71Path.addLine(to: CGPoint(x: 9.02, y: 32.82))
        bezier71Path.addLine(to: CGPoint(x: 0.52, y: 21.32))
        bezier71Path.addLine(to: CGPoint(x: 0.52, y: 4.32))
        bezier71Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier71Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 4.77, y: 4.32), end: CGPoint(x: 4.77, y: 32.82), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier71Path.lineWidth = 0.3
        bezier71Path.stroke()
        context.restoreGState()


        //// Bezier 72 Drawing
        let bezier72Path = UIBezierPath()
        bezier72Path.move(to: CGPoint(x: 0.52, y: 4.32))
        bezier72Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier72Path.addCurve(to: CGPoint(x: 26.52, y: 14.82), controlPoint1: CGPoint(x: 18.02, y: 3.82), controlPoint2: CGPoint(x: 26.54, y: 14.84))
        bezier72Path.addCurve(to: CGPoint(x: 9.02, y: 14.82), controlPoint1: CGPoint(x: 26.5, y: 14.81), controlPoint2: CGPoint(x: 9.07, y: 14.9))
        bezier72Path.addCurve(to: CGPoint(x: 0.52, y: 4.32), controlPoint1: CGPoint(x: 8.97, y: 14.75), controlPoint2: CGPoint(x: 0.52, y: 4.32))
        bezier72Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier72Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 13.52, y: 3.82), end: CGPoint(x: 13.52, y: 14.85), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier72Path.lineWidth = 0.3
        bezier72Path.stroke()
        context.restoreGState()


        //// Bezier 73 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier73Path = UIBezierPath()
        bezier73Path.move(to: CGPoint(x: 11.44, y: 35.06))
        bezier73Path.addLine(to: CGPoint(x: -3.73, y: 25.96))
        bezier73Path.addLine(to: CGPoint(x: 11.44, y: 18.06))
        bezier73Path.addLine(to: CGPoint(x: 26.31, y: 25.93))
        bezier73Path.addLine(to: CGPoint(x: 11.44, y: 35.06))
        bezier73Path.close()
        context.saveGState()
        bezier73Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 11.29, y: 18.06), end: CGPoint(x: 11.29, y: 35.06), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier73Path.lineWidth = 0.1
        bezier73Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 74 Drawing
        context.saveGState()
        context.setAlpha(0.1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier74Path = UIBezierPath()
        bezier74Path.move(to: CGPoint(x: -3.83, y: 25.94))
        bezier74Path.addLine(to: CGPoint(x: 11.44, y: 18.05))
        bezier74Path.addLine(to: CGPoint(x: 10.98, y: -3.12))
        bezier74Path.addLine(to: CGPoint(x: -3.72, y: 5.97))
        bezier74Path.addLine(to: CGPoint(x: -3.83, y: 25.94))
        bezier74Path.close()
        context.saveGState()
        bezier74Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 3.8, y: -3.12), end: CGPoint(x: 3.8, y: 25.94), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier74Path.lineWidth = 0.1
        bezier74Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 75 Drawing
        let bezier75Path = UIBezierPath()
        bezier75Path.move(to: CGPoint(x: 9.15, y: 32.95))
        bezier75Path.addCurve(to: CGPoint(x: 26.4, y: 32.7), controlPoint1: CGPoint(x: 9.15, y: 32.95), controlPoint2: CGPoint(x: 26.42, y: 32.71))
        bezier75Path.addCurve(to: CGPoint(x: 26.4, y: 14.45), controlPoint1: CGPoint(x: 26.37, y: 32.68), controlPoint2: CGPoint(x: 26.4, y: 14.45))
        bezier75Path.addLine(to: CGPoint(x: 9.15, y: 14.7))
        bezier75Path.addLine(to: CGPoint(x: 9.15, y: 32.95))
        bezier75Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier75Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 17.77, y: 14.45), end: CGPoint(x: 17.77, y: 32.95), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier75Path.lineWidth = 0.5
        bezier75Path.stroke()
        context.restoreGState()


        //// Bezier 76 Drawing
        let bezier76Path = UIBezierPath()
        bezier76Path.move(to: CGPoint(x: 18.02, y: 3.82))
        bezier76Path.addLine(to: CGPoint(x: 26.52, y: 14.32))
        bezier76Path.addLine(to: CGPoint(x: 26.52, y: 32.32))
        bezier76Path.addLine(to: CGPoint(x: 18.02, y: 20.82))
        bezier76Path.addLine(to: CGPoint(x: 18.02, y: 3.82))
        bezier76Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier76Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 22.27, y: 3.82), end: CGPoint(x: 22.27, y: 32.32), options: [])
        context.endTransparencyLayer()
        context.restoreGState()

        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setStroke()
        bezier76Path.lineWidth = 0.3
        bezier76Path.stroke()
        context.restoreGState()



        context.restoreGState()


        //// layer_1_21
        context.saveGState()
        context.setAlpha(redCubePath2Opacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 60 Drawing
        let bezier60Path = UIBezierPath()
        bezier60Path.move(to: CGPoint(x: 955.82, y: 413))
        bezier60Path.addLine(to: CGPoint(x: 643.82, y: 409))
        bezier60Path.addCurve(to: CGPoint(x: 637.82, y: 418), controlPoint1: CGPoint(x: 643.82, y: 409), controlPoint2: CGPoint(x: 644.3, y: 411.49))
        bezier60Path.addCurve(to: CGPoint(x: 625.82, y: 428), controlPoint1: CGPoint(x: 631.34, y: 424.51), controlPoint2: CGPoint(x: 625.82, y: 428))
        bezier60Path.addLine(to: CGPoint(x: 972.82, y: 434))
        bezier60Path.addLine(to: CGPoint(x: 955.82, y: 413))
        bezier60Path.close()
        context.saveGState()
        bezier60Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 799.32, y: 409), end: CGPoint(x: 799.32, y: 434), options: [])
        context.restoreGState()
        SpaceshipScreen.cubeConture.setStroke()
        bezier60Path.lineWidth = 0.2
        bezier60Path.stroke()


        //// Bezier 61 Drawing
        let bezier61Path = UIBezierPath()
        bezier61Path.move(to: CGPoint(x: 972.82, y: 470))
        bezier61Path.addLine(to: CGPoint(x: 972.82, y: 434))
        bezier61Path.addLine(to: CGPoint(x: 625.82, y: 428))
        bezier61Path.addLine(to: CGPoint(x: 625.82, y: 470))
        bezier61Path.addLine(to: CGPoint(x: 972.82, y: 470))
        bezier61Path.close()
        context.saveGState()
        bezier61Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 799.32, y: 428), end: CGPoint(x: 799.32, y: 470), options: [])
        context.restoreGState()
        UIColor.red.setStroke()
        bezier61Path.lineWidth = 0.1
        bezier61Path.stroke()


        //// Bezier 69 Drawing
        let bezier69Path = UIBezierPath()
        bezier69Path.move(to: CGPoint(x: 955.82, y: 413))
        bezier69Path.addLine(to: CGPoint(x: 955.82, y: 447))
        bezier69Path.addLine(to: CGPoint(x: 972.82, y: 471))
        bezier69Path.addLine(to: CGPoint(x: 972.82, y: 434))
        bezier69Path.addLine(to: CGPoint(x: 955.82, y: 413))
        bezier69Path.close()
        context.saveGState()
        bezier69Path.addClip()
        context.drawLinearGradient(cubePath, start: CGPoint(x: 964.32, y: 413), end: CGPoint(x: 964.32, y: 471), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier69Path.lineWidth = 0.1
        bezier69Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_20 Drawing
        let layer_1_20Path = UIBezierPath(rect: CGRect(x: 410.82, y: 0, width: 316, height: 488))
        context.saveGState()
        layer_1_20Path.addClip()
        context.translateBy(x: 411, y: 0)
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -layer_6_1.size.height)
        context.draw(layer_6_1.cgImage!, in: CGRect(x: 0, y: 0, width: layer_6_1.size.width, height: layer_6_1.size.height))
        context.restoreGState()


        //// layer_1_19
        context.saveGState()
        context.setAlpha(disc4PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: 116.64, y: 466.68))
        bezier17Path.addLine(to: CGPoint(x: 453.82, y: 265))
        bezier17Path.addLine(to: CGPoint(x: 437.82, y: 296))
        bezier17Path.addLine(to: CGPoint(x: 437.82, y: 334))
        bezier17Path.addLine(to: CGPoint(x: 116.64, y: 529.91))
        bezier17Path.addLine(to: CGPoint(x: 116.64, y: 466.68))
        context.saveGState()
        bezier17Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 285.23, y: 265), end: CGPoint(x: 285.23, y: 529.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier17Path.lineWidth = 0.1
        bezier17Path.stroke()


        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier18Path.lineWidth = 0.1
        bezier18Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_18
        context.saveGState()
        context.translateBy(x: (disc4ExprX - 104.697772806), y: (disc4ExprY + 0.466796875))



        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: 47.75, y: 4.04))
        bezier15Path.addCurve(to: CGPoint(x: 55.75, y: 9.4), controlPoint1: CGPoint(x: 52.1, y: 1.46), controlPoint2: CGPoint(x: 55.74, y: 4.25))
        bezier15Path.addLine(to: CGPoint(x: 55.87, y: 50.29))
        bezier15Path.addCurve(to: CGPoint(x: 48, y: 64.29), controlPoint1: CGPoint(x: 55.88, y: 55.43), controlPoint2: CGPoint(x: 52.36, y: 61.7))
        bezier15Path.addLine(to: CGPoint(x: 13.36, y: 84.83))
        bezier15Path.addCurve(to: CGPoint(x: 5.44, y: 80.2), controlPoint1: CGPoint(x: 9, y: 87.42), controlPoint2: CGPoint(x: 5.45, y: 85.34))
        bezier15Path.addLine(to: CGPoint(x: 5.33, y: 39.31))
        bezier15Path.addCurve(to: CGPoint(x: 12.35, y: 25.35), controlPoint1: CGPoint(x: 5.31, y: 34.16), controlPoint2: CGPoint(x: 7.99, y: 27.94))
        bezier15Path.addLine(to: CGPoint(x: 47.75, y: 4.04))
        bezier15Path.close()
        darkPrimary.setFill()
        bezier15Path.fill()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: 48.64, y: 4.04))
        bezier16Path.addLine(to: CGPoint(x: 49.02, y: 3.86))
        bezier16Path.addLine(to: CGPoint(x: 49.15, y: 3.81))
        bezier16Path.addLine(to: CGPoint(x: 49.59, y: 3.63))
        bezier16Path.addLine(to: CGPoint(x: 50.01, y: 3.5))
        bezier16Path.addLine(to: CGPoint(x: 50.07, y: 3.48))
        bezier16Path.addLine(to: CGPoint(x: 50.73, y: 3.34))
        bezier16Path.addLine(to: CGPoint(x: 50.73, y: 3.34))
        bezier16Path.addLine(to: CGPoint(x: 51.26, y: 3.28))
        bezier16Path.addLine(to: CGPoint(x: 51.36, y: 3.28))
        bezier16Path.addLine(to: CGPoint(x: 51.82, y: 3.28))
        bezier16Path.addLine(to: CGPoint(x: 51.9, y: 3.29))
        bezier16Path.addLine(to: CGPoint(x: 52.25, y: 3.33))
        bezier16Path.addLine(to: CGPoint(x: 52.36, y: 3.35))
        bezier16Path.addLine(to: CGPoint(x: 52.76, y: 3.45))
        bezier16Path.addLine(to: CGPoint(x: 52.77, y: 3.45))
        bezier16Path.addLine(to: CGPoint(x: 53.13, y: 3.58))
        bezier16Path.addLine(to: CGPoint(x: 53.23, y: 3.63))
        bezier16Path.addLine(to: CGPoint(x: 53.52, y: 3.77))
        bezier16Path.addLine(to: CGPoint(x: 53.61, y: 3.82))
        bezier16Path.addLine(to: CGPoint(x: 48.12, y: 0.54))
        bezier16Path.addLine(to: CGPoint(x: 48.08, y: 0.52))
        bezier16Path.addLine(to: CGPoint(x: 48.03, y: 0.49))
        bezier16Path.addLine(to: CGPoint(x: 47.74, y: 0.35))
        bezier16Path.addLine(to: CGPoint(x: 47.69, y: 0.32))
        bezier16Path.addLine(to: CGPoint(x: 47.64, y: 0.3))
        bezier16Path.addLine(to: CGPoint(x: 47.28, y: 0.17))
        bezier16Path.addLine(to: CGPoint(x: 47.27, y: 0.17))
        bezier16Path.addLine(to: CGPoint(x: 47.26, y: 0.17))
        bezier16Path.addLine(to: CGPoint(x: 46.87, y: 0.07))
        bezier16Path.addLine(to: CGPoint(x: 46.83, y: 0.06))
        bezier16Path.addLine(to: CGPoint(x: 46.76, y: 0.06))
        bezier16Path.addLine(to: CGPoint(x: 46.4, y: 0.01))
        bezier16Path.addLine(to: CGPoint(x: 46.35, y: 0))
        bezier16Path.addLine(to: CGPoint(x: 46.33, y: 0))
        bezier16Path.addLine(to: CGPoint(x: 45.87, y: 0))
        bezier16Path.addLine(to: CGPoint(x: 45.83, y: 0))
        bezier16Path.addLine(to: CGPoint(x: 45.77, y: 0))
        bezier16Path.addLine(to: CGPoint(x: 45.24, y: 0.06))
        bezier16Path.addLine(to: CGPoint(x: 45.23, y: 0.06))
        bezier16Path.addLine(to: CGPoint(x: 44.58, y: 0.21))
        bezier16Path.addLine(to: CGPoint(x: 44.54, y: 0.21))
        bezier16Path.addLine(to: CGPoint(x: 44.52, y: 0.22))
        bezier16Path.addLine(to: CGPoint(x: 44.1, y: 0.35))
        bezier16Path.addLine(to: CGPoint(x: 44.01, y: 0.39))
        bezier16Path.addLine(to: CGPoint(x: 43.66, y: 0.52))
        bezier16Path.addLine(to: CGPoint(x: 43.61, y: 0.54))
        bezier16Path.addLine(to: CGPoint(x: 43.53, y: 0.58))
        bezier16Path.addLine(to: CGPoint(x: 43.15, y: 0.76))
        bezier16Path.addLine(to: CGPoint(x: 43.01, y: 0.83))
        bezier16Path.addLine(to: CGPoint(x: 42.51, y: 1.11))
        bezier16Path.addLine(to: CGPoint(x: 7.87, y: 21.66))
        bezier16Path.addLine(to: CGPoint(x: 7.11, y: 22.14))
        bezier16Path.addLine(to: CGPoint(x: 6.88, y: 22.32))
        bezier16Path.addLine(to: CGPoint(x: 6.38, y: 22.7))
        bezier16Path.addLine(to: CGPoint(x: 6.11, y: 22.94))
        bezier16Path.addLine(to: CGPoint(x: 5.66, y: 23.33))
        bezier16Path.addLine(to: CGPoint(x: 5.4, y: 23.59))
        bezier16Path.addLine(to: CGPoint(x: 5.23, y: 23.75))
        bezier16Path.addLine(to: CGPoint(x: 4.8, y: 24.21))
        bezier16Path.addLine(to: CGPoint(x: 4.8, y: 24.21))
        bezier16Path.addLine(to: CGPoint(x: 4.37, y: 24.69))
        bezier16Path.addLine(to: CGPoint(x: 4.24, y: 24.86))
        bezier16Path.addLine(to: CGPoint(x: 3.93, y: 25.24))
        bezier16Path.addLine(to: CGPoint(x: 3.73, y: 25.5))
        bezier16Path.addLine(to: CGPoint(x: 3.57, y: 25.71))
        bezier16Path.addLine(to: CGPoint(x: 3.36, y: 26.02))
        bezier16Path.addLine(to: CGPoint(x: 3.21, y: 26.23))
        bezier16Path.addLine(to: CGPoint(x: 2.96, y: 26.6))
        bezier16Path.addLine(to: CGPoint(x: 2.81, y: 26.83))
        bezier16Path.addLine(to: CGPoint(x: 2.75, y: 26.93))
        bezier16Path.addLine(to: CGPoint(x: 2.34, y: 27.61))
        bezier16Path.addLine(to: CGPoint(x: 2.31, y: 27.66))
        bezier16Path.addLine(to: CGPoint(x: 2.24, y: 27.8))
        bezier16Path.addLine(to: CGPoint(x: 1.97, y: 28.3))
        bezier16Path.addLine(to: CGPoint(x: 1.85, y: 28.53))
        bezier16Path.addLine(to: CGPoint(x: 1.73, y: 28.78))
        bezier16Path.addLine(to: CGPoint(x: 1.63, y: 28.99))
        bezier16Path.addLine(to: CGPoint(x: 1.33, y: 29.66))
        bezier16Path.addLine(to: CGPoint(x: 1.32, y: 29.69))
        bezier16Path.addLine(to: CGPoint(x: 1.02, y: 30.42))
        bezier16Path.addLine(to: CGPoint(x: 0.98, y: 30.56))
        bezier16Path.addLine(to: CGPoint(x: 0.89, y: 30.82))
        bezier16Path.addLine(to: CGPoint(x: 0.76, y: 31.19))
        bezier16Path.addLine(to: CGPoint(x: 0.67, y: 31.47))
        bezier16Path.addLine(to: CGPoint(x: 0.57, y: 31.81))
        bezier16Path.addLine(to: CGPoint(x: 0.51, y: 32.01))
        bezier16Path.addLine(to: CGPoint(x: 0.42, y: 32.38))
        bezier16Path.addLine(to: CGPoint(x: 0.32, y: 32.8))
        bezier16Path.addLine(to: CGPoint(x: 0.29, y: 32.94))
        bezier16Path.addLine(to: CGPoint(x: 0.17, y: 33.63))
        bezier16Path.addLine(to: CGPoint(x: 0.14, y: 33.77))
        bezier16Path.addLine(to: CGPoint(x: 0.1, y: 34.07))
        bezier16Path.addLine(to: CGPoint(x: 0.06, y: 34.47))
        bezier16Path.addLine(to: CGPoint(x: 0.03, y: 34.76))
        bezier16Path.addLine(to: CGPoint(x: 0, y: 35.66))
        bezier16Path.addLine(to: CGPoint(x: 0.11, y: 76.55))
        bezier16Path.addCurve(to: CGPoint(x: 0.28, y: 78.31), controlPoint1: CGPoint(x: 0.11, y: 77.18), controlPoint2: CGPoint(x: 0.17, y: 77.78))
        bezier16Path.addCurve(to: CGPoint(x: 1.06, y: 80.4), controlPoint1: CGPoint(x: 0.43, y: 79.13), controlPoint2: CGPoint(x: 0.7, y: 79.83))
        bezier16Path.addCurve(to: CGPoint(x: 2.42, y: 81.74), controlPoint1: CGPoint(x: 1.43, y: 80.98), controlPoint2: CGPoint(x: 1.89, y: 81.43))
        bezier16Path.addLine(to: CGPoint(x: 7.91, y: 85.02))
        bezier16Path.addCurve(to: CGPoint(x: 5.6, y: 79.82), controlPoint1: CGPoint(x: 6.49, y: 84.18), controlPoint2: CGPoint(x: 5.61, y: 82.38))
        bezier16Path.addLine(to: CGPoint(x: 5.49, y: 38.93))
        bezier16Path.addLine(to: CGPoint(x: 5.53, y: 38.04))
        bezier16Path.addLine(to: CGPoint(x: 5.55, y: 37.75))
        bezier16Path.addLine(to: CGPoint(x: 5.64, y: 37.04))
        bezier16Path.addLine(to: CGPoint(x: 5.66, y: 36.9))
        bezier16Path.addLine(to: CGPoint(x: 5.81, y: 36.08))
        bezier16Path.addLine(to: CGPoint(x: 5.91, y: 35.66))
        bezier16Path.addLine(to: CGPoint(x: 6.06, y: 35.08))
        bezier16Path.addLine(to: CGPoint(x: 6.16, y: 34.75))
        bezier16Path.addLine(to: CGPoint(x: 6.37, y: 34.1))
        bezier16Path.addLine(to: CGPoint(x: 6.47, y: 33.83))
        bezier16Path.addLine(to: CGPoint(x: 6.82, y: 32.94))
        bezier16Path.addLine(to: CGPoint(x: 6.86, y: 32.84))
        bezier16Path.addLine(to: CGPoint(x: 7.22, y: 32.06))
        bezier16Path.addLine(to: CGPoint(x: 7.34, y: 31.81))
        bezier16Path.addLine(to: CGPoint(x: 7.73, y: 31.09))
        bezier16Path.addLine(to: CGPoint(x: 7.8, y: 30.94))
        bezier16Path.addLine(to: CGPoint(x: 8.3, y: 30.11))
        bezier16Path.addLine(to: CGPoint(x: 8.45, y: 29.88))
        bezier16Path.addLine(to: CGPoint(x: 8.84, y: 29.3))
        bezier16Path.addLine(to: CGPoint(x: 9.06, y: 28.99))
        bezier16Path.addLine(to: CGPoint(x: 9.42, y: 28.52))
        bezier16Path.addLine(to: CGPoint(x: 9.73, y: 28.14))
        bezier16Path.addLine(to: CGPoint(x: 10.29, y: 27.49))
        bezier16Path.addLine(to: CGPoint(x: 10.29, y: 27.48))
        bezier16Path.addLine(to: CGPoint(x: 10.89, y: 26.87))
        bezier16Path.addLine(to: CGPoint(x: 11.16, y: 26.62))
        bezier16Path.addLine(to: CGPoint(x: 11.6, y: 26.21))
        bezier16Path.addLine(to: CGPoint(x: 11.87, y: 25.99))
        bezier16Path.addLine(to: CGPoint(x: 12.37, y: 25.6))
        bezier16Path.addLine(to: CGPoint(x: 12.61, y: 25.42))
        bezier16Path.addLine(to: CGPoint(x: 13.36, y: 24.93))
        bezier16Path.addLine(to: CGPoint(x: 48, y: 4.39))
        bezier16Path.addLine(to: CGPoint(x: 48.5, y: 4.11))
        bezier16Path.addLine(to: CGPoint(x: 48.64, y: 4.04))
        bezier16Path.close()
        primary.setFill()
        bezier16Path.fill()


        //// Oval Drawing
        context.saveGState()
        context.translateBy(x: 30.66, y: 46.46)
        context.rotate(by: 30.2 * CGFloat.pi/180)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: -13.23, y: -23.52, width: 26.46, height: 47.04))
        context.saveGState()
        ovalPath.addClip()
        context.drawRadialGradient(discCircle4,
            startCenter: CGPoint(x: -0, y: -0), startRadius: 8.06,
            endCenter: CGPoint(x: -0, y: -0), endRadius: 24.17,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// layer_1_17
        context.saveGState()
        context.setAlpha(disc3PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 21 Drawing
        let bezier21Path = UIBezierPath()
        bezier21Path.move(to: CGPoint(x: 138.64, y: 480.68))
        bezier21Path.addLine(to: CGPoint(x: 475.82, y: 279))
        bezier21Path.addLine(to: CGPoint(x: 459.82, y: 310))
        bezier21Path.addLine(to: CGPoint(x: 459.82, y: 348))
        bezier21Path.addLine(to: CGPoint(x: 138.64, y: 543.91))
        bezier21Path.addLine(to: CGPoint(x: 138.64, y: 480.68))
        context.saveGState()
        bezier21Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 307.23, y: 279), end: CGPoint(x: 307.23, y: 543.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier21Path.lineWidth = 0.1
        bezier21Path.stroke()


        //// Bezier 22 Drawing
        let bezier22Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier22Path.lineWidth = 0.1
        bezier22Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_16
        context.saveGState()
        context.translateBy(x: (disc3ExprX - 104.697772806), y: (disc3ExprY + 0.466796875))



        //// Bezier 19 Drawing
        let bezier19Path = UIBezierPath()
        bezier19Path.move(to: CGPoint(x: 48, y: 4.32))
        bezier19Path.addCurve(to: CGPoint(x: 55.75, y: 9.4), controlPoint1: CGPoint(x: 52.36, y: 1.73), controlPoint2: CGPoint(x: 55.74, y: 4.25))
        bezier19Path.addLine(to: CGPoint(x: 55.87, y: 50.29))
        bezier19Path.addCurve(to: CGPoint(x: 48, y: 64.29), controlPoint1: CGPoint(x: 55.88, y: 55.43), controlPoint2: CGPoint(x: 52.36, y: 61.7))
        bezier19Path.addLine(to: CGPoint(x: 13.36, y: 84.83))
        bezier19Path.addCurve(to: CGPoint(x: 5.44, y: 80.2), controlPoint1: CGPoint(x: 9, y: 87.42), controlPoint2: CGPoint(x: 5.45, y: 85.34))
        bezier19Path.addLine(to: CGPoint(x: 5.33, y: 39.31))
        bezier19Path.addCurve(to: CGPoint(x: 13, y: 24.32), controlPoint1: CGPoint(x: 5.31, y: 34.16), controlPoint2: CGPoint(x: 8.64, y: 26.9))
        bezier19Path.addLine(to: CGPoint(x: 48, y: 4.32))
        bezier19Path.close()
        darkPrimary.setFill()
        bezier19Path.fill()


        //// Bezier 20 Drawing
        let bezier20Path = UIBezierPath()
        bezier20Path.move(to: CGPoint(x: 48.64, y: 4.04))
        bezier20Path.addLine(to: CGPoint(x: 49.02, y: 3.86))
        bezier20Path.addLine(to: CGPoint(x: 49.15, y: 3.81))
        bezier20Path.addLine(to: CGPoint(x: 49.59, y: 3.63))
        bezier20Path.addLine(to: CGPoint(x: 50.01, y: 3.5))
        bezier20Path.addLine(to: CGPoint(x: 50.07, y: 3.48))
        bezier20Path.addLine(to: CGPoint(x: 50.73, y: 3.34))
        bezier20Path.addLine(to: CGPoint(x: 50.73, y: 3.34))
        bezier20Path.addLine(to: CGPoint(x: 51.26, y: 3.28))
        bezier20Path.addLine(to: CGPoint(x: 51.36, y: 3.28))
        bezier20Path.addLine(to: CGPoint(x: 51.82, y: 3.28))
        bezier20Path.addLine(to: CGPoint(x: 51.9, y: 3.29))
        bezier20Path.addLine(to: CGPoint(x: 52.25, y: 3.33))
        bezier20Path.addLine(to: CGPoint(x: 52.36, y: 3.35))
        bezier20Path.addLine(to: CGPoint(x: 52.76, y: 3.45))
        bezier20Path.addLine(to: CGPoint(x: 52.77, y: 3.45))
        bezier20Path.addLine(to: CGPoint(x: 53.13, y: 3.58))
        bezier20Path.addLine(to: CGPoint(x: 53.23, y: 3.63))
        bezier20Path.addLine(to: CGPoint(x: 53.52, y: 3.77))
        bezier20Path.addLine(to: CGPoint(x: 53.61, y: 3.82))
        bezier20Path.addLine(to: CGPoint(x: 48.12, y: 0.54))
        bezier20Path.addLine(to: CGPoint(x: 48.08, y: 0.52))
        bezier20Path.addLine(to: CGPoint(x: 48.03, y: 0.49))
        bezier20Path.addLine(to: CGPoint(x: 47.74, y: 0.35))
        bezier20Path.addLine(to: CGPoint(x: 47.69, y: 0.32))
        bezier20Path.addLine(to: CGPoint(x: 47.64, y: 0.3))
        bezier20Path.addLine(to: CGPoint(x: 47.28, y: 0.17))
        bezier20Path.addLine(to: CGPoint(x: 47.27, y: 0.17))
        bezier20Path.addLine(to: CGPoint(x: 47.26, y: 0.17))
        bezier20Path.addLine(to: CGPoint(x: 46.87, y: 0.07))
        bezier20Path.addLine(to: CGPoint(x: 46.83, y: 0.06))
        bezier20Path.addLine(to: CGPoint(x: 46.76, y: 0.06))
        bezier20Path.addLine(to: CGPoint(x: 46.4, y: 0.01))
        bezier20Path.addLine(to: CGPoint(x: 46.35, y: 0))
        bezier20Path.addLine(to: CGPoint(x: 46.33, y: 0))
        bezier20Path.addLine(to: CGPoint(x: 45.87, y: 0))
        bezier20Path.addLine(to: CGPoint(x: 45.83, y: 0))
        bezier20Path.addLine(to: CGPoint(x: 45.77, y: 0))
        bezier20Path.addLine(to: CGPoint(x: 45.24, y: 0.06))
        bezier20Path.addLine(to: CGPoint(x: 45.23, y: 0.06))
        bezier20Path.addLine(to: CGPoint(x: 44.58, y: 0.21))
        bezier20Path.addLine(to: CGPoint(x: 44.54, y: 0.21))
        bezier20Path.addLine(to: CGPoint(x: 44.52, y: 0.22))
        bezier20Path.addLine(to: CGPoint(x: 44.1, y: 0.35))
        bezier20Path.addLine(to: CGPoint(x: 44.01, y: 0.39))
        bezier20Path.addLine(to: CGPoint(x: 43.66, y: 0.52))
        bezier20Path.addLine(to: CGPoint(x: 43.61, y: 0.54))
        bezier20Path.addLine(to: CGPoint(x: 43.53, y: 0.58))
        bezier20Path.addLine(to: CGPoint(x: 43.15, y: 0.76))
        bezier20Path.addLine(to: CGPoint(x: 43.01, y: 0.83))
        bezier20Path.addLine(to: CGPoint(x: 42.51, y: 1.11))
        bezier20Path.addLine(to: CGPoint(x: 7.87, y: 21.66))
        bezier20Path.addLine(to: CGPoint(x: 7.11, y: 22.14))
        bezier20Path.addLine(to: CGPoint(x: 6.88, y: 22.32))
        bezier20Path.addLine(to: CGPoint(x: 6.38, y: 22.7))
        bezier20Path.addLine(to: CGPoint(x: 6.11, y: 22.94))
        bezier20Path.addLine(to: CGPoint(x: 5.66, y: 23.33))
        bezier20Path.addLine(to: CGPoint(x: 5.4, y: 23.59))
        bezier20Path.addLine(to: CGPoint(x: 5.23, y: 23.75))
        bezier20Path.addLine(to: CGPoint(x: 4.8, y: 24.21))
        bezier20Path.addLine(to: CGPoint(x: 4.8, y: 24.21))
        bezier20Path.addLine(to: CGPoint(x: 4.37, y: 24.69))
        bezier20Path.addLine(to: CGPoint(x: 4.24, y: 24.86))
        bezier20Path.addLine(to: CGPoint(x: 3.93, y: 25.24))
        bezier20Path.addLine(to: CGPoint(x: 3.73, y: 25.5))
        bezier20Path.addLine(to: CGPoint(x: 3.57, y: 25.71))
        bezier20Path.addLine(to: CGPoint(x: 3.36, y: 26.02))
        bezier20Path.addLine(to: CGPoint(x: 3.21, y: 26.23))
        bezier20Path.addLine(to: CGPoint(x: 2.96, y: 26.6))
        bezier20Path.addLine(to: CGPoint(x: 2.81, y: 26.83))
        bezier20Path.addLine(to: CGPoint(x: 2.75, y: 26.93))
        bezier20Path.addLine(to: CGPoint(x: 2.34, y: 27.61))
        bezier20Path.addLine(to: CGPoint(x: 2.31, y: 27.66))
        bezier20Path.addLine(to: CGPoint(x: 2.24, y: 27.8))
        bezier20Path.addLine(to: CGPoint(x: 1.97, y: 28.3))
        bezier20Path.addLine(to: CGPoint(x: 1.85, y: 28.53))
        bezier20Path.addLine(to: CGPoint(x: 1.73, y: 28.78))
        bezier20Path.addLine(to: CGPoint(x: 1.63, y: 28.99))
        bezier20Path.addLine(to: CGPoint(x: 1.33, y: 29.66))
        bezier20Path.addLine(to: CGPoint(x: 1.32, y: 29.69))
        bezier20Path.addLine(to: CGPoint(x: 1.02, y: 30.42))
        bezier20Path.addLine(to: CGPoint(x: 0.98, y: 30.56))
        bezier20Path.addLine(to: CGPoint(x: 0.89, y: 30.82))
        bezier20Path.addLine(to: CGPoint(x: 0.76, y: 31.19))
        bezier20Path.addLine(to: CGPoint(x: 0.67, y: 31.47))
        bezier20Path.addLine(to: CGPoint(x: 0.57, y: 31.81))
        bezier20Path.addLine(to: CGPoint(x: 0.51, y: 32.01))
        bezier20Path.addLine(to: CGPoint(x: 0.42, y: 32.38))
        bezier20Path.addLine(to: CGPoint(x: 0.32, y: 32.8))
        bezier20Path.addLine(to: CGPoint(x: 0.29, y: 32.94))
        bezier20Path.addLine(to: CGPoint(x: 0.17, y: 33.63))
        bezier20Path.addLine(to: CGPoint(x: 0.14, y: 33.77))
        bezier20Path.addLine(to: CGPoint(x: 0.1, y: 34.07))
        bezier20Path.addLine(to: CGPoint(x: 0.06, y: 34.47))
        bezier20Path.addLine(to: CGPoint(x: 0.03, y: 34.76))
        bezier20Path.addLine(to: CGPoint(x: 0, y: 35.66))
        bezier20Path.addLine(to: CGPoint(x: 0.11, y: 76.55))
        bezier20Path.addCurve(to: CGPoint(x: 0.28, y: 78.31), controlPoint1: CGPoint(x: 0.11, y: 77.18), controlPoint2: CGPoint(x: 0.17, y: 77.78))
        bezier20Path.addCurve(to: CGPoint(x: 1.06, y: 80.4), controlPoint1: CGPoint(x: 0.43, y: 79.13), controlPoint2: CGPoint(x: 0.7, y: 79.83))
        bezier20Path.addCurve(to: CGPoint(x: 2.42, y: 81.74), controlPoint1: CGPoint(x: 1.43, y: 80.98), controlPoint2: CGPoint(x: 1.89, y: 81.43))
        bezier20Path.addLine(to: CGPoint(x: 7.91, y: 85.02))
        bezier20Path.addCurve(to: CGPoint(x: 5.6, y: 79.82), controlPoint1: CGPoint(x: 6.49, y: 84.18), controlPoint2: CGPoint(x: 5.61, y: 82.38))
        bezier20Path.addLine(to: CGPoint(x: 5.49, y: 38.93))
        bezier20Path.addLine(to: CGPoint(x: 5.53, y: 38.04))
        bezier20Path.addLine(to: CGPoint(x: 5.55, y: 37.75))
        bezier20Path.addLine(to: CGPoint(x: 5.64, y: 37.04))
        bezier20Path.addLine(to: CGPoint(x: 5.66, y: 36.9))
        bezier20Path.addLine(to: CGPoint(x: 5.81, y: 36.08))
        bezier20Path.addLine(to: CGPoint(x: 5.91, y: 35.66))
        bezier20Path.addLine(to: CGPoint(x: 6.06, y: 35.08))
        bezier20Path.addLine(to: CGPoint(x: 6.16, y: 34.75))
        bezier20Path.addLine(to: CGPoint(x: 6.37, y: 34.1))
        bezier20Path.addLine(to: CGPoint(x: 6.47, y: 33.83))
        bezier20Path.addLine(to: CGPoint(x: 6.82, y: 32.94))
        bezier20Path.addLine(to: CGPoint(x: 6.86, y: 32.84))
        bezier20Path.addLine(to: CGPoint(x: 7.22, y: 32.06))
        bezier20Path.addLine(to: CGPoint(x: 7.34, y: 31.81))
        bezier20Path.addLine(to: CGPoint(x: 7.73, y: 31.09))
        bezier20Path.addLine(to: CGPoint(x: 7.8, y: 30.94))
        bezier20Path.addLine(to: CGPoint(x: 8.3, y: 30.11))
        bezier20Path.addLine(to: CGPoint(x: 8.45, y: 29.88))
        bezier20Path.addLine(to: CGPoint(x: 8.84, y: 29.3))
        bezier20Path.addLine(to: CGPoint(x: 9.06, y: 28.99))
        bezier20Path.addLine(to: CGPoint(x: 9.42, y: 28.52))
        bezier20Path.addLine(to: CGPoint(x: 9.73, y: 28.14))
        bezier20Path.addLine(to: CGPoint(x: 10.29, y: 27.49))
        bezier20Path.addLine(to: CGPoint(x: 10.29, y: 27.48))
        bezier20Path.addLine(to: CGPoint(x: 10.89, y: 26.87))
        bezier20Path.addLine(to: CGPoint(x: 11.16, y: 26.62))
        bezier20Path.addLine(to: CGPoint(x: 11.6, y: 26.21))
        bezier20Path.addLine(to: CGPoint(x: 11.87, y: 25.99))
        bezier20Path.addLine(to: CGPoint(x: 12.37, y: 25.6))
        bezier20Path.addLine(to: CGPoint(x: 12.61, y: 25.42))
        bezier20Path.addLine(to: CGPoint(x: 13.36, y: 24.93))
        bezier20Path.addLine(to: CGPoint(x: 48, y: 4.39))
        bezier20Path.addLine(to: CGPoint(x: 48.5, y: 4.11))
        bezier20Path.addLine(to: CGPoint(x: 48.64, y: 4.04))
        bezier20Path.close()
        primary.setFill()
        bezier20Path.fill()


        //// Oval 2 Drawing
        context.saveGState()
        context.translateBy(x: 30.66, y: 46.46)
        context.rotate(by: 30.2 * CGFloat.pi/180)

        let oval2Path = UIBezierPath(ovalIn: CGRect(x: -13.23, y: -23.52, width: 26.46, height: 47.04))
        context.saveGState()
        oval2Path.addClip()
        context.drawRadialGradient(discCircle3,
            startCenter: CGPoint(x: -0, y: -0), startRadius: 8.06,
            endCenter: CGPoint(x: -0, y: -0), endRadius: 24.17,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// layer_1_15
        context.saveGState()
        context.setAlpha(disc2PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 25 Drawing
        let bezier25Path = UIBezierPath()
        bezier25Path.move(to: CGPoint(x: 158.64, y: 495.68))
        bezier25Path.addLine(to: CGPoint(x: 495.82, y: 294))
        bezier25Path.addLine(to: CGPoint(x: 479.82, y: 325))
        bezier25Path.addLine(to: CGPoint(x: 479.82, y: 363))
        bezier25Path.addLine(to: CGPoint(x: 158.64, y: 558.91))
        bezier25Path.addLine(to: CGPoint(x: 158.64, y: 495.68))
        context.saveGState()
        bezier25Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 327.23, y: 294), end: CGPoint(x: 327.23, y: 558.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier25Path.lineWidth = 0.1
        bezier25Path.stroke()


        //// Bezier 26 Drawing
        let bezier26Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier26Path.lineWidth = 0.1
        bezier26Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_14
        context.saveGState()
        context.translateBy(x: (disc2ExprX - 103.697772806), y: (disc2ExprY + 5.466796875))



        //// Bezier 23 Drawing
        let bezier23Path = UIBezierPath()
        bezier23Path.move(to: CGPoint(x: 49, y: 4.32))
        bezier23Path.addCurve(to: CGPoint(x: 56.75, y: 9.4), controlPoint1: CGPoint(x: 53.44, y: 1.73), controlPoint2: CGPoint(x: 56.74, y: 4.25))
        bezier23Path.addLine(to: CGPoint(x: 56.87, y: 50.29))
        bezier23Path.addCurve(to: CGPoint(x: 48.86, y: 64.29), controlPoint1: CGPoint(x: 56.88, y: 55.43), controlPoint2: CGPoint(x: 53.3, y: 61.7))
        bezier23Path.addLine(to: CGPoint(x: 13.6, y: 84.83))
        bezier23Path.addCurve(to: CGPoint(x: 5.53, y: 80.2), controlPoint1: CGPoint(x: 9.16, y: 87.42), controlPoint2: CGPoint(x: 5.55, y: 85.34))
        bezier23Path.addLine(to: CGPoint(x: 5.42, y: 39.31))
        bezier23Path.addCurve(to: CGPoint(x: 14, y: 24.32), controlPoint1: CGPoint(x: 5.41, y: 34.16), controlPoint2: CGPoint(x: 9.56, y: 26.9))
        bezier23Path.addLine(to: CGPoint(x: 49, y: 4.32))
        bezier23Path.close()
        darkPrimary.setFill()
        bezier23Path.fill()


        //// Bezier 24 Drawing
        let bezier24Path = UIBezierPath()
        bezier24Path.move(to: CGPoint(x: 49.51, y: 4.04))
        bezier24Path.addLine(to: CGPoint(x: 49.9, y: 3.86))
        bezier24Path.addLine(to: CGPoint(x: 50.03, y: 3.81))
        bezier24Path.addLine(to: CGPoint(x: 50.47, y: 3.63))
        bezier24Path.addLine(to: CGPoint(x: 50.91, y: 3.5))
        bezier24Path.addLine(to: CGPoint(x: 50.97, y: 3.48))
        bezier24Path.addLine(to: CGPoint(x: 51.63, y: 3.34))
        bezier24Path.addLine(to: CGPoint(x: 51.64, y: 3.34))
        bezier24Path.addLine(to: CGPoint(x: 52.18, y: 3.28))
        bezier24Path.addLine(to: CGPoint(x: 52.28, y: 3.28))
        bezier24Path.addLine(to: CGPoint(x: 52.75, y: 3.28))
        bezier24Path.addLine(to: CGPoint(x: 52.83, y: 3.29))
        bezier24Path.addLine(to: CGPoint(x: 53.19, y: 3.33))
        bezier24Path.addLine(to: CGPoint(x: 53.3, y: 3.35))
        bezier24Path.addLine(to: CGPoint(x: 53.7, y: 3.45))
        bezier24Path.addLine(to: CGPoint(x: 53.72, y: 3.45))
        bezier24Path.addLine(to: CGPoint(x: 54.08, y: 3.58))
        bezier24Path.addLine(to: CGPoint(x: 54.18, y: 3.63))
        bezier24Path.addLine(to: CGPoint(x: 54.48, y: 3.77))
        bezier24Path.addLine(to: CGPoint(x: 54.57, y: 3.82))
        bezier24Path.addLine(to: CGPoint(x: 48.99, y: 0.54))
        bezier24Path.addLine(to: CGPoint(x: 48.94, y: 0.52))
        bezier24Path.addLine(to: CGPoint(x: 48.89, y: 0.49))
        bezier24Path.addLine(to: CGPoint(x: 48.6, y: 0.35))
        bezier24Path.addLine(to: CGPoint(x: 48.54, y: 0.32))
        bezier24Path.addLine(to: CGPoint(x: 48.49, y: 0.3))
        bezier24Path.addLine(to: CGPoint(x: 48.13, y: 0.17))
        bezier24Path.addLine(to: CGPoint(x: 48.11, y: 0.17))
        bezier24Path.addLine(to: CGPoint(x: 48.11, y: 0.17))
        bezier24Path.addLine(to: CGPoint(x: 47.71, y: 0.07))
        bezier24Path.addLine(to: CGPoint(x: 47.66, y: 0.06))
        bezier24Path.addLine(to: CGPoint(x: 47.6, y: 0.06))
        bezier24Path.addLine(to: CGPoint(x: 47.24, y: 0.01))
        bezier24Path.addLine(to: CGPoint(x: 47.18, y: 0))
        bezier24Path.addLine(to: CGPoint(x: 47.16, y: 0))
        bezier24Path.addLine(to: CGPoint(x: 46.69, y: 0))
        bezier24Path.addLine(to: CGPoint(x: 46.65, y: 0))
        bezier24Path.addLine(to: CGPoint(x: 46.59, y: 0))
        bezier24Path.addLine(to: CGPoint(x: 46.05, y: 0.06))
        bezier24Path.addLine(to: CGPoint(x: 46.04, y: 0.06))
        bezier24Path.addLine(to: CGPoint(x: 45.38, y: 0.21))
        bezier24Path.addLine(to: CGPoint(x: 45.34, y: 0.21))
        bezier24Path.addLine(to: CGPoint(x: 45.32, y: 0.22))
        bezier24Path.addLine(to: CGPoint(x: 44.89, y: 0.35))
        bezier24Path.addLine(to: CGPoint(x: 44.8, y: 0.39))
        bezier24Path.addLine(to: CGPoint(x: 44.44, y: 0.52))
        bezier24Path.addLine(to: CGPoint(x: 44.39, y: 0.54))
        bezier24Path.addLine(to: CGPoint(x: 44.31, y: 0.58))
        bezier24Path.addLine(to: CGPoint(x: 43.92, y: 0.76))
        bezier24Path.addLine(to: CGPoint(x: 43.78, y: 0.83))
        bezier24Path.addLine(to: CGPoint(x: 43.27, y: 1.11))
        bezier24Path.addLine(to: CGPoint(x: 8.01, y: 21.66))
        bezier24Path.addLine(to: CGPoint(x: 7.24, y: 22.14))
        bezier24Path.addLine(to: CGPoint(x: 7, y: 22.32))
        bezier24Path.addLine(to: CGPoint(x: 6.5, y: 22.7))
        bezier24Path.addLine(to: CGPoint(x: 6.22, y: 22.94))
        bezier24Path.addLine(to: CGPoint(x: 5.76, y: 23.33))
        bezier24Path.addLine(to: CGPoint(x: 5.5, y: 23.59))
        bezier24Path.addLine(to: CGPoint(x: 5.33, y: 23.75))
        bezier24Path.addLine(to: CGPoint(x: 4.89, y: 24.21))
        bezier24Path.addLine(to: CGPoint(x: 4.88, y: 24.21))
        bezier24Path.addLine(to: CGPoint(x: 4.45, y: 24.69))
        bezier24Path.addLine(to: CGPoint(x: 4.31, y: 24.86))
        bezier24Path.addLine(to: CGPoint(x: 4, y: 25.24))
        bezier24Path.addLine(to: CGPoint(x: 3.8, y: 25.5))
        bezier24Path.addLine(to: CGPoint(x: 3.64, y: 25.71))
        bezier24Path.addLine(to: CGPoint(x: 3.42, y: 26.02))
        bezier24Path.addLine(to: CGPoint(x: 3.26, y: 26.23))
        bezier24Path.addLine(to: CGPoint(x: 3.01, y: 26.6))
        bezier24Path.addLine(to: CGPoint(x: 2.86, y: 26.83))
        bezier24Path.addLine(to: CGPoint(x: 2.8, y: 26.93))
        bezier24Path.addLine(to: CGPoint(x: 2.38, y: 27.61))
        bezier24Path.addLine(to: CGPoint(x: 2.35, y: 27.66))
        bezier24Path.addLine(to: CGPoint(x: 2.28, y: 27.8))
        bezier24Path.addLine(to: CGPoint(x: 2, y: 28.3))
        bezier24Path.addLine(to: CGPoint(x: 1.89, y: 28.53))
        bezier24Path.addLine(to: CGPoint(x: 1.76, y: 28.78))
        bezier24Path.addLine(to: CGPoint(x: 1.66, y: 28.99))
        bezier24Path.addLine(to: CGPoint(x: 1.35, y: 29.66))
        bezier24Path.addLine(to: CGPoint(x: 1.34, y: 29.69))
        bezier24Path.addLine(to: CGPoint(x: 1.04, y: 30.42))
        bezier24Path.addLine(to: CGPoint(x: 1, y: 30.56))
        bezier24Path.addLine(to: CGPoint(x: 0.9, y: 30.82))
        bezier24Path.addLine(to: CGPoint(x: 0.77, y: 31.19))
        bezier24Path.addLine(to: CGPoint(x: 0.68, y: 31.47))
        bezier24Path.addLine(to: CGPoint(x: 0.58, y: 31.81))
        bezier24Path.addLine(to: CGPoint(x: 0.52, y: 32.01))
        bezier24Path.addLine(to: CGPoint(x: 0.43, y: 32.38))
        bezier24Path.addLine(to: CGPoint(x: 0.33, y: 32.8))
        bezier24Path.addLine(to: CGPoint(x: 0.29, y: 32.94))
        bezier24Path.addLine(to: CGPoint(x: 0.17, y: 33.63))
        bezier24Path.addLine(to: CGPoint(x: 0.15, y: 33.77))
        bezier24Path.addLine(to: CGPoint(x: 0.1, y: 34.07))
        bezier24Path.addLine(to: CGPoint(x: 0.07, y: 34.47))
        bezier24Path.addLine(to: CGPoint(x: 0.03, y: 34.76))
        bezier24Path.addLine(to: CGPoint(x: 0, y: 35.66))
        bezier24Path.addLine(to: CGPoint(x: 0.12, y: 76.55))
        bezier24Path.addCurve(to: CGPoint(x: 0.28, y: 78.31), controlPoint1: CGPoint(x: 0.12, y: 77.18), controlPoint2: CGPoint(x: 0.17, y: 77.78))
        bezier24Path.addCurve(to: CGPoint(x: 1.08, y: 80.4), controlPoint1: CGPoint(x: 0.44, y: 79.13), controlPoint2: CGPoint(x: 0.72, y: 79.83))
        bezier24Path.addCurve(to: CGPoint(x: 2.46, y: 81.74), controlPoint1: CGPoint(x: 1.46, y: 80.98), controlPoint2: CGPoint(x: 1.92, y: 81.43))
        bezier24Path.addLine(to: CGPoint(x: 8.05, y: 85.02))
        bezier24Path.addCurve(to: CGPoint(x: 5.7, y: 79.82), controlPoint1: CGPoint(x: 6.6, y: 84.18), controlPoint2: CGPoint(x: 5.71, y: 82.38))
        bezier24Path.addLine(to: CGPoint(x: 5.59, y: 38.93))
        bezier24Path.addLine(to: CGPoint(x: 5.63, y: 38.04))
        bezier24Path.addLine(to: CGPoint(x: 5.65, y: 37.75))
        bezier24Path.addLine(to: CGPoint(x: 5.74, y: 37.04))
        bezier24Path.addLine(to: CGPoint(x: 5.76, y: 36.9))
        bezier24Path.addLine(to: CGPoint(x: 5.92, y: 36.08))
        bezier24Path.addLine(to: CGPoint(x: 6.02, y: 35.66))
        bezier24Path.addLine(to: CGPoint(x: 6.17, y: 35.08))
        bezier24Path.addLine(to: CGPoint(x: 6.27, y: 34.75))
        bezier24Path.addLine(to: CGPoint(x: 6.49, y: 34.1))
        bezier24Path.addLine(to: CGPoint(x: 6.58, y: 33.83))
        bezier24Path.addLine(to: CGPoint(x: 6.94, y: 32.94))
        bezier24Path.addLine(to: CGPoint(x: 6.98, y: 32.84))
        bezier24Path.addLine(to: CGPoint(x: 7.35, y: 32.06))
        bezier24Path.addLine(to: CGPoint(x: 7.48, y: 31.81))
        bezier24Path.addLine(to: CGPoint(x: 7.87, y: 31.09))
        bezier24Path.addLine(to: CGPoint(x: 7.94, y: 30.94))
        bezier24Path.addLine(to: CGPoint(x: 8.45, y: 30.11))
        bezier24Path.addLine(to: CGPoint(x: 8.6, y: 29.88))
        bezier24Path.addLine(to: CGPoint(x: 9, y: 29.3))
        bezier24Path.addLine(to: CGPoint(x: 9.23, y: 28.99))
        bezier24Path.addLine(to: CGPoint(x: 9.59, y: 28.52))
        bezier24Path.addLine(to: CGPoint(x: 9.9, y: 28.14))
        bezier24Path.addLine(to: CGPoint(x: 10.47, y: 27.49))
        bezier24Path.addLine(to: CGPoint(x: 10.48, y: 27.48))
        bezier24Path.addLine(to: CGPoint(x: 11.08, y: 26.87))
        bezier24Path.addLine(to: CGPoint(x: 11.35, y: 26.62))
        bezier24Path.addLine(to: CGPoint(x: 11.81, y: 26.21))
        bezier24Path.addLine(to: CGPoint(x: 12.08, y: 25.99))
        bezier24Path.addLine(to: CGPoint(x: 12.59, y: 25.6))
        bezier24Path.addLine(to: CGPoint(x: 12.83, y: 25.42))
        bezier24Path.addLine(to: CGPoint(x: 13.6, y: 24.93))
        bezier24Path.addLine(to: CGPoint(x: 48.86, y: 4.39))
        bezier24Path.addLine(to: CGPoint(x: 49.37, y: 4.11))
        bezier24Path.addLine(to: CGPoint(x: 49.51, y: 4.04))
        bezier24Path.close()
        primary.setFill()
        bezier24Path.fill()


        //// Oval 3 Drawing
        context.saveGState()
        context.translateBy(x: 31.2, y: 46.46)
        context.rotate(by: 30.2 * CGFloat.pi/180)

        let oval3Path = UIBezierPath(ovalIn: CGRect(x: -13.59, y: -23.73, width: 27.18, height: 47.46))
        context.saveGState()
        oval3Path.addClip()
        context.drawRadialGradient(discCircle2,
            startCenter: CGPoint(x: -0, y: -0), startRadius: 8.17,
            endCenter: CGPoint(x: -0, y: -0), endRadius: 24.5,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// layer_1_13
        context.saveGState()
        context.setAlpha(disc1PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 29 Drawing
        context.saveGState()
        context.setAlpha(disc1PathOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier29Path = UIBezierPath()
        bezier29Path.move(to: CGPoint(x: 181.64, y: 507.68))
        bezier29Path.addLine(to: CGPoint(x: 518.82, y: 306))
        bezier29Path.addLine(to: CGPoint(x: 502.82, y: 337))
        bezier29Path.addLine(to: CGPoint(x: 502.82, y: 375))
        bezier29Path.addLine(to: CGPoint(x: 181.64, y: 570.91))
        bezier29Path.addLine(to: CGPoint(x: 181.64, y: 511.4))
        bezier29Path.addLine(to: CGPoint(x: 181.64, y: 507.68))
        context.saveGState()
        bezier29Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 350.23, y: 306), end: CGPoint(x: 350.23, y: 570.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier29Path.lineWidth = 0.1
        bezier29Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_12
        context.saveGState()
        context.translateBy(x: (disc1ExprX - 102.545429056), y: (disc1ExprY + 1.466796875))



        //// Bezier 27 Drawing
        let bezier27Path = UIBezierPath()
        bezier27Path.move(to: CGPoint(x: 50, y: 4.32))
        bezier27Path.addCurve(to: CGPoint(x: 57.75, y: 9.4), controlPoint1: CGPoint(x: 54.52, y: 1.73), controlPoint2: CGPoint(x: 57.73, y: 4.25))
        bezier27Path.addLine(to: CGPoint(x: 57.87, y: 50.29))
        bezier27Path.addCurve(to: CGPoint(x: 49.72, y: 64.29), controlPoint1: CGPoint(x: 57.88, y: 55.43), controlPoint2: CGPoint(x: 54.24, y: 61.7))
        bezier27Path.addLine(to: CGPoint(x: 13.83, y: 84.83))
        bezier27Path.addCurve(to: CGPoint(x: 5.63, y: 80.2), controlPoint1: CGPoint(x: 9.32, y: 87.42), controlPoint2: CGPoint(x: 5.65, y: 85.34))
        bezier27Path.addLine(to: CGPoint(x: 5.52, y: 39.31))
        bezier27Path.addCurve(to: CGPoint(x: 14, y: 24.32), controlPoint1: CGPoint(x: 5.5, y: 34.16), controlPoint2: CGPoint(x: 9.48, y: 26.9))
        bezier27Path.addLine(to: CGPoint(x: 50, y: 4.32))
        bezier27Path.close()
        darkPrimary.setFill()
        bezier27Path.fill()


        //// Bezier 28 Drawing
        let bezier28Path = UIBezierPath()
        bezier28Path.move(to: CGPoint(x: 50.38, y: 4.04))
        bezier28Path.addLine(to: CGPoint(x: 50.77, y: 3.86))
        bezier28Path.addLine(to: CGPoint(x: 50.91, y: 3.81))
        bezier28Path.addLine(to: CGPoint(x: 51.36, y: 3.63))
        bezier28Path.addLine(to: CGPoint(x: 51.8, y: 3.5))
        bezier28Path.addLine(to: CGPoint(x: 51.86, y: 3.48))
        bezier28Path.addLine(to: CGPoint(x: 52.54, y: 3.34))
        bezier28Path.addLine(to: CGPoint(x: 52.55, y: 3.34))
        bezier28Path.addLine(to: CGPoint(x: 53.09, y: 3.28))
        bezier28Path.addLine(to: CGPoint(x: 53.2, y: 3.28))
        bezier28Path.addLine(to: CGPoint(x: 53.68, y: 3.28))
        bezier28Path.addLine(to: CGPoint(x: 53.75, y: 3.29))
        bezier28Path.addLine(to: CGPoint(x: 54.13, y: 3.33))
        bezier28Path.addLine(to: CGPoint(x: 54.24, y: 3.35))
        bezier28Path.addLine(to: CGPoint(x: 54.65, y: 3.45))
        bezier28Path.addLine(to: CGPoint(x: 54.66, y: 3.45))
        bezier28Path.addLine(to: CGPoint(x: 55.03, y: 3.58))
        bezier28Path.addLine(to: CGPoint(x: 55.14, y: 3.63))
        bezier28Path.addLine(to: CGPoint(x: 55.44, y: 3.77))
        bezier28Path.addLine(to: CGPoint(x: 55.53, y: 3.82))
        bezier28Path.addLine(to: CGPoint(x: 49.85, y: 0.54))
        bezier28Path.addLine(to: CGPoint(x: 49.8, y: 0.52))
        bezier28Path.addLine(to: CGPoint(x: 49.75, y: 0.49))
        bezier28Path.addLine(to: CGPoint(x: 49.45, y: 0.35))
        bezier28Path.addLine(to: CGPoint(x: 49.39, y: 0.32))
        bezier28Path.addLine(to: CGPoint(x: 49.34, y: 0.3))
        bezier28Path.addLine(to: CGPoint(x: 48.97, y: 0.17))
        bezier28Path.addLine(to: CGPoint(x: 48.96, y: 0.17))
        bezier28Path.addLine(to: CGPoint(x: 48.96, y: 0.17))
        bezier28Path.addLine(to: CGPoint(x: 48.55, y: 0.07))
        bezier28Path.addLine(to: CGPoint(x: 48.5, y: 0.06))
        bezier28Path.addLine(to: CGPoint(x: 48.44, y: 0.06))
        bezier28Path.addLine(to: CGPoint(x: 48.07, y: 0.01))
        bezier28Path.addLine(to: CGPoint(x: 48.01, y: 0))
        bezier28Path.addLine(to: CGPoint(x: 47.99, y: 0))
        bezier28Path.addLine(to: CGPoint(x: 47.51, y: 0))
        bezier28Path.addLine(to: CGPoint(x: 47.47, y: 0))
        bezier28Path.addLine(to: CGPoint(x: 47.4, y: 0))
        bezier28Path.addLine(to: CGPoint(x: 46.86, y: 0.06))
        bezier28Path.addLine(to: CGPoint(x: 46.85, y: 0.06))
        bezier28Path.addLine(to: CGPoint(x: 46.17, y: 0.21))
        bezier28Path.addLine(to: CGPoint(x: 46.14, y: 0.21))
        bezier28Path.addLine(to: CGPoint(x: 46.11, y: 0.22))
        bezier28Path.addLine(to: CGPoint(x: 45.68, y: 0.35))
        bezier28Path.addLine(to: CGPoint(x: 45.58, y: 0.39))
        bezier28Path.addLine(to: CGPoint(x: 45.22, y: 0.52))
        bezier28Path.addLine(to: CGPoint(x: 45.17, y: 0.54))
        bezier28Path.addLine(to: CGPoint(x: 45.08, y: 0.58))
        bezier28Path.addLine(to: CGPoint(x: 44.69, y: 0.76))
        bezier28Path.addLine(to: CGPoint(x: 44.55, y: 0.83))
        bezier28Path.addLine(to: CGPoint(x: 44.03, y: 1.11))
        bezier28Path.addLine(to: CGPoint(x: 8.15, y: 21.66))
        bezier28Path.addLine(to: CGPoint(x: 7.37, y: 22.14))
        bezier28Path.addLine(to: CGPoint(x: 7.12, y: 22.32))
        bezier28Path.addLine(to: CGPoint(x: 6.61, y: 22.7))
        bezier28Path.addLine(to: CGPoint(x: 6.33, y: 22.94))
        bezier28Path.addLine(to: CGPoint(x: 5.87, y: 23.33))
        bezier28Path.addLine(to: CGPoint(x: 5.59, y: 23.59))
        bezier28Path.addLine(to: CGPoint(x: 5.42, y: 23.75))
        bezier28Path.addLine(to: CGPoint(x: 4.97, y: 24.21))
        bezier28Path.addLine(to: CGPoint(x: 4.97, y: 24.21))
        bezier28Path.addLine(to: CGPoint(x: 4.53, y: 24.69))
        bezier28Path.addLine(to: CGPoint(x: 4.39, y: 24.86))
        bezier28Path.addLine(to: CGPoint(x: 4.07, y: 25.24))
        bezier28Path.addLine(to: CGPoint(x: 3.86, y: 25.5))
        bezier28Path.addLine(to: CGPoint(x: 3.7, y: 25.71))
        bezier28Path.addLine(to: CGPoint(x: 3.48, y: 26.02))
        bezier28Path.addLine(to: CGPoint(x: 3.32, y: 26.23))
        bezier28Path.addLine(to: CGPoint(x: 3.07, y: 26.6))
        bezier28Path.addLine(to: CGPoint(x: 2.91, y: 26.83))
        bezier28Path.addLine(to: CGPoint(x: 2.84, y: 26.93))
        bezier28Path.addLine(to: CGPoint(x: 2.42, y: 27.61))
        bezier28Path.addLine(to: CGPoint(x: 2.39, y: 27.66))
        bezier28Path.addLine(to: CGPoint(x: 2.32, y: 27.8))
        bezier28Path.addLine(to: CGPoint(x: 2.04, y: 28.3))
        bezier28Path.addLine(to: CGPoint(x: 1.92, y: 28.53))
        bezier28Path.addLine(to: CGPoint(x: 1.79, y: 28.78))
        bezier28Path.addLine(to: CGPoint(x: 1.68, y: 28.99))
        bezier28Path.addLine(to: CGPoint(x: 1.38, y: 29.66))
        bezier28Path.addLine(to: CGPoint(x: 1.36, y: 29.69))
        bezier28Path.addLine(to: CGPoint(x: 1.06, y: 30.42))
        bezier28Path.addLine(to: CGPoint(x: 1.01, y: 30.56))
        bezier28Path.addLine(to: CGPoint(x: 0.92, y: 30.82))
        bezier28Path.addLine(to: CGPoint(x: 0.78, y: 31.19))
        bezier28Path.addLine(to: CGPoint(x: 0.7, y: 31.47))
        bezier28Path.addLine(to: CGPoint(x: 0.59, y: 31.81))
        bezier28Path.addLine(to: CGPoint(x: 0.53, y: 32.01))
        bezier28Path.addLine(to: CGPoint(x: 0.44, y: 32.38))
        bezier28Path.addLine(to: CGPoint(x: 0.34, y: 32.8))
        bezier28Path.addLine(to: CGPoint(x: 0.3, y: 32.94))
        bezier28Path.addLine(to: CGPoint(x: 0.17, y: 33.63))
        bezier28Path.addLine(to: CGPoint(x: 0.15, y: 33.77))
        bezier28Path.addLine(to: CGPoint(x: 0.11, y: 34.07))
        bezier28Path.addLine(to: CGPoint(x: 0.07, y: 34.47))
        bezier28Path.addLine(to: CGPoint(x: 0.04, y: 34.76))
        bezier28Path.addLine(to: CGPoint(x: 0, y: 35.66))
        bezier28Path.addLine(to: CGPoint(x: 0.12, y: 76.55))
        bezier28Path.addCurve(to: CGPoint(x: 0.29, y: 78.31), controlPoint1: CGPoint(x: 0.12, y: 77.18), controlPoint2: CGPoint(x: 0.18, y: 77.78))
        bezier28Path.addCurve(to: CGPoint(x: 1.1, y: 80.4), controlPoint1: CGPoint(x: 0.45, y: 79.13), controlPoint2: CGPoint(x: 0.73, y: 79.83))
        bezier28Path.addCurve(to: CGPoint(x: 2.5, y: 81.74), controlPoint1: CGPoint(x: 1.48, y: 80.98), controlPoint2: CGPoint(x: 1.95, y: 81.43))
        bezier28Path.addLine(to: CGPoint(x: 8.19, y: 85.02))
        bezier28Path.addCurve(to: CGPoint(x: 5.8, y: 79.82), controlPoint1: CGPoint(x: 6.72, y: 84.18), controlPoint2: CGPoint(x: 5.81, y: 82.38))
        bezier28Path.addLine(to: CGPoint(x: 5.69, y: 38.93))
        bezier28Path.addLine(to: CGPoint(x: 5.72, y: 38.04))
        bezier28Path.addLine(to: CGPoint(x: 5.75, y: 37.75))
        bezier28Path.addLine(to: CGPoint(x: 5.84, y: 37.04))
        bezier28Path.addLine(to: CGPoint(x: 5.86, y: 36.9))
        bezier28Path.addLine(to: CGPoint(x: 6.02, y: 36.08))
        bezier28Path.addLine(to: CGPoint(x: 6.13, y: 35.66))
        bezier28Path.addLine(to: CGPoint(x: 6.28, y: 35.08))
        bezier28Path.addLine(to: CGPoint(x: 6.38, y: 34.75))
        bezier28Path.addLine(to: CGPoint(x: 6.6, y: 34.1))
        bezier28Path.addLine(to: CGPoint(x: 6.7, y: 33.83))
        bezier28Path.addLine(to: CGPoint(x: 7.06, y: 32.94))
        bezier28Path.addLine(to: CGPoint(x: 7.1, y: 32.84))
        bezier28Path.addLine(to: CGPoint(x: 7.48, y: 32.06))
        bezier28Path.addLine(to: CGPoint(x: 7.61, y: 31.81))
        bezier28Path.addLine(to: CGPoint(x: 8, y: 31.09))
        bezier28Path.addLine(to: CGPoint(x: 8.08, y: 30.94))
        bezier28Path.addLine(to: CGPoint(x: 8.6, y: 30.11))
        bezier28Path.addLine(to: CGPoint(x: 8.75, y: 29.88))
        bezier28Path.addLine(to: CGPoint(x: 9.16, y: 29.3))
        bezier28Path.addLine(to: CGPoint(x: 9.39, y: 28.99))
        bezier28Path.addLine(to: CGPoint(x: 9.76, y: 28.52))
        bezier28Path.addLine(to: CGPoint(x: 10.08, y: 28.14))
        bezier28Path.addLine(to: CGPoint(x: 10.65, y: 27.49))
        bezier28Path.addLine(to: CGPoint(x: 10.66, y: 27.48))
        bezier28Path.addLine(to: CGPoint(x: 11.28, y: 26.87))
        bezier28Path.addLine(to: CGPoint(x: 11.55, y: 26.62))
        bezier28Path.addLine(to: CGPoint(x: 12.02, y: 26.21))
        bezier28Path.addLine(to: CGPoint(x: 12.3, y: 25.99))
        bezier28Path.addLine(to: CGPoint(x: 12.81, y: 25.6))
        bezier28Path.addLine(to: CGPoint(x: 13.06, y: 25.42))
        bezier28Path.addLine(to: CGPoint(x: 13.83, y: 24.93))
        bezier28Path.addLine(to: CGPoint(x: 49.72, y: 4.39))
        bezier28Path.addLine(to: CGPoint(x: 50.24, y: 4.11))
        bezier28Path.addLine(to: CGPoint(x: 50.38, y: 4.04))
        bezier28Path.close()
        primary.setFill()
        bezier28Path.fill()


        //// Oval 4 Drawing
        context.saveGState()
        context.translateBy(x: 31.75, y: 46.46)
        context.rotate(by: 30.2 * CGFloat.pi/180)

        let oval4Path = UIBezierPath(ovalIn: CGRect(x: -13.95, y: -23.94, width: 27.9, height: 47.87))
        context.saveGState()
        oval4Path.addClip()
        context.drawRadialGradient(discCircle1,
            startCenter: CGPoint(x: -0, y: -0), startRadius: 8.27,
            endCenter: CGPoint(x: -0, y: -0), endRadius: 24.82,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// layer_1_10
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 688.82, y: 345))
        bezierPath.addLine(to: CGPoint(x: 721.82, y: 272))
        bezierPath.addLine(to: CGPoint(x: 1161.82, y: 341))
        bezierPath.addLine(to: CGPoint(x: 1131.82, y: 419))
        bezierPath.addLine(to: CGPoint(x: 688.82, y: 345))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(wings, start: CGPoint(x: 1161.82, y: 345.5), end: CGPoint(x: 688.82, y: 345.5), options: [])
        context.restoreGState()


        //// plate 3
        context.saveGState()
        context.translateBy(x: (plate3ExprX - 123.719582702), y: (plate3ExprY - 9.0390625))



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 110.02, y: 41.69))
        bezier4Path.addCurve(to: CGPoint(x: 108.3, y: 34.09), controlPoint1: CGPoint(x: 110.06, y: 41.12), controlPoint2: CGPoint(x: 108.3, y: 34.09))
        bezier4Path.addCurve(to: CGPoint(x: 99.94, y: 28.12), controlPoint1: CGPoint(x: 106.54, y: 30.99), controlPoint2: CGPoint(x: 103.6, y: 28.68))
        bezier4Path.addLine(to: CGPoint(x: 36.77, y: 18.49))
        bezier4Path.addCurve(to: CGPoint(x: 24.61, y: 25.6), controlPoint1: CGPoint(x: 31.74, y: 17.72), controlPoint2: CGPoint(x: 26.83, y: 20.6))
        bezier4Path.addLine(to: CGPoint(x: 4.85, y: 70.2))
        bezier4Path.addLine(to: CGPoint(x: 2.54, y: 80.29))
        bezier4Path.addLine(to: CGPoint(x: 2.72, y: 80.58))
        bezier4Path.addCurve(to: CGPoint(x: 12.39, y: 91.03), controlPoint1: CGPoint(x: 3.55, y: 85.71), controlPoint2: CGPoint(x: 7.21, y: 90.11))
        bezier4Path.addLine(to: CGPoint(x: 76.92, y: 102.47))
        bezier4Path.addCurve(to: CGPoint(x: 89.53, y: 94.94), controlPoint1: CGPoint(x: 82.2, y: 103.41), controlPoint2: CGPoint(x: 87.38, y: 100.31))
        bezier4Path.addLine(to: CGPoint(x: 109.06, y: 45.99))
        bezier4Path.addCurve(to: CGPoint(x: 109.76, y: 43.67), controlPoint1: CGPoint(x: 109.37, y: 45.23), controlPoint2: CGPoint(x: 109.6, y: 44.45))
        bezier4Path.addLine(to: CGPoint(x: 110.02, y: 43.18))
        bezier4Path.addLine(to: CGPoint(x: 110.02, y: 41.69))
        bezier4Path.close()
        darkPrimary.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 1.17, y: 50.39))
        bezier5Path.addLine(to: CGPoint(x: 21.75, y: 6.71))
        bezier5Path.addCurve(to: CGPoint(x: 33.73, y: 0.11), controlPoint1: CGPoint(x: 23.94, y: 2.06), controlPoint2: CGPoint(x: 28.78, y: -0.6))
        bezier5Path.addLine(to: CGPoint(x: 95.98, y: 9.04))
        bezier5Path.addCurve(to: CGPoint(x: 104.97, y: 25.6), controlPoint1: CGPoint(x: 103.56, y: 10.12), controlPoint2: CGPoint(x: 108.03, y: 18.37))
        bezier5Path.addLine(to: CGPoint(x: 85.72, y: 70.97))
        bezier5Path.addCurve(to: CGPoint(x: 73.29, y: 77.96), controlPoint1: CGPoint(x: 83.61, y: 75.95), controlPoint2: CGPoint(x: 78.5, y: 78.82))
        bezier5Path.addLine(to: CGPoint(x: 9.71, y: 67.35))
        bezier5Path.addCurve(to: CGPoint(x: 1.17, y: 50.39), controlPoint1: CGPoint(x: 2.08, y: 66.08), controlPoint2: CGPoint(x: -2.21, y: 57.57))
        bezier5Path.close()
        primary.setFill()
        bezier5Path.fill()



        context.restoreGState()


        //// plate 2
        context.saveGState()
        context.translateBy(x: (plate2ExprX - 123.719582702), y: (plate2ExprY - 9.0390625))



        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 107.84, y: 39.16))
        bezier2Path.addCurve(to: CGPoint(x: 106.12, y: 31.7), controlPoint1: CGPoint(x: 107.88, y: 38.6), controlPoint2: CGPoint(x: 106.12, y: 31.7))
        bezier2Path.addCurve(to: CGPoint(x: 97.76, y: 25.83), controlPoint1: CGPoint(x: 104.36, y: 28.65), controlPoint2: CGPoint(x: 101.42, y: 26.38))
        bezier2Path.addLine(to: CGPoint(x: 34.59, y: 16.38))
        bezier2Path.addCurve(to: CGPoint(x: 22.43, y: 23.36), controlPoint1: CGPoint(x: 29.56, y: 15.62), controlPoint2: CGPoint(x: 24.65, y: 18.45))
        bezier2Path.addLine(to: CGPoint(x: 2.67, y: 67.15))
        bezier2Path.addLine(to: CGPoint(x: 0.36, y: 77.05))
        bezier2Path.addLine(to: CGPoint(x: 0.54, y: 77.34))
        bezier2Path.addCurve(to: CGPoint(x: 10.21, y: 87.6), controlPoint1: CGPoint(x: 1.37, y: 82.38), controlPoint2: CGPoint(x: 5.03, y: 86.7))
        bezier2Path.addLine(to: CGPoint(x: 74.74, y: 98.84))
        bezier2Path.addCurve(to: CGPoint(x: 87.35, y: 91.44), controlPoint1: CGPoint(x: 80.02, y: 99.76), controlPoint2: CGPoint(x: 85.2, y: 96.71))
        bezier2Path.addLine(to: CGPoint(x: 106.88, y: 43.38))
        bezier2Path.addCurve(to: CGPoint(x: 107.58, y: 41.1), controlPoint1: CGPoint(x: 107.19, y: 42.63), controlPoint2: CGPoint(x: 107.42, y: 41.87))
        bezier2Path.addLine(to: CGPoint(x: 107.84, y: 40.62))
        bezier2Path.addLine(to: CGPoint(x: 107.84, y: 39.16))
        bezier2Path.close()
        darkPrimary.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 1.17, y: 49.03))
        bezier3Path.addLine(to: CGPoint(x: 21.75, y: 6.53))
        bezier3Path.addCurve(to: CGPoint(x: 33.73, y: 0.11), controlPoint1: CGPoint(x: 23.94, y: 2.01), controlPoint2: CGPoint(x: 28.78, y: -0.58))
        bezier3Path.addLine(to: CGPoint(x: 95.98, y: 8.79))
        bezier3Path.addCurve(to: CGPoint(x: 104.97, y: 24.91), controlPoint1: CGPoint(x: 103.56, y: 9.85), controlPoint2: CGPoint(x: 108.03, y: 17.88))
        bezier3Path.addLine(to: CGPoint(x: 85.72, y: 69.06))
        bezier3Path.addCurve(to: CGPoint(x: 73.29, y: 75.85), controlPoint1: CGPoint(x: 83.61, y: 73.9), controlPoint2: CGPoint(x: 78.5, y: 76.69))
        bezier3Path.addLine(to: CGPoint(x: 9.71, y: 65.53))
        bezier3Path.addCurve(to: CGPoint(x: 1.17, y: 49.03), controlPoint1: CGPoint(x: 2.08, y: 64.29), controlPoint2: CGPoint(x: -2.21, y: 56.02))
        bezier3Path.close()
        context.saveGState()
        bezier3Path.addClip()
        context.drawLinearGradient(wingPlastine, start: CGPoint(x: 91.06, y: 0.58), end: CGPoint(x: 16.37, y: 75.27), options: [])
        context.restoreGState()



        context.restoreGState()


        //// plate 1
        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 825.66, y: 302.58))
        bezier6Path.addCurve(to: CGPoint(x: 823.94, y: 294.98), controlPoint1: CGPoint(x: 825.7, y: 302.01), controlPoint2: CGPoint(x: 823.94, y: 294.98))
        bezier6Path.addCurve(to: CGPoint(x: 815.58, y: 289.01), controlPoint1: CGPoint(x: 822.18, y: 291.88), controlPoint2: CGPoint(x: 819.24, y: 289.57))
        bezier6Path.addLine(to: CGPoint(x: 752.41, y: 279.38))
        bezier6Path.addCurve(to: CGPoint(x: 740.25, y: 286.49), controlPoint1: CGPoint(x: 747.38, y: 278.61), controlPoint2: CGPoint(x: 742.47, y: 281.49))
        bezier6Path.addLine(to: CGPoint(x: 720.49, y: 331.09))
        bezier6Path.addLine(to: CGPoint(x: 718.18, y: 341.17))
        bezier6Path.addLine(to: CGPoint(x: 718.36, y: 341.47))
        bezier6Path.addCurve(to: CGPoint(x: 728.03, y: 351.92), controlPoint1: CGPoint(x: 719.19, y: 346.6), controlPoint2: CGPoint(x: 722.85, y: 351))
        bezier6Path.addLine(to: CGPoint(x: 792.56, y: 363.36))
        bezier6Path.addCurve(to: CGPoint(x: 805.17, y: 355.83), controlPoint1: CGPoint(x: 797.84, y: 364.3), controlPoint2: CGPoint(x: 803.02, y: 361.2))
        bezier6Path.addLine(to: CGPoint(x: 824.7, y: 306.88))
        bezier6Path.addCurve(to: CGPoint(x: 825.4, y: 304.56), controlPoint1: CGPoint(x: 825.01, y: 306.11), controlPoint2: CGPoint(x: 825.24, y: 305.34))
        bezier6Path.addLine(to: CGPoint(x: 825.66, y: 304.07))
        bezier6Path.addLine(to: CGPoint(x: 825.66, y: 302.58))
        bezier6Path.close()
        darkPrimary.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 717, y: 314.68))
        bezier7Path.addLine(to: CGPoint(x: 737.78, y: 271.61))
        bezier7Path.addCurve(to: CGPoint(x: 749.87, y: 265.11), controlPoint1: CGPoint(x: 739.99, y: 267.03), controlPoint2: CGPoint(x: 744.87, y: 264.41))
        bezier7Path.addLine(to: CGPoint(x: 812.7, y: 273.91))
        bezier7Path.addCurve(to: CGPoint(x: 821.78, y: 290.24), controlPoint1: CGPoint(x: 820.35, y: 274.98), controlPoint2: CGPoint(x: 824.87, y: 283.11))
        bezier7Path.addLine(to: CGPoint(x: 802.35, y: 334.97))
        bezier7Path.addCurve(to: CGPoint(x: 789.8, y: 341.85), controlPoint1: CGPoint(x: 800.22, y: 339.87), controlPoint2: CGPoint(x: 795.06, y: 342.7))
        bezier7Path.addLine(to: CGPoint(x: 725.63, y: 331.39))
        bezier7Path.addCurve(to: CGPoint(x: 717, y: 314.68), controlPoint1: CGPoint(x: 717.92, y: 330.14), controlPoint2: CGPoint(x: 713.59, y: 321.75))
        bezier7Path.close()
        context.saveGState()
        bezier7Path.addClip()
        context.drawLinearGradient(wingPlastine2, start: CGPoint(x: 807.79, y: 265.68), end: CGPoint(x: 732.3, y: 341.17), options: [])
        context.restoreGState()






        //// layer_1_9 Drawing
        context.saveGState()
        context.setAlpha(0.2)

        let layer_1_9Path = UIBezierPath()
        layer_1_9Path.move(to: CGPoint(x: 649.8, y: 449.01))
        layer_1_9Path.addCurve(to: CGPoint(x: 626.22, y: 471.66), controlPoint1: CGPoint(x: 649.43, y: 452.38), controlPoint2: CGPoint(x: 642, y: 454.14))
        layer_1_9Path.addCurve(to: CGPoint(x: 569.39, y: 484.98), controlPoint1: CGPoint(x: 620.95, y: 477.52), controlPoint2: CGPoint(x: 598.66, y: 486.56))
        layer_1_9Path.addCurve(to: CGPoint(x: 500.8, y: 479.66), controlPoint1: CGPoint(x: 535.39, y: 483.15), controlPoint2: CGPoint(x: 500.8, y: 479.66))
        layer_1_9Path.addLine(to: CGPoint(x: 764.27, y: 551.54))
        layer_1_9Path.addCurve(to: CGPoint(x: 788.18, y: 465.14), controlPoint1: CGPoint(x: 764.27, y: 551.54), controlPoint2: CGPoint(x: 796.98, y: 507.56))
        layer_1_9Path.addCurve(to: CGPoint(x: 706.92, y: 382.84), controlPoint1: CGPoint(x: 779.39, y: 422.72), controlPoint2: CGPoint(x: 706.92, y: 382.84))
        layer_1_9Path.addLine(to: CGPoint(x: 685.16, y: 393.75))
        layer_1_9Path.addLine(to: CGPoint(x: 673.67, y: 434.26))
        layer_1_9Path.addCurve(to: CGPoint(x: 649.41, y: 438.44), controlPoint1: CGPoint(x: 673.67, y: 434.26), controlPoint2: CGPoint(x: 646.97, y: 432.71))
        layer_1_9Path.addCurve(to: CGPoint(x: 649.8, y: 449.01), controlPoint1: CGPoint(x: 650.69, y: 441.44), controlPoint2: CGPoint(x: 650.21, y: 445.31))
        layer_1_9Path.close()
        background.setFill()
        layer_1_9Path.fill()

        context.restoreGState()


        //// layer_1_8 Drawing
        context.saveGState()
        context.setAlpha(0.3)

        let layer_1_8Path = UIBezierPath()
        layer_1_8Path.move(to: CGPoint(x: 630.69, y: 211.51))
        layer_1_8Path.addCurve(to: CGPoint(x: 611.11, y: 176.21), controlPoint1: CGPoint(x: 637.34, y: 198.48), controlPoint2: CGPoint(x: 611.11, y: 176.21))
        layer_1_8Path.addLine(to: CGPoint(x: 689.9, y: 184.14))
        layer_1_8Path.addLine(to: CGPoint(x: 654.68, y: 257.14))
        layer_1_8Path.addLine(to: CGPoint(x: 593.49, y: 240.83))
        layer_1_8Path.addCurve(to: CGPoint(x: 630.69, y: 211.51), controlPoint1: CGPoint(x: 593.49, y: 240.83), controlPoint2: CGPoint(x: 624.03, y: 224.53))
        layer_1_8Path.close()
        background.setFill()
        layer_1_8Path.fill()

        context.restoreGState()


        //// layer_1_7 Drawing
        context.saveGState()
        context.setAlpha(button1Opacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let layer_1_7Path = UIBezierPath(ovalIn: CGRect(x: 474.82, y: 672, width: 5, height: 7))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: (shadow3.shadowColor as! UIColor).cgColor)
        primary.setFill()
        layer_1_7Path.fill()
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_5
        context.saveGState()
        context.setAlpha(towerLightOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Rectangle 3 Drawing
        context.saveGState()
        context.translateBy(x: 555.82, y: 375.07)
        context.rotate(by: -9 * CGFloat.pi/180)

        let rectangle3Path = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 105, height: 1.5))
        context.saveGState()
        context.setShadow(offset: CGSize(width: cubeShadow.shadowOffset.width * resizedShadowScale, height: cubeShadow.shadowOffset.height * resizedShadowScale), blur: cubeShadow.shadowBlurRadius * resizedShadowScale, color: (cubeShadow.shadowColor as! UIColor).cgColor)
        SpaceshipScreen.cubeConture.setFill()
        rectangle3Path.fill()
        context.restoreGState()


        context.restoreGState()


        //// Bezier 77 Drawing
        let bezier77Path = UIBezierPath()
        bezier77Path.move(to: CGPoint(x: 555.32, y: 378.5))
        bezier77Path.addLine(to: CGPoint(x: 664.32, y: 360.5))
        bezier77Path.addLine(to: CGPoint(x: 749.32, y: 496.5))
        bezier77Path.addLine(to: CGPoint(x: 670.32, y: 520.5))
        bezier77Path.addLine(to: CGPoint(x: 555.32, y: 378.5))
        bezier77Path.close()
        context.saveGState()
        bezier77Path.addClip()
        context.drawLinearGradient(spaceshipLight2, start: CGPoint(x: 652.32, y: 360.5), end: CGPoint(x: 652.32, y: 520.5), options: [])
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_4 Drawing
        context.saveGState()
        context.setAlpha(0.3)

        let layer_1_4Path = UIBezierPath()
        layer_1_4Path.move(to: CGPoint(x: 721.82, y: 272))
        layer_1_4Path.addLine(to: CGPoint(x: 977.82, y: 290))
        layer_1_4Path.addLine(to: CGPoint(x: 924.82, y: 390))
        layer_1_4Path.addLine(to: CGPoint(x: 688.82, y: 345))
        layer_1_4Path.addLine(to: CGPoint(x: 721.82, y: 272))
        layer_1_4Path.close()
        background.setFill()
        layer_1_4Path.fill()

        context.restoreGState()


        //// layer_1_3
        //// hole_lighting_1 Drawing
        context.saveGState()
        context.setAlpha(discPassLight1)

        let hole_lighting_1Path = UIBezierPath()
        hole_lighting_1Path.move(to: CGPoint(x: 478.82, y: 257))
        hole_lighting_1Path.addLine(to: CGPoint(x: 467.82, y: 304))
        hole_lighting_1Path.addLine(to: CGPoint(x: 503.82, y: 323))
        hole_lighting_1Path.addLine(to: CGPoint(x: 503.32, y: 335.5))
        hole_lighting_1Path.addLine(to: CGPoint(x: 518.82, y: 304))
        hole_lighting_1Path.addLine(to: CGPoint(x: 478.82, y: 257))
        hole_lighting_1Path.close()
        context.saveGState()
        hole_lighting_1Path.addClip()
        context.drawLinearGradient(spaceshipLight6, start: CGPoint(x: 517.48, y: 319.21), end: CGPoint(x: 464.66, y: 273.29), options: [])
        context.restoreGState()

        context.restoreGState()


        //// hole_lighting_2 Drawing
        context.saveGState()
        context.setAlpha(discPassLight2)

        let hole_lighting_2Path = UIBezierPath()
        hole_lighting_2Path.move(to: CGPoint(x: 457.82, y: 242))
        hole_lighting_2Path.addLine(to: CGPoint(x: 446.82, y: 289))
        hole_lighting_2Path.addLine(to: CGPoint(x: 482.82, y: 308))
        hole_lighting_2Path.addLine(to: CGPoint(x: 482.32, y: 320.5))
        hole_lighting_2Path.addLine(to: CGPoint(x: 497.82, y: 289))
        hole_lighting_2Path.addLine(to: CGPoint(x: 457.82, y: 242))
        hole_lighting_2Path.close()
        context.saveGState()
        hole_lighting_2Path.addClip()
        context.drawLinearGradient(spaceshipLight6, start: CGPoint(x: 496.48, y: 304.21), end: CGPoint(x: 443.66, y: 258.29), options: [])
        context.restoreGState()

        context.restoreGState()


        //// hole_lighting_3 Drawing
        context.saveGState()
        context.setAlpha(discPassLight3)

        let hole_lighting_3Path = UIBezierPath()
        hole_lighting_3Path.move(to: CGPoint(x: 436.82, y: 230))
        hole_lighting_3Path.addLine(to: CGPoint(x: 425.82, y: 277))
        hole_lighting_3Path.addLine(to: CGPoint(x: 461.82, y: 296))
        hole_lighting_3Path.addLine(to: CGPoint(x: 461.32, y: 308.5))
        hole_lighting_3Path.addLine(to: CGPoint(x: 476.82, y: 277))
        hole_lighting_3Path.addLine(to: CGPoint(x: 436.82, y: 230))
        hole_lighting_3Path.close()
        context.saveGState()
        hole_lighting_3Path.addClip()
        context.drawLinearGradient(spaceshipLight6, start: CGPoint(x: 475.48, y: 292.21), end: CGPoint(x: 422.66, y: 246.29), options: [])
        context.restoreGState()

        context.restoreGState()


        //// hole_lighting_4 Drawing
        context.saveGState()
        context.setAlpha(discPassLight4)

        let hole_lighting_4Path = UIBezierPath()
        hole_lighting_4Path.move(to: CGPoint(x: 415.82, y: 218))
        hole_lighting_4Path.addLine(to: CGPoint(x: 404.82, y: 265))
        hole_lighting_4Path.addLine(to: CGPoint(x: 440.82, y: 284))
        hole_lighting_4Path.addLine(to: CGPoint(x: 440.32, y: 296.5))
        hole_lighting_4Path.addLine(to: CGPoint(x: 455.82, y: 265))
        hole_lighting_4Path.addLine(to: CGPoint(x: 415.82, y: 218))
        hole_lighting_4Path.close()
        context.saveGState()
        hole_lighting_4Path.addClip()
        context.drawLinearGradient(spaceshipLight6, start: CGPoint(x: 454.48, y: 280.21), end: CGPoint(x: 401.66, y: 234.29), options: [])
        context.restoreGState()

        context.restoreGState()




        //// layer_1_2 Drawing
        context.saveGState()
        context.translateBy(x: 691.26, y: 330.54)
        context.rotate(by: 15.5 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(button1Opacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let layer_1_2Path = UIBezierPath(ovalIn: CGRect(x: -2.5, y: -3.5, width: 5, height: 7))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: (shadow3.shadowColor as! UIColor).cgColor)
        primary.setFill()
        layer_1_2Path.fill()
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()

        context.restoreGState()


        //// layer_1_1
        //// Group 15
        context.saveGState()
        context.translateBy(x: 719.66, y: 177.86)
        context.rotate(by: -antennaRotationPhase1 * CGFloat.pi/180)



        //// Group 16
        context.saveGState()
        context.translateBy(x: -0.07, y: 48.2)
        context.rotate(by: -antennaRotationPhase2 * CGFloat.pi/180)



        //// Rectangle 2 Drawing
        context.saveGState()
        context.translateBy(x: 0.63, y: -50)

        let rectangle2Path = UIBezierPath(rect: CGRect(x: -1, y: 0, width: 1, height: 50))
        fillColor10.setFill()
        rectangle2Path.fill()

        context.restoreGState()


        //// Tip Drawing
        context.saveGState()
        context.translateBy(x: 0.62, y: -47)
        context.rotate(by: 180 * CGFloat.pi/180)

        let tipPath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 1, height: 3))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: (shadow3.shadowColor as! UIColor).cgColor)
        primary.setFill()
        tipPath.fill()

        ////// Tip Inner Shadow
        context.saveGState()
        context.clip(to: tipPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((shadow3.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let tipOpaqueShadow = (shadow3.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: tipOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        tipOpaqueShadow.setFill()
        tipPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()

        context.restoreGState()


        context.restoreGState()


        //// Oval 10 Drawing
        context.saveGState()
        context.setAlpha(button1Opacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let oval10Path = UIBezierPath(ovalIn: CGRect(x: -5.59, y: -54.29, width: 12, height: 11))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: (shadow3.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        oval10Path.addClip()
        context.drawRadialGradient(spaceshipLight,
            startCenter: CGPoint(x: 0.28, y: -48.89), startRadius: 4.34,
            endCenter: CGPoint(x: 2.45, y: -47.43), endRadius: 5.48,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.endTransparencyLayer()

        ////// Oval 10 Inner Shadow
        context.saveGState()
        context.clip(to: oval10Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((shadow3.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let oval10OpaqueShadow = (shadow3.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: shadow3.shadowOffset.width * resizedShadowScale, height: shadow3.shadowOffset.height * resizedShadowScale), blur: shadow3.shadowBlurRadius * resizedShadowScale, color: oval10OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        oval10OpaqueShadow.setFill()
        oval10Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()

        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()



        context.restoreGState()


        //// Rectangle 4 Drawing
        context.saveGState()
        context.translateBy(x: -0.21, y: 48.17)

        let rectangle4Path = UIBezierPath(rect: CGRect(x: -0.74, y: -49.99, width: 1.5, height: 50))
        fillColor10.setFill()
        rectangle4Path.fill()

        context.restoreGState()


        //// Oval 7 Drawing
        let oval7Path = UIBezierPath(ovalIn: CGRect(x: -2.21, y: -1.8, width: 4.15, height: 4))
        fillColor10.setFill()
        oval7Path.fill()


        //// Oval 8 Drawing
        let oval8Path = UIBezierPath(ovalIn: CGRect(x: -1.75, y: 47.19, width: 3.15, height: 3.31))
        fillColor10.setFill()
        oval8Path.fill()



        context.restoreGState()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 718.82, y: 178, width: 2, height: 50))
        fillColor10.setFill()
        rectanglePath.fill()


        //// Oval 9 Drawing
        let oval9Path = UIBezierPath(ovalIn: CGRect(x: 715.22, y: 225.98, width: 9, height: 4.39))
        spaceshipLightColor.setFill()
        oval9Path.fill()





        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawSpaceshipDiscreteAnimationLayer2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 375, height: 812), resizing: ResizingBehavior = .aspectFit, circlesMove: CGFloat = 1, circlesLight: CGFloat = 1, discPathsSmoothAnimation: CGFloat = 0, discPathOpacityOffset: CGFloat = 0.1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 375, height: 812), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 375, y: resizedFrame.height / 812)


        //// Color Declarations
        let discPathColor2 = UIColor(red: 0.686, green: 0.022, blue: 0.958, alpha: 0.003)
        let discPathColor = UIColor(red: 0.883, green: 0.075, blue: 0.251, alpha: 0.395)
        let background = UIColor(red: 0.047, green: 0.049, blue: 0.299, alpha: 1.000)
        let primary = UIColor(red: 0.000, green: 0.902, blue: 0.922, alpha: 1.000)
        let spaceshipLight3Color = UIColor(red: 0.000, green: 0.941, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let discPath = CGGradient(colorsSpace: nil, colors: [discPathColor.cgColor, discPathColor2.cgColor] as CFArray, locations: [0, 1])!
        let spaceship_light_3 = CGGradient(colorsSpace: nil, colors: [spaceshipLight3Color.cgColor, spaceshipLight3Color.blended(withFraction: 0.5, of: UIColor.clear).cgColor, UIColor.clear.cgColor] as CFArray, locations: [0, 0.49, 0.86])!
        let clear_color = CGGradient(colorsSpace: nil, colors: [UIColor.clear.cgColor, UIColor.clear.cgColor] as CFArray, locations: [0, 1])!

        //// Variable Declarations
        let bigCircleExprY: CGFloat = 700 * circlesMove + 600 * (1 - circlesMove)
        let midCircle2ExprY: CGFloat = 740 * circlesMove + 810 * (1 - circlesMove)
        let circleLight1 = circlesLight > 0.01 && circlesLight <= 0.2 ? primary : background
        let circleLight2 = circlesLight > 0.2 && circlesLight <= 0.4 ? primary : background
        let circleLight3 = circlesLight > 0.4 && circlesLight <= 0.6 ? primary : background
        let circleLight4 = circlesLight > 0.6 && circlesLight <= 0.8 ? primary : background
        let circleLight5 = circlesLight > 0.8 && circlesLight <= 0.99 ? primary : background
        let circleLightGlow4 = circlesLight > 0.6 && circlesLight <= 0.8 ? spaceship_light_3 : clear_color
        let circleLightGlow5 = circlesLight > 0.4 && circlesLight <= 0.6 ? spaceship_light_3 : clear_color
        let circleLightGlow2 = circlesLight > 0.2 && circlesLight <= 0.4 ? spaceship_light_3 : clear_color
        let circleLightGlow1 = circlesLight > 0.01 && circlesLight <= 0.2 ? spaceship_light_3 : clear_color
        let circleLightGlow3 = circlesLight > 0.8 && circlesLight <= 0.99 ? spaceship_light_3 : clear_color
        let smallLights = circlesLight > 0 && circlesLight <= 0.5 ? primary : background
        let smallLightsGlow = circlesLight > 0 && circlesLight <= 0.5 ? spaceship_light_3 : clear_color
        let disc1PathOpacityExpr: CGFloat = discPathsSmoothAnimation < 0.1 ? discPathsSmoothAnimation * 20 : (discPathsSmoothAnimation > 0.5 - discPathOpacityOffset && discPathsSmoothAnimation <= 0.6 - discPathOpacityOffset ? (0.6 - discPathOpacityOffset - discPathsSmoothAnimation) * 20 : (discPathsSmoothAnimation > 0.6 - discPathOpacityOffset ? 0 : 1))
        let disc2PathOpacityExpr: CGFloat = discPathsSmoothAnimation < 0.2 || discPathsSmoothAnimation > 0.7 - discPathOpacityOffset ? 0 : (discPathsSmoothAnimation > 0.1 && discPathsSmoothAnimation <= 0.2 ? (discPathsSmoothAnimation - 0.1) * 20 : (discPathsSmoothAnimation > 0.6 - discPathOpacityOffset && discPathsSmoothAnimation <= 0.7 - discPathOpacityOffset ? (0.7 - discPathOpacityOffset - discPathsSmoothAnimation) * 20 : 1))
        let disc3PathOpacityExpr: CGFloat = discPathsSmoothAnimation < 0.3 || discPathsSmoothAnimation > 0.8 - discPathOpacityOffset ? 0 : (discPathsSmoothAnimation > 0.2 && discPathsSmoothAnimation <= 0.3 ? (discPathsSmoothAnimation - 0.2) * 20 : (discPathsSmoothAnimation > 0.7 - discPathOpacityOffset && discPathsSmoothAnimation <= 0.8 - discPathOpacityOffset ? (0.8 - discPathOpacityOffset - discPathsSmoothAnimation) * 20 : 1))
        let disc4PathOpacityExpr: CGFloat = discPathsSmoothAnimation < 0.4 || discPathsSmoothAnimation > 0.9 - discPathOpacityOffset ? 0 : (discPathsSmoothAnimation > 0.3 && discPathsSmoothAnimation <= 0.4 ? (discPathsSmoothAnimation - 0.3) * 20 : (discPathsSmoothAnimation > 0.8 - discPathOpacityOffset && discPathsSmoothAnimation <= 0.9 - discPathOpacityOffset ? (0.9 - discPathOpacityOffset - discPathsSmoothAnimation) * 20 : 1))

        //// Group 7
        context.saveGState()
        context.translateBy(x: 69, y: 49)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 3
        context.saveGState()
        context.translateBy(x: 383.79, y: (midCircle2ExprY + 85.1586652334))



        //// Oval 14 Drawing
        let oval14Path = UIBezierPath(ovalIn: CGRect(x: 179.94, y: 99.8, width: 6, height: 4.72))
        smallLights.setFill()
        oval14Path.fill()


        //// Oval 15 Drawing
        context.saveGState()
        context.translateBy(x: 108.21, y: 91.03)
        context.rotate(by: 8 * CGFloat.pi/180)

        let oval15Path = UIBezierPath(ovalIn: CGRect(x: -3.14, y: -2.38, width: 6, height: 4.46))
        smallLights.setFill()
        oval15Path.fill()

        context.restoreGState()


        //// Oval 16 Drawing
        context.saveGState()
        context.translateBy(x: 60.21, y: 67.82)
        context.rotate(by: 25 * CGFloat.pi/180)

        let oval16Path = UIBezierPath(ovalIn: CGRect(x: -3.03, y: -2.4, width: 6, height: 4.65))
        smallLights.setFill()
        oval16Path.fill()

        context.restoreGState()


        //// Oval 17 Drawing
        context.saveGState()
        context.translateBy(x: 32.04, y: 34.84)
        context.rotate(by: 65.5 * CGFloat.pi/180)

        let oval17Path = UIBezierPath(ovalIn: CGRect(x: -2.87, y: -1.66, width: 6, height: 3.18))
        smallLights.setFill()
        oval17Path.fill()

        context.restoreGState()


        //// Oval 18 Drawing
        context.saveGState()
        context.translateBy(x: 255.83, y: 92.55)
        context.rotate(by: -10.5 * CGFloat.pi/180)

        let oval18Path = UIBezierPath(ovalIn: CGRect(x: -3.04, y: -2.16, width: 6, height: 4.17))
        smallLights.setFill()
        oval18Path.fill()

        context.restoreGState()


        //// Oval 19 Drawing
        context.saveGState()
        context.translateBy(x: 310.02, y: 66.56)
        context.rotate(by: -34 * CGFloat.pi/180)

        let oval19Path = UIBezierPath(ovalIn: CGRect(x: -2.92, y: -2.1, width: 6, height: 3.85))
        smallLights.setFill()
        oval19Path.fill()

        context.restoreGState()


        //// Oval 20 Drawing
        context.saveGState()
        context.translateBy(x: 337.08, y: 33.27)
        context.rotate(by: -63.28 * CGFloat.pi/180)

        let oval20Path = UIBezierPath(ovalIn: CGRect(x: -3.16, y: -1.61, width: 6, height: 3.1))
        smallLights.setFill()
        oval20Path.fill()

        context.restoreGState()


        //// Glow 18 Drawing
        context.saveGState()
        context.translateBy(x: 231.6, y: 90.04)
        context.rotate(by: -18.61 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow18Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 55, height: 38.32))
        context.saveGState()
        glow18Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: 21.91, y: 13.06), startRadius: 4.44,
            endCenter: CGPoint(x: 23.76, y: 20.02), endRadius: 12.39,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 19 Drawing
        context.saveGState()
        context.translateBy(x: 285.65, y: 61.83)
        context.rotate(by: -18.61 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow19Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 55, height: 38.32))
        context.saveGState()
        glow19Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: 21.91, y: 13.06), startRadius: 2.97,
            endCenter: CGPoint(x: 23.76, y: 20.02), endRadius: 10.45,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 20 Drawing
        context.saveGState()
        context.translateBy(x: 338.17, y: 33.53)
        context.rotate(by: -50.11 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow20Path = UIBezierPath(ovalIn: CGRect(x: -21.86, y: -12.64, width: 55, height: 38.32))
        context.saveGState()
        glow20Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: 0.06, y: 0.43), startRadius: 2.97,
            endCenter: CGPoint(x: 1.91, y: 7.39), endRadius: 10.45,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 14 Drawing
        context.saveGState()
        context.translateBy(x: 188.86, y: 110.4)
        context.rotate(by: -0.61 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow14Path = UIBezierPath(ovalIn: CGRect(x: -28.11, y: -19.66, width: 55, height: 38.32))
        context.saveGState()
        glow14Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: -6.2, y: -6.6), startRadius: 4.44,
            endCenter: CGPoint(x: -4.35, y: 0.36), endRadius: 12.39,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 15 Drawing
        context.saveGState()
        context.translateBy(x: 108.55, y: 102.19)
        context.rotate(by: 35.89 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow15Path = UIBezierPath(ovalIn: CGRect(x: -28.11, y: -19.66, width: 55, height: 38.32))
        context.saveGState()
        glow15Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: -6.2, y: -6.6), startRadius: 4.44,
            endCenter: CGPoint(x: -4.35, y: 0.36), endRadius: 12.39,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 16 Drawing
        context.saveGState()
        context.translateBy(x: 58.03, y: 78.48)
        context.rotate(by: 47.39 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow16Path = UIBezierPath(ovalIn: CGRect(x: -28.11, y: -19.66, width: 55, height: 38.32))
        context.saveGState()
        glow16Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: -6.2, y: -6.6), startRadius: 4.44,
            endCenter: CGPoint(x: -4.35, y: 0.36), endRadius: 12.39,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 17 Drawing
        context.saveGState()
        context.translateBy(x: 23.93, y: 43.25)
        context.rotate(by: 78.39 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow17Path = UIBezierPath(ovalIn: CGRect(x: -28.11, y: -19.66, width: 55, height: 38.32))
        context.saveGState()
        glow17Path.addClip()
        context.drawRadialGradient(smallLightsGlow,
            startCenter: CGPoint(x: -6.2, y: -6.6), startRadius: 4.44,
            endCenter: CGPoint(x: -4.35, y: 0.36), endRadius: 12.39,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: 306.29, y: (bigCircleExprY + 209.663352932))



        //// Oval 13 Drawing
        context.saveGState()
        context.translateBy(x: 24.36, y: 30.51)
        context.rotate(by: 44.33 * CGFloat.pi/180)

        let oval13Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 20, height: 8))
        circleLight1.setFill()
        oval13Path.fill()

        context.restoreGState()


        //// Oval 12 Drawing
        context.saveGState()
        context.translateBy(x: 114.43, y: 84.2)
        context.rotate(by: 19.5 * CGFloat.pi/180)

        let oval12Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 24.26, height: 9.21))
        circleLight2.setFill()
        oval12Path.fill()

        context.restoreGState()


        //// Oval 11 Drawing
        context.saveGState()
        context.translateBy(x: 496.98, y: 29.52)
        context.rotate(by: -47.21 * CGFloat.pi/180)

        let oval11Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 20.97, height: 7.28))
        circleLight5.setFill()
        oval11Path.fill()

        context.restoreGState()


        //// Oval 5 Drawing
        let oval5Path = UIBezierPath(ovalIn: CGRect(x: 251.68, y: 107.5, width: 27, height: 10))
        circleLight3.setFill()
        oval5Path.fill()


        //// Oval 6 Drawing
        context.saveGState()
        context.translateBy(x: 399.59, y: 87.51)
        context.rotate(by: -21.21 * CGFloat.pi/180)

        let oval6Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 24, height: 9))
        circleLight4.setFill()
        oval6Path.fill()

        context.restoreGState()


        //// Glow 4 Drawing
        context.saveGState()
        context.translateBy(x: 389.71, y: 89.54)
        context.rotate(by: -18.61 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow4Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 55, height: 38.32))
        context.saveGState()
        glow4Path.addClip()
        context.drawRadialGradient(circleLightGlow4,
            startCenter: CGPoint(x: 21.91, y: 13.06), startRadius: 12.48,
            endCenter: CGPoint(x: 23.76, y: 20.02), endRadius: 31.68,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 5 Drawing
        context.saveGState()
        context.translateBy(x: 268.38, y: 114.64)

        context.saveGState()
        context.setAlpha(0.4)

        let glow5Path = UIBezierPath(ovalIn: CGRect(x: -29.54, y: -23.27, width: 54.85, height: 52.65))
        context.saveGState()
        glow5Path.addClip()
        context.drawRadialGradient(circleLightGlow5,
            startCenter: CGPoint(x: -5.39, y: 0.36), startRadius: 6.74,
            endCenter: CGPoint(x: -5.38, y: 8.59), endRadius: 28.63,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 12 Drawing
        context.saveGState()
        context.translateBy(x: 126.89, y: 94.62)

        context.saveGState()
        context.setAlpha(0.4)

        let glow12Path = UIBezierPath(ovalIn: CGRect(x: -29.54, y: -23.27, width: 54.85, height: 52.65))
        context.saveGState()
        glow12Path.addClip()
        context.drawRadialGradient(circleLightGlow2,
            startCenter: CGPoint(x: -5.39, y: 0.36), startRadius: 6.74,
            endCenter: CGPoint(x: -5.38, y: 8.59), endRadius: 28.63,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 13 Drawing
        context.saveGState()
        context.translateBy(x: 29.54, y: 42.25)

        context.saveGState()
        context.setAlpha(0.4)

        let glow13Path = UIBezierPath(ovalIn: CGRect(x: -29.54, y: -23.27, width: 54.85, height: 52.65))
        context.saveGState()
        glow13Path.addClip()
        context.drawRadialGradient(circleLightGlow1,
            startCenter: CGPoint(x: -5.39, y: 0.36), startRadius: 6.74,
            endCenter: CGPoint(x: -5.38, y: 8.59), endRadius: 28.63,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()


        //// Glow 11 Drawing
        context.saveGState()
        context.translateBy(x: 487.08, y: 36.56)
        context.rotate(by: -41.65 * CGFloat.pi/180)

        context.saveGState()
        context.setAlpha(0.4)

        let glow11Path = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 55, height: 38.32))
        context.saveGState()
        glow11Path.addClip()
        context.drawRadialGradient(circleLightGlow3,
            startCenter: CGPoint(x: 21.91, y: 13.06), startRadius: 12.48,
            endCenter: CGPoint(x: 23.76, y: 20.02), endRadius: 31.68,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()

        context.restoreGState()



        context.restoreGState()


        //// layer_1_19
        context.saveGState()
        context.setAlpha(disc4PathOpacityExpr)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: 116.64, y: 466.68))
        bezier17Path.addLine(to: CGPoint(x: 453.82, y: 265))
        bezier17Path.addLine(to: CGPoint(x: 437.82, y: 296))
        bezier17Path.addLine(to: CGPoint(x: 437.82, y: 334))
        bezier17Path.addLine(to: CGPoint(x: 116.64, y: 529.91))
        bezier17Path.addLine(to: CGPoint(x: 116.64, y: 466.68))
        context.saveGState()
        bezier17Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 285.23, y: 265), end: CGPoint(x: 285.23, y: 529.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier17Path.lineWidth = 0.1
        bezier17Path.stroke()


        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier18Path.lineWidth = 0.1
        bezier18Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_17
        context.saveGState()
        context.setAlpha(disc3PathOpacityExpr)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 21 Drawing
        let bezier21Path = UIBezierPath()
        bezier21Path.move(to: CGPoint(x: 138.64, y: 480.68))
        bezier21Path.addLine(to: CGPoint(x: 475.82, y: 279))
        bezier21Path.addLine(to: CGPoint(x: 459.82, y: 310))
        bezier21Path.addLine(to: CGPoint(x: 459.82, y: 348))
        bezier21Path.addLine(to: CGPoint(x: 138.64, y: 543.91))
        bezier21Path.addLine(to: CGPoint(x: 138.64, y: 480.68))
        context.saveGState()
        bezier21Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 307.23, y: 279), end: CGPoint(x: 307.23, y: 543.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier21Path.lineWidth = 0.1
        bezier21Path.stroke()


        //// Bezier 22 Drawing
        let bezier22Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier22Path.lineWidth = 0.1
        bezier22Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_15
        context.saveGState()
        context.setAlpha(disc2PathOpacityExpr)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 25 Drawing
        let bezier25Path = UIBezierPath()
        bezier25Path.move(to: CGPoint(x: 158.64, y: 495.68))
        bezier25Path.addLine(to: CGPoint(x: 495.82, y: 294))
        bezier25Path.addLine(to: CGPoint(x: 479.82, y: 325))
        bezier25Path.addLine(to: CGPoint(x: 479.82, y: 363))
        bezier25Path.addLine(to: CGPoint(x: 158.64, y: 558.91))
        bezier25Path.addLine(to: CGPoint(x: 158.64, y: 495.68))
        context.saveGState()
        bezier25Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 327.23, y: 294), end: CGPoint(x: 327.23, y: 558.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier25Path.lineWidth = 0.1
        bezier25Path.stroke()


        //// Bezier 26 Drawing
        let bezier26Path = UIBezierPath()
        UIColor.black.setStroke()
        bezier26Path.lineWidth = 0.1
        bezier26Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()


        //// layer_1_13
        context.saveGState()
        context.setAlpha(disc1PathOpacityExpr)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 29 Drawing
        let bezier29Path = UIBezierPath()
        bezier29Path.move(to: CGPoint(x: 181.64, y: 507.68))
        bezier29Path.addLine(to: CGPoint(x: 518.82, y: 306))
        bezier29Path.addLine(to: CGPoint(x: 502.82, y: 337))
        bezier29Path.addLine(to: CGPoint(x: 502.82, y: 375))
        bezier29Path.addLine(to: CGPoint(x: 181.64, y: 570.91))
        bezier29Path.addLine(to: CGPoint(x: 181.64, y: 511.4))
        bezier29Path.addLine(to: CGPoint(x: 181.64, y: 507.68))
        context.saveGState()
        bezier29Path.addClip()
        context.drawLinearGradient(discPath, start: CGPoint(x: 350.23, y: 306), end: CGPoint(x: 350.23, y: 570.91), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        bezier29Path.lineWidth = 0.1
        bezier29Path.stroke()


        context.endTransparencyLayer()
        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }




    @objc(SpaceshipScreenResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}



private extension UIColor {
    func blended(withFraction fraction: CGFloat, of color: UIColor) -> UIColor {
        var r1: CGFloat = 1, g1: CGFloat = 1, b1: CGFloat = 1, a1: CGFloat = 1
        var r2: CGFloat = 1, g2: CGFloat = 1, b2: CGFloat = 1, a2: CGFloat = 1

        self.getRed(&r1, green: &g1, blue: &b1, alpha: &a1)
        color.getRed(&r2, green: &g2, blue: &b2, alpha: &a2)

        return UIColor(red: r1 * (1 - fraction) + r2 * fraction,
            green: g1 * (1 - fraction) + g2 * fraction,
            blue: b1 * (1 - fraction) + b2 * fraction,
            alpha: a1 * (1 - fraction) + a2 * fraction);
    }
}
