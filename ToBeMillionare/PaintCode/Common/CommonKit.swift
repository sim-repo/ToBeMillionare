//
//  CommonKit.swift
//  ProjectName
//
//  Created by Igor Ivanov on 27.08.2020.
//  Copyright Â© 2020 None. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class CommonKit : NSObject {

    //// Cache

    private struct Cache {
        static let redMarkColor3: UIColor = UIColor(red: 0.843, green: 0.095, blue: 0.759, alpha: 0.500)
        static let gradientColor3: UIColor = UIColor(red: 0.071, green: 0.306, blue: 0.937, alpha: 1.000)
        static let markPGradientColor5: UIColor = UIColor(red: 0.988, green: 0.671, blue: 0.208, alpha: 0.500)
        static let markPGradientColor4: UIColor = UIColor(red: 0.843, green: 0.095, blue: 0.759, alpha: 0.500)
        static let gradientColor27: UIColor = UIColor(red: 0.154, green: 0.439, blue: 1.000, alpha: 1.000)
        static let gradientColor2: UIColor = UIColor(red: 0.870, green: 0.000, blue: 1.000, alpha: 1.000)
        static let gradientColor: UIColor = UIColor(red: 0.082, green: 0.627, blue: 1.000, alpha: 1.000)
        static let paint0_linear: CGGradient = CGGradient(colorsSpace: nil, colors: [CommonKit.gradientColor3.cgColor, CommonKit.gradientColor2.cgColor, CommonKit.gradientColor.cgColor] as CFArray, locations: [0, 0.5, 1])!
    }

    //// Colors

    @objc dynamic public class var redMarkColor3: UIColor { return Cache.redMarkColor3 }
    @objc dynamic public class var gradientColor3: UIColor { return Cache.gradientColor3 }
    @objc dynamic public class var markPGradientColor5: UIColor { return Cache.markPGradientColor5 }
    @objc dynamic public class var markPGradientColor4: UIColor { return Cache.markPGradientColor4 }
    @objc dynamic public class var gradientColor27: UIColor { return Cache.gradientColor27 }
    @objc dynamic public class var gradientColor2: UIColor { return Cache.gradientColor2 }
    @objc dynamic public class var gradientColor: UIColor { return Cache.gradientColor }

    //// Gradients

    @objc dynamic public class var paint0_linear: CGGradient { return Cache.paint0_linear }

    //// Drawing Methods

    @objc dynamic public class func drawBlueButton(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 41, height: 41), resizing: ResizingBehavior = .aspectFit, fraction: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 41, height: 41), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 41, y: resizedFrame.height / 41)


        //// Color Declarations
        let blueMarkColor1 = UIColor(red: 0.103, green: 0.249, blue: 0.645, alpha: 1.000)
        let blueMarkColor2 = UIColor(red: 0.175, green: 0.287, blue: 0.948, alpha: 1.000)
        let blueMarkColor3 = UIColor(red: 0.000, green: 0.125, blue: 0.475, alpha: 1.000)

        //// Variable Declarations
        let circle1: CGFloat = abs(sin((fraction - 0.224) * 10 / CGFloat.pi * 180 * CGFloat.pi/180))
        let circle2: CGFloat = abs(sin((fraction - 0.224) * 10 / CGFloat.pi * 180 * CGFloat.pi/180))

        //// Oval Drawing
        context.saveGState()
        context.translateBy(x: 21.06, y: 20.22)
        context.scaleBy(x: circle2, y: circle2)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: -20.5, y: -19.73, width: 40.1, height: 40))
        blueMarkColor3.setFill()
        ovalPath.fill()

        context.restoreGState()


        //// Oval 2 Drawing
        context.saveGState()
        context.translateBy(x: 21.06, y: 20.22)

        let oval2Path = UIBezierPath(ovalIn: CGRect(x: -16.5, y: -16.48, width: 32.8, height: 32.7))
        blueMarkColor1.setFill()
        oval2Path.fill()

        context.restoreGState()


        //// Oval 3 Drawing
        context.saveGState()
        context.translateBy(x: 20.62, y: 20.49)
        context.scaleBy(x: circle1, y: circle1)

        let oval3Path = UIBezierPath(ovalIn: CGRect(x: -12.3, y: -13.02, width: 25.5, height: 25.5))
        blueMarkColor2.setFill()
        oval3Path.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawRedButton(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 41, height: 41), resizing: ResizingBehavior = .aspectFit, fraction: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 41, height: 41), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 41, y: resizedFrame.height / 41)


        //// Color Declarations
        let redMarkColor1 = UIColor(red: 0.282, green: 0.010, blue: 0.343, alpha: 1.000)
        let redMarkColor2 = UIColor(red: 0.980, green: 0.000, blue: 1.000, alpha: 1.000)

        //// Variable Declarations
        let circle1: CGFloat = abs(sin((fraction - 0.224) * 10 / CGFloat.pi * 180 * CGFloat.pi/180))
        let circle2: CGFloat = abs(sin((fraction - 0.224) * 10 / CGFloat.pi * 180 * CGFloat.pi/180))

        //// Oval Drawing
        context.saveGState()
        context.translateBy(x: 20.13, y: 20.4)
        context.scaleBy(x: circle2, y: circle2)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: -19.69, y: -20, width: 40.1, height: 40))
        redMarkColor1.setFill()
        ovalPath.fill()

        context.restoreGState()


        //// Oval 2 Drawing
        context.saveGState()
        context.translateBy(x: 20.85, y: 20.48)

        let oval2Path = UIBezierPath(ovalIn: CGRect(x: -16.4, y: -16.42, width: 32.8, height: 32.7))
        CommonKit.redMarkColor3.setFill()
        oval2Path.fill()

        context.restoreGState()


        //// Oval 3 Drawing
        context.saveGState()
        context.translateBy(x: 20.64, y: 20.71)
        context.scaleBy(x: circle1, y: circle1)

        let oval3Path = UIBezierPath(ovalIn: CGRect(x: -12.75, y: -12.68, width: 25.5, height: 25.5))
        redMarkColor2.setFill()
        oval3Path.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawGreenButton(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 41, height: 41), resizing: ResizingBehavior = .aspectFit, fraction: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 41, height: 41), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 41, y: resizedFrame.height / 41)


        //// Color Declarations
        let greenMarkColor1 = UIColor(red: 0.014, green: 0.187, blue: 0.274, alpha: 1.000)
        let greenMarkColor2 = UIColor(red: 0.000, green: 0.361, blue: 0.423, alpha: 1.000)
        let greenMarkColor3 = UIColor(red: 0.322, green: 0.647, blue: 0.769, alpha: 1.000)

        //// Variable Declarations
        let circle1: CGFloat = abs(sin((fraction - 0.224) * 10 / CGFloat.pi * 180 * CGFloat.pi/180))
        let circle2: CGFloat = abs(sin((fraction - 0.224) * 10 / CGFloat.pi * 180 * CGFloat.pi/180))

        //// Oval Drawing
        context.saveGState()
        context.translateBy(x: 20.59, y: 20.65)
        context.scaleBy(x: circle2, y: circle2)

        let ovalPath = UIBezierPath(ovalIn: CGRect(x: -20.24, y: -20.33, width: 40.1, height: 40))
        greenMarkColor1.setFill()
        ovalPath.fill()

        context.restoreGState()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalIn: CGRect(x: 4.32, y: 4, width: 32.8, height: 32.7))
        greenMarkColor2.setFill()
        oval2Path.fill()


        //// Oval 3 Drawing
        context.saveGState()
        context.translateBy(x: 20.59, y: 20.65)
        context.scaleBy(x: circle1, y: circle1)

        let oval3Path = UIBezierPath(ovalIn: CGRect(x: -12.75, y: -12.75, width: 25.5, height: 25.5))
        greenMarkColor3.setFill()
        oval3Path.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawRectangleButtonView(frame: CGRect = CGRect(x: 0, y: 0, width: 374, height: 64)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let commonControlColor = UIColor(red: 0.140, green: 0.080, blue: 0.560, alpha: 1.000)

        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.black
        shadow.shadowOffset = CGSize(width: 0, height: 1)
        shadow.shadowBlurRadius = 2

        //// Rectangle 31 Drawing
        let rectangle31Path = UIBezierPath(roundedRect: CGRect(x: frame.minX + fastFloor(frame.width * 0.00535 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.99465 + 0.5) - fastFloor(frame.width * 0.00535 + 0.5), height: fastFloor(frame.height * 0.96875 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)), cornerRadius: 4)
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        commonControlColor.setFill()
        rectangle31Path.fill()
        context.restoreGState()
    }

    @objc dynamic public class func drawTabBarView(frame: CGRect = CGRect(x: 0, y: 0, width: 374, height: 64)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let commonControlColor = UIColor(red: 0.140, green: 0.080, blue: 0.560, alpha: 1.000)
        let tabbarLightColor1 = UIColor(red: 1.000, green: 0.000, blue: 0.814, alpha: 0.486)
        let tabbarLightColor2 = UIColor(red: 0.156, green: 0.042, blue: 0.259, alpha: 0.000)
        let tabBarGradientColor = UIColor(red: 0.028, green: 0.010, blue: 0.186, alpha: 1.000)
        let tabBarGradientColor2 = UIColor(red: 0.053, green: 0.021, blue: 0.624, alpha: 1.000)

        //// Gradient Declarations
        let tabBarLights = CGGradient(colorsSpace: nil, colors: [tabbarLightColor2.cgColor, tabbarLightColor2.blended(withFraction: 0.5, of: tabbarLightColor1).cgColor, tabbarLightColor1.cgColor] as CFArray, locations: [0, 0.57, 1])!
        let tabBarGradient = CGGradient(colorsSpace: nil, colors: [tabBarGradientColor.cgColor, tabBarGradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Shadow Declarations
        let tabBarShadow = NSShadow()
        tabBarShadow.shadowColor = UIColor.black.withAlphaComponent(0.41)
        tabBarShadow.shadowOffset = CGSize(width: 0, height: -2)
        tabBarShadow.shadowBlurRadius = 2

        //// Rectangle 31 Drawing
        let rectangle31Rect = CGRect(x: frame.minX + fastFloor(frame.width * -0.00020 - 0.43) + 0.93, y: frame.minY + fastFloor(frame.height * 0.24609 - 0.25) + 0.75, width: fastFloor(frame.width * 0.99980 - 0.43) - fastFloor(frame.width * -0.00020 - 0.43), height: fastFloor(frame.height * 0.99609 - 0.25) - fastFloor(frame.height * 0.24609 - 0.25))
        let rectangle31Path = UIBezierPath(rect: rectangle31Rect)
        context.saveGState()
        context.setShadow(offset: tabBarShadow.shadowOffset, blur: tabBarShadow.shadowBlurRadius, color: (tabBarShadow.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        rectangle31Path.addClip()
        context.drawLinearGradient(tabBarGradient,
            start: CGPoint(x: rectangle31Rect.midX, y: rectangle31Rect.maxY),
            end: CGPoint(x: rectangle31Rect.midX, y: rectangle31Rect.minY),
            options: [])
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: -0.07, y: 54.43))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.99980 * frame.width, y: frame.minY + 0.85046 * frame.height))
        UIColor.darkGray.setStroke()
        bezier3Path.lineWidth = 0.5
        bezier3Path.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: -0.07, y: 48.45))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.99980 * frame.width, y: frame.minY + 0.75702 * frame.height))
        UIColor.darkGray.setStroke()
        bezier2Path.lineWidth = 0.5
        bezier2Path.stroke()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -0.07, y: 41.75))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99980 * frame.width, y: frame.minY + 0.65234 * frame.height))
        UIColor.darkGray.setStroke()
        bezierPath.lineWidth = 0.5
        bezierPath.stroke()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -0.07, y: 35.03))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.99980 * frame.width, y: frame.minY + 0.54730 * frame.height))
        UIColor.darkGray.setStroke()
        bezier4Path.lineWidth = 0.5
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: -0.07, y: 28.39))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.99980 * frame.width, y: frame.minY + 0.44354 * frame.height))
        UIColor.darkGray.setStroke()
        bezier5Path.lineWidth = 0.5
        bezier5Path.stroke()


        //// Bezier 16 Drawing
        let bezier16Path = UIBezierPath()
        bezier16Path.move(to: CGPoint(x: -0.07, y: 21.68))
        bezier16Path.addLine(to: CGPoint(x: frame.minX + 0.99980 * frame.width, y: frame.minY + 0.33875 * frame.height))
        UIColor.darkGray.setStroke()
        bezier16Path.lineWidth = 0.5
        bezier16Path.stroke()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.42761 - 0.43) + 0.93, y: frame.minY + fastFloor(frame.height * 0.24733 - 0.33) + 0.83, width: fastFloor(frame.width * 0.57200 - 0.43) - fastFloor(frame.width * 0.42761 - 0.43), height: fastFloor(frame.height * 0.79297 - 0.25) - fastFloor(frame.height * 0.24733 - 0.33) - 0.08))
        commonControlColor.setFill()
        rectangle2Path.fill()

        ////// Rectangle 2 Inner Shadow
        context.saveGState()
        context.clip(to: rectangle2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((tabBarShadow.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let rectangle2OpaqueShadow = (tabBarShadow.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: tabBarShadow.shadowOffset, blur: tabBarShadow.shadowBlurRadius, color: rectangle2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        rectangle2OpaqueShadow.setFill()
        rectangle2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: frame.minX + 0.42819 * frame.width, y: frame.minY + 0.25230 * frame.height))
        bezier10Path.addLine(to: CGPoint(x: frame.minX + 0.45933 * frame.width, y: frame.minY + 0.79120 * frame.height))
        bezier10Path.addLine(to: CGPoint(x: frame.minX + 0.42791 * frame.width, y: frame.minY + 0.79425 * frame.height))
        bezier10Path.addLine(to: CGPoint(x: frame.minX + 0.42819 * frame.width, y: frame.minY + 0.25230 * frame.height))
        bezier10Path.close()
        commonControlColor.setFill()
        bezier10Path.fill()

        ////// Bezier 10 Inner Shadow
        context.saveGState()
        context.clip(to: bezier10Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((tabBarShadow.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier10OpaqueShadow = (tabBarShadow.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: tabBarShadow.shadowOffset, blur: tabBarShadow.shadowBlurRadius, color: bezier10OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier10OpaqueShadow.setFill()
        bezier10Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: frame.minX + 0.42738 * frame.width, y: frame.minY + 0.44138 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.44606 * frame.width, y: frame.minY + 0.78961 * frame.height))
        UIColor.gray.setStroke()
        bezier6Path.lineWidth = 0.5
        bezier6Path.stroke()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: frame.minX + 0.42744 * frame.width, y: frame.minY + 0.54445 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.44016 * frame.width, y: frame.minY + 0.78994 * frame.height))
        UIColor.gray.setStroke()
        bezier7Path.lineWidth = 0.5
        bezier7Path.stroke()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: frame.minX + 0.42735 * frame.width, y: frame.minY + 0.65016 * frame.height))
        bezier8Path.addLine(to: CGPoint(x: frame.minX + 0.43392 * frame.width, y: frame.minY + 0.78807 * frame.height))
        UIColor.gray.setStroke()
        bezier8Path.lineWidth = 0.5
        bezier8Path.stroke()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: frame.minX + 0.42758 * frame.width, y: frame.minY + 0.75486 * frame.height))
        bezier9Path.addLine(to: CGPoint(x: frame.minX + 0.42949 * frame.width, y: frame.minY + 0.78874 * frame.height))
        UIColor.darkGray.setStroke()
        bezier9Path.lineWidth = 0.5
        bezier9Path.stroke()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: frame.minX + 0.57141 * frame.width, y: frame.minY + 0.24509 * frame.height))
        bezier11Path.addLine(to: CGPoint(x: frame.minX + 0.54027 * frame.width, y: frame.minY + 0.78399 * frame.height))
        bezier11Path.addLine(to: CGPoint(x: frame.minX + 0.57169 * frame.width, y: frame.minY + 0.78704 * frame.height))
        bezier11Path.addLine(to: CGPoint(x: frame.minX + 0.57141 * frame.width, y: frame.minY + 0.24509 * frame.height))
        bezier11Path.close()
        commonControlColor.setFill()
        bezier11Path.fill()

        ////// Bezier 11 Inner Shadow
        context.saveGState()
        context.clip(to: bezier11Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((tabBarShadow.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier11OpaqueShadow = (tabBarShadow.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: tabBarShadow.shadowOffset, blur: tabBarShadow.shadowBlurRadius, color: bezier11OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier11OpaqueShadow.setFill()
        bezier11Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: frame.minX + 0.57239 * frame.width, y: frame.minY + 0.44016 * frame.height))
        bezier12Path.addLine(to: CGPoint(x: frame.minX + 0.55371 * frame.width, y: frame.minY + 0.78840 * frame.height))
        UIColor.gray.setStroke()
        bezier12Path.lineWidth = 0.5
        bezier12Path.stroke()


        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.move(to: CGPoint(x: frame.minX + 0.57233 * frame.width, y: frame.minY + 0.54324 * frame.height))
        bezier13Path.addLine(to: CGPoint(x: frame.minX + 0.55961 * frame.width, y: frame.minY + 0.78873 * frame.height))
        UIColor.gray.setStroke()
        bezier13Path.lineWidth = 0.5
        bezier13Path.stroke()


        //// Bezier 14 Drawing
        let bezier14Path = UIBezierPath()
        bezier14Path.move(to: CGPoint(x: frame.minX + 0.57241 * frame.width, y: frame.minY + 0.64895 * frame.height))
        bezier14Path.addLine(to: CGPoint(x: frame.minX + 0.56584 * frame.width, y: frame.minY + 0.78685 * frame.height))
        UIColor.gray.setStroke()
        bezier14Path.lineWidth = 0.5
        bezier14Path.stroke()


        //// Bezier 15 Drawing
        let bezier15Path = UIBezierPath()
        bezier15Path.move(to: CGPoint(x: frame.minX + 0.57218 * frame.width, y: frame.minY + 0.75364 * frame.height))
        bezier15Path.addLine(to: CGPoint(x: frame.minX + 0.57028 * frame.width, y: frame.minY + 0.78753 * frame.height))
        UIColor.darkGray.setStroke()
        bezier15Path.lineWidth = 0.5
        bezier15Path.stroke()


        //// Bezier 17 Drawing
        let bezier17Path = UIBezierPath()
        bezier17Path.move(to: CGPoint(x: frame.minX + 0.42773 * frame.width, y: frame.minY + 0.33509 * frame.height))
        bezier17Path.addLine(to: CGPoint(x: frame.minX + 0.45302 * frame.width, y: frame.minY + 0.79155 * frame.height))
        UIColor.gray.setStroke()
        bezier17Path.lineWidth = 0.5
        bezier17Path.stroke()


        //// Bezier 18 Drawing
        let bezier18Path = UIBezierPath()
        bezier18Path.move(to: CGPoint(x: frame.minX + 0.57194 * frame.width, y: frame.minY + 0.33569 * frame.height))
        bezier18Path.addLine(to: CGPoint(x: frame.minX + 0.54729 * frame.width, y: frame.minY + 0.78610 * frame.height))
        UIColor.gray.setStroke()
        bezier18Path.lineWidth = 0.5
        bezier18Path.stroke()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.45742 + 0.42) + 0.08, y: frame.minY + fastFloor(frame.height * 0.25119 + 0.42) + 0.08, width: fastFloor(frame.width * 0.53763 + 0.42) - fastFloor(frame.width * 0.45742 + 0.42), height: fastFloor(frame.height * 0.77795 - 0.29) - fastFloor(frame.height * 0.25119 + 0.42) + 0.71))
        commonControlColor.setFill()
        rectangle3Path.fill()

        ////// Rectangle 3 Inner Shadow
        context.saveGState()
        context.clip(to: rectangle3Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((tabBarShadow.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let rectangle3OpaqueShadow = (tabBarShadow.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: tabBarShadow.shadowOffset, blur: tabBarShadow.shadowBlurRadius, color: rectangle3OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        rectangle3OpaqueShadow.setFill()
        rectangle3Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 19 Drawing
        let bezier19Path = UIBezierPath()
        bezier19Path.move(to: CGPoint(x: frame.minX + 0.44579 * frame.width, y: frame.minY + 0.79568 * frame.height))
        bezier19Path.addLine(to: CGPoint(x: frame.minX + 0.39922 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier19Path.addLine(to: CGPoint(x: frame.minX + 0.59867 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier19Path.addLine(to: CGPoint(x: frame.minX + 0.55513 * frame.width, y: frame.minY + 0.78859 * frame.height))
        bezier19Path.addLine(to: CGPoint(x: frame.minX + 0.44579 * frame.width, y: frame.minY + 0.79568 * frame.height))
        bezier19Path.close()
        context.saveGState()
        bezier19Path.addClip()
        let bezier19Bounds = bezier19Path.cgPath.boundingBoxOfPath
        context.drawLinearGradient(tabBarLights,
            start: CGPoint(x: bezier19Bounds.midX, y: bezier19Bounds.minY),
            end: CGPoint(x: bezier19Bounds.midX, y: bezier19Bounds.maxY),
            options: [])
        context.restoreGState()
    }

    @objc dynamic public class func drawCircledButtonView(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 64, height: 64), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 64, height: 64), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 64, y: resizedFrame.height / 64)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 64, resizedFrame.height / 64)


        //// Color Declarations
        let commonControlColor = UIColor(red: 0.140, green: 0.080, blue: 0.560, alpha: 1.000)

        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.black
        shadow.shadowOffset = CGSize(width: 0, height: 1)
        shadow.shadowBlurRadius = 2
        let tabBarShadow = NSShadow()
        tabBarShadow.shadowColor = UIColor.black.withAlphaComponent(0.41)
        tabBarShadow.shadowOffset = CGSize(width: 0, height: -2)
        tabBarShadow.shadowBlurRadius = 2

        //// Button Oval Drawing
        let buttonOvalPath = UIBezierPath(ovalIn: CGRect(x: 1.91, y: 2, width: 60, height: 60))
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow.shadowOffset.width * resizedShadowScale, height: shadow.shadowOffset.height * resizedShadowScale), blur: shadow.shadowBlurRadius * resizedShadowScale, color: (shadow.shadowColor as! UIColor).cgColor)
        commonControlColor.setFill()
        buttonOvalPath.fill()

        ////// Button Oval Inner Shadow
        context.saveGState()
        context.clip(to: buttonOvalPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((tabBarShadow.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let buttonOvalOpaqueShadow = (tabBarShadow.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: tabBarShadow.shadowOffset.width * resizedShadowScale, height: tabBarShadow.shadowOffset.height * resizedShadowScale), blur: tabBarShadow.shadowBlurRadius * resizedShadowScale, color: buttonOvalOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        buttonOvalOpaqueShadow.setFill()
        buttonOvalPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()

        context.restoreGState()



        //// OK Drawing
        let oKRect = CGRect(x: 19.2, y: 22.99, width: 27.74, height: 21)
        let oKTextContent = "OK"
        let oKStyle = NSMutableParagraphStyle()
        oKStyle.alignment = .left
        let oKFontAttributes = [
            .font: UIFont.systemFont(ofSize: UIFont.labelFontSize),
            .foregroundColor: UIColor.white,
            .paragraphStyle: oKStyle,
        ] as [NSAttributedString.Key: Any]

        let oKTextHeight: CGFloat = oKTextContent.boundingRect(with: CGSize(width: oKRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: oKFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: oKRect)
        oKTextContent.draw(in: CGRect(x: oKRect.minX, y: oKRect.minY + (oKRect.height - oKTextHeight) / 2, width: oKRect.width, height: oKTextHeight), withAttributes: oKFontAttributes)
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawCommonScreen_65(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 896), resizing: ResizingBehavior = .aspectFit, starBlink: CGFloat = 0, tubeOvalOffset: CGFloat = 0.25) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 896), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 896)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 414, resizedFrame.height / 896)


        //// Color Declarations
        let bezierGradientColor = UIColor(red: 0.071, green: 0.086, blue: 1.000, alpha: 1.000)
        let bezierGradientColor5 = UIColor(red: 0.192, green: 1.000, blue: 0.953, alpha: 1.000)
        let paint0_linear3Color3 = UIColor(red: 0.033, green: 0.360, blue: 0.892, alpha: 1.000)
        let paint0_linear3Color2 = UIColor(red: 0.122, green: 0.071, blue: 0.349, alpha: 1.000)
        let paint0_linear3Color = UIColor(red: 0.054, green: 0.296, blue: 0.844, alpha: 1.000)
        let gradientColor23 = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1.000)
        let gradient2Color2 = UIColor(red: 0.063, green: 0.105, blue: 0.324, alpha: 1.000)
        let gradient2Color3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.000)
        let gradient2Color = UIColor(red: 0.098, green: 0.121, blue: 0.857, alpha: 1.000)
        let gradientColor24 = UIColor(red: 0.004, green: 0.004, blue: 0.004, alpha: 1.000)
        let starGradient2Color3 = UIColor(red: 0.025, green: 0.231, blue: 0.909, alpha: 1.000)
        let starGradientColor = UIColor(red: 0.136, green: 0.000, blue: 1.000, alpha: 0.000)
        let gradient3Color5 = UIColor(red: 0.118, green: 0.110, blue: 0.463, alpha: 1.000)
        let gradient3Color4 = UIColor(red: 0.129, green: 0.153, blue: 0.604, alpha: 1.000)
        let gradient3Color3 = UIColor(red: 0.180, green: 0.180, blue: 0.796, alpha: 1.000)
        let gradient3Color = UIColor(red: 0.525, green: 0.557, blue: 0.953, alpha: 1.000)
        let gradient3Color2 = UIColor(red: 0.267, green: 0.247, blue: 0.910, alpha: 1.000)
        let plane_picture_shadow_2 = UIColor(red: 0.000, green: 0.696, blue: 1.000, alpha: 1.000)
        let starGradient2Color = UIColor(red: 0.160, green: 0.042, blue: 0.907, alpha: 0.000)
        let fillColor15 = UIColor(red: 1.000, green: 0.000, blue: 0.647, alpha: 1.000)
        let bkgLightsColor2 = UIColor(red: 0.051, green: 0.031, blue: 0.243, alpha: 1.000)
        let bkgLightsColor = UIColor(red: 0.043, green: 0.075, blue: 0.788, alpha: 1.000)
        let bkgLightsColor3 = UIColor(red: 0.051, green: 0.031, blue: 0.243, alpha: 1.000)

        //// Gradient Declarations
        let bezierGradient = CGGradient(colorsSpace: nil, colors: [bezierGradientColor.cgColor, bezierGradientColor5.cgColor, bezierGradientColor.cgColor] as CFArray, locations: [0, 0.5, 1])!
        let paint0_linear3 = CGGradient(colorsSpace: nil, colors: [paint0_linear3Color3.cgColor, paint0_linear3Color3.blended(withFraction: 0.5, of: paint0_linear3Color).cgColor, paint0_linear3Color.cgColor, paint0_linear3Color2.cgColor] as CFArray, locations: [0, 0.06, 0.17, 1])!
        let gradient2 = CGGradient(colorsSpace: nil, colors: [gradientColor23.cgColor, gradient2Color.cgColor, gradient2Color2.cgColor, gradient2Color2.blended(withFraction: 0.5, of: gradientColor24).cgColor, gradientColor24.cgColor, gradient2Color3.cgColor] as CFArray, locations: [0, 0.03, 0.18, 0.27, 0.69, 0.96])!
        let starGradient = CGGradient(colorsSpace: nil, colors: [gradientColor23.cgColor, gradient3Color.cgColor, gradient3Color2.cgColor, gradient3Color3.cgColor, gradient3Color3.blended(withFraction: 0.5, of: gradient3Color4).cgColor, gradient3Color4.cgColor, gradient3Color5.cgColor, gradient3Color5.blended(withFraction: 0.5, of: starGradientColor).cgColor, starGradientColor.cgColor] as CFArray, locations: [0, 0.02, 0.04, 0.06, 0.07, 0.09, 0.12, 0.46, 1])!
        let starGradient2 = CGGradient(colorsSpace: nil, colors: [gradientColor23.cgColor, gradient3Color.cgColor, starGradient2Color3.cgColor, starGradient2Color.cgColor] as CFArray, locations: [0, 0.02, 0.11, 1])!
        let bkgLights = CGGradient(colorsSpace: nil, colors: [bkgLightsColor.cgColor, bkgLightsColor.blended(withFraction: 0.5, of: bkgLightsColor3).cgColor, bkgLightsColor3.cgColor, bkgLightsColor2.cgColor] as CFArray, locations: [0, 0.25, 0.47, 1])!

        //// Shadow Declarations
        let shadow2 = NSShadow()
        shadow2.shadowColor = UIColor.black
        shadow2.shadowOffset = CGSize(width: 3, height: 4)
        shadow2.shadowBlurRadius = 5

        //// Variable Declarations
        let star5Expr: CGFloat = starBlink < 0.25 || starBlink > 0.8 - tubeOvalOffset ? 0 : (starBlink > 0.25 && starBlink <= 0.3 ? (starBlink - 0.25) * 20 : (starBlink > 0.75 - tubeOvalOffset && starBlink <= 0.8 - tubeOvalOffset ? (0.8 - tubeOvalOffset - starBlink) * 20 : 1))
        let star4Expr: CGFloat = starBlink < 0.2 || starBlink > 0.75 - tubeOvalOffset ? 0 : (starBlink > 0.2 && starBlink <= 0.25 ? (starBlink - 0.2) * 20 : (starBlink > 0.7 - tubeOvalOffset && starBlink <= 0.75 - tubeOvalOffset ? (0.75 - tubeOvalOffset - starBlink) * 20 : 1))
        let star3Expr: CGFloat = starBlink < 0.15 || starBlink > 0.7 - tubeOvalOffset ? 0 : (starBlink > 0.15 && starBlink <= 0.2 ? (starBlink - 0.15) * 20 : (starBlink > 0.65 - tubeOvalOffset && starBlink <= 0.7 - tubeOvalOffset ? (0.7 - tubeOvalOffset - starBlink) * 20 : 1))

        //// Rectangle 22 Drawing
        let rectangle22Path = UIBezierPath(rect: CGRect(x: -1, y: 201.66, width: 415, height: 696.75))
        context.saveGState()
        rectangle22Path.addClip()
        context.drawLinearGradient(bkgLights, start: CGPoint(x: 206.5, y: 201.66), end: CGPoint(x: 206.5, y: 898.4), options: [])
        context.restoreGState()


        //// Bezier 56 Drawing
        let bezier56Path = UIBezierPath()
        bezier56Path.move(to: CGPoint(x: 415, y: 288.67))
        bezier56Path.addCurve(to: CGPoint(x: 399.29, y: 305.79), controlPoint1: CGPoint(x: 415, y: 288.67), controlPoint2: CGPoint(x: 418.46, y: 304.85))
        bezier56Path.addCurve(to: CGPoint(x: 364.16, y: 236.31), controlPoint1: CGPoint(x: 379.15, y: 307.55), controlPoint2: CGPoint(x: 377.09, y: 259.94))
        bezier56Path.addCurve(to: CGPoint(x: 324.25, y: 202.8), controlPoint1: CGPoint(x: 354.46, y: 206.61), controlPoint2: CGPoint(x: 338.92, y: 203.71))
        bezier56Path.addCurve(to: CGPoint(x: 249.55, y: 287.74), controlPoint1: CGPoint(x: 279.22, y: 203.56), controlPoint2: CGPoint(x: 282.21, y: 287.74))
        bezier56Path.addCurve(to: CGPoint(x: 187.54, y: 247.78), controlPoint1: CGPoint(x: 216.89, y: 287.74), controlPoint2: CGPoint(x: 195.46, y: 252.58))
        bezier56Path.addCurve(to: CGPoint(x: 143.74, y: 243.88), controlPoint1: CGPoint(x: 177.27, y: 237.47), controlPoint2: CGPoint(x: 170.57, y: 233.24))
        bezier56Path.addCurve(to: CGPoint(x: 94.03, y: 277.83), controlPoint1: CGPoint(x: 126.85, y: 251.66), controlPoint2: CGPoint(x: 111.19, y: 269.66))
        bezier56Path.addCurve(to: CGPoint(x: 47.13, y: 277.11), controlPoint1: CGPoint(x: 79.07, y: 284.94), controlPoint2: CGPoint(x: 62, y: 279.44))
        bezier56Path.addCurve(to: CGPoint(x: -0.5, y: 263.89), controlPoint1: CGPoint(x: 25.92, y: 273.79), controlPoint2: CGPoint(x: -0.5, y: 263.89))
        bezier56Path.addLine(to: CGPoint(x: -1, y: 0))
        bezier56Path.addLine(to: CGPoint(x: 415, y: 0))
        bezier56Path.addLine(to: CGPoint(x: 415, y: 288.67))
        bezier56Path.close()
        context.saveGState()
        bezier56Path.addClip()
        context.drawLinearGradient(paint0_linear3, start: CGPoint(x: 194.37, y: 291.85), end: CGPoint(x: 221.39, y: -16.94), options: [])
        context.restoreGState()


        //// Bezier 62 Drawing
        let bezier62Path = UIBezierPath()
        bezier62Path.move(to: CGPoint(x: 0.96, y: 265.07))
        bezier62Path.addCurve(to: CGPoint(x: 76.75, y: 283.32), controlPoint1: CGPoint(x: 35.7, y: 277.28), controlPoint2: CGPoint(x: 60.41, y: 283.45))
        bezier62Path.addCurve(to: CGPoint(x: 103.1, y: 275.54), controlPoint1: CGPoint(x: 84.92, y: 283.26), controlPoint2: CGPoint(x: 94.47, y: 280.07))
        bezier62Path.addCurve(to: CGPoint(x: 126.8, y: 259.47), controlPoint1: CGPoint(x: 109.82, y: 272.02), controlPoint2: CGPoint(x: 116.93, y: 266.91))
        bezier62Path.addCurve(to: CGPoint(x: 153.3, y: 242.1), controlPoint1: CGPoint(x: 143.78, y: 246.67), controlPoint2: CGPoint(x: 146.33, y: 245.27))
        bezier62Path.addCurve(to: CGPoint(x: 166.2, y: 239.12), controlPoint1: CGPoint(x: 157.65, y: 240.13), controlPoint2: CGPoint(x: 161.78, y: 239.12))
        bezier62Path.addCurve(to: CGPoint(x: 192.52, y: 254.93), controlPoint1: CGPoint(x: 175.29, y: 239.12), controlPoint2: CGPoint(x: 182.1, y: 244.32))
        bezier62Path.addCurve(to: CGPoint(x: 196.74, y: 259.45), controlPoint1: CGPoint(x: 193.95, y: 256.39), controlPoint2: CGPoint(x: 194.85, y: 257.42))
        bezier62Path.addCurve(to: CGPoint(x: 201.6, y: 264.68), controlPoint1: CGPoint(x: 197.29, y: 260.04), controlPoint2: CGPoint(x: 200.61, y: 263.63))
        bezier62Path.addCurve(to: CGPoint(x: 222.5, y: 283.18), controlPoint1: CGPoint(x: 209.56, y: 273.19), controlPoint2: CGPoint(x: 216.29, y: 279.04))
        bezier62Path.addCurve(to: CGPoint(x: 247.85, y: 290.62), controlPoint1: CGPoint(x: 230.42, y: 288.46), controlPoint2: CGPoint(x: 238.92, y: 290.62))
        bezier62Path.addCurve(to: CGPoint(x: 269.11, y: 279.82), controlPoint1: CGPoint(x: 255.93, y: 290.62), controlPoint2: CGPoint(x: 262.35, y: 287.76))
        bezier62Path.addCurve(to: CGPoint(x: 284.65, y: 250.33), controlPoint1: CGPoint(x: 274.42, y: 273.59), controlPoint2: CGPoint(x: 279.19, y: 263.3))
        bezier62Path.addCurve(to: CGPoint(x: 287.35, y: 243.81), controlPoint1: CGPoint(x: 284.86, y: 249.82), controlPoint2: CGPoint(x: 286.79, y: 245.14))
        bezier62Path.addCurve(to: CGPoint(x: 303.56, y: 215.64), controlPoint1: CGPoint(x: 293.47, y: 229.33), controlPoint2: CGPoint(x: 297.81, y: 222.51))
        bezier62Path.addCurve(to: CGPoint(x: 327.41, y: 204.9), controlPoint1: CGPoint(x: 310.95, y: 206.83), controlPoint2: CGPoint(x: 320.49, y: 204.85))
        bezier62Path.addCurve(to: CGPoint(x: 351.49, y: 218.04), controlPoint1: CGPoint(x: 334.31, y: 204.96), controlPoint2: CGPoint(x: 344, y: 207.5))
        bezier62Path.addCurve(to: CGPoint(x: 367.86, y: 252.62), controlPoint1: CGPoint(x: 357.5, y: 226.49), controlPoint2: CGPoint(x: 362.61, y: 236.59))
        bezier62Path.addCurve(to: CGPoint(x: 374.15, y: 272.59), controlPoint1: CGPoint(x: 369.2, y: 256.73), controlPoint2: CGPoint(x: 373.46, y: 270.43))
        bezier62Path.addCurve(to: CGPoint(x: 398.22, y: 307.78), controlPoint1: CGPoint(x: 381.27, y: 294.73), controlPoint2: CGPoint(x: 387.97, y: 308.25))
        bezier62Path.addCurve(to: CGPoint(x: 414.96, y: 297.5), controlPoint1: CGPoint(x: 410.46, y: 307.21), controlPoint2: CGPoint(x: 413.72, y: 300.13))
        bezier62Path.addLine(to: CGPoint(x: 414.96, y: 288.28))
        bezier62Path.addCurve(to: CGPoint(x: 398.86, y: 302.85), controlPoint1: CGPoint(x: 412.34, y: 296.22), controlPoint2: CGPoint(x: 407.7, y: 302.59))
        bezier62Path.addCurve(to: CGPoint(x: 379.35, y: 271.14), controlPoint1: CGPoint(x: 391.42, y: 303.06), controlPoint2: CGPoint(x: 386.49, y: 293.33))
        bezier62Path.addCurve(to: CGPoint(x: 372.95, y: 250.93), controlPoint1: CGPoint(x: 378.66, y: 268.99), controlPoint2: CGPoint(x: 374.29, y: 255.04))
        bezier62Path.addCurve(to: CGPoint(x: 356.2, y: 215.57), controlPoint1: CGPoint(x: 367.71, y: 234.91), controlPoint2: CGPoint(x: 362.2, y: 224))
        bezier62Path.addCurve(to: CGPoint(x: 327.17, y: 200), controlPoint1: CGPoint(x: 348.72, y: 205.05), controlPoint2: CGPoint(x: 338.4, y: 200))
        bezier62Path.addCurve(to: CGPoint(x: 298.67, y: 213.03), controlPoint1: CGPoint(x: 315.92, y: 200), controlPoint2: CGPoint(x: 306.05, y: 204.23))
        bezier62Path.addCurve(to: CGPoint(x: 282.13, y: 242.49), controlPoint1: CGPoint(x: 292.93, y: 219.88), controlPoint2: CGPoint(x: 288.25, y: 228.01))
        bezier62Path.addCurve(to: CGPoint(x: 279.46, y: 248.84), controlPoint1: CGPoint(x: 281.57, y: 243.81), controlPoint2: CGPoint(x: 279.67, y: 248.34))
        bezier62Path.addCurve(to: CGPoint(x: 266.66, y: 274.46), controlPoint1: CGPoint(x: 273.99, y: 261.82), controlPoint2: CGPoint(x: 271.08, y: 268.7))
        bezier62Path.addCurve(to: CGPoint(x: 247.49, y: 285.65), controlPoint1: CGPoint(x: 261.01, y: 281.81), controlPoint2: CGPoint(x: 255.61, y: 285.65))
        bezier62Path.addCurve(to: CGPoint(x: 222.5, y: 276.68), controlPoint1: CGPoint(x: 238.53, y: 285.65), controlPoint2: CGPoint(x: 230.43, y: 281.97))
        bezier62Path.addCurve(to: CGPoint(x: 202.9, y: 257.98), controlPoint1: CGPoint(x: 216.28, y: 272.53), controlPoint2: CGPoint(x: 210.86, y: 266.49))
        bezier62Path.addCurve(to: CGPoint(x: 198.6, y: 253.67), controlPoint1: CGPoint(x: 201.91, y: 256.93), controlPoint2: CGPoint(x: 199.14, y: 254.26))
        bezier62Path.addCurve(to: CGPoint(x: 193.99, y: 249.01), controlPoint1: CGPoint(x: 196.7, y: 251.64), controlPoint2: CGPoint(x: 195.42, y: 250.46))
        bezier62Path.addCurve(to: CGPoint(x: 165.86, y: 234.21), controlPoint1: CGPoint(x: 183.59, y: 238.42), controlPoint2: CGPoint(x: 174.9, y: 234.21))
        bezier62Path.addCurve(to: CGPoint(x: 152.07, y: 237.24), controlPoint1: CGPoint(x: 161.45, y: 234.21), controlPoint2: CGPoint(x: 156.89, y: 235.18))
        bezier62Path.addCurve(to: CGPoint(x: 123, y: 256.07), controlPoint1: CGPoint(x: 144.35, y: 240.55), controlPoint2: CGPoint(x: 139.97, y: 243.28))
        bezier62Path.addCurve(to: CGPoint(x: 100.8, y: 271.19), controlPoint1: CGPoint(x: 113.14, y: 263.51), controlPoint2: CGPoint(x: 107.53, y: 267.66))
        bezier62Path.addCurve(to: CGPoint(x: 75.88, y: 278.41), controlPoint1: CGPoint(x: 92.16, y: 275.73), controlPoint2: CGPoint(x: 84.08, y: 278.34))
        bezier62Path.addCurve(to: CGPoint(x: 1.16, y: 259.86), controlPoint1: CGPoint(x: 59.52, y: 278.54), controlPoint2: CGPoint(x: 35.91, y: 272.08))
        bezier62Path.addLine(to: CGPoint(x: 0.96, y: 265.07))
        bezier62Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier62Path.addClip()
        context.drawLinearGradient(bezierGradient, start: CGPoint(x: 0.96, y: 253.89), end: CGPoint(x: 414.96, y: 253.89), options: [])
        context.endTransparencyLayer()
        context.restoreGState()



        //// Stars Group
        //// Group 22
        context.saveGState()
        context.translateBy(x: 198.35, y: 8.22)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 80 Drawing
        let bezier80Path = UIBezierPath()
        bezier80Path.move(to: CGPoint(x: -9.09, y: 106.06))
        bezier80Path.addCurve(to: CGPoint(x: -34.99, y: 105.62), controlPoint1: CGPoint(x: -17.79, y: 105.85), controlPoint2: CGPoint(x: -34.99, y: 105.62))
        bezier80Path.addCurve(to: CGPoint(x: -9.08, y: 105.03), controlPoint1: CGPoint(x: -34.99, y: 105.62), controlPoint2: CGPoint(x: -17.8, y: 105.38))
        bezier80Path.addCurve(to: CGPoint(x: -0.12, y: 104.2), controlPoint1: CGPoint(x: -0.36, y: 104.67), controlPoint2: CGPoint(x: -2.31, y: 104.18))
        bezier80Path.addCurve(to: CGPoint(x: 9.99, y: 104.97), controlPoint1: CGPoint(x: 2.07, y: 104.23), controlPoint2: CGPoint(x: -0.14, y: 104.67))
        bezier80Path.addCurve(to: CGPoint(x: 40.4, y: 105.38), controlPoint1: CGPoint(x: 20.12, y: 105.26), controlPoint2: CGPoint(x: 40.4, y: 105.38))
        bezier80Path.addCurve(to: CGPoint(x: 9.98, y: 105.93), controlPoint1: CGPoint(x: 40.4, y: 105.38), controlPoint2: CGPoint(x: 20.13, y: 105.66))
        bezier80Path.addCurve(to: CGPoint(x: -0.19, y: 106.45), controlPoint1: CGPoint(x: -0.17, y: 106.2), controlPoint2: CGPoint(x: 1.91, y: 106.5))
        bezier80Path.addCurve(to: CGPoint(x: -9.09, y: 106.06), controlPoint1: CGPoint(x: -2.29, y: 106.41), controlPoint2: CGPoint(x: -0.39, y: 106.27))
        bezier80Path.close()
        context.saveGState()
        bezier80Path.addClip()
        context.drawRadialGradient(gradient2,
            startCenter: CGPoint(x: -0.18, y: 105.43), startRadius: 0.2,
            endCenter: CGPoint(x: 0.77, y: 105.13), endRadius: 61.23,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 81 Drawing
        context.saveGState()
        context.setAlpha(star5Expr)
        context.setBlendMode(.color)

        let bezier81Path = UIBezierPath()
        bezier81Path.move(to: CGPoint(x: -8.39, y: 106.07))
        bezier81Path.addCurve(to: CGPoint(x: -34.29, y: 105.63), controlPoint1: CGPoint(x: -17.09, y: 105.87), controlPoint2: CGPoint(x: -34.29, y: 105.63))
        bezier81Path.addCurve(to: CGPoint(x: -8.38, y: 105.04), controlPoint1: CGPoint(x: -34.29, y: 105.63), controlPoint2: CGPoint(x: -17.1, y: 105.4))
        bezier81Path.addCurve(to: CGPoint(x: 0.58, y: 104.22), controlPoint1: CGPoint(x: 0.34, y: 104.69), controlPoint2: CGPoint(x: -1.6, y: 104.19))
        bezier81Path.addCurve(to: CGPoint(x: 10.69, y: 104.98), controlPoint1: CGPoint(x: 2.77, y: 104.24), controlPoint2: CGPoint(x: 0.56, y: 104.69))
        bezier81Path.addCurve(to: CGPoint(x: 41.1, y: 105.39), controlPoint1: CGPoint(x: 20.82, y: 105.28), controlPoint2: CGPoint(x: 41.1, y: 105.39))
        bezier81Path.addCurve(to: CGPoint(x: 10.68, y: 105.94), controlPoint1: CGPoint(x: 41.1, y: 105.39), controlPoint2: CGPoint(x: 20.83, y: 105.67))
        bezier81Path.addCurve(to: CGPoint(x: 0.51, y: 106.47), controlPoint1: CGPoint(x: 0.53, y: 106.21), controlPoint2: CGPoint(x: 2.61, y: 106.51))
        bezier81Path.addCurve(to: CGPoint(x: -8.39, y: 106.07), controlPoint1: CGPoint(x: -1.59, y: 106.43), controlPoint2: CGPoint(x: 0.31, y: 106.28))
        bezier81Path.close()
        plane_picture_shadow_2.setFill()
        bezier81Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 23
        context.saveGState()
        context.translateBy(x: 68.1, y: 48.29)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 82 Drawing
        let bezier82Path = UIBezierPath()
        bezier82Path.move(to: CGPoint(x: 25.67, y: 1.9))
        bezier82Path.addCurve(to: CGPoint(x: -2.98, y: 1.18), controlPoint1: CGPoint(x: 16.04, y: 1.56), controlPoint2: CGPoint(x: -2.98, y: 1.18))
        bezier82Path.addCurve(to: CGPoint(x: 25.68, y: 0.23), controlPoint1: CGPoint(x: -2.98, y: 1.18), controlPoint2: CGPoint(x: 16.04, y: 0.8))
        bezier82Path.addCurve(to: CGPoint(x: 35.59, y: -1.1), controlPoint1: CGPoint(x: 35.32, y: -0.34), controlPoint2: CGPoint(x: 33.17, y: -1.15))
        bezier82Path.addCurve(to: CGPoint(x: 46.77, y: 0.13), controlPoint1: CGPoint(x: 38.01, y: -1.06), controlPoint2: CGPoint(x: 35.57, y: -0.34))
        bezier82Path.addCurve(to: CGPoint(x: 80.4, y: 0.79), controlPoint1: CGPoint(x: 57.97, y: 0.61), controlPoint2: CGPoint(x: 80.4, y: 0.79))
        bezier82Path.addCurve(to: CGPoint(x: 46.76, y: 1.68), controlPoint1: CGPoint(x: 80.4, y: 0.79), controlPoint2: CGPoint(x: 57.98, y: 1.25))
        bezier82Path.addCurve(to: CGPoint(x: 35.51, y: 2.53), controlPoint1: CGPoint(x: 35.54, y: 2.12), controlPoint2: CGPoint(x: 37.83, y: 2.6))
        bezier82Path.addCurve(to: CGPoint(x: 25.67, y: 1.9), controlPoint1: CGPoint(x: 33.19, y: 2.47), controlPoint2: CGPoint(x: 35.29, y: 2.23))
        bezier82Path.close()
        context.saveGState()
        bezier82Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 35.53, y: 0.82), startRadius: 0.22,
            endCenter: CGPoint(x: 36.57, y: 0.5), endRadius: 67.75,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 83 Drawing
        context.saveGState()
        context.setAlpha(star4Expr)
        context.setBlendMode(.color)

        let bezier83Path = UIBezierPath()
        bezier83Path.move(to: CGPoint(x: 25.6, y: 1.9))
        bezier83Path.addCurve(to: CGPoint(x: -3.04, y: 1.19), controlPoint1: CGPoint(x: 15.98, y: 1.56), controlPoint2: CGPoint(x: -3.04, y: 1.19))
        bezier83Path.addCurve(to: CGPoint(x: 25.61, y: 0.23), controlPoint1: CGPoint(x: -3.04, y: 1.19), controlPoint2: CGPoint(x: 15.97, y: 0.8))
        bezier83Path.addCurve(to: CGPoint(x: 35.52, y: -1.1), controlPoint1: CGPoint(x: 35.25, y: -0.34), controlPoint2: CGPoint(x: 33.1, y: -1.14))
        bezier83Path.addCurve(to: CGPoint(x: 46.7, y: 0.14), controlPoint1: CGPoint(x: 37.94, y: -1.06), controlPoint2: CGPoint(x: 35.5, y: -0.34))
        bezier83Path.addCurve(to: CGPoint(x: 80.34, y: 0.8), controlPoint1: CGPoint(x: 57.91, y: 0.61), controlPoint2: CGPoint(x: 80.34, y: 0.8))
        bezier83Path.addCurve(to: CGPoint(x: 46.69, y: 1.69), controlPoint1: CGPoint(x: 80.34, y: 0.8), controlPoint2: CGPoint(x: 57.92, y: 1.25))
        bezier83Path.addCurve(to: CGPoint(x: 35.44, y: 2.54), controlPoint1: CGPoint(x: 35.47, y: 2.12), controlPoint2: CGPoint(x: 37.77, y: 2.61))
        bezier83Path.addCurve(to: CGPoint(x: 25.6, y: 1.9), controlPoint1: CGPoint(x: 33.12, y: 2.47), controlPoint2: CGPoint(x: 35.22, y: 2.24))
        bezier83Path.close()
        fillColor15.setFill()
        bezier83Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 24
        context.saveGState()
        context.translateBy(x: 79.49, y: 113.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 25
        //// Bezier 84 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -11.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier84Path = UIBezierPath()
        bezier84Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier84Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier84Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier84Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier84Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier84Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier84Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier84Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier84Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier84Path.close()
        context.saveGState()
        bezier84Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 85 Drawing
        let bezier85Path = UIBezierPath()
        bezier85Path.move(to: CGPoint(x: 5.41, y: 21.85))
        bezier85Path.addCurve(to: CGPoint(x: -18.64, y: 21.13), controlPoint1: CGPoint(x: -2.67, y: 21.51), controlPoint2: CGPoint(x: -18.64, y: 21.13))
        bezier85Path.addCurve(to: CGPoint(x: 5.42, y: 20.18), controlPoint1: CGPoint(x: -18.64, y: 21.13), controlPoint2: CGPoint(x: -2.67, y: 20.75))
        bezier85Path.addCurve(to: CGPoint(x: 13.74, y: 18.85), controlPoint1: CGPoint(x: 13.51, y: 19.61), controlPoint2: CGPoint(x: 11.71, y: 18.8))
        bezier85Path.addCurve(to: CGPoint(x: 23.13, y: 20.09), controlPoint1: CGPoint(x: 15.77, y: 18.89), controlPoint2: CGPoint(x: 13.72, y: 19.61))
        bezier85Path.addCurve(to: CGPoint(x: 51.36, y: 20.75), controlPoint1: CGPoint(x: 32.53, y: 20.56), controlPoint2: CGPoint(x: 51.36, y: 20.75))
        bezier85Path.addCurve(to: CGPoint(x: 23.12, y: 21.63), controlPoint1: CGPoint(x: 51.36, y: 20.75), controlPoint2: CGPoint(x: 32.54, y: 21.2))
        bezier85Path.addCurve(to: CGPoint(x: 13.67, y: 22.49), controlPoint1: CGPoint(x: 13.7, y: 22.07), controlPoint2: CGPoint(x: 15.62, y: 22.56))
        bezier85Path.addCurve(to: CGPoint(x: 5.41, y: 21.85), controlPoint1: CGPoint(x: 11.73, y: 22.42), controlPoint2: CGPoint(x: 13.49, y: 22.19))
        bezier85Path.close()
        context.saveGState()
        bezier85Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 20.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 20.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 26
        //// Bezier 86 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -11.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier86Path = UIBezierPath()
        bezier86Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier86Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier86Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier86Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier86Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier86Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier86Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier86Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier86Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier86Path.close()
        context.saveGState()
        bezier86Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 87 Drawing
        let bezier87Path = UIBezierPath()
        bezier87Path.move(to: CGPoint(x: 5.68, y: 21.69))
        bezier87Path.addCurve(to: CGPoint(x: -18.37, y: 20.97), controlPoint1: CGPoint(x: -2.4, y: 21.35), controlPoint2: CGPoint(x: -18.37, y: 20.97))
        bezier87Path.addCurve(to: CGPoint(x: 5.69, y: 20.02), controlPoint1: CGPoint(x: -18.37, y: 20.97), controlPoint2: CGPoint(x: -2.41, y: 20.59))
        bezier87Path.addCurve(to: CGPoint(x: 14.01, y: 18.69), controlPoint1: CGPoint(x: 13.78, y: 19.45), controlPoint2: CGPoint(x: 11.98, y: 18.65))
        bezier87Path.addCurve(to: CGPoint(x: 23.39, y: 19.93), controlPoint1: CGPoint(x: 16.04, y: 18.73), controlPoint2: CGPoint(x: 13.99, y: 19.45))
        bezier87Path.addCurve(to: CGPoint(x: 51.63, y: 20.59), controlPoint1: CGPoint(x: 32.8, y: 20.4), controlPoint2: CGPoint(x: 51.63, y: 20.59))
        bezier87Path.addCurve(to: CGPoint(x: 23.39, y: 21.48), controlPoint1: CGPoint(x: 51.63, y: 20.59), controlPoint2: CGPoint(x: 32.81, y: 21.04))
        bezier87Path.addCurve(to: CGPoint(x: 13.94, y: 22.33), controlPoint1: CGPoint(x: 13.96, y: 21.91), controlPoint2: CGPoint(x: 15.89, y: 22.4))
        bezier87Path.addCurve(to: CGPoint(x: 5.68, y: 21.69), controlPoint1: CGPoint(x: 11.99, y: 22.26), controlPoint2: CGPoint(x: 13.75, y: 22.03))
        bezier87Path.close()
        context.saveGState()
        bezier87Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 20.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 20.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 27
        context.saveGState()
        context.translateBy(x: 283.49, y: 103.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 28
        //// Bezier 88 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: 111.89)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier88Path = UIBezierPath()
        bezier88Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier88Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier88Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier88Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier88Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier88Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier88Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier88Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier88Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier88Path.close()
        context.saveGState()
        bezier88Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 34.81, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 35.76, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 89 Drawing
        let bezier89Path = UIBezierPath()
        bezier89Path.move(to: CGPoint(x: -9.09, y: 147.9))
        bezier89Path.addCurve(to: CGPoint(x: -34.98, y: 147.18), controlPoint1: CGPoint(x: -17.79, y: 147.56), controlPoint2: CGPoint(x: -34.98, y: 147.18))
        bezier89Path.addCurve(to: CGPoint(x: -9.07, y: 146.23), controlPoint1: CGPoint(x: -34.98, y: 147.18), controlPoint2: CGPoint(x: -17.79, y: 146.8))
        bezier89Path.addCurve(to: CGPoint(x: -0.11, y: 144.9), controlPoint1: CGPoint(x: -0.36, y: 145.66), controlPoint2: CGPoint(x: -2.3, y: 144.85))
        bezier89Path.addCurve(to: CGPoint(x: 10, y: 146.13), controlPoint1: CGPoint(x: 2.07, y: 144.94), controlPoint2: CGPoint(x: -0.13, y: 145.66))
        bezier89Path.addCurve(to: CGPoint(x: 40.4, y: 146.79), controlPoint1: CGPoint(x: 20.13, y: 146.61), controlPoint2: CGPoint(x: 40.4, y: 146.79))
        bezier89Path.addCurve(to: CGPoint(x: 9.99, y: 147.68), controlPoint1: CGPoint(x: 40.4, y: 146.79), controlPoint2: CGPoint(x: 20.13, y: 147.25))
        bezier89Path.addCurve(to: CGPoint(x: -0.18, y: 148.53), controlPoint1: CGPoint(x: -0.16, y: 148.12), controlPoint2: CGPoint(x: 1.91, y: 148.6))
        bezier89Path.addCurve(to: CGPoint(x: -9.09, y: 147.9), controlPoint1: CGPoint(x: -2.28, y: 148.47), controlPoint2: CGPoint(x: -0.39, y: 148.23))
        bezier89Path.close()
        context.saveGState()
        bezier89Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: -0.17, y: 146.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 146.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 29
        context.saveGState()
        context.setAlpha(0)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 90 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: 111.91)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier90Path = UIBezierPath()
        bezier90Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier90Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier90Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier90Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier90Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier90Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier90Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier90Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier90Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier90Path.close()
        plane_picture_shadow_2.setFill()
        bezier90Path.fill()

        context.restoreGState()


        //// Bezier 91 Drawing
        let bezier91Path = UIBezierPath()
        bezier91Path.move(to: CGPoint(x: -9.09, y: 147.91))
        bezier91Path.addCurve(to: CGPoint(x: -34.99, y: 147.2), controlPoint1: CGPoint(x: -17.79, y: 147.57), controlPoint2: CGPoint(x: -34.99, y: 147.2))
        bezier91Path.addCurve(to: CGPoint(x: -9.08, y: 146.24), controlPoint1: CGPoint(x: -34.99, y: 147.2), controlPoint2: CGPoint(x: -17.79, y: 146.81))
        bezier91Path.addCurve(to: CGPoint(x: -0.12, y: 144.91), controlPoint1: CGPoint(x: -0.36, y: 145.67), controlPoint2: CGPoint(x: -2.3, y: 144.87))
        bezier91Path.addCurve(to: CGPoint(x: 9.99, y: 146.15), controlPoint1: CGPoint(x: 2.07, y: 144.95), controlPoint2: CGPoint(x: -0.14, y: 145.67))
        bezier91Path.addCurve(to: CGPoint(x: 40.4, y: 146.81), controlPoint1: CGPoint(x: 20.12, y: 146.62), controlPoint2: CGPoint(x: 40.4, y: 146.81))
        bezier91Path.addCurve(to: CGPoint(x: 9.98, y: 147.7), controlPoint1: CGPoint(x: 40.4, y: 146.81), controlPoint2: CGPoint(x: 20.13, y: 147.26))
        bezier91Path.addCurve(to: CGPoint(x: -0.19, y: 148.55), controlPoint1: CGPoint(x: -0.16, y: 148.13), controlPoint2: CGPoint(x: 1.91, y: 148.62))
        bezier91Path.addCurve(to: CGPoint(x: -9.09, y: 147.91), controlPoint1: CGPoint(x: -2.29, y: 148.48), controlPoint2: CGPoint(x: -0.39, y: 148.25))
        bezier91Path.close()
        plane_picture_shadow_2.setFill()
        bezier91Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 30
        context.saveGState()
        context.translateBy(x: 335.49, y: 77.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 31
        //// Bezier 92 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: 139.89)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier92Path = UIBezierPath()
        bezier92Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier92Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier92Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier92Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier92Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier92Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier92Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier92Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier92Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier92Path.close()
        context.saveGState()
        bezier92Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 34.81, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 35.76, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 93 Drawing
        let bezier93Path = UIBezierPath()
        bezier93Path.move(to: CGPoint(x: -9.09, y: 175.9))
        bezier93Path.addCurve(to: CGPoint(x: -34.98, y: 175.18), controlPoint1: CGPoint(x: -17.79, y: 175.56), controlPoint2: CGPoint(x: -34.98, y: 175.18))
        bezier93Path.addCurve(to: CGPoint(x: -9.07, y: 174.23), controlPoint1: CGPoint(x: -34.98, y: 175.18), controlPoint2: CGPoint(x: -17.79, y: 174.8))
        bezier93Path.addCurve(to: CGPoint(x: -0.11, y: 172.9), controlPoint1: CGPoint(x: -0.36, y: 173.66), controlPoint2: CGPoint(x: -2.3, y: 172.85))
        bezier93Path.addCurve(to: CGPoint(x: 10, y: 174.13), controlPoint1: CGPoint(x: 2.07, y: 172.94), controlPoint2: CGPoint(x: -0.13, y: 173.66))
        bezier93Path.addCurve(to: CGPoint(x: 40.4, y: 174.79), controlPoint1: CGPoint(x: 20.13, y: 174.61), controlPoint2: CGPoint(x: 40.4, y: 174.79))
        bezier93Path.addCurve(to: CGPoint(x: 9.99, y: 175.68), controlPoint1: CGPoint(x: 40.4, y: 174.79), controlPoint2: CGPoint(x: 20.13, y: 175.25))
        bezier93Path.addCurve(to: CGPoint(x: -0.18, y: 176.53), controlPoint1: CGPoint(x: -0.16, y: 176.12), controlPoint2: CGPoint(x: 1.91, y: 176.6))
        bezier93Path.addCurve(to: CGPoint(x: -9.09, y: 175.9), controlPoint1: CGPoint(x: -2.28, y: 176.47), controlPoint2: CGPoint(x: -0.39, y: 176.23))
        bezier93Path.close()
        context.saveGState()
        bezier93Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: -0.17, y: 174.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 174.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 32
        context.saveGState()
        context.setAlpha(star3Expr)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 94 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: 139.91)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier94Path = UIBezierPath()
        bezier94Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier94Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier94Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier94Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier94Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier94Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier94Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier94Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier94Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier94Path.close()
        plane_picture_shadow_2.setFill()
        bezier94Path.fill()

        context.restoreGState()


        //// Bezier 95 Drawing
        let bezier95Path = UIBezierPath()
        bezier95Path.move(to: CGPoint(x: -9.09, y: 175.91))
        bezier95Path.addCurve(to: CGPoint(x: -34.99, y: 175.2), controlPoint1: CGPoint(x: -17.79, y: 175.57), controlPoint2: CGPoint(x: -34.99, y: 175.2))
        bezier95Path.addCurve(to: CGPoint(x: -9.08, y: 174.24), controlPoint1: CGPoint(x: -34.99, y: 175.2), controlPoint2: CGPoint(x: -17.79, y: 174.81))
        bezier95Path.addCurve(to: CGPoint(x: -0.12, y: 172.91), controlPoint1: CGPoint(x: -0.36, y: 173.67), controlPoint2: CGPoint(x: -2.3, y: 172.87))
        bezier95Path.addCurve(to: CGPoint(x: 9.99, y: 174.15), controlPoint1: CGPoint(x: 2.07, y: 172.95), controlPoint2: CGPoint(x: -0.14, y: 173.67))
        bezier95Path.addCurve(to: CGPoint(x: 40.4, y: 174.81), controlPoint1: CGPoint(x: 20.12, y: 174.62), controlPoint2: CGPoint(x: 40.4, y: 174.81))
        bezier95Path.addCurve(to: CGPoint(x: 9.98, y: 175.7), controlPoint1: CGPoint(x: 40.4, y: 174.81), controlPoint2: CGPoint(x: 20.13, y: 175.26))
        bezier95Path.addCurve(to: CGPoint(x: -0.19, y: 176.55), controlPoint1: CGPoint(x: -0.16, y: 176.13), controlPoint2: CGPoint(x: 1.91, y: 176.62))
        bezier95Path.addCurve(to: CGPoint(x: -9.09, y: 175.91), controlPoint1: CGPoint(x: -2.29, y: 176.48), controlPoint2: CGPoint(x: -0.39, y: 176.25))
        bezier95Path.close()
        plane_picture_shadow_2.setFill()
        bezier95Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 33
        context.saveGState()
        context.translateBy(x: 103.49, y: 17.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.2)



        //// Group 34
        //// Bezier 96 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 1.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier96Path = UIBezierPath()
        bezier96Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier96Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier96Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier96Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier96Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier96Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier96Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier96Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier96Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier96Path.close()
        context.saveGState()
        bezier96Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 97 Drawing
        let bezier97Path = UIBezierPath()
        bezier97Path.move(to: CGPoint(x: 5.41, y: 34.85))
        bezier97Path.addCurve(to: CGPoint(x: -18.64, y: 34.13), controlPoint1: CGPoint(x: -2.67, y: 34.51), controlPoint2: CGPoint(x: -18.64, y: 34.13))
        bezier97Path.addCurve(to: CGPoint(x: 5.42, y: 33.18), controlPoint1: CGPoint(x: -18.64, y: 34.13), controlPoint2: CGPoint(x: -2.67, y: 33.75))
        bezier97Path.addCurve(to: CGPoint(x: 13.74, y: 31.85), controlPoint1: CGPoint(x: 13.51, y: 32.61), controlPoint2: CGPoint(x: 11.71, y: 31.8))
        bezier97Path.addCurve(to: CGPoint(x: 23.13, y: 33.09), controlPoint1: CGPoint(x: 15.77, y: 31.89), controlPoint2: CGPoint(x: 13.72, y: 32.61))
        bezier97Path.addCurve(to: CGPoint(x: 51.36, y: 33.75), controlPoint1: CGPoint(x: 32.53, y: 33.56), controlPoint2: CGPoint(x: 51.36, y: 33.75))
        bezier97Path.addCurve(to: CGPoint(x: 23.12, y: 34.63), controlPoint1: CGPoint(x: 51.36, y: 33.75), controlPoint2: CGPoint(x: 32.54, y: 34.2))
        bezier97Path.addCurve(to: CGPoint(x: 13.67, y: 35.49), controlPoint1: CGPoint(x: 13.7, y: 35.07), controlPoint2: CGPoint(x: 15.62, y: 35.56))
        bezier97Path.addCurve(to: CGPoint(x: 5.41, y: 34.85), controlPoint1: CGPoint(x: 11.73, y: 35.42), controlPoint2: CGPoint(x: 13.49, y: 35.19))
        bezier97Path.close()
        context.saveGState()
        bezier97Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 33.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 33.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 35
        //// Bezier 98 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 1.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier98Path = UIBezierPath()
        bezier98Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier98Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier98Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier98Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier98Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier98Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier98Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier98Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier98Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier98Path.close()
        context.saveGState()
        bezier98Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 99 Drawing
        let bezier99Path = UIBezierPath()
        bezier99Path.move(to: CGPoint(x: 5.68, y: 34.69))
        bezier99Path.addCurve(to: CGPoint(x: -18.37, y: 33.97), controlPoint1: CGPoint(x: -2.4, y: 34.35), controlPoint2: CGPoint(x: -18.37, y: 33.97))
        bezier99Path.addCurve(to: CGPoint(x: 5.69, y: 33.02), controlPoint1: CGPoint(x: -18.37, y: 33.97), controlPoint2: CGPoint(x: -2.41, y: 33.59))
        bezier99Path.addCurve(to: CGPoint(x: 14.01, y: 31.69), controlPoint1: CGPoint(x: 13.78, y: 32.45), controlPoint2: CGPoint(x: 11.98, y: 31.65))
        bezier99Path.addCurve(to: CGPoint(x: 23.39, y: 32.93), controlPoint1: CGPoint(x: 16.04, y: 31.73), controlPoint2: CGPoint(x: 13.99, y: 32.45))
        bezier99Path.addCurve(to: CGPoint(x: 51.63, y: 33.59), controlPoint1: CGPoint(x: 32.8, y: 33.4), controlPoint2: CGPoint(x: 51.63, y: 33.59))
        bezier99Path.addCurve(to: CGPoint(x: 23.39, y: 34.48), controlPoint1: CGPoint(x: 51.63, y: 33.59), controlPoint2: CGPoint(x: 32.81, y: 34.04))
        bezier99Path.addCurve(to: CGPoint(x: 13.94, y: 35.33), controlPoint1: CGPoint(x: 13.96, y: 34.91), controlPoint2: CGPoint(x: 15.89, y: 35.4))
        bezier99Path.addCurve(to: CGPoint(x: 5.68, y: 34.69), controlPoint1: CGPoint(x: 11.99, y: 35.26), controlPoint2: CGPoint(x: 13.75, y: 35.03))
        bezier99Path.close()
        context.saveGState()
        bezier99Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 33.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 33.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 36
        context.saveGState()
        context.translateBy(x: 120.49, y: 42.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.4, y: 0.4)



        //// Group 37
        //// Bezier 100 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -21.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier100Path = UIBezierPath()
        bezier100Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier100Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier100Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier100Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier100Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier100Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier100Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier100Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier100Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier100Path.close()
        context.saveGState()
        bezier100Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 101 Drawing
        let bezier101Path = UIBezierPath()
        bezier101Path.move(to: CGPoint(x: 5.41, y: 11.85))
        bezier101Path.addCurve(to: CGPoint(x: -18.64, y: 11.13), controlPoint1: CGPoint(x: -2.67, y: 11.51), controlPoint2: CGPoint(x: -18.64, y: 11.13))
        bezier101Path.addCurve(to: CGPoint(x: 5.42, y: 10.18), controlPoint1: CGPoint(x: -18.64, y: 11.13), controlPoint2: CGPoint(x: -2.67, y: 10.75))
        bezier101Path.addCurve(to: CGPoint(x: 13.74, y: 8.85), controlPoint1: CGPoint(x: 13.51, y: 9.61), controlPoint2: CGPoint(x: 11.71, y: 8.8))
        bezier101Path.addCurve(to: CGPoint(x: 23.13, y: 10.09), controlPoint1: CGPoint(x: 15.77, y: 8.89), controlPoint2: CGPoint(x: 13.72, y: 9.61))
        bezier101Path.addCurve(to: CGPoint(x: 51.36, y: 10.75), controlPoint1: CGPoint(x: 32.53, y: 10.56), controlPoint2: CGPoint(x: 51.36, y: 10.75))
        bezier101Path.addCurve(to: CGPoint(x: 23.12, y: 11.63), controlPoint1: CGPoint(x: 51.36, y: 10.75), controlPoint2: CGPoint(x: 32.54, y: 11.2))
        bezier101Path.addCurve(to: CGPoint(x: 13.67, y: 12.49), controlPoint1: CGPoint(x: 13.7, y: 12.07), controlPoint2: CGPoint(x: 15.62, y: 12.56))
        bezier101Path.addCurve(to: CGPoint(x: 5.41, y: 11.85), controlPoint1: CGPoint(x: 11.73, y: 12.42), controlPoint2: CGPoint(x: 13.49, y: 12.19))
        bezier101Path.close()
        context.saveGState()
        bezier101Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 10.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 10.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 38
        //// Bezier 102 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -21.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier102Path = UIBezierPath()
        bezier102Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier102Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier102Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier102Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier102Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier102Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier102Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier102Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier102Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier102Path.close()
        context.saveGState()
        bezier102Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 103 Drawing
        let bezier103Path = UIBezierPath()
        bezier103Path.move(to: CGPoint(x: 5.68, y: 11.69))
        bezier103Path.addCurve(to: CGPoint(x: -18.37, y: 10.97), controlPoint1: CGPoint(x: -2.4, y: 11.35), controlPoint2: CGPoint(x: -18.37, y: 10.97))
        bezier103Path.addCurve(to: CGPoint(x: 5.69, y: 10.02), controlPoint1: CGPoint(x: -18.37, y: 10.97), controlPoint2: CGPoint(x: -2.41, y: 10.59))
        bezier103Path.addCurve(to: CGPoint(x: 14.01, y: 8.69), controlPoint1: CGPoint(x: 13.78, y: 9.45), controlPoint2: CGPoint(x: 11.98, y: 8.65))
        bezier103Path.addCurve(to: CGPoint(x: 23.39, y: 9.93), controlPoint1: CGPoint(x: 16.04, y: 8.73), controlPoint2: CGPoint(x: 13.99, y: 9.45))
        bezier103Path.addCurve(to: CGPoint(x: 51.63, y: 10.59), controlPoint1: CGPoint(x: 32.8, y: 10.4), controlPoint2: CGPoint(x: 51.63, y: 10.59))
        bezier103Path.addCurve(to: CGPoint(x: 23.39, y: 11.48), controlPoint1: CGPoint(x: 51.63, y: 10.59), controlPoint2: CGPoint(x: 32.81, y: 11.04))
        bezier103Path.addCurve(to: CGPoint(x: 13.94, y: 12.33), controlPoint1: CGPoint(x: 13.96, y: 11.91), controlPoint2: CGPoint(x: 15.89, y: 12.4))
        bezier103Path.addCurve(to: CGPoint(x: 5.68, y: 11.69), controlPoint1: CGPoint(x: 11.99, y: 12.26), controlPoint2: CGPoint(x: 13.75, y: 12.03))
        bezier103Path.close()
        context.saveGState()
        bezier103Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 10.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 10.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 39
        context.saveGState()
        context.translateBy(x: 144.49, y: 30.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 40
        //// Bezier 104 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 23.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier104Path = UIBezierPath()
        bezier104Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier104Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier104Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier104Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier104Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier104Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier104Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier104Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier104Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier104Path.close()
        context.saveGState()
        bezier104Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 105 Drawing
        let bezier105Path = UIBezierPath()
        bezier105Path.move(to: CGPoint(x: 5.41, y: 56.85))
        bezier105Path.addCurve(to: CGPoint(x: -18.64, y: 56.13), controlPoint1: CGPoint(x: -2.67, y: 56.51), controlPoint2: CGPoint(x: -18.64, y: 56.13))
        bezier105Path.addCurve(to: CGPoint(x: 5.42, y: 55.18), controlPoint1: CGPoint(x: -18.64, y: 56.13), controlPoint2: CGPoint(x: -2.67, y: 55.75))
        bezier105Path.addCurve(to: CGPoint(x: 13.74, y: 53.85), controlPoint1: CGPoint(x: 13.51, y: 54.61), controlPoint2: CGPoint(x: 11.71, y: 53.8))
        bezier105Path.addCurve(to: CGPoint(x: 23.13, y: 55.09), controlPoint1: CGPoint(x: 15.77, y: 53.89), controlPoint2: CGPoint(x: 13.72, y: 54.61))
        bezier105Path.addCurve(to: CGPoint(x: 51.36, y: 55.75), controlPoint1: CGPoint(x: 32.53, y: 55.56), controlPoint2: CGPoint(x: 51.36, y: 55.75))
        bezier105Path.addCurve(to: CGPoint(x: 23.12, y: 56.63), controlPoint1: CGPoint(x: 51.36, y: 55.75), controlPoint2: CGPoint(x: 32.54, y: 56.2))
        bezier105Path.addCurve(to: CGPoint(x: 13.67, y: 57.49), controlPoint1: CGPoint(x: 13.7, y: 57.07), controlPoint2: CGPoint(x: 15.62, y: 57.56))
        bezier105Path.addCurve(to: CGPoint(x: 5.41, y: 56.85), controlPoint1: CGPoint(x: 11.73, y: 57.42), controlPoint2: CGPoint(x: 13.49, y: 57.19))
        bezier105Path.close()
        context.saveGState()
        bezier105Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 55.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 55.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 41
        //// Bezier 106 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 23.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier106Path = UIBezierPath()
        bezier106Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier106Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier106Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier106Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier106Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier106Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier106Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier106Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier106Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier106Path.close()
        context.saveGState()
        bezier106Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 107 Drawing
        let bezier107Path = UIBezierPath()
        bezier107Path.move(to: CGPoint(x: 5.68, y: 56.69))
        bezier107Path.addCurve(to: CGPoint(x: -18.37, y: 55.97), controlPoint1: CGPoint(x: -2.4, y: 56.35), controlPoint2: CGPoint(x: -18.37, y: 55.97))
        bezier107Path.addCurve(to: CGPoint(x: 5.69, y: 55.02), controlPoint1: CGPoint(x: -18.37, y: 55.97), controlPoint2: CGPoint(x: -2.41, y: 55.59))
        bezier107Path.addCurve(to: CGPoint(x: 14.01, y: 53.69), controlPoint1: CGPoint(x: 13.78, y: 54.45), controlPoint2: CGPoint(x: 11.98, y: 53.65))
        bezier107Path.addCurve(to: CGPoint(x: 23.39, y: 54.93), controlPoint1: CGPoint(x: 16.04, y: 53.73), controlPoint2: CGPoint(x: 13.99, y: 54.45))
        bezier107Path.addCurve(to: CGPoint(x: 51.63, y: 55.59), controlPoint1: CGPoint(x: 32.8, y: 55.4), controlPoint2: CGPoint(x: 51.63, y: 55.59))
        bezier107Path.addCurve(to: CGPoint(x: 23.39, y: 56.48), controlPoint1: CGPoint(x: 51.63, y: 55.59), controlPoint2: CGPoint(x: 32.81, y: 56.04))
        bezier107Path.addCurve(to: CGPoint(x: 13.94, y: 57.33), controlPoint1: CGPoint(x: 13.96, y: 56.91), controlPoint2: CGPoint(x: 15.89, y: 57.4))
        bezier107Path.addCurve(to: CGPoint(x: 5.68, y: 56.69), controlPoint1: CGPoint(x: 11.99, y: 57.26), controlPoint2: CGPoint(x: 13.75, y: 57.03))
        bezier107Path.close()
        context.saveGState()
        bezier107Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 55.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 55.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 42
        context.saveGState()
        context.translateBy(x: 154.49, y: 40.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 43
        //// Bezier 108 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 28.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier108Path = UIBezierPath()
        bezier108Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier108Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier108Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier108Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier108Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier108Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier108Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier108Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier108Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier108Path.close()
        context.saveGState()
        bezier108Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 109 Drawing
        let bezier109Path = UIBezierPath()
        bezier109Path.move(to: CGPoint(x: 5.41, y: 61.85))
        bezier109Path.addCurve(to: CGPoint(x: -18.64, y: 61.13), controlPoint1: CGPoint(x: -2.67, y: 61.51), controlPoint2: CGPoint(x: -18.64, y: 61.13))
        bezier109Path.addCurve(to: CGPoint(x: 5.42, y: 60.18), controlPoint1: CGPoint(x: -18.64, y: 61.13), controlPoint2: CGPoint(x: -2.67, y: 60.75))
        bezier109Path.addCurve(to: CGPoint(x: 13.74, y: 58.85), controlPoint1: CGPoint(x: 13.51, y: 59.61), controlPoint2: CGPoint(x: 11.71, y: 58.8))
        bezier109Path.addCurve(to: CGPoint(x: 23.13, y: 60.09), controlPoint1: CGPoint(x: 15.77, y: 58.89), controlPoint2: CGPoint(x: 13.72, y: 59.61))
        bezier109Path.addCurve(to: CGPoint(x: 51.36, y: 60.75), controlPoint1: CGPoint(x: 32.53, y: 60.56), controlPoint2: CGPoint(x: 51.36, y: 60.75))
        bezier109Path.addCurve(to: CGPoint(x: 23.12, y: 61.63), controlPoint1: CGPoint(x: 51.36, y: 60.75), controlPoint2: CGPoint(x: 32.54, y: 61.2))
        bezier109Path.addCurve(to: CGPoint(x: 13.67, y: 62.49), controlPoint1: CGPoint(x: 13.7, y: 62.07), controlPoint2: CGPoint(x: 15.62, y: 62.56))
        bezier109Path.addCurve(to: CGPoint(x: 5.41, y: 61.85), controlPoint1: CGPoint(x: 11.73, y: 62.42), controlPoint2: CGPoint(x: 13.49, y: 62.19))
        bezier109Path.close()
        context.saveGState()
        bezier109Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 60.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 60.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 44
        //// Bezier 110 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 28.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier110Path = UIBezierPath()
        bezier110Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier110Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier110Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier110Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier110Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier110Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier110Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier110Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier110Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier110Path.close()
        context.saveGState()
        bezier110Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 111 Drawing
        let bezier111Path = UIBezierPath()
        bezier111Path.move(to: CGPoint(x: 5.68, y: 61.69))
        bezier111Path.addCurve(to: CGPoint(x: -18.37, y: 60.97), controlPoint1: CGPoint(x: -2.4, y: 61.35), controlPoint2: CGPoint(x: -18.37, y: 60.97))
        bezier111Path.addCurve(to: CGPoint(x: 5.69, y: 60.02), controlPoint1: CGPoint(x: -18.37, y: 60.97), controlPoint2: CGPoint(x: -2.41, y: 60.59))
        bezier111Path.addCurve(to: CGPoint(x: 14.01, y: 58.69), controlPoint1: CGPoint(x: 13.78, y: 59.45), controlPoint2: CGPoint(x: 11.98, y: 58.65))
        bezier111Path.addCurve(to: CGPoint(x: 23.39, y: 59.93), controlPoint1: CGPoint(x: 16.04, y: 58.73), controlPoint2: CGPoint(x: 13.99, y: 59.45))
        bezier111Path.addCurve(to: CGPoint(x: 51.63, y: 60.59), controlPoint1: CGPoint(x: 32.8, y: 60.4), controlPoint2: CGPoint(x: 51.63, y: 60.59))
        bezier111Path.addCurve(to: CGPoint(x: 23.39, y: 61.48), controlPoint1: CGPoint(x: 51.63, y: 60.59), controlPoint2: CGPoint(x: 32.81, y: 61.04))
        bezier111Path.addCurve(to: CGPoint(x: 13.94, y: 62.33), controlPoint1: CGPoint(x: 13.96, y: 61.91), controlPoint2: CGPoint(x: 15.89, y: 62.4))
        bezier111Path.addCurve(to: CGPoint(x: 5.68, y: 61.69), controlPoint1: CGPoint(x: 11.99, y: 62.26), controlPoint2: CGPoint(x: 13.75, y: 62.03))
        bezier111Path.close()
        context.saveGState()
        bezier111Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 60.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 60.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 45
        context.saveGState()
        context.translateBy(x: 74.49, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 46
        //// Bezier 112 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -13.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier112Path = UIBezierPath()
        bezier112Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier112Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier112Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier112Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier112Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier112Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier112Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier112Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier112Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier112Path.close()
        context.saveGState()
        bezier112Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 113 Drawing
        let bezier113Path = UIBezierPath()
        bezier113Path.move(to: CGPoint(x: 5.41, y: 19.85))
        bezier113Path.addCurve(to: CGPoint(x: -18.64, y: 19.13), controlPoint1: CGPoint(x: -2.67, y: 19.51), controlPoint2: CGPoint(x: -18.64, y: 19.13))
        bezier113Path.addCurve(to: CGPoint(x: 5.42, y: 18.18), controlPoint1: CGPoint(x: -18.64, y: 19.13), controlPoint2: CGPoint(x: -2.67, y: 18.75))
        bezier113Path.addCurve(to: CGPoint(x: 13.74, y: 16.85), controlPoint1: CGPoint(x: 13.51, y: 17.61), controlPoint2: CGPoint(x: 11.71, y: 16.8))
        bezier113Path.addCurve(to: CGPoint(x: 23.13, y: 18.09), controlPoint1: CGPoint(x: 15.77, y: 16.89), controlPoint2: CGPoint(x: 13.72, y: 17.61))
        bezier113Path.addCurve(to: CGPoint(x: 51.36, y: 18.75), controlPoint1: CGPoint(x: 32.53, y: 18.56), controlPoint2: CGPoint(x: 51.36, y: 18.75))
        bezier113Path.addCurve(to: CGPoint(x: 23.12, y: 19.63), controlPoint1: CGPoint(x: 51.36, y: 18.75), controlPoint2: CGPoint(x: 32.54, y: 19.2))
        bezier113Path.addCurve(to: CGPoint(x: 13.67, y: 20.49), controlPoint1: CGPoint(x: 13.7, y: 20.07), controlPoint2: CGPoint(x: 15.62, y: 20.56))
        bezier113Path.addCurve(to: CGPoint(x: 5.41, y: 19.85), controlPoint1: CGPoint(x: 11.73, y: 20.42), controlPoint2: CGPoint(x: 13.49, y: 20.19))
        bezier113Path.close()
        context.saveGState()
        bezier113Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 18.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 18.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 47
        //// Bezier 114 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -13.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier114Path = UIBezierPath()
        bezier114Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier114Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier114Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier114Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier114Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier114Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier114Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier114Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier114Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier114Path.close()
        context.saveGState()
        bezier114Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 115 Drawing
        let bezier115Path = UIBezierPath()
        bezier115Path.move(to: CGPoint(x: 5.68, y: 19.69))
        bezier115Path.addCurve(to: CGPoint(x: -18.37, y: 18.97), controlPoint1: CGPoint(x: -2.4, y: 19.35), controlPoint2: CGPoint(x: -18.37, y: 18.97))
        bezier115Path.addCurve(to: CGPoint(x: 5.69, y: 18.02), controlPoint1: CGPoint(x: -18.37, y: 18.97), controlPoint2: CGPoint(x: -2.41, y: 18.59))
        bezier115Path.addCurve(to: CGPoint(x: 14.01, y: 16.69), controlPoint1: CGPoint(x: 13.78, y: 17.45), controlPoint2: CGPoint(x: 11.98, y: 16.65))
        bezier115Path.addCurve(to: CGPoint(x: 23.39, y: 17.93), controlPoint1: CGPoint(x: 16.04, y: 16.73), controlPoint2: CGPoint(x: 13.99, y: 17.45))
        bezier115Path.addCurve(to: CGPoint(x: 51.63, y: 18.59), controlPoint1: CGPoint(x: 32.8, y: 18.4), controlPoint2: CGPoint(x: 51.63, y: 18.59))
        bezier115Path.addCurve(to: CGPoint(x: 23.39, y: 19.48), controlPoint1: CGPoint(x: 51.63, y: 18.59), controlPoint2: CGPoint(x: 32.81, y: 19.04))
        bezier115Path.addCurve(to: CGPoint(x: 13.94, y: 20.33), controlPoint1: CGPoint(x: 13.96, y: 19.91), controlPoint2: CGPoint(x: 15.89, y: 20.4))
        bezier115Path.addCurve(to: CGPoint(x: 5.68, y: 19.69), controlPoint1: CGPoint(x: 11.99, y: 20.26), controlPoint2: CGPoint(x: 13.75, y: 20.03))
        bezier115Path.close()
        context.saveGState()
        bezier115Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 18.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 18.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 48
        context.saveGState()
        context.translateBy(x: 84.49, y: 28.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 49
        //// Bezier 116 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -8.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier116Path = UIBezierPath()
        bezier116Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier116Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier116Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier116Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier116Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier116Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier116Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier116Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier116Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier116Path.close()
        context.saveGState()
        bezier116Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 117 Drawing
        let bezier117Path = UIBezierPath()
        bezier117Path.move(to: CGPoint(x: 5.41, y: 24.85))
        bezier117Path.addCurve(to: CGPoint(x: -18.64, y: 24.13), controlPoint1: CGPoint(x: -2.67, y: 24.51), controlPoint2: CGPoint(x: -18.64, y: 24.13))
        bezier117Path.addCurve(to: CGPoint(x: 5.42, y: 23.18), controlPoint1: CGPoint(x: -18.64, y: 24.13), controlPoint2: CGPoint(x: -2.67, y: 23.75))
        bezier117Path.addCurve(to: CGPoint(x: 13.74, y: 21.85), controlPoint1: CGPoint(x: 13.51, y: 22.61), controlPoint2: CGPoint(x: 11.71, y: 21.8))
        bezier117Path.addCurve(to: CGPoint(x: 23.13, y: 23.09), controlPoint1: CGPoint(x: 15.77, y: 21.89), controlPoint2: CGPoint(x: 13.72, y: 22.61))
        bezier117Path.addCurve(to: CGPoint(x: 51.36, y: 23.75), controlPoint1: CGPoint(x: 32.53, y: 23.56), controlPoint2: CGPoint(x: 51.36, y: 23.75))
        bezier117Path.addCurve(to: CGPoint(x: 23.12, y: 24.63), controlPoint1: CGPoint(x: 51.36, y: 23.75), controlPoint2: CGPoint(x: 32.54, y: 24.2))
        bezier117Path.addCurve(to: CGPoint(x: 13.67, y: 25.49), controlPoint1: CGPoint(x: 13.7, y: 25.07), controlPoint2: CGPoint(x: 15.62, y: 25.56))
        bezier117Path.addCurve(to: CGPoint(x: 5.41, y: 24.85), controlPoint1: CGPoint(x: 11.73, y: 25.42), controlPoint2: CGPoint(x: 13.49, y: 25.19))
        bezier117Path.close()
        context.saveGState()
        bezier117Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 23.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 23.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 50
        //// Bezier 118 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -8.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier118Path = UIBezierPath()
        bezier118Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier118Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier118Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier118Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier118Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier118Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier118Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier118Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier118Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier118Path.close()
        context.saveGState()
        bezier118Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 119 Drawing
        let bezier119Path = UIBezierPath()
        bezier119Path.move(to: CGPoint(x: 5.68, y: 24.69))
        bezier119Path.addCurve(to: CGPoint(x: -18.37, y: 23.97), controlPoint1: CGPoint(x: -2.4, y: 24.35), controlPoint2: CGPoint(x: -18.37, y: 23.97))
        bezier119Path.addCurve(to: CGPoint(x: 5.69, y: 23.02), controlPoint1: CGPoint(x: -18.37, y: 23.97), controlPoint2: CGPoint(x: -2.41, y: 23.59))
        bezier119Path.addCurve(to: CGPoint(x: 14.01, y: 21.69), controlPoint1: CGPoint(x: 13.78, y: 22.45), controlPoint2: CGPoint(x: 11.98, y: 21.65))
        bezier119Path.addCurve(to: CGPoint(x: 23.39, y: 22.93), controlPoint1: CGPoint(x: 16.04, y: 21.73), controlPoint2: CGPoint(x: 13.99, y: 22.45))
        bezier119Path.addCurve(to: CGPoint(x: 51.63, y: 23.59), controlPoint1: CGPoint(x: 32.8, y: 23.4), controlPoint2: CGPoint(x: 51.63, y: 23.59))
        bezier119Path.addCurve(to: CGPoint(x: 23.39, y: 24.48), controlPoint1: CGPoint(x: 51.63, y: 23.59), controlPoint2: CGPoint(x: 32.81, y: 24.04))
        bezier119Path.addCurve(to: CGPoint(x: 13.94, y: 25.33), controlPoint1: CGPoint(x: 13.96, y: 24.91), controlPoint2: CGPoint(x: 15.89, y: 25.4))
        bezier119Path.addCurve(to: CGPoint(x: 5.68, y: 24.69), controlPoint1: CGPoint(x: 11.99, y: 25.26), controlPoint2: CGPoint(x: 13.75, y: 25.03))
        bezier119Path.close()
        context.saveGState()
        bezier119Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 23.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 23.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 51
        context.saveGState()
        context.translateBy(x: 129.49, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 52
        //// Bezier 120 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 15.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier120Path = UIBezierPath()
        bezier120Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier120Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier120Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier120Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier120Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier120Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier120Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier120Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier120Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier120Path.close()
        context.saveGState()
        bezier120Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 121 Drawing
        let bezier121Path = UIBezierPath()
        bezier121Path.move(to: CGPoint(x: 5.41, y: 48.85))
        bezier121Path.addCurve(to: CGPoint(x: -18.64, y: 48.13), controlPoint1: CGPoint(x: -2.67, y: 48.51), controlPoint2: CGPoint(x: -18.64, y: 48.13))
        bezier121Path.addCurve(to: CGPoint(x: 5.42, y: 47.18), controlPoint1: CGPoint(x: -18.64, y: 48.13), controlPoint2: CGPoint(x: -2.67, y: 47.75))
        bezier121Path.addCurve(to: CGPoint(x: 13.74, y: 45.85), controlPoint1: CGPoint(x: 13.51, y: 46.61), controlPoint2: CGPoint(x: 11.71, y: 45.8))
        bezier121Path.addCurve(to: CGPoint(x: 23.13, y: 47.09), controlPoint1: CGPoint(x: 15.77, y: 45.89), controlPoint2: CGPoint(x: 13.72, y: 46.61))
        bezier121Path.addCurve(to: CGPoint(x: 51.36, y: 47.75), controlPoint1: CGPoint(x: 32.53, y: 47.56), controlPoint2: CGPoint(x: 51.36, y: 47.75))
        bezier121Path.addCurve(to: CGPoint(x: 23.12, y: 48.63), controlPoint1: CGPoint(x: 51.36, y: 47.75), controlPoint2: CGPoint(x: 32.54, y: 48.2))
        bezier121Path.addCurve(to: CGPoint(x: 13.67, y: 49.49), controlPoint1: CGPoint(x: 13.7, y: 49.07), controlPoint2: CGPoint(x: 15.62, y: 49.56))
        bezier121Path.addCurve(to: CGPoint(x: 5.41, y: 48.85), controlPoint1: CGPoint(x: 11.73, y: 49.42), controlPoint2: CGPoint(x: 13.49, y: 49.19))
        bezier121Path.close()
        context.saveGState()
        bezier121Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 47.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 47.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 53
        //// Bezier 122 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 15.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier122Path = UIBezierPath()
        bezier122Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier122Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier122Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier122Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier122Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier122Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier122Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier122Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier122Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier122Path.close()
        context.saveGState()
        bezier122Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 123 Drawing
        let bezier123Path = UIBezierPath()
        bezier123Path.move(to: CGPoint(x: 5.68, y: 48.69))
        bezier123Path.addCurve(to: CGPoint(x: -18.37, y: 47.97), controlPoint1: CGPoint(x: -2.4, y: 48.35), controlPoint2: CGPoint(x: -18.37, y: 47.97))
        bezier123Path.addCurve(to: CGPoint(x: 5.69, y: 47.02), controlPoint1: CGPoint(x: -18.37, y: 47.97), controlPoint2: CGPoint(x: -2.41, y: 47.59))
        bezier123Path.addCurve(to: CGPoint(x: 14.01, y: 45.69), controlPoint1: CGPoint(x: 13.78, y: 46.45), controlPoint2: CGPoint(x: 11.98, y: 45.65))
        bezier123Path.addCurve(to: CGPoint(x: 23.39, y: 46.93), controlPoint1: CGPoint(x: 16.04, y: 45.73), controlPoint2: CGPoint(x: 13.99, y: 46.45))
        bezier123Path.addCurve(to: CGPoint(x: 51.63, y: 47.59), controlPoint1: CGPoint(x: 32.8, y: 47.4), controlPoint2: CGPoint(x: 51.63, y: 47.59))
        bezier123Path.addCurve(to: CGPoint(x: 23.39, y: 48.48), controlPoint1: CGPoint(x: 51.63, y: 47.59), controlPoint2: CGPoint(x: 32.81, y: 48.04))
        bezier123Path.addCurve(to: CGPoint(x: 13.94, y: 49.33), controlPoint1: CGPoint(x: 13.96, y: 48.91), controlPoint2: CGPoint(x: 15.89, y: 49.4))
        bezier123Path.addCurve(to: CGPoint(x: 5.68, y: 48.69), controlPoint1: CGPoint(x: 11.99, y: 49.26), controlPoint2: CGPoint(x: 13.75, y: 49.03))
        bezier123Path.close()
        context.saveGState()
        bezier123Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 47.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 47.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 54
        context.saveGState()
        context.translateBy(x: 176.49, y: 17.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 55
        //// Bezier 124 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 40.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier124Path = UIBezierPath()
        bezier124Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier124Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier124Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier124Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier124Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier124Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier124Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier124Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier124Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier124Path.close()
        context.saveGState()
        bezier124Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 125 Drawing
        let bezier125Path = UIBezierPath()
        bezier125Path.move(to: CGPoint(x: 5.41, y: 73.85))
        bezier125Path.addCurve(to: CGPoint(x: -18.64, y: 73.13), controlPoint1: CGPoint(x: -2.67, y: 73.51), controlPoint2: CGPoint(x: -18.64, y: 73.13))
        bezier125Path.addCurve(to: CGPoint(x: 5.42, y: 72.18), controlPoint1: CGPoint(x: -18.64, y: 73.13), controlPoint2: CGPoint(x: -2.67, y: 72.75))
        bezier125Path.addCurve(to: CGPoint(x: 13.74, y: 70.85), controlPoint1: CGPoint(x: 13.51, y: 71.61), controlPoint2: CGPoint(x: 11.71, y: 70.8))
        bezier125Path.addCurve(to: CGPoint(x: 23.13, y: 72.09), controlPoint1: CGPoint(x: 15.77, y: 70.89), controlPoint2: CGPoint(x: 13.72, y: 71.61))
        bezier125Path.addCurve(to: CGPoint(x: 51.36, y: 72.75), controlPoint1: CGPoint(x: 32.53, y: 72.56), controlPoint2: CGPoint(x: 51.36, y: 72.75))
        bezier125Path.addCurve(to: CGPoint(x: 23.12, y: 73.63), controlPoint1: CGPoint(x: 51.36, y: 72.75), controlPoint2: CGPoint(x: 32.54, y: 73.2))
        bezier125Path.addCurve(to: CGPoint(x: 13.67, y: 74.49), controlPoint1: CGPoint(x: 13.7, y: 74.07), controlPoint2: CGPoint(x: 15.62, y: 74.56))
        bezier125Path.addCurve(to: CGPoint(x: 5.41, y: 73.85), controlPoint1: CGPoint(x: 11.73, y: 74.42), controlPoint2: CGPoint(x: 13.49, y: 74.19))
        bezier125Path.close()
        context.saveGState()
        bezier125Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 72.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 72.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 56
        //// Bezier 126 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 40.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier126Path = UIBezierPath()
        bezier126Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier126Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier126Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier126Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier126Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier126Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier126Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier126Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier126Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier126Path.close()
        context.saveGState()
        bezier126Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 127 Drawing
        let bezier127Path = UIBezierPath()
        bezier127Path.move(to: CGPoint(x: 5.68, y: 73.69))
        bezier127Path.addCurve(to: CGPoint(x: -18.37, y: 72.97), controlPoint1: CGPoint(x: -2.4, y: 73.35), controlPoint2: CGPoint(x: -18.37, y: 72.97))
        bezier127Path.addCurve(to: CGPoint(x: 5.69, y: 72.02), controlPoint1: CGPoint(x: -18.37, y: 72.97), controlPoint2: CGPoint(x: -2.41, y: 72.59))
        bezier127Path.addCurve(to: CGPoint(x: 14.01, y: 70.69), controlPoint1: CGPoint(x: 13.78, y: 71.45), controlPoint2: CGPoint(x: 11.98, y: 70.65))
        bezier127Path.addCurve(to: CGPoint(x: 23.39, y: 71.93), controlPoint1: CGPoint(x: 16.04, y: 70.73), controlPoint2: CGPoint(x: 13.99, y: 71.45))
        bezier127Path.addCurve(to: CGPoint(x: 51.63, y: 72.59), controlPoint1: CGPoint(x: 32.8, y: 72.4), controlPoint2: CGPoint(x: 51.63, y: 72.59))
        bezier127Path.addCurve(to: CGPoint(x: 23.39, y: 73.48), controlPoint1: CGPoint(x: 51.63, y: 72.59), controlPoint2: CGPoint(x: 32.81, y: 73.04))
        bezier127Path.addCurve(to: CGPoint(x: 13.94, y: 74.33), controlPoint1: CGPoint(x: 13.96, y: 73.91), controlPoint2: CGPoint(x: 15.89, y: 74.4))
        bezier127Path.addCurve(to: CGPoint(x: 5.68, y: 73.69), controlPoint1: CGPoint(x: 11.99, y: 74.26), controlPoint2: CGPoint(x: 13.75, y: 74.03))
        bezier127Path.close()
        context.saveGState()
        bezier127Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 72.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 72.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 57
        context.saveGState()
        context.translateBy(x: 186.49, y: 44.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 58
        //// Bezier 128 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 45.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier128Path = UIBezierPath()
        bezier128Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier128Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier128Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier128Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier128Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier128Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier128Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier128Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier128Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier128Path.close()
        context.saveGState()
        bezier128Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 129 Drawing
        let bezier129Path = UIBezierPath()
        bezier129Path.move(to: CGPoint(x: 5.41, y: 78.85))
        bezier129Path.addCurve(to: CGPoint(x: -18.64, y: 78.13), controlPoint1: CGPoint(x: -2.67, y: 78.51), controlPoint2: CGPoint(x: -18.64, y: 78.13))
        bezier129Path.addCurve(to: CGPoint(x: 5.42, y: 77.18), controlPoint1: CGPoint(x: -18.64, y: 78.13), controlPoint2: CGPoint(x: -2.67, y: 77.75))
        bezier129Path.addCurve(to: CGPoint(x: 13.74, y: 75.85), controlPoint1: CGPoint(x: 13.51, y: 76.61), controlPoint2: CGPoint(x: 11.71, y: 75.8))
        bezier129Path.addCurve(to: CGPoint(x: 23.13, y: 77.09), controlPoint1: CGPoint(x: 15.77, y: 75.89), controlPoint2: CGPoint(x: 13.72, y: 76.61))
        bezier129Path.addCurve(to: CGPoint(x: 51.36, y: 77.75), controlPoint1: CGPoint(x: 32.53, y: 77.56), controlPoint2: CGPoint(x: 51.36, y: 77.75))
        bezier129Path.addCurve(to: CGPoint(x: 23.12, y: 78.63), controlPoint1: CGPoint(x: 51.36, y: 77.75), controlPoint2: CGPoint(x: 32.54, y: 78.2))
        bezier129Path.addCurve(to: CGPoint(x: 13.67, y: 79.49), controlPoint1: CGPoint(x: 13.7, y: 79.07), controlPoint2: CGPoint(x: 15.62, y: 79.56))
        bezier129Path.addCurve(to: CGPoint(x: 5.41, y: 78.85), controlPoint1: CGPoint(x: 11.73, y: 79.42), controlPoint2: CGPoint(x: 13.49, y: 79.19))
        bezier129Path.close()
        context.saveGState()
        bezier129Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 77.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 77.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 59
        //// Bezier 130 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 45.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier130Path = UIBezierPath()
        bezier130Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier130Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier130Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier130Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier130Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier130Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier130Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier130Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier130Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier130Path.close()
        context.saveGState()
        bezier130Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 131 Drawing
        let bezier131Path = UIBezierPath()
        bezier131Path.move(to: CGPoint(x: 5.68, y: 78.69))
        bezier131Path.addCurve(to: CGPoint(x: -18.37, y: 77.97), controlPoint1: CGPoint(x: -2.4, y: 78.35), controlPoint2: CGPoint(x: -18.37, y: 77.97))
        bezier131Path.addCurve(to: CGPoint(x: 5.69, y: 77.02), controlPoint1: CGPoint(x: -18.37, y: 77.97), controlPoint2: CGPoint(x: -2.41, y: 77.59))
        bezier131Path.addCurve(to: CGPoint(x: 14.01, y: 75.69), controlPoint1: CGPoint(x: 13.78, y: 76.45), controlPoint2: CGPoint(x: 11.98, y: 75.65))
        bezier131Path.addCurve(to: CGPoint(x: 23.39, y: 76.93), controlPoint1: CGPoint(x: 16.04, y: 75.73), controlPoint2: CGPoint(x: 13.99, y: 76.45))
        bezier131Path.addCurve(to: CGPoint(x: 51.63, y: 77.59), controlPoint1: CGPoint(x: 32.8, y: 77.4), controlPoint2: CGPoint(x: 51.63, y: 77.59))
        bezier131Path.addCurve(to: CGPoint(x: 23.39, y: 78.48), controlPoint1: CGPoint(x: 51.63, y: 77.59), controlPoint2: CGPoint(x: 32.81, y: 78.04))
        bezier131Path.addCurve(to: CGPoint(x: 13.94, y: 79.33), controlPoint1: CGPoint(x: 13.96, y: 78.91), controlPoint2: CGPoint(x: 15.89, y: 79.4))
        bezier131Path.addCurve(to: CGPoint(x: 5.68, y: 78.69), controlPoint1: CGPoint(x: 11.99, y: 79.26), controlPoint2: CGPoint(x: 13.75, y: 79.03))
        bezier131Path.close()
        context.saveGState()
        bezier131Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 77.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 77.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 60
        context.saveGState()
        context.translateBy(x: 218.49, y: 32.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.3)



        //// Group 61
        //// Bezier 132 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 23.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier132Path = UIBezierPath()
        bezier132Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier132Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier132Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier132Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier132Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier132Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier132Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier132Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier132Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier132Path.close()
        context.saveGState()
        bezier132Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 133 Drawing
        let bezier133Path = UIBezierPath()
        bezier133Path.move(to: CGPoint(x: 5.41, y: 56.85))
        bezier133Path.addCurve(to: CGPoint(x: -18.64, y: 56.13), controlPoint1: CGPoint(x: -2.67, y: 56.51), controlPoint2: CGPoint(x: -18.64, y: 56.13))
        bezier133Path.addCurve(to: CGPoint(x: 5.42, y: 55.18), controlPoint1: CGPoint(x: -18.64, y: 56.13), controlPoint2: CGPoint(x: -2.67, y: 55.75))
        bezier133Path.addCurve(to: CGPoint(x: 13.74, y: 53.85), controlPoint1: CGPoint(x: 13.51, y: 54.61), controlPoint2: CGPoint(x: 11.71, y: 53.8))
        bezier133Path.addCurve(to: CGPoint(x: 23.13, y: 55.09), controlPoint1: CGPoint(x: 15.77, y: 53.89), controlPoint2: CGPoint(x: 13.72, y: 54.61))
        bezier133Path.addCurve(to: CGPoint(x: 51.36, y: 55.75), controlPoint1: CGPoint(x: 32.53, y: 55.56), controlPoint2: CGPoint(x: 51.36, y: 55.75))
        bezier133Path.addCurve(to: CGPoint(x: 23.12, y: 56.63), controlPoint1: CGPoint(x: 51.36, y: 55.75), controlPoint2: CGPoint(x: 32.54, y: 56.2))
        bezier133Path.addCurve(to: CGPoint(x: 13.67, y: 57.49), controlPoint1: CGPoint(x: 13.7, y: 57.07), controlPoint2: CGPoint(x: 15.62, y: 57.56))
        bezier133Path.addCurve(to: CGPoint(x: 5.41, y: 56.85), controlPoint1: CGPoint(x: 11.73, y: 57.42), controlPoint2: CGPoint(x: 13.49, y: 57.19))
        bezier133Path.close()
        context.saveGState()
        bezier133Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 55.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 55.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 62
        //// Bezier 134 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 23.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier134Path = UIBezierPath()
        bezier134Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier134Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier134Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier134Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier134Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier134Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier134Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier134Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier134Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier134Path.close()
        context.saveGState()
        bezier134Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 135 Drawing
        let bezier135Path = UIBezierPath()
        bezier135Path.move(to: CGPoint(x: 5.68, y: 56.69))
        bezier135Path.addCurve(to: CGPoint(x: -18.37, y: 55.97), controlPoint1: CGPoint(x: -2.4, y: 56.35), controlPoint2: CGPoint(x: -18.37, y: 55.97))
        bezier135Path.addCurve(to: CGPoint(x: 5.69, y: 55.02), controlPoint1: CGPoint(x: -18.37, y: 55.97), controlPoint2: CGPoint(x: -2.41, y: 55.59))
        bezier135Path.addCurve(to: CGPoint(x: 14.01, y: 53.69), controlPoint1: CGPoint(x: 13.78, y: 54.45), controlPoint2: CGPoint(x: 11.98, y: 53.65))
        bezier135Path.addCurve(to: CGPoint(x: 23.39, y: 54.93), controlPoint1: CGPoint(x: 16.04, y: 53.73), controlPoint2: CGPoint(x: 13.99, y: 54.45))
        bezier135Path.addCurve(to: CGPoint(x: 51.63, y: 55.59), controlPoint1: CGPoint(x: 32.8, y: 55.4), controlPoint2: CGPoint(x: 51.63, y: 55.59))
        bezier135Path.addCurve(to: CGPoint(x: 23.39, y: 56.48), controlPoint1: CGPoint(x: 51.63, y: 55.59), controlPoint2: CGPoint(x: 32.81, y: 56.04))
        bezier135Path.addCurve(to: CGPoint(x: 13.94, y: 57.33), controlPoint1: CGPoint(x: 13.96, y: 56.91), controlPoint2: CGPoint(x: 15.89, y: 57.4))
        bezier135Path.addCurve(to: CGPoint(x: 5.68, y: 56.69), controlPoint1: CGPoint(x: 11.99, y: 57.26), controlPoint2: CGPoint(x: 13.75, y: 57.03))
        bezier135Path.close()
        context.saveGState()
        bezier135Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 55.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 55.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 63
        context.saveGState()
        context.translateBy(x: 246.49, y: 14.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 64
        //// Bezier 136 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 207.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier136Path = UIBezierPath()
        bezier136Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier136Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier136Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier136Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier136Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier136Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier136Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier136Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier136Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier136Path.close()
        context.saveGState()
        bezier136Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 137 Drawing
        let bezier137Path = UIBezierPath()
        bezier137Path.move(to: CGPoint(x: 5.41, y: 240.85))
        bezier137Path.addCurve(to: CGPoint(x: -18.64, y: 240.13), controlPoint1: CGPoint(x: -2.67, y: 240.51), controlPoint2: CGPoint(x: -18.64, y: 240.13))
        bezier137Path.addCurve(to: CGPoint(x: 5.42, y: 239.18), controlPoint1: CGPoint(x: -18.64, y: 240.13), controlPoint2: CGPoint(x: -2.67, y: 239.75))
        bezier137Path.addCurve(to: CGPoint(x: 13.74, y: 237.85), controlPoint1: CGPoint(x: 13.51, y: 238.61), controlPoint2: CGPoint(x: 11.71, y: 237.8))
        bezier137Path.addCurve(to: CGPoint(x: 23.13, y: 239.09), controlPoint1: CGPoint(x: 15.77, y: 237.89), controlPoint2: CGPoint(x: 13.72, y: 238.61))
        bezier137Path.addCurve(to: CGPoint(x: 51.36, y: 239.75), controlPoint1: CGPoint(x: 32.53, y: 239.56), controlPoint2: CGPoint(x: 51.36, y: 239.75))
        bezier137Path.addCurve(to: CGPoint(x: 23.12, y: 240.63), controlPoint1: CGPoint(x: 51.36, y: 239.75), controlPoint2: CGPoint(x: 32.54, y: 240.2))
        bezier137Path.addCurve(to: CGPoint(x: 13.67, y: 241.49), controlPoint1: CGPoint(x: 13.7, y: 241.07), controlPoint2: CGPoint(x: 15.62, y: 241.56))
        bezier137Path.addCurve(to: CGPoint(x: 5.41, y: 240.85), controlPoint1: CGPoint(x: 11.73, y: 241.42), controlPoint2: CGPoint(x: 13.49, y: 241.19))
        bezier137Path.close()
        context.saveGState()
        bezier137Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 239.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 239.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 65
        //// Bezier 138 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 207.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier138Path = UIBezierPath()
        bezier138Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier138Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier138Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier138Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier138Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier138Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier138Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier138Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier138Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier138Path.close()
        context.saveGState()
        bezier138Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 139 Drawing
        let bezier139Path = UIBezierPath()
        bezier139Path.move(to: CGPoint(x: 5.68, y: 240.69))
        bezier139Path.addCurve(to: CGPoint(x: -18.37, y: 239.97), controlPoint1: CGPoint(x: -2.4, y: 240.35), controlPoint2: CGPoint(x: -18.37, y: 239.97))
        bezier139Path.addCurve(to: CGPoint(x: 5.69, y: 239.02), controlPoint1: CGPoint(x: -18.37, y: 239.97), controlPoint2: CGPoint(x: -2.41, y: 239.59))
        bezier139Path.addCurve(to: CGPoint(x: 14.01, y: 237.69), controlPoint1: CGPoint(x: 13.78, y: 238.45), controlPoint2: CGPoint(x: 11.98, y: 237.65))
        bezier139Path.addCurve(to: CGPoint(x: 23.39, y: 238.93), controlPoint1: CGPoint(x: 16.04, y: 237.73), controlPoint2: CGPoint(x: 13.99, y: 238.45))
        bezier139Path.addCurve(to: CGPoint(x: 51.63, y: 239.59), controlPoint1: CGPoint(x: 32.8, y: 239.4), controlPoint2: CGPoint(x: 51.63, y: 239.59))
        bezier139Path.addCurve(to: CGPoint(x: 23.39, y: 240.48), controlPoint1: CGPoint(x: 51.63, y: 239.59), controlPoint2: CGPoint(x: 32.81, y: 240.04))
        bezier139Path.addCurve(to: CGPoint(x: 13.94, y: 241.33), controlPoint1: CGPoint(x: 13.96, y: 240.91), controlPoint2: CGPoint(x: 15.89, y: 241.4))
        bezier139Path.addCurve(to: CGPoint(x: 5.68, y: 240.69), controlPoint1: CGPoint(x: 11.99, y: 241.26), controlPoint2: CGPoint(x: 13.75, y: 241.03))
        bezier139Path.close()
        context.saveGState()
        bezier139Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 239.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 239.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 66
        context.saveGState()
        context.translateBy(x: 264.49, y: 30.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 67
        //// Bezier 140 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 226.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier140Path = UIBezierPath()
        bezier140Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier140Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier140Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier140Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier140Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier140Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier140Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier140Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier140Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier140Path.close()
        context.saveGState()
        bezier140Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 141 Drawing
        let bezier141Path = UIBezierPath()
        bezier141Path.move(to: CGPoint(x: 5.41, y: 259.85))
        bezier141Path.addCurve(to: CGPoint(x: -18.64, y: 259.13), controlPoint1: CGPoint(x: -2.67, y: 259.51), controlPoint2: CGPoint(x: -18.64, y: 259.13))
        bezier141Path.addCurve(to: CGPoint(x: 5.42, y: 258.18), controlPoint1: CGPoint(x: -18.64, y: 259.13), controlPoint2: CGPoint(x: -2.67, y: 258.75))
        bezier141Path.addCurve(to: CGPoint(x: 13.74, y: 256.85), controlPoint1: CGPoint(x: 13.51, y: 257.61), controlPoint2: CGPoint(x: 11.71, y: 256.8))
        bezier141Path.addCurve(to: CGPoint(x: 23.13, y: 258.09), controlPoint1: CGPoint(x: 15.77, y: 256.89), controlPoint2: CGPoint(x: 13.72, y: 257.61))
        bezier141Path.addCurve(to: CGPoint(x: 51.36, y: 258.75), controlPoint1: CGPoint(x: 32.53, y: 258.56), controlPoint2: CGPoint(x: 51.36, y: 258.75))
        bezier141Path.addCurve(to: CGPoint(x: 23.12, y: 259.63), controlPoint1: CGPoint(x: 51.36, y: 258.75), controlPoint2: CGPoint(x: 32.54, y: 259.2))
        bezier141Path.addCurve(to: CGPoint(x: 13.67, y: 260.49), controlPoint1: CGPoint(x: 13.7, y: 260.07), controlPoint2: CGPoint(x: 15.62, y: 260.56))
        bezier141Path.addCurve(to: CGPoint(x: 5.41, y: 259.85), controlPoint1: CGPoint(x: 11.73, y: 260.42), controlPoint2: CGPoint(x: 13.49, y: 260.19))
        bezier141Path.close()
        context.saveGState()
        bezier141Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 258.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 258.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 68
        //// Bezier 142 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 226.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier142Path = UIBezierPath()
        bezier142Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier142Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier142Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier142Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier142Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier142Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier142Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier142Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier142Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier142Path.close()
        context.saveGState()
        bezier142Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 143 Drawing
        let bezier143Path = UIBezierPath()
        bezier143Path.move(to: CGPoint(x: 5.68, y: 259.69))
        bezier143Path.addCurve(to: CGPoint(x: -18.37, y: 258.97), controlPoint1: CGPoint(x: -2.4, y: 259.35), controlPoint2: CGPoint(x: -18.37, y: 258.97))
        bezier143Path.addCurve(to: CGPoint(x: 5.69, y: 258.02), controlPoint1: CGPoint(x: -18.37, y: 258.97), controlPoint2: CGPoint(x: -2.41, y: 258.59))
        bezier143Path.addCurve(to: CGPoint(x: 14.01, y: 256.69), controlPoint1: CGPoint(x: 13.78, y: 257.45), controlPoint2: CGPoint(x: 11.98, y: 256.65))
        bezier143Path.addCurve(to: CGPoint(x: 23.39, y: 257.93), controlPoint1: CGPoint(x: 16.04, y: 256.73), controlPoint2: CGPoint(x: 13.99, y: 257.45))
        bezier143Path.addCurve(to: CGPoint(x: 51.63, y: 258.59), controlPoint1: CGPoint(x: 32.8, y: 258.4), controlPoint2: CGPoint(x: 51.63, y: 258.59))
        bezier143Path.addCurve(to: CGPoint(x: 23.39, y: 259.48), controlPoint1: CGPoint(x: 51.63, y: 258.59), controlPoint2: CGPoint(x: 32.81, y: 259.04))
        bezier143Path.addCurve(to: CGPoint(x: 13.94, y: 260.33), controlPoint1: CGPoint(x: 13.96, y: 259.91), controlPoint2: CGPoint(x: 15.89, y: 260.4))
        bezier143Path.addCurve(to: CGPoint(x: 5.68, y: 259.69), controlPoint1: CGPoint(x: 11.99, y: 260.26), controlPoint2: CGPoint(x: 13.75, y: 260.03))
        bezier143Path.close()
        context.saveGState()
        bezier143Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 258.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 258.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 69
        context.saveGState()
        context.translateBy(x: 254.49, y: 36.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.2)



        //// Group 70
        //// Bezier 144 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 81.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier144Path = UIBezierPath()
        bezier144Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier144Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier144Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier144Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier144Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier144Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier144Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier144Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier144Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier144Path.close()
        context.saveGState()
        bezier144Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 145 Drawing
        let bezier145Path = UIBezierPath()
        bezier145Path.move(to: CGPoint(x: 5.41, y: 114.85))
        bezier145Path.addCurve(to: CGPoint(x: -18.64, y: 114.13), controlPoint1: CGPoint(x: -2.67, y: 114.51), controlPoint2: CGPoint(x: -18.64, y: 114.13))
        bezier145Path.addCurve(to: CGPoint(x: 5.42, y: 113.18), controlPoint1: CGPoint(x: -18.64, y: 114.13), controlPoint2: CGPoint(x: -2.67, y: 113.75))
        bezier145Path.addCurve(to: CGPoint(x: 13.74, y: 111.85), controlPoint1: CGPoint(x: 13.51, y: 112.61), controlPoint2: CGPoint(x: 11.71, y: 111.8))
        bezier145Path.addCurve(to: CGPoint(x: 23.13, y: 113.09), controlPoint1: CGPoint(x: 15.77, y: 111.89), controlPoint2: CGPoint(x: 13.72, y: 112.61))
        bezier145Path.addCurve(to: CGPoint(x: 51.36, y: 113.75), controlPoint1: CGPoint(x: 32.53, y: 113.56), controlPoint2: CGPoint(x: 51.36, y: 113.75))
        bezier145Path.addCurve(to: CGPoint(x: 23.12, y: 114.63), controlPoint1: CGPoint(x: 51.36, y: 113.75), controlPoint2: CGPoint(x: 32.54, y: 114.2))
        bezier145Path.addCurve(to: CGPoint(x: 13.67, y: 115.49), controlPoint1: CGPoint(x: 13.7, y: 115.07), controlPoint2: CGPoint(x: 15.62, y: 115.56))
        bezier145Path.addCurve(to: CGPoint(x: 5.41, y: 114.85), controlPoint1: CGPoint(x: 11.73, y: 115.42), controlPoint2: CGPoint(x: 13.49, y: 115.19))
        bezier145Path.close()
        context.saveGState()
        bezier145Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 113.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 113.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 71
        //// Bezier 146 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 81.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier146Path = UIBezierPath()
        bezier146Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier146Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier146Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier146Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier146Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier146Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier146Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier146Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier146Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier146Path.close()
        context.saveGState()
        bezier146Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 147 Drawing
        let bezier147Path = UIBezierPath()
        bezier147Path.move(to: CGPoint(x: 5.68, y: 114.69))
        bezier147Path.addCurve(to: CGPoint(x: -18.37, y: 113.97), controlPoint1: CGPoint(x: -2.4, y: 114.35), controlPoint2: CGPoint(x: -18.37, y: 113.97))
        bezier147Path.addCurve(to: CGPoint(x: 5.69, y: 113.02), controlPoint1: CGPoint(x: -18.37, y: 113.97), controlPoint2: CGPoint(x: -2.41, y: 113.59))
        bezier147Path.addCurve(to: CGPoint(x: 14.01, y: 111.69), controlPoint1: CGPoint(x: 13.78, y: 112.45), controlPoint2: CGPoint(x: 11.98, y: 111.65))
        bezier147Path.addCurve(to: CGPoint(x: 23.39, y: 112.93), controlPoint1: CGPoint(x: 16.04, y: 111.73), controlPoint2: CGPoint(x: 13.99, y: 112.45))
        bezier147Path.addCurve(to: CGPoint(x: 51.63, y: 113.59), controlPoint1: CGPoint(x: 32.8, y: 113.4), controlPoint2: CGPoint(x: 51.63, y: 113.59))
        bezier147Path.addCurve(to: CGPoint(x: 23.39, y: 114.48), controlPoint1: CGPoint(x: 51.63, y: 113.59), controlPoint2: CGPoint(x: 32.81, y: 114.04))
        bezier147Path.addCurve(to: CGPoint(x: 13.94, y: 115.33), controlPoint1: CGPoint(x: 13.96, y: 114.91), controlPoint2: CGPoint(x: 15.89, y: 115.4))
        bezier147Path.addCurve(to: CGPoint(x: 5.68, y: 114.69), controlPoint1: CGPoint(x: 11.99, y: 115.26), controlPoint2: CGPoint(x: 13.75, y: 115.03))
        bezier147Path.close()
        context.saveGState()
        bezier147Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 113.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 113.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 72
        context.saveGState()
        context.translateBy(x: 298.49, y: 46.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 73
        //// Bezier 148 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 104.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier148Path = UIBezierPath()
        bezier148Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier148Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier148Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier148Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier148Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier148Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier148Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier148Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier148Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier148Path.close()
        context.saveGState()
        bezier148Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 149 Drawing
        let bezier149Path = UIBezierPath()
        bezier149Path.move(to: CGPoint(x: 5.41, y: 137.85))
        bezier149Path.addCurve(to: CGPoint(x: -18.64, y: 137.13), controlPoint1: CGPoint(x: -2.67, y: 137.51), controlPoint2: CGPoint(x: -18.64, y: 137.13))
        bezier149Path.addCurve(to: CGPoint(x: 5.42, y: 136.18), controlPoint1: CGPoint(x: -18.64, y: 137.13), controlPoint2: CGPoint(x: -2.67, y: 136.75))
        bezier149Path.addCurve(to: CGPoint(x: 13.74, y: 134.85), controlPoint1: CGPoint(x: 13.51, y: 135.61), controlPoint2: CGPoint(x: 11.71, y: 134.8))
        bezier149Path.addCurve(to: CGPoint(x: 23.13, y: 136.09), controlPoint1: CGPoint(x: 15.77, y: 134.89), controlPoint2: CGPoint(x: 13.72, y: 135.61))
        bezier149Path.addCurve(to: CGPoint(x: 51.36, y: 136.75), controlPoint1: CGPoint(x: 32.53, y: 136.56), controlPoint2: CGPoint(x: 51.36, y: 136.75))
        bezier149Path.addCurve(to: CGPoint(x: 23.12, y: 137.63), controlPoint1: CGPoint(x: 51.36, y: 136.75), controlPoint2: CGPoint(x: 32.54, y: 137.2))
        bezier149Path.addCurve(to: CGPoint(x: 13.67, y: 138.49), controlPoint1: CGPoint(x: 13.7, y: 138.07), controlPoint2: CGPoint(x: 15.62, y: 138.56))
        bezier149Path.addCurve(to: CGPoint(x: 5.41, y: 137.85), controlPoint1: CGPoint(x: 11.73, y: 138.42), controlPoint2: CGPoint(x: 13.49, y: 138.19))
        bezier149Path.close()
        context.saveGState()
        bezier149Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 136.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 136.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 74
        //// Bezier 150 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 104.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier150Path = UIBezierPath()
        bezier150Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier150Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier150Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier150Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier150Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier150Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier150Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier150Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier150Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier150Path.close()
        context.saveGState()
        bezier150Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 151 Drawing
        let bezier151Path = UIBezierPath()
        bezier151Path.move(to: CGPoint(x: 5.68, y: 137.69))
        bezier151Path.addCurve(to: CGPoint(x: -18.37, y: 136.97), controlPoint1: CGPoint(x: -2.4, y: 137.35), controlPoint2: CGPoint(x: -18.37, y: 136.97))
        bezier151Path.addCurve(to: CGPoint(x: 5.69, y: 136.02), controlPoint1: CGPoint(x: -18.37, y: 136.97), controlPoint2: CGPoint(x: -2.41, y: 136.59))
        bezier151Path.addCurve(to: CGPoint(x: 14.01, y: 134.69), controlPoint1: CGPoint(x: 13.78, y: 135.45), controlPoint2: CGPoint(x: 11.98, y: 134.65))
        bezier151Path.addCurve(to: CGPoint(x: 23.39, y: 135.93), controlPoint1: CGPoint(x: 16.04, y: 134.73), controlPoint2: CGPoint(x: 13.99, y: 135.45))
        bezier151Path.addCurve(to: CGPoint(x: 51.63, y: 136.59), controlPoint1: CGPoint(x: 32.8, y: 136.4), controlPoint2: CGPoint(x: 51.63, y: 136.59))
        bezier151Path.addCurve(to: CGPoint(x: 23.39, y: 137.48), controlPoint1: CGPoint(x: 51.63, y: 136.59), controlPoint2: CGPoint(x: 32.81, y: 137.04))
        bezier151Path.addCurve(to: CGPoint(x: 13.94, y: 138.33), controlPoint1: CGPoint(x: 13.96, y: 137.91), controlPoint2: CGPoint(x: 15.89, y: 138.4))
        bezier151Path.addCurve(to: CGPoint(x: 5.68, y: 137.69), controlPoint1: CGPoint(x: 11.99, y: 138.26), controlPoint2: CGPoint(x: 13.75, y: 138.03))
        bezier151Path.close()
        context.saveGState()
        bezier151Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 136.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 136.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 75
        context.saveGState()
        context.translateBy(x: 308.49, y: 12.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 76
        //// Bezier 152 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 109.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier152Path = UIBezierPath()
        bezier152Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier152Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier152Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier152Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier152Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier152Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier152Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier152Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier152Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier152Path.close()
        context.saveGState()
        bezier152Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 153 Drawing
        let bezier153Path = UIBezierPath()
        bezier153Path.move(to: CGPoint(x: 5.41, y: 142.85))
        bezier153Path.addCurve(to: CGPoint(x: -18.64, y: 142.13), controlPoint1: CGPoint(x: -2.67, y: 142.51), controlPoint2: CGPoint(x: -18.64, y: 142.13))
        bezier153Path.addCurve(to: CGPoint(x: 5.42, y: 141.18), controlPoint1: CGPoint(x: -18.64, y: 142.13), controlPoint2: CGPoint(x: -2.67, y: 141.75))
        bezier153Path.addCurve(to: CGPoint(x: 13.74, y: 139.85), controlPoint1: CGPoint(x: 13.51, y: 140.61), controlPoint2: CGPoint(x: 11.71, y: 139.8))
        bezier153Path.addCurve(to: CGPoint(x: 23.13, y: 141.09), controlPoint1: CGPoint(x: 15.77, y: 139.89), controlPoint2: CGPoint(x: 13.72, y: 140.61))
        bezier153Path.addCurve(to: CGPoint(x: 51.36, y: 141.75), controlPoint1: CGPoint(x: 32.53, y: 141.56), controlPoint2: CGPoint(x: 51.36, y: 141.75))
        bezier153Path.addCurve(to: CGPoint(x: 23.12, y: 142.63), controlPoint1: CGPoint(x: 51.36, y: 141.75), controlPoint2: CGPoint(x: 32.54, y: 142.2))
        bezier153Path.addCurve(to: CGPoint(x: 13.67, y: 143.49), controlPoint1: CGPoint(x: 13.7, y: 143.07), controlPoint2: CGPoint(x: 15.62, y: 143.56))
        bezier153Path.addCurve(to: CGPoint(x: 5.41, y: 142.85), controlPoint1: CGPoint(x: 11.73, y: 143.42), controlPoint2: CGPoint(x: 13.49, y: 143.19))
        bezier153Path.close()
        context.saveGState()
        bezier153Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 141.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 141.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 77
        //// Bezier 154 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 109.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier154Path = UIBezierPath()
        bezier154Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier154Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier154Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier154Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier154Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier154Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier154Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier154Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier154Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier154Path.close()
        context.saveGState()
        bezier154Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 155 Drawing
        let bezier155Path = UIBezierPath()
        bezier155Path.move(to: CGPoint(x: 5.68, y: 142.69))
        bezier155Path.addCurve(to: CGPoint(x: -18.37, y: 141.97), controlPoint1: CGPoint(x: -2.4, y: 142.35), controlPoint2: CGPoint(x: -18.37, y: 141.97))
        bezier155Path.addCurve(to: CGPoint(x: 5.69, y: 141.02), controlPoint1: CGPoint(x: -18.37, y: 141.97), controlPoint2: CGPoint(x: -2.41, y: 141.59))
        bezier155Path.addCurve(to: CGPoint(x: 14.01, y: 139.69), controlPoint1: CGPoint(x: 13.78, y: 140.45), controlPoint2: CGPoint(x: 11.98, y: 139.65))
        bezier155Path.addCurve(to: CGPoint(x: 23.39, y: 140.93), controlPoint1: CGPoint(x: 16.04, y: 139.73), controlPoint2: CGPoint(x: 13.99, y: 140.45))
        bezier155Path.addCurve(to: CGPoint(x: 51.63, y: 141.59), controlPoint1: CGPoint(x: 32.8, y: 141.4), controlPoint2: CGPoint(x: 51.63, y: 141.59))
        bezier155Path.addCurve(to: CGPoint(x: 23.39, y: 142.48), controlPoint1: CGPoint(x: 51.63, y: 141.59), controlPoint2: CGPoint(x: 32.81, y: 142.04))
        bezier155Path.addCurve(to: CGPoint(x: 13.94, y: 143.33), controlPoint1: CGPoint(x: 13.96, y: 142.91), controlPoint2: CGPoint(x: 15.89, y: 143.4))
        bezier155Path.addCurve(to: CGPoint(x: 5.68, y: 142.69), controlPoint1: CGPoint(x: 11.99, y: 143.26), controlPoint2: CGPoint(x: 13.75, y: 143.03))
        bezier155Path.close()
        context.saveGState()
        bezier155Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 141.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 141.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 78
        context.saveGState()
        context.translateBy(x: 329.49, y: 22.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 79
        //// Bezier 156 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 120.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier156Path = UIBezierPath()
        bezier156Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier156Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier156Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier156Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier156Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier156Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier156Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier156Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier156Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier156Path.close()
        context.saveGState()
        bezier156Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 157 Drawing
        let bezier157Path = UIBezierPath()
        bezier157Path.move(to: CGPoint(x: 5.41, y: 153.85))
        bezier157Path.addCurve(to: CGPoint(x: -18.64, y: 153.13), controlPoint1: CGPoint(x: -2.67, y: 153.51), controlPoint2: CGPoint(x: -18.64, y: 153.13))
        bezier157Path.addCurve(to: CGPoint(x: 5.42, y: 152.18), controlPoint1: CGPoint(x: -18.64, y: 153.13), controlPoint2: CGPoint(x: -2.67, y: 152.75))
        bezier157Path.addCurve(to: CGPoint(x: 13.74, y: 150.85), controlPoint1: CGPoint(x: 13.51, y: 151.61), controlPoint2: CGPoint(x: 11.71, y: 150.8))
        bezier157Path.addCurve(to: CGPoint(x: 23.13, y: 152.09), controlPoint1: CGPoint(x: 15.77, y: 150.89), controlPoint2: CGPoint(x: 13.72, y: 151.61))
        bezier157Path.addCurve(to: CGPoint(x: 51.36, y: 152.75), controlPoint1: CGPoint(x: 32.53, y: 152.56), controlPoint2: CGPoint(x: 51.36, y: 152.75))
        bezier157Path.addCurve(to: CGPoint(x: 23.12, y: 153.63), controlPoint1: CGPoint(x: 51.36, y: 152.75), controlPoint2: CGPoint(x: 32.54, y: 153.2))
        bezier157Path.addCurve(to: CGPoint(x: 13.67, y: 154.49), controlPoint1: CGPoint(x: 13.7, y: 154.07), controlPoint2: CGPoint(x: 15.62, y: 154.56))
        bezier157Path.addCurve(to: CGPoint(x: 5.41, y: 153.85), controlPoint1: CGPoint(x: 11.73, y: 154.42), controlPoint2: CGPoint(x: 13.49, y: 154.19))
        bezier157Path.close()
        context.saveGState()
        bezier157Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 152.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 152.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 80
        //// Bezier 158 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 120.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier158Path = UIBezierPath()
        bezier158Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier158Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier158Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier158Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier158Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier158Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier158Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier158Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier158Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier158Path.close()
        context.saveGState()
        bezier158Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 159 Drawing
        let bezier159Path = UIBezierPath()
        bezier159Path.move(to: CGPoint(x: 5.68, y: 153.69))
        bezier159Path.addCurve(to: CGPoint(x: -18.37, y: 152.97), controlPoint1: CGPoint(x: -2.4, y: 153.35), controlPoint2: CGPoint(x: -18.37, y: 152.97))
        bezier159Path.addCurve(to: CGPoint(x: 5.69, y: 152.02), controlPoint1: CGPoint(x: -18.37, y: 152.97), controlPoint2: CGPoint(x: -2.41, y: 152.59))
        bezier159Path.addCurve(to: CGPoint(x: 14.01, y: 150.69), controlPoint1: CGPoint(x: 13.78, y: 151.45), controlPoint2: CGPoint(x: 11.98, y: 150.65))
        bezier159Path.addCurve(to: CGPoint(x: 23.39, y: 151.93), controlPoint1: CGPoint(x: 16.04, y: 150.73), controlPoint2: CGPoint(x: 13.99, y: 151.45))
        bezier159Path.addCurve(to: CGPoint(x: 51.63, y: 152.59), controlPoint1: CGPoint(x: 32.8, y: 152.4), controlPoint2: CGPoint(x: 51.63, y: 152.59))
        bezier159Path.addCurve(to: CGPoint(x: 23.39, y: 153.48), controlPoint1: CGPoint(x: 51.63, y: 152.59), controlPoint2: CGPoint(x: 32.81, y: 153.04))
        bezier159Path.addCurve(to: CGPoint(x: 13.94, y: 154.33), controlPoint1: CGPoint(x: 13.96, y: 153.91), controlPoint2: CGPoint(x: 15.89, y: 154.4))
        bezier159Path.addCurve(to: CGPoint(x: 5.68, y: 153.69), controlPoint1: CGPoint(x: 11.99, y: 154.26), controlPoint2: CGPoint(x: 13.75, y: 154.03))
        bezier159Path.close()
        context.saveGState()
        bezier159Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 152.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 152.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 81
        context.saveGState()
        context.translateBy(x: 340.49, y: 39.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 82
        //// Bezier 160 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 306.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier160Path = UIBezierPath()
        bezier160Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier160Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier160Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier160Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier160Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier160Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier160Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier160Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier160Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier160Path.close()
        context.saveGState()
        bezier160Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 161 Drawing
        let bezier161Path = UIBezierPath()
        bezier161Path.move(to: CGPoint(x: 5.41, y: 339.85))
        bezier161Path.addCurve(to: CGPoint(x: -18.64, y: 339.13), controlPoint1: CGPoint(x: -2.67, y: 339.51), controlPoint2: CGPoint(x: -18.64, y: 339.13))
        bezier161Path.addCurve(to: CGPoint(x: 5.42, y: 338.18), controlPoint1: CGPoint(x: -18.64, y: 339.13), controlPoint2: CGPoint(x: -2.67, y: 338.75))
        bezier161Path.addCurve(to: CGPoint(x: 13.74, y: 336.85), controlPoint1: CGPoint(x: 13.51, y: 337.61), controlPoint2: CGPoint(x: 11.71, y: 336.8))
        bezier161Path.addCurve(to: CGPoint(x: 23.13, y: 338.09), controlPoint1: CGPoint(x: 15.77, y: 336.89), controlPoint2: CGPoint(x: 13.72, y: 337.61))
        bezier161Path.addCurve(to: CGPoint(x: 51.36, y: 338.75), controlPoint1: CGPoint(x: 32.53, y: 338.56), controlPoint2: CGPoint(x: 51.36, y: 338.75))
        bezier161Path.addCurve(to: CGPoint(x: 23.12, y: 339.63), controlPoint1: CGPoint(x: 51.36, y: 338.75), controlPoint2: CGPoint(x: 32.54, y: 339.2))
        bezier161Path.addCurve(to: CGPoint(x: 13.67, y: 340.49), controlPoint1: CGPoint(x: 13.7, y: 340.07), controlPoint2: CGPoint(x: 15.62, y: 340.56))
        bezier161Path.addCurve(to: CGPoint(x: 5.41, y: 339.85), controlPoint1: CGPoint(x: 11.73, y: 340.42), controlPoint2: CGPoint(x: 13.49, y: 340.19))
        bezier161Path.close()
        context.saveGState()
        bezier161Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 338.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 338.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 83
        //// Bezier 162 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 306.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier162Path = UIBezierPath()
        bezier162Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier162Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier162Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier162Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier162Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier162Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier162Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier162Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier162Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier162Path.close()
        context.saveGState()
        bezier162Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 163 Drawing
        let bezier163Path = UIBezierPath()
        bezier163Path.move(to: CGPoint(x: 5.68, y: 339.69))
        bezier163Path.addCurve(to: CGPoint(x: -18.37, y: 338.97), controlPoint1: CGPoint(x: -2.4, y: 339.35), controlPoint2: CGPoint(x: -18.37, y: 338.97))
        bezier163Path.addCurve(to: CGPoint(x: 5.69, y: 338.02), controlPoint1: CGPoint(x: -18.37, y: 338.97), controlPoint2: CGPoint(x: -2.41, y: 338.59))
        bezier163Path.addCurve(to: CGPoint(x: 14.01, y: 336.69), controlPoint1: CGPoint(x: 13.78, y: 337.45), controlPoint2: CGPoint(x: 11.98, y: 336.65))
        bezier163Path.addCurve(to: CGPoint(x: 23.39, y: 337.93), controlPoint1: CGPoint(x: 16.04, y: 336.73), controlPoint2: CGPoint(x: 13.99, y: 337.45))
        bezier163Path.addCurve(to: CGPoint(x: 51.63, y: 338.59), controlPoint1: CGPoint(x: 32.8, y: 338.4), controlPoint2: CGPoint(x: 51.63, y: 338.59))
        bezier163Path.addCurve(to: CGPoint(x: 23.39, y: 339.48), controlPoint1: CGPoint(x: 51.63, y: 338.59), controlPoint2: CGPoint(x: 32.81, y: 339.04))
        bezier163Path.addCurve(to: CGPoint(x: 13.94, y: 340.33), controlPoint1: CGPoint(x: 13.96, y: 339.91), controlPoint2: CGPoint(x: 15.89, y: 340.4))
        bezier163Path.addCurve(to: CGPoint(x: 5.68, y: 339.69), controlPoint1: CGPoint(x: 11.99, y: 340.26), controlPoint2: CGPoint(x: 13.75, y: 340.03))
        bezier163Path.close()
        context.saveGState()
        bezier163Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 338.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 338.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 84
        context.saveGState()
        context.translateBy(x: 358.49, y: 48.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 85
        //// Bezier 164 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 136.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier164Path = UIBezierPath()
        bezier164Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier164Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier164Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier164Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier164Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier164Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier164Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier164Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier164Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier164Path.close()
        context.saveGState()
        bezier164Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 165 Drawing
        let bezier165Path = UIBezierPath()
        bezier165Path.move(to: CGPoint(x: 5.41, y: 169.85))
        bezier165Path.addCurve(to: CGPoint(x: -18.64, y: 169.13), controlPoint1: CGPoint(x: -2.67, y: 169.51), controlPoint2: CGPoint(x: -18.64, y: 169.13))
        bezier165Path.addCurve(to: CGPoint(x: 5.42, y: 168.18), controlPoint1: CGPoint(x: -18.64, y: 169.13), controlPoint2: CGPoint(x: -2.67, y: 168.75))
        bezier165Path.addCurve(to: CGPoint(x: 13.74, y: 166.85), controlPoint1: CGPoint(x: 13.51, y: 167.61), controlPoint2: CGPoint(x: 11.71, y: 166.8))
        bezier165Path.addCurve(to: CGPoint(x: 23.13, y: 168.09), controlPoint1: CGPoint(x: 15.77, y: 166.89), controlPoint2: CGPoint(x: 13.72, y: 167.61))
        bezier165Path.addCurve(to: CGPoint(x: 51.36, y: 168.75), controlPoint1: CGPoint(x: 32.53, y: 168.56), controlPoint2: CGPoint(x: 51.36, y: 168.75))
        bezier165Path.addCurve(to: CGPoint(x: 23.12, y: 169.63), controlPoint1: CGPoint(x: 51.36, y: 168.75), controlPoint2: CGPoint(x: 32.54, y: 169.2))
        bezier165Path.addCurve(to: CGPoint(x: 13.67, y: 170.49), controlPoint1: CGPoint(x: 13.7, y: 170.07), controlPoint2: CGPoint(x: 15.62, y: 170.56))
        bezier165Path.addCurve(to: CGPoint(x: 5.41, y: 169.85), controlPoint1: CGPoint(x: 11.73, y: 170.42), controlPoint2: CGPoint(x: 13.49, y: 170.19))
        bezier165Path.close()
        context.saveGState()
        bezier165Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 168.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 168.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 86
        //// Bezier 166 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 136.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier166Path = UIBezierPath()
        bezier166Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier166Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier166Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier166Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier166Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier166Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier166Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier166Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier166Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier166Path.close()
        context.saveGState()
        bezier166Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 167 Drawing
        let bezier167Path = UIBezierPath()
        bezier167Path.move(to: CGPoint(x: 5.68, y: 169.69))
        bezier167Path.addCurve(to: CGPoint(x: -18.37, y: 168.97), controlPoint1: CGPoint(x: -2.4, y: 169.35), controlPoint2: CGPoint(x: -18.37, y: 168.97))
        bezier167Path.addCurve(to: CGPoint(x: 5.69, y: 168.02), controlPoint1: CGPoint(x: -18.37, y: 168.97), controlPoint2: CGPoint(x: -2.41, y: 168.59))
        bezier167Path.addCurve(to: CGPoint(x: 14.01, y: 166.69), controlPoint1: CGPoint(x: 13.78, y: 167.45), controlPoint2: CGPoint(x: 11.98, y: 166.65))
        bezier167Path.addCurve(to: CGPoint(x: 23.39, y: 167.93), controlPoint1: CGPoint(x: 16.04, y: 166.73), controlPoint2: CGPoint(x: 13.99, y: 167.45))
        bezier167Path.addCurve(to: CGPoint(x: 51.63, y: 168.59), controlPoint1: CGPoint(x: 32.8, y: 168.4), controlPoint2: CGPoint(x: 51.63, y: 168.59))
        bezier167Path.addCurve(to: CGPoint(x: 23.39, y: 169.48), controlPoint1: CGPoint(x: 51.63, y: 168.59), controlPoint2: CGPoint(x: 32.81, y: 169.04))
        bezier167Path.addCurve(to: CGPoint(x: 13.94, y: 170.33), controlPoint1: CGPoint(x: 13.96, y: 169.91), controlPoint2: CGPoint(x: 15.89, y: 170.4))
        bezier167Path.addCurve(to: CGPoint(x: 5.68, y: 169.69), controlPoint1: CGPoint(x: 11.99, y: 170.26), controlPoint2: CGPoint(x: 13.75, y: 170.03))
        bezier167Path.close()
        context.saveGState()
        bezier167Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 168.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 168.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 87
        context.saveGState()
        context.translateBy(x: 368.49, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 88
        //// Bezier 168 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 336.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier168Path = UIBezierPath()
        bezier168Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier168Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier168Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier168Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier168Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier168Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier168Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier168Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier168Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier168Path.close()
        context.saveGState()
        bezier168Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 169 Drawing
        let bezier169Path = UIBezierPath()
        bezier169Path.move(to: CGPoint(x: 5.41, y: 369.85))
        bezier169Path.addCurve(to: CGPoint(x: -18.64, y: 369.13), controlPoint1: CGPoint(x: -2.67, y: 369.51), controlPoint2: CGPoint(x: -18.64, y: 369.13))
        bezier169Path.addCurve(to: CGPoint(x: 5.42, y: 368.18), controlPoint1: CGPoint(x: -18.64, y: 369.13), controlPoint2: CGPoint(x: -2.67, y: 368.75))
        bezier169Path.addCurve(to: CGPoint(x: 13.74, y: 366.85), controlPoint1: CGPoint(x: 13.51, y: 367.61), controlPoint2: CGPoint(x: 11.71, y: 366.8))
        bezier169Path.addCurve(to: CGPoint(x: 23.13, y: 368.09), controlPoint1: CGPoint(x: 15.77, y: 366.89), controlPoint2: CGPoint(x: 13.72, y: 367.61))
        bezier169Path.addCurve(to: CGPoint(x: 51.36, y: 368.75), controlPoint1: CGPoint(x: 32.53, y: 368.56), controlPoint2: CGPoint(x: 51.36, y: 368.75))
        bezier169Path.addCurve(to: CGPoint(x: 23.12, y: 369.63), controlPoint1: CGPoint(x: 51.36, y: 368.75), controlPoint2: CGPoint(x: 32.54, y: 369.2))
        bezier169Path.addCurve(to: CGPoint(x: 13.67, y: 370.49), controlPoint1: CGPoint(x: 13.7, y: 370.07), controlPoint2: CGPoint(x: 15.62, y: 370.56))
        bezier169Path.addCurve(to: CGPoint(x: 5.41, y: 369.85), controlPoint1: CGPoint(x: 11.73, y: 370.42), controlPoint2: CGPoint(x: 13.49, y: 370.19))
        bezier169Path.close()
        context.saveGState()
        bezier169Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 368.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 368.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 89
        //// Bezier 170 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 336.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier170Path = UIBezierPath()
        bezier170Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier170Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier170Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier170Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier170Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier170Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier170Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier170Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier170Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier170Path.close()
        context.saveGState()
        bezier170Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 171 Drawing
        let bezier171Path = UIBezierPath()
        bezier171Path.move(to: CGPoint(x: 5.68, y: 369.69))
        bezier171Path.addCurve(to: CGPoint(x: -18.37, y: 368.97), controlPoint1: CGPoint(x: -2.4, y: 369.35), controlPoint2: CGPoint(x: -18.37, y: 368.97))
        bezier171Path.addCurve(to: CGPoint(x: 5.69, y: 368.02), controlPoint1: CGPoint(x: -18.37, y: 368.97), controlPoint2: CGPoint(x: -2.41, y: 368.59))
        bezier171Path.addCurve(to: CGPoint(x: 14.01, y: 366.69), controlPoint1: CGPoint(x: 13.78, y: 367.45), controlPoint2: CGPoint(x: 11.98, y: 366.65))
        bezier171Path.addCurve(to: CGPoint(x: 23.39, y: 367.93), controlPoint1: CGPoint(x: 16.04, y: 366.73), controlPoint2: CGPoint(x: 13.99, y: 367.45))
        bezier171Path.addCurve(to: CGPoint(x: 51.63, y: 368.59), controlPoint1: CGPoint(x: 32.8, y: 368.4), controlPoint2: CGPoint(x: 51.63, y: 368.59))
        bezier171Path.addCurve(to: CGPoint(x: 23.39, y: 369.48), controlPoint1: CGPoint(x: 51.63, y: 368.59), controlPoint2: CGPoint(x: 32.81, y: 369.04))
        bezier171Path.addCurve(to: CGPoint(x: 13.94, y: 370.33), controlPoint1: CGPoint(x: 13.96, y: 369.91), controlPoint2: CGPoint(x: 15.89, y: 370.4))
        bezier171Path.addCurve(to: CGPoint(x: 5.68, y: 369.69), controlPoint1: CGPoint(x: 11.99, y: 370.26), controlPoint2: CGPoint(x: 13.75, y: 370.03))
        bezier171Path.close()
        context.saveGState()
        bezier171Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 368.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 368.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 90
        context.saveGState()
        context.translateBy(x: 347.49, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 91
        //// Bezier 172 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 130.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier172Path = UIBezierPath()
        bezier172Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier172Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier172Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier172Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier172Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier172Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier172Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier172Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier172Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier172Path.close()
        context.saveGState()
        bezier172Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 173 Drawing
        let bezier173Path = UIBezierPath()
        bezier173Path.move(to: CGPoint(x: 5.41, y: 163.85))
        bezier173Path.addCurve(to: CGPoint(x: -18.64, y: 163.13), controlPoint1: CGPoint(x: -2.67, y: 163.51), controlPoint2: CGPoint(x: -18.64, y: 163.13))
        bezier173Path.addCurve(to: CGPoint(x: 5.42, y: 162.18), controlPoint1: CGPoint(x: -18.64, y: 163.13), controlPoint2: CGPoint(x: -2.67, y: 162.75))
        bezier173Path.addCurve(to: CGPoint(x: 13.74, y: 160.85), controlPoint1: CGPoint(x: 13.51, y: 161.61), controlPoint2: CGPoint(x: 11.71, y: 160.8))
        bezier173Path.addCurve(to: CGPoint(x: 23.13, y: 162.09), controlPoint1: CGPoint(x: 15.77, y: 160.89), controlPoint2: CGPoint(x: 13.72, y: 161.61))
        bezier173Path.addCurve(to: CGPoint(x: 51.36, y: 162.75), controlPoint1: CGPoint(x: 32.53, y: 162.56), controlPoint2: CGPoint(x: 51.36, y: 162.75))
        bezier173Path.addCurve(to: CGPoint(x: 23.12, y: 163.63), controlPoint1: CGPoint(x: 51.36, y: 162.75), controlPoint2: CGPoint(x: 32.54, y: 163.2))
        bezier173Path.addCurve(to: CGPoint(x: 13.67, y: 164.49), controlPoint1: CGPoint(x: 13.7, y: 164.07), controlPoint2: CGPoint(x: 15.62, y: 164.56))
        bezier173Path.addCurve(to: CGPoint(x: 5.41, y: 163.85), controlPoint1: CGPoint(x: 11.73, y: 164.42), controlPoint2: CGPoint(x: 13.49, y: 164.19))
        bezier173Path.close()
        context.saveGState()
        bezier173Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 162.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 162.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 92
        //// Bezier 174 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 130.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier174Path = UIBezierPath()
        bezier174Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier174Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier174Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier174Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier174Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier174Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier174Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier174Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier174Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier174Path.close()
        context.saveGState()
        bezier174Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 175 Drawing
        let bezier175Path = UIBezierPath()
        bezier175Path.move(to: CGPoint(x: 5.68, y: 163.69))
        bezier175Path.addCurve(to: CGPoint(x: -18.37, y: 162.97), controlPoint1: CGPoint(x: -2.4, y: 163.35), controlPoint2: CGPoint(x: -18.37, y: 162.97))
        bezier175Path.addCurve(to: CGPoint(x: 5.69, y: 162.02), controlPoint1: CGPoint(x: -18.37, y: 162.97), controlPoint2: CGPoint(x: -2.41, y: 162.59))
        bezier175Path.addCurve(to: CGPoint(x: 14.01, y: 160.69), controlPoint1: CGPoint(x: 13.78, y: 161.45), controlPoint2: CGPoint(x: 11.98, y: 160.65))
        bezier175Path.addCurve(to: CGPoint(x: 23.39, y: 161.93), controlPoint1: CGPoint(x: 16.04, y: 160.73), controlPoint2: CGPoint(x: 13.99, y: 161.45))
        bezier175Path.addCurve(to: CGPoint(x: 51.63, y: 162.59), controlPoint1: CGPoint(x: 32.8, y: 162.4), controlPoint2: CGPoint(x: 51.63, y: 162.59))
        bezier175Path.addCurve(to: CGPoint(x: 23.39, y: 163.48), controlPoint1: CGPoint(x: 51.63, y: 162.59), controlPoint2: CGPoint(x: 32.81, y: 163.04))
        bezier175Path.addCurve(to: CGPoint(x: 13.94, y: 164.33), controlPoint1: CGPoint(x: 13.96, y: 163.91), controlPoint2: CGPoint(x: 15.89, y: 164.4))
        bezier175Path.addCurve(to: CGPoint(x: 5.68, y: 163.69), controlPoint1: CGPoint(x: 11.99, y: 164.26), controlPoint2: CGPoint(x: 13.75, y: 164.03))
        bezier175Path.close()
        context.saveGState()
        bezier175Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 162.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 162.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 93
        context.saveGState()
        context.translateBy(x: 46.49, y: 20.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.33, y: 0.33)



        //// Group 94
        //// Bezier 176 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -38.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier176Path = UIBezierPath()
        bezier176Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier176Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier176Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier176Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier176Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier176Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier176Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier176Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier176Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier176Path.close()
        context.saveGState()
        bezier176Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 177 Drawing
        let bezier177Path = UIBezierPath()
        bezier177Path.move(to: CGPoint(x: 5.41, y: -5.15))
        bezier177Path.addCurve(to: CGPoint(x: -18.64, y: -5.87), controlPoint1: CGPoint(x: -2.67, y: -5.49), controlPoint2: CGPoint(x: -18.64, y: -5.87))
        bezier177Path.addCurve(to: CGPoint(x: 5.42, y: -6.82), controlPoint1: CGPoint(x: -18.64, y: -5.87), controlPoint2: CGPoint(x: -2.67, y: -6.25))
        bezier177Path.addCurve(to: CGPoint(x: 13.74, y: -8.15), controlPoint1: CGPoint(x: 13.51, y: -7.39), controlPoint2: CGPoint(x: 11.71, y: -8.2))
        bezier177Path.addCurve(to: CGPoint(x: 23.13, y: -6.91), controlPoint1: CGPoint(x: 15.77, y: -8.11), controlPoint2: CGPoint(x: 13.72, y: -7.39))
        bezier177Path.addCurve(to: CGPoint(x: 51.36, y: -6.25), controlPoint1: CGPoint(x: 32.53, y: -6.44), controlPoint2: CGPoint(x: 51.36, y: -6.25))
        bezier177Path.addCurve(to: CGPoint(x: 23.12, y: -5.37), controlPoint1: CGPoint(x: 51.36, y: -6.25), controlPoint2: CGPoint(x: 32.54, y: -5.8))
        bezier177Path.addCurve(to: CGPoint(x: 13.67, y: -4.51), controlPoint1: CGPoint(x: 13.7, y: -4.93), controlPoint2: CGPoint(x: 15.62, y: -4.44))
        bezier177Path.addCurve(to: CGPoint(x: 5.41, y: -5.15), controlPoint1: CGPoint(x: 11.73, y: -4.58), controlPoint2: CGPoint(x: 13.49, y: -4.81))
        bezier177Path.close()
        context.saveGState()
        bezier177Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -6.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -6.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 95
        //// Bezier 178 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -38.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier178Path = UIBezierPath()
        bezier178Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier178Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier178Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier178Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier178Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier178Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier178Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier178Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier178Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier178Path.close()
        context.saveGState()
        bezier178Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 179 Drawing
        let bezier179Path = UIBezierPath()
        bezier179Path.move(to: CGPoint(x: 5.68, y: -5.31))
        bezier179Path.addCurve(to: CGPoint(x: -18.37, y: -6.03), controlPoint1: CGPoint(x: -2.4, y: -5.65), controlPoint2: CGPoint(x: -18.37, y: -6.03))
        bezier179Path.addCurve(to: CGPoint(x: 5.69, y: -6.98), controlPoint1: CGPoint(x: -18.37, y: -6.03), controlPoint2: CGPoint(x: -2.41, y: -6.41))
        bezier179Path.addCurve(to: CGPoint(x: 14.01, y: -8.31), controlPoint1: CGPoint(x: 13.78, y: -7.55), controlPoint2: CGPoint(x: 11.98, y: -8.35))
        bezier179Path.addCurve(to: CGPoint(x: 23.39, y: -7.07), controlPoint1: CGPoint(x: 16.04, y: -8.27), controlPoint2: CGPoint(x: 13.99, y: -7.55))
        bezier179Path.addCurve(to: CGPoint(x: 51.63, y: -6.41), controlPoint1: CGPoint(x: 32.8, y: -6.6), controlPoint2: CGPoint(x: 51.63, y: -6.41))
        bezier179Path.addCurve(to: CGPoint(x: 23.39, y: -5.52), controlPoint1: CGPoint(x: 51.63, y: -6.41), controlPoint2: CGPoint(x: 32.81, y: -5.96))
        bezier179Path.addCurve(to: CGPoint(x: 13.94, y: -4.67), controlPoint1: CGPoint(x: 13.96, y: -5.09), controlPoint2: CGPoint(x: 15.89, y: -4.6))
        bezier179Path.addCurve(to: CGPoint(x: 5.68, y: -5.31), controlPoint1: CGPoint(x: 11.99, y: -4.74), controlPoint2: CGPoint(x: 13.75, y: -4.97))
        bezier179Path.close()
        context.saveGState()
        bezier179Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -6.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -6.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 96
        context.saveGState()
        context.translateBy(x: 29.49, y: 40.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 97
        //// Bezier 180 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -37.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier180Path = UIBezierPath()
        bezier180Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier180Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier180Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier180Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier180Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier180Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier180Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier180Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier180Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier180Path.close()
        context.saveGState()
        bezier180Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 181 Drawing
        let bezier181Path = UIBezierPath()
        bezier181Path.move(to: CGPoint(x: 5.41, y: -4.15))
        bezier181Path.addCurve(to: CGPoint(x: -18.64, y: -4.87), controlPoint1: CGPoint(x: -2.67, y: -4.49), controlPoint2: CGPoint(x: -18.64, y: -4.87))
        bezier181Path.addCurve(to: CGPoint(x: 5.42, y: -5.82), controlPoint1: CGPoint(x: -18.64, y: -4.87), controlPoint2: CGPoint(x: -2.67, y: -5.25))
        bezier181Path.addCurve(to: CGPoint(x: 13.74, y: -7.15), controlPoint1: CGPoint(x: 13.51, y: -6.39), controlPoint2: CGPoint(x: 11.71, y: -7.2))
        bezier181Path.addCurve(to: CGPoint(x: 23.13, y: -5.91), controlPoint1: CGPoint(x: 15.77, y: -7.11), controlPoint2: CGPoint(x: 13.72, y: -6.39))
        bezier181Path.addCurve(to: CGPoint(x: 51.36, y: -5.25), controlPoint1: CGPoint(x: 32.53, y: -5.44), controlPoint2: CGPoint(x: 51.36, y: -5.25))
        bezier181Path.addCurve(to: CGPoint(x: 23.12, y: -4.37), controlPoint1: CGPoint(x: 51.36, y: -5.25), controlPoint2: CGPoint(x: 32.54, y: -4.8))
        bezier181Path.addCurve(to: CGPoint(x: 13.67, y: -3.51), controlPoint1: CGPoint(x: 13.7, y: -3.93), controlPoint2: CGPoint(x: 15.62, y: -3.44))
        bezier181Path.addCurve(to: CGPoint(x: 5.41, y: -4.15), controlPoint1: CGPoint(x: 11.73, y: -3.58), controlPoint2: CGPoint(x: 13.49, y: -3.81))
        bezier181Path.close()
        context.saveGState()
        bezier181Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -5.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -5.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 98
        //// Bezier 182 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -37.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier182Path = UIBezierPath()
        bezier182Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier182Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier182Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier182Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier182Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier182Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier182Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier182Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier182Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier182Path.close()
        context.saveGState()
        bezier182Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 183 Drawing
        let bezier183Path = UIBezierPath()
        bezier183Path.move(to: CGPoint(x: 5.68, y: -4.31))
        bezier183Path.addCurve(to: CGPoint(x: -18.37, y: -5.03), controlPoint1: CGPoint(x: -2.4, y: -4.65), controlPoint2: CGPoint(x: -18.37, y: -5.03))
        bezier183Path.addCurve(to: CGPoint(x: 5.69, y: -5.98), controlPoint1: CGPoint(x: -18.37, y: -5.03), controlPoint2: CGPoint(x: -2.41, y: -5.41))
        bezier183Path.addCurve(to: CGPoint(x: 14.01, y: -7.31), controlPoint1: CGPoint(x: 13.78, y: -6.55), controlPoint2: CGPoint(x: 11.98, y: -7.35))
        bezier183Path.addCurve(to: CGPoint(x: 23.39, y: -6.07), controlPoint1: CGPoint(x: 16.04, y: -7.27), controlPoint2: CGPoint(x: 13.99, y: -6.55))
        bezier183Path.addCurve(to: CGPoint(x: 51.63, y: -5.41), controlPoint1: CGPoint(x: 32.8, y: -5.6), controlPoint2: CGPoint(x: 51.63, y: -5.41))
        bezier183Path.addCurve(to: CGPoint(x: 23.39, y: -4.52), controlPoint1: CGPoint(x: 51.63, y: -5.41), controlPoint2: CGPoint(x: 32.81, y: -4.96))
        bezier183Path.addCurve(to: CGPoint(x: 13.94, y: -3.67), controlPoint1: CGPoint(x: 13.96, y: -4.09), controlPoint2: CGPoint(x: 15.89, y: -3.6))
        bezier183Path.addCurve(to: CGPoint(x: 5.68, y: -4.31), controlPoint1: CGPoint(x: 11.99, y: -3.74), controlPoint2: CGPoint(x: 13.75, y: -3.97))
        bezier183Path.close()
        context.saveGState()
        bezier183Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -5.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -5.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 99
        context.saveGState()
        context.translateBy(x: 24.49, y: 11.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 100
        //// Bezier 184 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -40.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier184Path = UIBezierPath()
        bezier184Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier184Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier184Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier184Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier184Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier184Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier184Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier184Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier184Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier184Path.close()
        context.saveGState()
        bezier184Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 185 Drawing
        let bezier185Path = UIBezierPath()
        bezier185Path.move(to: CGPoint(x: 5.41, y: -7.15))
        bezier185Path.addCurve(to: CGPoint(x: -18.64, y: -7.87), controlPoint1: CGPoint(x: -2.67, y: -7.49), controlPoint2: CGPoint(x: -18.64, y: -7.87))
        bezier185Path.addCurve(to: CGPoint(x: 5.42, y: -8.82), controlPoint1: CGPoint(x: -18.64, y: -7.87), controlPoint2: CGPoint(x: -2.67, y: -8.25))
        bezier185Path.addCurve(to: CGPoint(x: 13.74, y: -10.15), controlPoint1: CGPoint(x: 13.51, y: -9.39), controlPoint2: CGPoint(x: 11.71, y: -10.2))
        bezier185Path.addCurve(to: CGPoint(x: 23.13, y: -8.91), controlPoint1: CGPoint(x: 15.77, y: -10.11), controlPoint2: CGPoint(x: 13.72, y: -9.39))
        bezier185Path.addCurve(to: CGPoint(x: 51.36, y: -8.25), controlPoint1: CGPoint(x: 32.53, y: -8.44), controlPoint2: CGPoint(x: 51.36, y: -8.25))
        bezier185Path.addCurve(to: CGPoint(x: 23.12, y: -7.37), controlPoint1: CGPoint(x: 51.36, y: -8.25), controlPoint2: CGPoint(x: 32.54, y: -7.8))
        bezier185Path.addCurve(to: CGPoint(x: 13.67, y: -6.51), controlPoint1: CGPoint(x: 13.7, y: -6.93), controlPoint2: CGPoint(x: 15.62, y: -6.44))
        bezier185Path.addCurve(to: CGPoint(x: 5.41, y: -7.15), controlPoint1: CGPoint(x: 11.73, y: -6.58), controlPoint2: CGPoint(x: 13.49, y: -6.81))
        bezier185Path.close()
        context.saveGState()
        bezier185Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -8.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -8.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 101
        //// Bezier 186 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -40.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier186Path = UIBezierPath()
        bezier186Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier186Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier186Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier186Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier186Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier186Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier186Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier186Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier186Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier186Path.close()
        context.saveGState()
        bezier186Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 187 Drawing
        let bezier187Path = UIBezierPath()
        bezier187Path.move(to: CGPoint(x: 5.68, y: -7.31))
        bezier187Path.addCurve(to: CGPoint(x: -18.37, y: -8.03), controlPoint1: CGPoint(x: -2.4, y: -7.65), controlPoint2: CGPoint(x: -18.37, y: -8.03))
        bezier187Path.addCurve(to: CGPoint(x: 5.69, y: -8.98), controlPoint1: CGPoint(x: -18.37, y: -8.03), controlPoint2: CGPoint(x: -2.41, y: -8.41))
        bezier187Path.addCurve(to: CGPoint(x: 14.01, y: -10.31), controlPoint1: CGPoint(x: 13.78, y: -9.55), controlPoint2: CGPoint(x: 11.98, y: -10.35))
        bezier187Path.addCurve(to: CGPoint(x: 23.39, y: -9.07), controlPoint1: CGPoint(x: 16.04, y: -10.27), controlPoint2: CGPoint(x: 13.99, y: -9.55))
        bezier187Path.addCurve(to: CGPoint(x: 51.63, y: -8.41), controlPoint1: CGPoint(x: 32.8, y: -8.6), controlPoint2: CGPoint(x: 51.63, y: -8.41))
        bezier187Path.addCurve(to: CGPoint(x: 23.39, y: -7.52), controlPoint1: CGPoint(x: 51.63, y: -8.41), controlPoint2: CGPoint(x: 32.81, y: -7.96))
        bezier187Path.addCurve(to: CGPoint(x: 13.94, y: -6.67), controlPoint1: CGPoint(x: 13.96, y: -7.09), controlPoint2: CGPoint(x: 15.89, y: -6.6))
        bezier187Path.addCurve(to: CGPoint(x: 5.68, y: -7.31), controlPoint1: CGPoint(x: 11.99, y: -6.74), controlPoint2: CGPoint(x: 13.75, y: -6.97))
        bezier187Path.close()
        context.saveGState()
        bezier187Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -8.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -8.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 102
        context.saveGState()
        context.translateBy(x: 60.49, y: 34.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 103
        //// Bezier 188 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -21.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier188Path = UIBezierPath()
        bezier188Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier188Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier188Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier188Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier188Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier188Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier188Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier188Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier188Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier188Path.close()
        context.saveGState()
        bezier188Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 189 Drawing
        let bezier189Path = UIBezierPath()
        bezier189Path.move(to: CGPoint(x: 5.41, y: 11.85))
        bezier189Path.addCurve(to: CGPoint(x: -18.64, y: 11.13), controlPoint1: CGPoint(x: -2.67, y: 11.51), controlPoint2: CGPoint(x: -18.64, y: 11.13))
        bezier189Path.addCurve(to: CGPoint(x: 5.42, y: 10.18), controlPoint1: CGPoint(x: -18.64, y: 11.13), controlPoint2: CGPoint(x: -2.67, y: 10.75))
        bezier189Path.addCurve(to: CGPoint(x: 13.74, y: 8.85), controlPoint1: CGPoint(x: 13.51, y: 9.61), controlPoint2: CGPoint(x: 11.71, y: 8.8))
        bezier189Path.addCurve(to: CGPoint(x: 23.13, y: 10.09), controlPoint1: CGPoint(x: 15.77, y: 8.89), controlPoint2: CGPoint(x: 13.72, y: 9.61))
        bezier189Path.addCurve(to: CGPoint(x: 51.36, y: 10.75), controlPoint1: CGPoint(x: 32.53, y: 10.56), controlPoint2: CGPoint(x: 51.36, y: 10.75))
        bezier189Path.addCurve(to: CGPoint(x: 23.12, y: 11.63), controlPoint1: CGPoint(x: 51.36, y: 10.75), controlPoint2: CGPoint(x: 32.54, y: 11.2))
        bezier189Path.addCurve(to: CGPoint(x: 13.67, y: 12.49), controlPoint1: CGPoint(x: 13.7, y: 12.07), controlPoint2: CGPoint(x: 15.62, y: 12.56))
        bezier189Path.addCurve(to: CGPoint(x: 5.41, y: 11.85), controlPoint1: CGPoint(x: 11.73, y: 12.42), controlPoint2: CGPoint(x: 13.49, y: 12.19))
        bezier189Path.close()
        context.saveGState()
        bezier189Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 10.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 10.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 104
        //// Bezier 190 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -21.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier190Path = UIBezierPath()
        bezier190Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier190Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier190Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier190Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier190Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier190Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier190Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier190Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier190Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier190Path.close()
        context.saveGState()
        bezier190Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 191 Drawing
        let bezier191Path = UIBezierPath()
        bezier191Path.move(to: CGPoint(x: 5.68, y: 11.69))
        bezier191Path.addCurve(to: CGPoint(x: -18.37, y: 10.97), controlPoint1: CGPoint(x: -2.4, y: 11.35), controlPoint2: CGPoint(x: -18.37, y: 10.97))
        bezier191Path.addCurve(to: CGPoint(x: 5.69, y: 10.02), controlPoint1: CGPoint(x: -18.37, y: 10.97), controlPoint2: CGPoint(x: -2.41, y: 10.59))
        bezier191Path.addCurve(to: CGPoint(x: 14.01, y: 8.69), controlPoint1: CGPoint(x: 13.78, y: 9.45), controlPoint2: CGPoint(x: 11.98, y: 8.65))
        bezier191Path.addCurve(to: CGPoint(x: 23.39, y: 9.93), controlPoint1: CGPoint(x: 16.04, y: 8.73), controlPoint2: CGPoint(x: 13.99, y: 9.45))
        bezier191Path.addCurve(to: CGPoint(x: 51.63, y: 10.59), controlPoint1: CGPoint(x: 32.8, y: 10.4), controlPoint2: CGPoint(x: 51.63, y: 10.59))
        bezier191Path.addCurve(to: CGPoint(x: 23.39, y: 11.48), controlPoint1: CGPoint(x: 51.63, y: 10.59), controlPoint2: CGPoint(x: 32.81, y: 11.04))
        bezier191Path.addCurve(to: CGPoint(x: 13.94, y: 12.33), controlPoint1: CGPoint(x: 13.96, y: 11.91), controlPoint2: CGPoint(x: 15.89, y: 12.4))
        bezier191Path.addCurve(to: CGPoint(x: 5.68, y: 11.69), controlPoint1: CGPoint(x: 11.99, y: 12.26), controlPoint2: CGPoint(x: 13.75, y: 12.03))
        bezier191Path.close()
        context.saveGState()
        bezier191Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 10.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 10.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 105
        context.saveGState()
        context.translateBy(x: 131.49, y: 89.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 106
        //// Bezier 192 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 16.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier192Path = UIBezierPath()
        bezier192Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier192Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier192Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier192Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier192Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier192Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier192Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier192Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier192Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier192Path.close()
        context.saveGState()
        bezier192Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 193 Drawing
        let bezier193Path = UIBezierPath()
        bezier193Path.move(to: CGPoint(x: 5.41, y: 49.85))
        bezier193Path.addCurve(to: CGPoint(x: -18.64, y: 49.13), controlPoint1: CGPoint(x: -2.67, y: 49.51), controlPoint2: CGPoint(x: -18.64, y: 49.13))
        bezier193Path.addCurve(to: CGPoint(x: 5.42, y: 48.18), controlPoint1: CGPoint(x: -18.64, y: 49.13), controlPoint2: CGPoint(x: -2.67, y: 48.75))
        bezier193Path.addCurve(to: CGPoint(x: 13.74, y: 46.85), controlPoint1: CGPoint(x: 13.51, y: 47.61), controlPoint2: CGPoint(x: 11.71, y: 46.8))
        bezier193Path.addCurve(to: CGPoint(x: 23.13, y: 48.09), controlPoint1: CGPoint(x: 15.77, y: 46.89), controlPoint2: CGPoint(x: 13.72, y: 47.61))
        bezier193Path.addCurve(to: CGPoint(x: 51.36, y: 48.75), controlPoint1: CGPoint(x: 32.53, y: 48.56), controlPoint2: CGPoint(x: 51.36, y: 48.75))
        bezier193Path.addCurve(to: CGPoint(x: 23.12, y: 49.63), controlPoint1: CGPoint(x: 51.36, y: 48.75), controlPoint2: CGPoint(x: 32.54, y: 49.2))
        bezier193Path.addCurve(to: CGPoint(x: 13.67, y: 50.49), controlPoint1: CGPoint(x: 13.7, y: 50.07), controlPoint2: CGPoint(x: 15.62, y: 50.56))
        bezier193Path.addCurve(to: CGPoint(x: 5.41, y: 49.85), controlPoint1: CGPoint(x: 11.73, y: 50.42), controlPoint2: CGPoint(x: 13.49, y: 50.19))
        bezier193Path.close()
        context.saveGState()
        bezier193Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 48.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 48.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 107
        //// Bezier 194 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 16.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier194Path = UIBezierPath()
        bezier194Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier194Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier194Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier194Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier194Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier194Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier194Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier194Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier194Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier194Path.close()
        context.saveGState()
        bezier194Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 195 Drawing
        let bezier195Path = UIBezierPath()
        bezier195Path.move(to: CGPoint(x: 5.68, y: 49.69))
        bezier195Path.addCurve(to: CGPoint(x: -18.37, y: 48.97), controlPoint1: CGPoint(x: -2.4, y: 49.35), controlPoint2: CGPoint(x: -18.37, y: 48.97))
        bezier195Path.addCurve(to: CGPoint(x: 5.69, y: 48.02), controlPoint1: CGPoint(x: -18.37, y: 48.97), controlPoint2: CGPoint(x: -2.41, y: 48.59))
        bezier195Path.addCurve(to: CGPoint(x: 14.01, y: 46.69), controlPoint1: CGPoint(x: 13.78, y: 47.45), controlPoint2: CGPoint(x: 11.98, y: 46.65))
        bezier195Path.addCurve(to: CGPoint(x: 23.39, y: 47.93), controlPoint1: CGPoint(x: 16.04, y: 46.73), controlPoint2: CGPoint(x: 13.99, y: 47.45))
        bezier195Path.addCurve(to: CGPoint(x: 51.63, y: 48.59), controlPoint1: CGPoint(x: 32.8, y: 48.4), controlPoint2: CGPoint(x: 51.63, y: 48.59))
        bezier195Path.addCurve(to: CGPoint(x: 23.39, y: 49.48), controlPoint1: CGPoint(x: 51.63, y: 48.59), controlPoint2: CGPoint(x: 32.81, y: 49.04))
        bezier195Path.addCurve(to: CGPoint(x: 13.94, y: 50.33), controlPoint1: CGPoint(x: 13.96, y: 49.91), controlPoint2: CGPoint(x: 15.89, y: 50.4))
        bezier195Path.addCurve(to: CGPoint(x: 5.68, y: 49.69), controlPoint1: CGPoint(x: 11.99, y: 50.26), controlPoint2: CGPoint(x: 13.75, y: 50.03))
        bezier195Path.close()
        context.saveGState()
        bezier195Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 48.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 48.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 108
        context.saveGState()
        context.translateBy(x: 197.49, y: 99.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.4)



        //// Group 109
        //// Bezier 196 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -1.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier196Path = UIBezierPath()
        bezier196Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier196Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier196Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier196Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier196Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier196Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier196Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier196Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier196Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier196Path.close()
        context.saveGState()
        bezier196Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 197 Drawing
        let bezier197Path = UIBezierPath()
        bezier197Path.move(to: CGPoint(x: 5.41, y: 31.85))
        bezier197Path.addCurve(to: CGPoint(x: -18.64, y: 31.13), controlPoint1: CGPoint(x: -2.67, y: 31.51), controlPoint2: CGPoint(x: -18.64, y: 31.13))
        bezier197Path.addCurve(to: CGPoint(x: 5.42, y: 30.18), controlPoint1: CGPoint(x: -18.64, y: 31.13), controlPoint2: CGPoint(x: -2.67, y: 30.75))
        bezier197Path.addCurve(to: CGPoint(x: 13.74, y: 28.85), controlPoint1: CGPoint(x: 13.51, y: 29.61), controlPoint2: CGPoint(x: 11.71, y: 28.8))
        bezier197Path.addCurve(to: CGPoint(x: 23.13, y: 30.09), controlPoint1: CGPoint(x: 15.77, y: 28.89), controlPoint2: CGPoint(x: 13.72, y: 29.61))
        bezier197Path.addCurve(to: CGPoint(x: 51.36, y: 30.75), controlPoint1: CGPoint(x: 32.53, y: 30.56), controlPoint2: CGPoint(x: 51.36, y: 30.75))
        bezier197Path.addCurve(to: CGPoint(x: 23.12, y: 31.63), controlPoint1: CGPoint(x: 51.36, y: 30.75), controlPoint2: CGPoint(x: 32.54, y: 31.2))
        bezier197Path.addCurve(to: CGPoint(x: 13.67, y: 32.49), controlPoint1: CGPoint(x: 13.7, y: 32.07), controlPoint2: CGPoint(x: 15.62, y: 32.56))
        bezier197Path.addCurve(to: CGPoint(x: 5.41, y: 31.85), controlPoint1: CGPoint(x: 11.73, y: 32.42), controlPoint2: CGPoint(x: 13.49, y: 32.19))
        bezier197Path.close()
        context.saveGState()
        bezier197Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 30.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 30.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 110
        //// Bezier 198 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -1.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier198Path = UIBezierPath()
        bezier198Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier198Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier198Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier198Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier198Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier198Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier198Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier198Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier198Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier198Path.close()
        context.saveGState()
        bezier198Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 199 Drawing
        let bezier199Path = UIBezierPath()
        bezier199Path.move(to: CGPoint(x: 5.68, y: 31.69))
        bezier199Path.addCurve(to: CGPoint(x: -18.37, y: 30.97), controlPoint1: CGPoint(x: -2.4, y: 31.35), controlPoint2: CGPoint(x: -18.37, y: 30.97))
        bezier199Path.addCurve(to: CGPoint(x: 5.69, y: 30.02), controlPoint1: CGPoint(x: -18.37, y: 30.97), controlPoint2: CGPoint(x: -2.41, y: 30.59))
        bezier199Path.addCurve(to: CGPoint(x: 14.01, y: 28.69), controlPoint1: CGPoint(x: 13.78, y: 29.45), controlPoint2: CGPoint(x: 11.98, y: 28.65))
        bezier199Path.addCurve(to: CGPoint(x: 23.39, y: 29.93), controlPoint1: CGPoint(x: 16.04, y: 28.73), controlPoint2: CGPoint(x: 13.99, y: 29.45))
        bezier199Path.addCurve(to: CGPoint(x: 51.63, y: 30.59), controlPoint1: CGPoint(x: 32.8, y: 30.4), controlPoint2: CGPoint(x: 51.63, y: 30.59))
        bezier199Path.addCurve(to: CGPoint(x: 23.39, y: 31.48), controlPoint1: CGPoint(x: 51.63, y: 30.59), controlPoint2: CGPoint(x: 32.81, y: 31.04))
        bezier199Path.addCurve(to: CGPoint(x: 13.94, y: 32.33), controlPoint1: CGPoint(x: 13.96, y: 31.91), controlPoint2: CGPoint(x: 15.89, y: 32.4))
        bezier199Path.addCurve(to: CGPoint(x: 5.68, y: 31.69), controlPoint1: CGPoint(x: 11.99, y: 32.26), controlPoint2: CGPoint(x: 13.75, y: 32.03))
        bezier199Path.close()
        context.saveGState()
        bezier199Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 30.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 30.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 111
        context.saveGState()
        context.translateBy(x: 236.49, y: 74.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 112
        //// Bezier 200 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 71.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier200Path = UIBezierPath()
        bezier200Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier200Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier200Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier200Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier200Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier200Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier200Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier200Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier200Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier200Path.close()
        context.saveGState()
        bezier200Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 201 Drawing
        let bezier201Path = UIBezierPath()
        bezier201Path.move(to: CGPoint(x: 5.41, y: 104.85))
        bezier201Path.addCurve(to: CGPoint(x: -18.64, y: 104.13), controlPoint1: CGPoint(x: -2.67, y: 104.51), controlPoint2: CGPoint(x: -18.64, y: 104.13))
        bezier201Path.addCurve(to: CGPoint(x: 5.42, y: 103.18), controlPoint1: CGPoint(x: -18.64, y: 104.13), controlPoint2: CGPoint(x: -2.67, y: 103.75))
        bezier201Path.addCurve(to: CGPoint(x: 13.74, y: 101.85), controlPoint1: CGPoint(x: 13.51, y: 102.61), controlPoint2: CGPoint(x: 11.71, y: 101.8))
        bezier201Path.addCurve(to: CGPoint(x: 23.13, y: 103.09), controlPoint1: CGPoint(x: 15.77, y: 101.89), controlPoint2: CGPoint(x: 13.72, y: 102.61))
        bezier201Path.addCurve(to: CGPoint(x: 51.36, y: 103.75), controlPoint1: CGPoint(x: 32.53, y: 103.56), controlPoint2: CGPoint(x: 51.36, y: 103.75))
        bezier201Path.addCurve(to: CGPoint(x: 23.12, y: 104.63), controlPoint1: CGPoint(x: 51.36, y: 103.75), controlPoint2: CGPoint(x: 32.54, y: 104.2))
        bezier201Path.addCurve(to: CGPoint(x: 13.67, y: 105.49), controlPoint1: CGPoint(x: 13.7, y: 105.07), controlPoint2: CGPoint(x: 15.62, y: 105.56))
        bezier201Path.addCurve(to: CGPoint(x: 5.41, y: 104.85), controlPoint1: CGPoint(x: 11.73, y: 105.42), controlPoint2: CGPoint(x: 13.49, y: 105.19))
        bezier201Path.close()
        context.saveGState()
        bezier201Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 103.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 103.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 113
        //// Bezier 202 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 71.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier202Path = UIBezierPath()
        bezier202Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier202Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier202Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier202Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier202Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier202Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier202Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier202Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier202Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier202Path.close()
        context.saveGState()
        bezier202Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 203 Drawing
        let bezier203Path = UIBezierPath()
        bezier203Path.move(to: CGPoint(x: 5.68, y: 104.69))
        bezier203Path.addCurve(to: CGPoint(x: -18.37, y: 103.97), controlPoint1: CGPoint(x: -2.4, y: 104.35), controlPoint2: CGPoint(x: -18.37, y: 103.97))
        bezier203Path.addCurve(to: CGPoint(x: 5.69, y: 103.02), controlPoint1: CGPoint(x: -18.37, y: 103.97), controlPoint2: CGPoint(x: -2.41, y: 103.59))
        bezier203Path.addCurve(to: CGPoint(x: 14.01, y: 101.69), controlPoint1: CGPoint(x: 13.78, y: 102.45), controlPoint2: CGPoint(x: 11.98, y: 101.65))
        bezier203Path.addCurve(to: CGPoint(x: 23.39, y: 102.93), controlPoint1: CGPoint(x: 16.04, y: 101.73), controlPoint2: CGPoint(x: 13.99, y: 102.45))
        bezier203Path.addCurve(to: CGPoint(x: 51.63, y: 103.59), controlPoint1: CGPoint(x: 32.8, y: 103.4), controlPoint2: CGPoint(x: 51.63, y: 103.59))
        bezier203Path.addCurve(to: CGPoint(x: 23.39, y: 104.48), controlPoint1: CGPoint(x: 51.63, y: 103.59), controlPoint2: CGPoint(x: 32.81, y: 104.04))
        bezier203Path.addCurve(to: CGPoint(x: 13.94, y: 105.33), controlPoint1: CGPoint(x: 13.96, y: 104.91), controlPoint2: CGPoint(x: 15.89, y: 105.4))
        bezier203Path.addCurve(to: CGPoint(x: 5.68, y: 104.69), controlPoint1: CGPoint(x: 11.99, y: 105.26), controlPoint2: CGPoint(x: 13.75, y: 105.03))
        bezier203Path.close()
        context.saveGState()
        bezier203Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 103.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 103.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 114
        context.saveGState()
        context.translateBy(x: 169.49, y: 74.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 115
        //// Bezier 204 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 36.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier204Path = UIBezierPath()
        bezier204Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier204Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier204Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier204Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier204Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier204Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier204Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier204Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier204Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier204Path.close()
        context.saveGState()
        bezier204Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 205 Drawing
        let bezier205Path = UIBezierPath()
        bezier205Path.move(to: CGPoint(x: 5.41, y: 69.85))
        bezier205Path.addCurve(to: CGPoint(x: -18.64, y: 69.13), controlPoint1: CGPoint(x: -2.67, y: 69.51), controlPoint2: CGPoint(x: -18.64, y: 69.13))
        bezier205Path.addCurve(to: CGPoint(x: 5.42, y: 68.18), controlPoint1: CGPoint(x: -18.64, y: 69.13), controlPoint2: CGPoint(x: -2.67, y: 68.75))
        bezier205Path.addCurve(to: CGPoint(x: 13.74, y: 66.85), controlPoint1: CGPoint(x: 13.51, y: 67.61), controlPoint2: CGPoint(x: 11.71, y: 66.8))
        bezier205Path.addCurve(to: CGPoint(x: 23.13, y: 68.09), controlPoint1: CGPoint(x: 15.77, y: 66.89), controlPoint2: CGPoint(x: 13.72, y: 67.61))
        bezier205Path.addCurve(to: CGPoint(x: 51.36, y: 68.75), controlPoint1: CGPoint(x: 32.53, y: 68.56), controlPoint2: CGPoint(x: 51.36, y: 68.75))
        bezier205Path.addCurve(to: CGPoint(x: 23.12, y: 69.63), controlPoint1: CGPoint(x: 51.36, y: 68.75), controlPoint2: CGPoint(x: 32.54, y: 69.2))
        bezier205Path.addCurve(to: CGPoint(x: 13.67, y: 70.49), controlPoint1: CGPoint(x: 13.7, y: 70.07), controlPoint2: CGPoint(x: 15.62, y: 70.56))
        bezier205Path.addCurve(to: CGPoint(x: 5.41, y: 69.85), controlPoint1: CGPoint(x: 11.73, y: 70.42), controlPoint2: CGPoint(x: 13.49, y: 70.19))
        bezier205Path.close()
        context.saveGState()
        bezier205Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 68.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 68.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 116
        //// Bezier 206 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 36.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier206Path = UIBezierPath()
        bezier206Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier206Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier206Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier206Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier206Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier206Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier206Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier206Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier206Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier206Path.close()
        context.saveGState()
        bezier206Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 207 Drawing
        let bezier207Path = UIBezierPath()
        bezier207Path.move(to: CGPoint(x: 5.68, y: 69.69))
        bezier207Path.addCurve(to: CGPoint(x: -18.37, y: 68.97), controlPoint1: CGPoint(x: -2.4, y: 69.35), controlPoint2: CGPoint(x: -18.37, y: 68.97))
        bezier207Path.addCurve(to: CGPoint(x: 5.69, y: 68.02), controlPoint1: CGPoint(x: -18.37, y: 68.97), controlPoint2: CGPoint(x: -2.41, y: 68.59))
        bezier207Path.addCurve(to: CGPoint(x: 14.01, y: 66.69), controlPoint1: CGPoint(x: 13.78, y: 67.45), controlPoint2: CGPoint(x: 11.98, y: 66.65))
        bezier207Path.addCurve(to: CGPoint(x: 23.39, y: 67.93), controlPoint1: CGPoint(x: 16.04, y: 66.73), controlPoint2: CGPoint(x: 13.99, y: 67.45))
        bezier207Path.addCurve(to: CGPoint(x: 51.63, y: 68.59), controlPoint1: CGPoint(x: 32.8, y: 68.4), controlPoint2: CGPoint(x: 51.63, y: 68.59))
        bezier207Path.addCurve(to: CGPoint(x: 23.39, y: 69.48), controlPoint1: CGPoint(x: 51.63, y: 68.59), controlPoint2: CGPoint(x: 32.81, y: 69.04))
        bezier207Path.addCurve(to: CGPoint(x: 13.94, y: 70.33), controlPoint1: CGPoint(x: 13.96, y: 69.91), controlPoint2: CGPoint(x: 15.89, y: 70.4))
        bezier207Path.addCurve(to: CGPoint(x: 5.68, y: 69.69), controlPoint1: CGPoint(x: 11.99, y: 70.26), controlPoint2: CGPoint(x: 13.75, y: 70.03))
        bezier207Path.close()
        context.saveGState()
        bezier207Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 68.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 68.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 117
        context.saveGState()
        context.translateBy(x: 57.49, y: 84.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.3)



        //// Group 118
        //// Bezier 208 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -32.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier208Path = UIBezierPath()
        bezier208Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier208Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier208Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier208Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier208Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier208Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier208Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier208Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier208Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier208Path.close()
        context.saveGState()
        bezier208Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 209 Drawing
        let bezier209Path = UIBezierPath()
        bezier209Path.move(to: CGPoint(x: 5.41, y: 0.85))
        bezier209Path.addCurve(to: CGPoint(x: -18.64, y: 0.13), controlPoint1: CGPoint(x: -2.67, y: 0.51), controlPoint2: CGPoint(x: -18.64, y: 0.13))
        bezier209Path.addCurve(to: CGPoint(x: 5.42, y: -0.82), controlPoint1: CGPoint(x: -18.64, y: 0.13), controlPoint2: CGPoint(x: -2.67, y: -0.25))
        bezier209Path.addCurve(to: CGPoint(x: 13.74, y: -2.15), controlPoint1: CGPoint(x: 13.51, y: -1.39), controlPoint2: CGPoint(x: 11.71, y: -2.2))
        bezier209Path.addCurve(to: CGPoint(x: 23.13, y: -0.91), controlPoint1: CGPoint(x: 15.77, y: -2.11), controlPoint2: CGPoint(x: 13.72, y: -1.39))
        bezier209Path.addCurve(to: CGPoint(x: 51.36, y: -0.25), controlPoint1: CGPoint(x: 32.53, y: -0.44), controlPoint2: CGPoint(x: 51.36, y: -0.25))
        bezier209Path.addCurve(to: CGPoint(x: 23.12, y: 0.63), controlPoint1: CGPoint(x: 51.36, y: -0.25), controlPoint2: CGPoint(x: 32.54, y: 0.2))
        bezier209Path.addCurve(to: CGPoint(x: 13.67, y: 1.49), controlPoint1: CGPoint(x: 13.7, y: 1.07), controlPoint2: CGPoint(x: 15.62, y: 1.56))
        bezier209Path.addCurve(to: CGPoint(x: 5.41, y: 0.85), controlPoint1: CGPoint(x: 11.73, y: 1.42), controlPoint2: CGPoint(x: 13.49, y: 1.19))
        bezier209Path.close()
        context.saveGState()
        bezier209Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -0.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -0.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 119
        //// Bezier 210 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -32.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier210Path = UIBezierPath()
        bezier210Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier210Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier210Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier210Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier210Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier210Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier210Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier210Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier210Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier210Path.close()
        context.saveGState()
        bezier210Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 211 Drawing
        let bezier211Path = UIBezierPath()
        bezier211Path.move(to: CGPoint(x: 5.68, y: 0.69))
        bezier211Path.addCurve(to: CGPoint(x: -18.37, y: -0.03), controlPoint1: CGPoint(x: -2.4, y: 0.35), controlPoint2: CGPoint(x: -18.37, y: -0.03))
        bezier211Path.addCurve(to: CGPoint(x: 5.69, y: -0.98), controlPoint1: CGPoint(x: -18.37, y: -0.03), controlPoint2: CGPoint(x: -2.41, y: -0.41))
        bezier211Path.addCurve(to: CGPoint(x: 14.01, y: -2.31), controlPoint1: CGPoint(x: 13.78, y: -1.55), controlPoint2: CGPoint(x: 11.98, y: -2.35))
        bezier211Path.addCurve(to: CGPoint(x: 23.39, y: -1.07), controlPoint1: CGPoint(x: 16.04, y: -2.27), controlPoint2: CGPoint(x: 13.99, y: -1.55))
        bezier211Path.addCurve(to: CGPoint(x: 51.63, y: -0.41), controlPoint1: CGPoint(x: 32.8, y: -0.6), controlPoint2: CGPoint(x: 51.63, y: -0.41))
        bezier211Path.addCurve(to: CGPoint(x: 23.39, y: 0.48), controlPoint1: CGPoint(x: 51.63, y: -0.41), controlPoint2: CGPoint(x: 32.81, y: 0.04))
        bezier211Path.addCurve(to: CGPoint(x: 13.94, y: 1.33), controlPoint1: CGPoint(x: 13.96, y: 0.91), controlPoint2: CGPoint(x: 15.89, y: 1.4))
        bezier211Path.addCurve(to: CGPoint(x: 5.68, y: 0.69), controlPoint1: CGPoint(x: 11.99, y: 1.26), controlPoint2: CGPoint(x: 13.75, y: 1.03))
        bezier211Path.close()
        context.saveGState()
        bezier211Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -0.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -0.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 120
        context.saveGState()
        context.translateBy(x: 16.49, y: 94.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.34, y: 0.34)



        //// Group 121
        //// Bezier 212 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier212Path = UIBezierPath()
        bezier212Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier212Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier212Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier212Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier212Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier212Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier212Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier212Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier212Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier212Path.close()
        context.saveGState()
        bezier212Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 213 Drawing
        let bezier213Path = UIBezierPath()
        bezier213Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier213Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier213Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier213Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier213Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier213Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier213Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier213Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier213Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier213Path.close()
        context.saveGState()
        bezier213Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 122
        //// Bezier 214 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier214Path = UIBezierPath()
        bezier214Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier214Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier214Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier214Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier214Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier214Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier214Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier214Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier214Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier214Path.close()
        context.saveGState()
        bezier214Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 215 Drawing
        let bezier215Path = UIBezierPath()
        bezier215Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier215Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier215Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier215Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier215Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier215Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier215Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier215Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier215Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier215Path.close()
        context.saveGState()
        bezier215Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 123
        context.saveGState()
        context.translateBy(x: 26.49, y: 153.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 124
        //// Bezier 216 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -39.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier216Path = UIBezierPath()
        bezier216Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier216Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier216Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier216Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier216Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier216Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier216Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier216Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier216Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier216Path.close()
        context.saveGState()
        bezier216Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 217 Drawing
        let bezier217Path = UIBezierPath()
        bezier217Path.move(to: CGPoint(x: 5.41, y: -6.15))
        bezier217Path.addCurve(to: CGPoint(x: -18.64, y: -6.87), controlPoint1: CGPoint(x: -2.67, y: -6.49), controlPoint2: CGPoint(x: -18.64, y: -6.87))
        bezier217Path.addCurve(to: CGPoint(x: 5.42, y: -7.82), controlPoint1: CGPoint(x: -18.64, y: -6.87), controlPoint2: CGPoint(x: -2.67, y: -7.25))
        bezier217Path.addCurve(to: CGPoint(x: 13.74, y: -9.15), controlPoint1: CGPoint(x: 13.51, y: -8.39), controlPoint2: CGPoint(x: 11.71, y: -9.2))
        bezier217Path.addCurve(to: CGPoint(x: 23.13, y: -7.91), controlPoint1: CGPoint(x: 15.77, y: -9.11), controlPoint2: CGPoint(x: 13.72, y: -8.39))
        bezier217Path.addCurve(to: CGPoint(x: 51.36, y: -7.25), controlPoint1: CGPoint(x: 32.53, y: -7.44), controlPoint2: CGPoint(x: 51.36, y: -7.25))
        bezier217Path.addCurve(to: CGPoint(x: 23.12, y: -6.37), controlPoint1: CGPoint(x: 51.36, y: -7.25), controlPoint2: CGPoint(x: 32.54, y: -6.8))
        bezier217Path.addCurve(to: CGPoint(x: 13.67, y: -5.51), controlPoint1: CGPoint(x: 13.7, y: -5.93), controlPoint2: CGPoint(x: 15.62, y: -5.44))
        bezier217Path.addCurve(to: CGPoint(x: 5.41, y: -6.15), controlPoint1: CGPoint(x: 11.73, y: -5.58), controlPoint2: CGPoint(x: 13.49, y: -5.81))
        bezier217Path.close()
        context.saveGState()
        bezier217Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -7.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -7.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 125
        //// Bezier 218 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -39.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier218Path = UIBezierPath()
        bezier218Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier218Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier218Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier218Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier218Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier218Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier218Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier218Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier218Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier218Path.close()
        context.saveGState()
        bezier218Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 219 Drawing
        let bezier219Path = UIBezierPath()
        bezier219Path.move(to: CGPoint(x: 5.68, y: -6.31))
        bezier219Path.addCurve(to: CGPoint(x: -18.37, y: -7.03), controlPoint1: CGPoint(x: -2.4, y: -6.65), controlPoint2: CGPoint(x: -18.37, y: -7.03))
        bezier219Path.addCurve(to: CGPoint(x: 5.69, y: -7.98), controlPoint1: CGPoint(x: -18.37, y: -7.03), controlPoint2: CGPoint(x: -2.41, y: -7.41))
        bezier219Path.addCurve(to: CGPoint(x: 14.01, y: -9.31), controlPoint1: CGPoint(x: 13.78, y: -8.55), controlPoint2: CGPoint(x: 11.98, y: -9.35))
        bezier219Path.addCurve(to: CGPoint(x: 23.39, y: -8.07), controlPoint1: CGPoint(x: 16.04, y: -9.27), controlPoint2: CGPoint(x: 13.99, y: -8.55))
        bezier219Path.addCurve(to: CGPoint(x: 51.63, y: -7.41), controlPoint1: CGPoint(x: 32.8, y: -7.6), controlPoint2: CGPoint(x: 51.63, y: -7.41))
        bezier219Path.addCurve(to: CGPoint(x: 23.39, y: -6.52), controlPoint1: CGPoint(x: 51.63, y: -7.41), controlPoint2: CGPoint(x: 32.81, y: -6.96))
        bezier219Path.addCurve(to: CGPoint(x: 13.94, y: -5.67), controlPoint1: CGPoint(x: 13.96, y: -6.09), controlPoint2: CGPoint(x: 15.89, y: -5.6))
        bezier219Path.addCurve(to: CGPoint(x: 5.68, y: -6.31), controlPoint1: CGPoint(x: 11.99, y: -5.74), controlPoint2: CGPoint(x: 13.75, y: -5.97))
        bezier219Path.close()
        context.saveGState()
        bezier219Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -7.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -7.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 126
        context.saveGState()
        context.translateBy(x: 110.49, y: 160.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 127
        //// Bezier 220 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 63.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier220Path = UIBezierPath()
        bezier220Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier220Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier220Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier220Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier220Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier220Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier220Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier220Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier220Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier220Path.close()
        context.saveGState()
        bezier220Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 221 Drawing
        let bezier221Path = UIBezierPath()
        bezier221Path.move(to: CGPoint(x: 5.41, y: 96.85))
        bezier221Path.addCurve(to: CGPoint(x: -18.64, y: 96.13), controlPoint1: CGPoint(x: -2.67, y: 96.51), controlPoint2: CGPoint(x: -18.64, y: 96.13))
        bezier221Path.addCurve(to: CGPoint(x: 5.42, y: 95.18), controlPoint1: CGPoint(x: -18.64, y: 96.13), controlPoint2: CGPoint(x: -2.67, y: 95.75))
        bezier221Path.addCurve(to: CGPoint(x: 13.74, y: 93.85), controlPoint1: CGPoint(x: 13.51, y: 94.61), controlPoint2: CGPoint(x: 11.71, y: 93.8))
        bezier221Path.addCurve(to: CGPoint(x: 23.13, y: 95.09), controlPoint1: CGPoint(x: 15.77, y: 93.89), controlPoint2: CGPoint(x: 13.72, y: 94.61))
        bezier221Path.addCurve(to: CGPoint(x: 51.36, y: 95.75), controlPoint1: CGPoint(x: 32.53, y: 95.56), controlPoint2: CGPoint(x: 51.36, y: 95.75))
        bezier221Path.addCurve(to: CGPoint(x: 23.12, y: 96.63), controlPoint1: CGPoint(x: 51.36, y: 95.75), controlPoint2: CGPoint(x: 32.54, y: 96.2))
        bezier221Path.addCurve(to: CGPoint(x: 13.67, y: 97.49), controlPoint1: CGPoint(x: 13.7, y: 97.07), controlPoint2: CGPoint(x: 15.62, y: 97.56))
        bezier221Path.addCurve(to: CGPoint(x: 5.41, y: 96.85), controlPoint1: CGPoint(x: 11.73, y: 97.42), controlPoint2: CGPoint(x: 13.49, y: 97.19))
        bezier221Path.close()
        context.saveGState()
        bezier221Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 95.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 95.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 128
        //// Bezier 222 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 63.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier222Path = UIBezierPath()
        bezier222Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier222Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier222Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier222Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier222Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier222Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier222Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier222Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier222Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier222Path.close()
        context.saveGState()
        bezier222Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 223 Drawing
        let bezier223Path = UIBezierPath()
        bezier223Path.move(to: CGPoint(x: 5.68, y: 96.69))
        bezier223Path.addCurve(to: CGPoint(x: -18.37, y: 95.97), controlPoint1: CGPoint(x: -2.4, y: 96.35), controlPoint2: CGPoint(x: -18.37, y: 95.97))
        bezier223Path.addCurve(to: CGPoint(x: 5.69, y: 95.02), controlPoint1: CGPoint(x: -18.37, y: 95.97), controlPoint2: CGPoint(x: -2.41, y: 95.59))
        bezier223Path.addCurve(to: CGPoint(x: 14.01, y: 93.69), controlPoint1: CGPoint(x: 13.78, y: 94.45), controlPoint2: CGPoint(x: 11.98, y: 93.65))
        bezier223Path.addCurve(to: CGPoint(x: 23.39, y: 94.93), controlPoint1: CGPoint(x: 16.04, y: 93.73), controlPoint2: CGPoint(x: 13.99, y: 94.45))
        bezier223Path.addCurve(to: CGPoint(x: 51.63, y: 95.59), controlPoint1: CGPoint(x: 32.8, y: 95.4), controlPoint2: CGPoint(x: 51.63, y: 95.59))
        bezier223Path.addCurve(to: CGPoint(x: 23.39, y: 96.48), controlPoint1: CGPoint(x: 51.63, y: 95.59), controlPoint2: CGPoint(x: 32.81, y: 96.04))
        bezier223Path.addCurve(to: CGPoint(x: 13.94, y: 97.33), controlPoint1: CGPoint(x: 13.96, y: 96.91), controlPoint2: CGPoint(x: 15.89, y: 97.4))
        bezier223Path.addCurve(to: CGPoint(x: 5.68, y: 96.69), controlPoint1: CGPoint(x: 11.99, y: 97.26), controlPoint2: CGPoint(x: 13.75, y: 97.03))
        bezier223Path.close()
        context.saveGState()
        bezier223Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 95.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 95.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 129
        context.saveGState()
        context.translateBy(x: 163.49, y: 138.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 130
        //// Bezier 224 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 33.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier224Path = UIBezierPath()
        bezier224Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier224Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier224Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier224Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier224Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier224Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier224Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier224Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier224Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier224Path.close()
        context.saveGState()
        bezier224Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 225 Drawing
        let bezier225Path = UIBezierPath()
        bezier225Path.move(to: CGPoint(x: 5.41, y: 66.85))
        bezier225Path.addCurve(to: CGPoint(x: -18.64, y: 66.13), controlPoint1: CGPoint(x: -2.67, y: 66.51), controlPoint2: CGPoint(x: -18.64, y: 66.13))
        bezier225Path.addCurve(to: CGPoint(x: 5.42, y: 65.18), controlPoint1: CGPoint(x: -18.64, y: 66.13), controlPoint2: CGPoint(x: -2.67, y: 65.75))
        bezier225Path.addCurve(to: CGPoint(x: 13.74, y: 63.85), controlPoint1: CGPoint(x: 13.51, y: 64.61), controlPoint2: CGPoint(x: 11.71, y: 63.8))
        bezier225Path.addCurve(to: CGPoint(x: 23.13, y: 65.09), controlPoint1: CGPoint(x: 15.77, y: 63.89), controlPoint2: CGPoint(x: 13.72, y: 64.61))
        bezier225Path.addCurve(to: CGPoint(x: 51.36, y: 65.75), controlPoint1: CGPoint(x: 32.53, y: 65.56), controlPoint2: CGPoint(x: 51.36, y: 65.75))
        bezier225Path.addCurve(to: CGPoint(x: 23.12, y: 66.63), controlPoint1: CGPoint(x: 51.36, y: 65.75), controlPoint2: CGPoint(x: 32.54, y: 66.2))
        bezier225Path.addCurve(to: CGPoint(x: 13.67, y: 67.49), controlPoint1: CGPoint(x: 13.7, y: 67.07), controlPoint2: CGPoint(x: 15.62, y: 67.56))
        bezier225Path.addCurve(to: CGPoint(x: 5.41, y: 66.85), controlPoint1: CGPoint(x: 11.73, y: 67.42), controlPoint2: CGPoint(x: 13.49, y: 67.19))
        bezier225Path.close()
        context.saveGState()
        bezier225Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 65.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 65.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 131
        //// Bezier 226 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 33.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier226Path = UIBezierPath()
        bezier226Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier226Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier226Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier226Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier226Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier226Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier226Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier226Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier226Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier226Path.close()
        context.saveGState()
        bezier226Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 227 Drawing
        let bezier227Path = UIBezierPath()
        bezier227Path.move(to: CGPoint(x: 5.68, y: 66.69))
        bezier227Path.addCurve(to: CGPoint(x: -18.37, y: 65.97), controlPoint1: CGPoint(x: -2.4, y: 66.35), controlPoint2: CGPoint(x: -18.37, y: 65.97))
        bezier227Path.addCurve(to: CGPoint(x: 5.69, y: 65.02), controlPoint1: CGPoint(x: -18.37, y: 65.97), controlPoint2: CGPoint(x: -2.41, y: 65.59))
        bezier227Path.addCurve(to: CGPoint(x: 14.01, y: 63.69), controlPoint1: CGPoint(x: 13.78, y: 64.45), controlPoint2: CGPoint(x: 11.98, y: 63.65))
        bezier227Path.addCurve(to: CGPoint(x: 23.39, y: 64.93), controlPoint1: CGPoint(x: 16.04, y: 63.73), controlPoint2: CGPoint(x: 13.99, y: 64.45))
        bezier227Path.addCurve(to: CGPoint(x: 51.63, y: 65.59), controlPoint1: CGPoint(x: 32.8, y: 65.4), controlPoint2: CGPoint(x: 51.63, y: 65.59))
        bezier227Path.addCurve(to: CGPoint(x: 23.39, y: 66.48), controlPoint1: CGPoint(x: 51.63, y: 65.59), controlPoint2: CGPoint(x: 32.81, y: 66.04))
        bezier227Path.addCurve(to: CGPoint(x: 13.94, y: 67.33), controlPoint1: CGPoint(x: 13.96, y: 66.91), controlPoint2: CGPoint(x: 15.89, y: 67.4))
        bezier227Path.addCurve(to: CGPoint(x: 5.68, y: 66.69), controlPoint1: CGPoint(x: 11.99, y: 67.26), controlPoint2: CGPoint(x: 13.75, y: 67.03))
        bezier227Path.close()
        context.saveGState()
        bezier227Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 65.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 65.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 132
        context.saveGState()
        context.translateBy(x: 251.49, y: 152.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Group 133
        //// Bezier 228 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 67.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier228Path = UIBezierPath()
        bezier228Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier228Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier228Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier228Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier228Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier228Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier228Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier228Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier228Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier228Path.close()
        context.saveGState()
        bezier228Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 229 Drawing
        let bezier229Path = UIBezierPath()
        bezier229Path.move(to: CGPoint(x: 5.41, y: 100.85))
        bezier229Path.addCurve(to: CGPoint(x: -18.64, y: 100.13), controlPoint1: CGPoint(x: -2.67, y: 100.51), controlPoint2: CGPoint(x: -18.64, y: 100.13))
        bezier229Path.addCurve(to: CGPoint(x: 5.42, y: 99.18), controlPoint1: CGPoint(x: -18.64, y: 100.13), controlPoint2: CGPoint(x: -2.67, y: 99.75))
        bezier229Path.addCurve(to: CGPoint(x: 13.74, y: 97.85), controlPoint1: CGPoint(x: 13.51, y: 98.61), controlPoint2: CGPoint(x: 11.71, y: 97.8))
        bezier229Path.addCurve(to: CGPoint(x: 23.13, y: 99.09), controlPoint1: CGPoint(x: 15.77, y: 97.89), controlPoint2: CGPoint(x: 13.72, y: 98.61))
        bezier229Path.addCurve(to: CGPoint(x: 51.36, y: 99.75), controlPoint1: CGPoint(x: 32.53, y: 99.56), controlPoint2: CGPoint(x: 51.36, y: 99.75))
        bezier229Path.addCurve(to: CGPoint(x: 23.12, y: 100.63), controlPoint1: CGPoint(x: 51.36, y: 99.75), controlPoint2: CGPoint(x: 32.54, y: 100.2))
        bezier229Path.addCurve(to: CGPoint(x: 13.67, y: 101.49), controlPoint1: CGPoint(x: 13.7, y: 101.07), controlPoint2: CGPoint(x: 15.62, y: 101.56))
        bezier229Path.addCurve(to: CGPoint(x: 5.41, y: 100.85), controlPoint1: CGPoint(x: 11.73, y: 101.42), controlPoint2: CGPoint(x: 13.49, y: 101.19))
        bezier229Path.close()
        context.saveGState()
        bezier229Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 99.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 99.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 134
        //// Bezier 230 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 67.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier230Path = UIBezierPath()
        bezier230Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier230Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier230Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier230Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier230Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier230Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier230Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier230Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier230Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier230Path.close()
        context.saveGState()
        bezier230Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 231 Drawing
        let bezier231Path = UIBezierPath()
        bezier231Path.move(to: CGPoint(x: 5.68, y: 100.69))
        bezier231Path.addCurve(to: CGPoint(x: -18.37, y: 99.97), controlPoint1: CGPoint(x: -2.4, y: 100.35), controlPoint2: CGPoint(x: -18.37, y: 99.97))
        bezier231Path.addCurve(to: CGPoint(x: 5.69, y: 99.02), controlPoint1: CGPoint(x: -18.37, y: 99.97), controlPoint2: CGPoint(x: -2.41, y: 99.59))
        bezier231Path.addCurve(to: CGPoint(x: 14.01, y: 97.69), controlPoint1: CGPoint(x: 13.78, y: 98.45), controlPoint2: CGPoint(x: 11.98, y: 97.65))
        bezier231Path.addCurve(to: CGPoint(x: 23.39, y: 98.93), controlPoint1: CGPoint(x: 16.04, y: 97.73), controlPoint2: CGPoint(x: 13.99, y: 98.45))
        bezier231Path.addCurve(to: CGPoint(x: 51.63, y: 99.59), controlPoint1: CGPoint(x: 32.8, y: 99.4), controlPoint2: CGPoint(x: 51.63, y: 99.59))
        bezier231Path.addCurve(to: CGPoint(x: 23.39, y: 100.48), controlPoint1: CGPoint(x: 51.63, y: 99.59), controlPoint2: CGPoint(x: 32.81, y: 100.04))
        bezier231Path.addCurve(to: CGPoint(x: 13.94, y: 101.33), controlPoint1: CGPoint(x: 13.96, y: 100.91), controlPoint2: CGPoint(x: 15.89, y: 101.4))
        bezier231Path.addCurve(to: CGPoint(x: 5.68, y: 100.69), controlPoint1: CGPoint(x: 11.99, y: 101.26), controlPoint2: CGPoint(x: 13.75, y: 101.03))
        bezier231Path.close()
        context.saveGState()
        bezier231Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 99.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 99.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 135
        context.saveGState()
        context.translateBy(x: 308.49, y: 172.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.15, y: 0.15)



        //// Group 136
        //// Bezier 232 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 164.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier232Path = UIBezierPath()
        bezier232Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier232Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier232Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier232Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier232Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier232Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier232Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier232Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier232Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier232Path.close()
        context.saveGState()
        bezier232Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 233 Drawing
        let bezier233Path = UIBezierPath()
        bezier233Path.move(to: CGPoint(x: 5.41, y: 197.85))
        bezier233Path.addCurve(to: CGPoint(x: -18.64, y: 197.13), controlPoint1: CGPoint(x: -2.67, y: 197.51), controlPoint2: CGPoint(x: -18.64, y: 197.13))
        bezier233Path.addCurve(to: CGPoint(x: 5.42, y: 196.18), controlPoint1: CGPoint(x: -18.64, y: 197.13), controlPoint2: CGPoint(x: -2.67, y: 196.75))
        bezier233Path.addCurve(to: CGPoint(x: 13.74, y: 194.85), controlPoint1: CGPoint(x: 13.51, y: 195.61), controlPoint2: CGPoint(x: 11.71, y: 194.8))
        bezier233Path.addCurve(to: CGPoint(x: 23.13, y: 196.09), controlPoint1: CGPoint(x: 15.77, y: 194.89), controlPoint2: CGPoint(x: 13.72, y: 195.61))
        bezier233Path.addCurve(to: CGPoint(x: 51.36, y: 196.75), controlPoint1: CGPoint(x: 32.53, y: 196.56), controlPoint2: CGPoint(x: 51.36, y: 196.75))
        bezier233Path.addCurve(to: CGPoint(x: 23.12, y: 197.63), controlPoint1: CGPoint(x: 51.36, y: 196.75), controlPoint2: CGPoint(x: 32.54, y: 197.2))
        bezier233Path.addCurve(to: CGPoint(x: 13.67, y: 198.49), controlPoint1: CGPoint(x: 13.7, y: 198.07), controlPoint2: CGPoint(x: 15.62, y: 198.56))
        bezier233Path.addCurve(to: CGPoint(x: 5.41, y: 197.85), controlPoint1: CGPoint(x: 11.73, y: 198.42), controlPoint2: CGPoint(x: 13.49, y: 198.19))
        bezier233Path.close()
        context.saveGState()
        bezier233Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 196.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 196.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 137
        //// Bezier 234 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 164.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier234Path = UIBezierPath()
        bezier234Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier234Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier234Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier234Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier234Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier234Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier234Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier234Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier234Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier234Path.close()
        context.saveGState()
        bezier234Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 235 Drawing
        let bezier235Path = UIBezierPath()
        bezier235Path.move(to: CGPoint(x: 5.68, y: 197.69))
        bezier235Path.addCurve(to: CGPoint(x: -18.37, y: 196.97), controlPoint1: CGPoint(x: -2.4, y: 197.35), controlPoint2: CGPoint(x: -18.37, y: 196.97))
        bezier235Path.addCurve(to: CGPoint(x: 5.69, y: 196.02), controlPoint1: CGPoint(x: -18.37, y: 196.97), controlPoint2: CGPoint(x: -2.41, y: 196.59))
        bezier235Path.addCurve(to: CGPoint(x: 14.01, y: 194.69), controlPoint1: CGPoint(x: 13.78, y: 195.45), controlPoint2: CGPoint(x: 11.98, y: 194.65))
        bezier235Path.addCurve(to: CGPoint(x: 23.39, y: 195.93), controlPoint1: CGPoint(x: 16.04, y: 194.73), controlPoint2: CGPoint(x: 13.99, y: 195.45))
        bezier235Path.addCurve(to: CGPoint(x: 51.63, y: 196.59), controlPoint1: CGPoint(x: 32.8, y: 196.4), controlPoint2: CGPoint(x: 51.63, y: 196.59))
        bezier235Path.addCurve(to: CGPoint(x: 23.39, y: 197.48), controlPoint1: CGPoint(x: 51.63, y: 196.59), controlPoint2: CGPoint(x: 32.81, y: 197.04))
        bezier235Path.addCurve(to: CGPoint(x: 13.94, y: 198.33), controlPoint1: CGPoint(x: 13.96, y: 197.91), controlPoint2: CGPoint(x: 15.89, y: 198.4))
        bezier235Path.addCurve(to: CGPoint(x: 5.68, y: 197.69), controlPoint1: CGPoint(x: 11.99, y: 198.26), controlPoint2: CGPoint(x: 13.75, y: 198.03))
        bezier235Path.close()
        context.saveGState()
        bezier235Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 196.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 196.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 138
        context.saveGState()
        context.translateBy(x: 318.49, y: 179.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.3)



        //// Group 139
        //// Bezier 236 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 59.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier236Path = UIBezierPath()
        bezier236Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier236Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier236Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier236Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier236Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier236Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier236Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier236Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier236Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier236Path.close()
        context.saveGState()
        bezier236Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 237 Drawing
        let bezier237Path = UIBezierPath()
        bezier237Path.move(to: CGPoint(x: 5.41, y: 92.85))
        bezier237Path.addCurve(to: CGPoint(x: -18.64, y: 92.13), controlPoint1: CGPoint(x: -2.67, y: 92.51), controlPoint2: CGPoint(x: -18.64, y: 92.13))
        bezier237Path.addCurve(to: CGPoint(x: 5.42, y: 91.18), controlPoint1: CGPoint(x: -18.64, y: 92.13), controlPoint2: CGPoint(x: -2.67, y: 91.75))
        bezier237Path.addCurve(to: CGPoint(x: 13.74, y: 89.85), controlPoint1: CGPoint(x: 13.51, y: 90.61), controlPoint2: CGPoint(x: 11.71, y: 89.8))
        bezier237Path.addCurve(to: CGPoint(x: 23.13, y: 91.09), controlPoint1: CGPoint(x: 15.77, y: 89.89), controlPoint2: CGPoint(x: 13.72, y: 90.61))
        bezier237Path.addCurve(to: CGPoint(x: 51.36, y: 91.75), controlPoint1: CGPoint(x: 32.53, y: 91.56), controlPoint2: CGPoint(x: 51.36, y: 91.75))
        bezier237Path.addCurve(to: CGPoint(x: 23.12, y: 92.63), controlPoint1: CGPoint(x: 51.36, y: 91.75), controlPoint2: CGPoint(x: 32.54, y: 92.2))
        bezier237Path.addCurve(to: CGPoint(x: 13.67, y: 93.49), controlPoint1: CGPoint(x: 13.7, y: 93.07), controlPoint2: CGPoint(x: 15.62, y: 93.56))
        bezier237Path.addCurve(to: CGPoint(x: 5.41, y: 92.85), controlPoint1: CGPoint(x: 11.73, y: 93.42), controlPoint2: CGPoint(x: 13.49, y: 93.19))
        bezier237Path.close()
        context.saveGState()
        bezier237Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 91.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 91.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 140
        //// Bezier 238 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 59.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier238Path = UIBezierPath()
        bezier238Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier238Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier238Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier238Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier238Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier238Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier238Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier238Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier238Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier238Path.close()
        context.saveGState()
        bezier238Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 239 Drawing
        let bezier239Path = UIBezierPath()
        bezier239Path.move(to: CGPoint(x: 5.68, y: 92.69))
        bezier239Path.addCurve(to: CGPoint(x: -18.37, y: 91.97), controlPoint1: CGPoint(x: -2.4, y: 92.35), controlPoint2: CGPoint(x: -18.37, y: 91.97))
        bezier239Path.addCurve(to: CGPoint(x: 5.69, y: 91.02), controlPoint1: CGPoint(x: -18.37, y: 91.97), controlPoint2: CGPoint(x: -2.41, y: 91.59))
        bezier239Path.addCurve(to: CGPoint(x: 14.01, y: 89.69), controlPoint1: CGPoint(x: 13.78, y: 90.45), controlPoint2: CGPoint(x: 11.98, y: 89.65))
        bezier239Path.addCurve(to: CGPoint(x: 23.39, y: 90.93), controlPoint1: CGPoint(x: 16.04, y: 89.73), controlPoint2: CGPoint(x: 13.99, y: 90.45))
        bezier239Path.addCurve(to: CGPoint(x: 51.63, y: 91.59), controlPoint1: CGPoint(x: 32.8, y: 91.4), controlPoint2: CGPoint(x: 51.63, y: 91.59))
        bezier239Path.addCurve(to: CGPoint(x: 23.39, y: 92.48), controlPoint1: CGPoint(x: 51.63, y: 91.59), controlPoint2: CGPoint(x: 32.81, y: 92.04))
        bezier239Path.addCurve(to: CGPoint(x: 13.94, y: 93.33), controlPoint1: CGPoint(x: 13.96, y: 92.91), controlPoint2: CGPoint(x: 15.89, y: 93.4))
        bezier239Path.addCurve(to: CGPoint(x: 5.68, y: 92.69), controlPoint1: CGPoint(x: 11.99, y: 93.26), controlPoint2: CGPoint(x: 13.75, y: 93.03))
        bezier239Path.close()
        context.saveGState()
        bezier239Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 91.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 91.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 141
        context.saveGState()
        context.translateBy(x: 224.55, y: 190.34)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Group 142
        //// Bezier 240 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 54.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier240Path = UIBezierPath()
        bezier240Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier240Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier240Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier240Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier240Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier240Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier240Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier240Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier240Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier240Path.close()
        context.saveGState()
        bezier240Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 241 Drawing
        let bezier241Path = UIBezierPath()
        bezier241Path.move(to: CGPoint(x: 5.41, y: 87.85))
        bezier241Path.addCurve(to: CGPoint(x: -18.64, y: 87.13), controlPoint1: CGPoint(x: -2.67, y: 87.51), controlPoint2: CGPoint(x: -18.64, y: 87.13))
        bezier241Path.addCurve(to: CGPoint(x: 5.42, y: 86.18), controlPoint1: CGPoint(x: -18.64, y: 87.13), controlPoint2: CGPoint(x: -2.67, y: 86.75))
        bezier241Path.addCurve(to: CGPoint(x: 13.74, y: 84.85), controlPoint1: CGPoint(x: 13.51, y: 85.61), controlPoint2: CGPoint(x: 11.71, y: 84.8))
        bezier241Path.addCurve(to: CGPoint(x: 23.13, y: 86.09), controlPoint1: CGPoint(x: 15.77, y: 84.89), controlPoint2: CGPoint(x: 13.72, y: 85.61))
        bezier241Path.addCurve(to: CGPoint(x: 51.36, y: 86.75), controlPoint1: CGPoint(x: 32.53, y: 86.56), controlPoint2: CGPoint(x: 51.36, y: 86.75))
        bezier241Path.addCurve(to: CGPoint(x: 23.12, y: 87.63), controlPoint1: CGPoint(x: 51.36, y: 86.75), controlPoint2: CGPoint(x: 32.54, y: 87.2))
        bezier241Path.addCurve(to: CGPoint(x: 13.67, y: 88.49), controlPoint1: CGPoint(x: 13.7, y: 88.07), controlPoint2: CGPoint(x: 15.62, y: 88.56))
        bezier241Path.addCurve(to: CGPoint(x: 5.41, y: 87.85), controlPoint1: CGPoint(x: 11.73, y: 88.42), controlPoint2: CGPoint(x: 13.49, y: 88.19))
        bezier241Path.close()
        context.saveGState()
        bezier241Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 86.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 86.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 143
        //// Bezier 242 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 54.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier242Path = UIBezierPath()
        bezier242Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier242Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier242Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier242Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier242Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier242Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier242Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier242Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier242Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier242Path.close()
        context.saveGState()
        bezier242Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 243 Drawing
        let bezier243Path = UIBezierPath()
        bezier243Path.move(to: CGPoint(x: 5.68, y: 87.69))
        bezier243Path.addCurve(to: CGPoint(x: -18.37, y: 86.97), controlPoint1: CGPoint(x: -2.4, y: 87.35), controlPoint2: CGPoint(x: -18.37, y: 86.97))
        bezier243Path.addCurve(to: CGPoint(x: 5.69, y: 86.02), controlPoint1: CGPoint(x: -18.37, y: 86.97), controlPoint2: CGPoint(x: -2.41, y: 86.59))
        bezier243Path.addCurve(to: CGPoint(x: 14.01, y: 84.69), controlPoint1: CGPoint(x: 13.78, y: 85.45), controlPoint2: CGPoint(x: 11.98, y: 84.65))
        bezier243Path.addCurve(to: CGPoint(x: 23.39, y: 85.93), controlPoint1: CGPoint(x: 16.04, y: 84.73), controlPoint2: CGPoint(x: 13.99, y: 85.45))
        bezier243Path.addCurve(to: CGPoint(x: 51.63, y: 86.59), controlPoint1: CGPoint(x: 32.8, y: 86.4), controlPoint2: CGPoint(x: 51.63, y: 86.59))
        bezier243Path.addCurve(to: CGPoint(x: 23.39, y: 87.48), controlPoint1: CGPoint(x: 51.63, y: 86.59), controlPoint2: CGPoint(x: 32.81, y: 87.04))
        bezier243Path.addCurve(to: CGPoint(x: 13.94, y: 88.33), controlPoint1: CGPoint(x: 13.96, y: 87.91), controlPoint2: CGPoint(x: 15.89, y: 88.4))
        bezier243Path.addCurve(to: CGPoint(x: 5.68, y: 87.69), controlPoint1: CGPoint(x: 11.99, y: 88.26), controlPoint2: CGPoint(x: 13.75, y: 88.03))
        bezier243Path.close()
        context.saveGState()
        bezier243Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 86.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 86.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 144
        context.saveGState()
        context.translateBy(x: 166.94, y: 218.18)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Group 145
        //// Bezier 244 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 26.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier244Path = UIBezierPath()
        bezier244Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier244Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier244Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier244Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier244Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier244Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier244Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier244Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier244Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier244Path.close()
        context.saveGState()
        bezier244Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 245 Drawing
        let bezier245Path = UIBezierPath()
        bezier245Path.move(to: CGPoint(x: 5.41, y: 59.85))
        bezier245Path.addCurve(to: CGPoint(x: -18.64, y: 59.13), controlPoint1: CGPoint(x: -2.67, y: 59.51), controlPoint2: CGPoint(x: -18.64, y: 59.13))
        bezier245Path.addCurve(to: CGPoint(x: 5.42, y: 58.18), controlPoint1: CGPoint(x: -18.64, y: 59.13), controlPoint2: CGPoint(x: -2.67, y: 58.75))
        bezier245Path.addCurve(to: CGPoint(x: 13.74, y: 56.85), controlPoint1: CGPoint(x: 13.51, y: 57.61), controlPoint2: CGPoint(x: 11.71, y: 56.8))
        bezier245Path.addCurve(to: CGPoint(x: 23.13, y: 58.09), controlPoint1: CGPoint(x: 15.77, y: 56.89), controlPoint2: CGPoint(x: 13.72, y: 57.61))
        bezier245Path.addCurve(to: CGPoint(x: 51.36, y: 58.75), controlPoint1: CGPoint(x: 32.53, y: 58.56), controlPoint2: CGPoint(x: 51.36, y: 58.75))
        bezier245Path.addCurve(to: CGPoint(x: 23.12, y: 59.63), controlPoint1: CGPoint(x: 51.36, y: 58.75), controlPoint2: CGPoint(x: 32.54, y: 59.2))
        bezier245Path.addCurve(to: CGPoint(x: 13.67, y: 60.49), controlPoint1: CGPoint(x: 13.7, y: 60.07), controlPoint2: CGPoint(x: 15.62, y: 60.56))
        bezier245Path.addCurve(to: CGPoint(x: 5.41, y: 59.85), controlPoint1: CGPoint(x: 11.73, y: 60.42), controlPoint2: CGPoint(x: 13.49, y: 60.19))
        bezier245Path.close()
        context.saveGState()
        bezier245Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 14.52, y: 58.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 58.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 147
        context.saveGState()
        context.translateBy(x: 214.72, y: 236.86)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Bezier 246 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: 103.17)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier246Path = UIBezierPath()
        bezier246Path.move(to: CGPoint(x: 26.59, y: 3))
        bezier246Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.66, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier246Path.addCurve(to: CGPoint(x: 26.6, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.65, y: 1.9))
        bezier246Path.addCurve(to: CGPoint(x: 35.8, y: 0), controlPoint1: CGPoint(x: 35.55, y: 0.76), controlPoint2: CGPoint(x: 33.56, y: -0.04))
        bezier246Path.addCurve(to: CGPoint(x: 46.18, y: 1.24), controlPoint1: CGPoint(x: 38.05, y: 0.04), controlPoint2: CGPoint(x: 35.78, y: 0.76))
        bezier246Path.addCurve(to: CGPoint(x: 77.4, y: 1.9), controlPoint1: CGPoint(x: 56.58, y: 1.71), controlPoint2: CGPoint(x: 77.4, y: 1.9))
        bezier246Path.addCurve(to: CGPoint(x: 46.17, y: 2.79), controlPoint1: CGPoint(x: 77.4, y: 1.9), controlPoint2: CGPoint(x: 56.59, y: 2.35))
        bezier246Path.addCurve(to: CGPoint(x: 35.73, y: 3.64), controlPoint1: CGPoint(x: 35.75, y: 3.22), controlPoint2: CGPoint(x: 37.88, y: 3.71))
        bezier246Path.addCurve(to: CGPoint(x: 26.59, y: 3), controlPoint1: CGPoint(x: 33.57, y: 3.57), controlPoint2: CGPoint(x: 35.52, y: 3.34))
        bezier246Path.close()
        context.saveGState()
        bezier246Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 35.51, y: 1.93), startRadius: 0.22,
            endCenter: CGPoint(x: 36.56, y: 1.6), endRadius: 67.73,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 247 Drawing
        let bezier247Path = UIBezierPath()
        bezier247Path.move(to: CGPoint(x: 24.05, y: 140.53))
        bezier247Path.addCurve(to: CGPoint(x: 0, y: 139.74), controlPoint1: CGPoint(x: 15.97, y: 140.15), controlPoint2: CGPoint(x: 0, y: 139.74))
        bezier247Path.addCurve(to: CGPoint(x: 24.06, y: 138.69), controlPoint1: CGPoint(x: 0, y: 139.74), controlPoint2: CGPoint(x: 15.96, y: 139.32))
        bezier247Path.addCurve(to: CGPoint(x: 32.38, y: 137.22), controlPoint1: CGPoint(x: 32.15, y: 138.06), controlPoint2: CGPoint(x: 30.35, y: 137.18))
        bezier247Path.addCurve(to: CGPoint(x: 41.77, y: 138.59), controlPoint1: CGPoint(x: 34.41, y: 137.27), controlPoint2: CGPoint(x: 32.36, y: 138.06))
        bezier247Path.addCurve(to: CGPoint(x: 70, y: 139.31), controlPoint1: CGPoint(x: 51.17, y: 139.11), controlPoint2: CGPoint(x: 70, y: 139.31))
        bezier247Path.addCurve(to: CGPoint(x: 41.76, y: 140.29), controlPoint1: CGPoint(x: 70, y: 139.31), controlPoint2: CGPoint(x: 51.18, y: 139.81))
        bezier247Path.addCurve(to: CGPoint(x: 32.31, y: 141.23), controlPoint1: CGPoint(x: 32.33, y: 140.77), controlPoint2: CGPoint(x: 34.26, y: 141.3))
        bezier247Path.addCurve(to: CGPoint(x: 24.05, y: 140.53), controlPoint1: CGPoint(x: 30.36, y: 141.15), controlPoint2: CGPoint(x: 32.12, y: 140.9))
        bezier247Path.close()
        context.saveGState()
        bezier247Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 139.37), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 139.03), endRadius: 61.29,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// Group 149
        context.saveGState()
        context.translateBy(x: 69.52, y: 251.37)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Bezier 248 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: 33.4)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier248Path = UIBezierPath()
        bezier248Path.move(to: CGPoint(x: 26.59, y: 3))
        bezier248Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.66, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier248Path.addCurve(to: CGPoint(x: 26.6, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.65, y: 1.9))
        bezier248Path.addCurve(to: CGPoint(x: 35.8, y: 0), controlPoint1: CGPoint(x: 35.55, y: 0.76), controlPoint2: CGPoint(x: 33.56, y: -0.04))
        bezier248Path.addCurve(to: CGPoint(x: 46.18, y: 1.24), controlPoint1: CGPoint(x: 38.05, y: 0.04), controlPoint2: CGPoint(x: 35.78, y: 0.76))
        bezier248Path.addCurve(to: CGPoint(x: 77.4, y: 1.9), controlPoint1: CGPoint(x: 56.58, y: 1.71), controlPoint2: CGPoint(x: 77.4, y: 1.9))
        bezier248Path.addCurve(to: CGPoint(x: 46.17, y: 2.79), controlPoint1: CGPoint(x: 77.4, y: 1.9), controlPoint2: CGPoint(x: 56.59, y: 2.35))
        bezier248Path.addCurve(to: CGPoint(x: 35.73, y: 3.64), controlPoint1: CGPoint(x: 35.75, y: 3.22), controlPoint2: CGPoint(x: 37.88, y: 3.71))
        bezier248Path.addCurve(to: CGPoint(x: 26.59, y: 3), controlPoint1: CGPoint(x: 33.57, y: 3.57), controlPoint2: CGPoint(x: 35.52, y: 3.34))
        bezier248Path.close()
        context.saveGState()
        bezier248Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 35.51, y: 1.93), startRadius: 0.22,
            endCenter: CGPoint(x: 36.56, y: 1.6), endRadius: 67.73,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 249 Drawing
        let bezier249Path = UIBezierPath()
        bezier249Path.move(to: CGPoint(x: 24.05, y: 70.53))
        bezier249Path.addCurve(to: CGPoint(x: 0, y: 69.74), controlPoint1: CGPoint(x: 15.97, y: 70.15), controlPoint2: CGPoint(x: 0, y: 69.74))
        bezier249Path.addCurve(to: CGPoint(x: 24.06, y: 68.69), controlPoint1: CGPoint(x: 0, y: 69.74), controlPoint2: CGPoint(x: 15.96, y: 69.32))
        bezier249Path.addCurve(to: CGPoint(x: 32.38, y: 67.22), controlPoint1: CGPoint(x: 32.15, y: 68.06), controlPoint2: CGPoint(x: 30.35, y: 67.18))
        bezier249Path.addCurve(to: CGPoint(x: 41.77, y: 68.59), controlPoint1: CGPoint(x: 34.41, y: 67.27), controlPoint2: CGPoint(x: 32.36, y: 68.06))
        bezier249Path.addCurve(to: CGPoint(x: 70, y: 69.31), controlPoint1: CGPoint(x: 51.17, y: 69.11), controlPoint2: CGPoint(x: 70, y: 69.31))
        bezier249Path.addCurve(to: CGPoint(x: 41.76, y: 70.29), controlPoint1: CGPoint(x: 70, y: 69.31), controlPoint2: CGPoint(x: 51.18, y: 69.81))
        bezier249Path.addCurve(to: CGPoint(x: 32.31, y: 71.23), controlPoint1: CGPoint(x: 32.33, y: 70.77), controlPoint2: CGPoint(x: 34.26, y: 71.3))
        bezier249Path.addCurve(to: CGPoint(x: 24.05, y: 70.53), controlPoint1: CGPoint(x: 30.36, y: 71.15), controlPoint2: CGPoint(x: 32.12, y: 70.9))
        bezier249Path.close()
        context.saveGState()
        bezier249Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 69.37), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 69.03), endRadius: 61.29,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// Group 152
        context.saveGState()
        context.translateBy(x: 75.81, y: 216.37)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.4, y: 0.4)



        //// Bezier 252 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: 20.03)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier252Path = UIBezierPath()
        bezier252Path.move(to: CGPoint(x: 26.59, y: 3))
        bezier252Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.66, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier252Path.addCurve(to: CGPoint(x: 26.6, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.65, y: 1.9))
        bezier252Path.addCurve(to: CGPoint(x: 35.8, y: 0), controlPoint1: CGPoint(x: 35.55, y: 0.76), controlPoint2: CGPoint(x: 33.56, y: -0.04))
        bezier252Path.addCurve(to: CGPoint(x: 46.18, y: 1.24), controlPoint1: CGPoint(x: 38.05, y: 0.04), controlPoint2: CGPoint(x: 35.78, y: 0.76))
        bezier252Path.addCurve(to: CGPoint(x: 77.4, y: 1.9), controlPoint1: CGPoint(x: 56.58, y: 1.71), controlPoint2: CGPoint(x: 77.4, y: 1.9))
        bezier252Path.addCurve(to: CGPoint(x: 46.17, y: 2.79), controlPoint1: CGPoint(x: 77.4, y: 1.9), controlPoint2: CGPoint(x: 56.59, y: 2.35))
        bezier252Path.addCurve(to: CGPoint(x: 35.73, y: 3.64), controlPoint1: CGPoint(x: 35.75, y: 3.22), controlPoint2: CGPoint(x: 37.88, y: 3.71))
        bezier252Path.addCurve(to: CGPoint(x: 26.59, y: 3), controlPoint1: CGPoint(x: 33.57, y: 3.57), controlPoint2: CGPoint(x: 35.52, y: 3.34))
        bezier252Path.close()
        context.saveGState()
        bezier252Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 35.51, y: 1.93), startRadius: 0.22,
            endCenter: CGPoint(x: 36.56, y: 1.6), endRadius: 67.73,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 253 Drawing
        let bezier253Path = UIBezierPath()
        bezier253Path.move(to: CGPoint(x: 24.05, y: 56.53))
        bezier253Path.addCurve(to: CGPoint(x: 0, y: 55.74), controlPoint1: CGPoint(x: 15.97, y: 56.15), controlPoint2: CGPoint(x: 0, y: 55.74))
        bezier253Path.addCurve(to: CGPoint(x: 24.06, y: 54.69), controlPoint1: CGPoint(x: 0, y: 55.74), controlPoint2: CGPoint(x: 15.96, y: 55.32))
        bezier253Path.addCurve(to: CGPoint(x: 32.38, y: 53.22), controlPoint1: CGPoint(x: 32.15, y: 54.06), controlPoint2: CGPoint(x: 30.35, y: 53.18))
        bezier253Path.addCurve(to: CGPoint(x: 41.77, y: 54.59), controlPoint1: CGPoint(x: 34.41, y: 53.27), controlPoint2: CGPoint(x: 32.36, y: 54.06))
        bezier253Path.addCurve(to: CGPoint(x: 70, y: 55.31), controlPoint1: CGPoint(x: 51.17, y: 55.11), controlPoint2: CGPoint(x: 70, y: 55.31))
        bezier253Path.addCurve(to: CGPoint(x: 41.76, y: 56.29), controlPoint1: CGPoint(x: 70, y: 55.31), controlPoint2: CGPoint(x: 51.18, y: 55.81))
        bezier253Path.addCurve(to: CGPoint(x: 32.31, y: 57.23), controlPoint1: CGPoint(x: 32.33, y: 56.77), controlPoint2: CGPoint(x: 34.26, y: 57.3))
        bezier253Path.addCurve(to: CGPoint(x: 24.05, y: 56.53), controlPoint1: CGPoint(x: 30.36, y: 57.15), controlPoint2: CGPoint(x: 32.12, y: 56.9))
        bezier253Path.close()
        context.saveGState()
        bezier253Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 55.37), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 55.03), endRadius: 61.29,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// Group 154
        context.saveGState()
        context.translateBy(x: 99.57, y: 144.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.3)



        //// Bezier 254 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: 35.08)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier254Path = UIBezierPath()
        bezier254Path.move(to: CGPoint(x: 26.59, y: 3))
        bezier254Path.addCurve(to: CGPoint(x: -0, y: 2.29), controlPoint1: CGPoint(x: 17.66, y: 2.66), controlPoint2: CGPoint(x: -0, y: 2.29))
        bezier254Path.addCurve(to: CGPoint(x: 26.6, y: 1.33), controlPoint1: CGPoint(x: -0, y: 2.29), controlPoint2: CGPoint(x: 17.65, y: 1.9))
        bezier254Path.addCurve(to: CGPoint(x: 35.8, y: 0), controlPoint1: CGPoint(x: 35.55, y: 0.76), controlPoint2: CGPoint(x: 33.56, y: -0.04))
        bezier254Path.addCurve(to: CGPoint(x: 46.18, y: 1.24), controlPoint1: CGPoint(x: 38.05, y: 0.04), controlPoint2: CGPoint(x: 35.78, y: 0.76))
        bezier254Path.addCurve(to: CGPoint(x: 77.4, y: 1.9), controlPoint1: CGPoint(x: 56.58, y: 1.71), controlPoint2: CGPoint(x: 77.4, y: 1.9))
        bezier254Path.addCurve(to: CGPoint(x: 46.17, y: 2.79), controlPoint1: CGPoint(x: 77.4, y: 1.9), controlPoint2: CGPoint(x: 56.59, y: 2.35))
        bezier254Path.addCurve(to: CGPoint(x: 35.73, y: 3.64), controlPoint1: CGPoint(x: 35.75, y: 3.22), controlPoint2: CGPoint(x: 37.88, y: 3.71))
        bezier254Path.addCurve(to: CGPoint(x: 26.59, y: 3), controlPoint1: CGPoint(x: 33.57, y: 3.57), controlPoint2: CGPoint(x: 35.52, y: 3.34))
        bezier254Path.close()
        context.saveGState()
        bezier254Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 35.51, y: 1.93), startRadius: 0.22,
            endCenter: CGPoint(x: 36.56, y: 1.6), endRadius: 67.73,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 255 Drawing
        let bezier255Path = UIBezierPath()
        bezier255Path.move(to: CGPoint(x: 24.05, y: 71.53))
        bezier255Path.addCurve(to: CGPoint(x: -0, y: 70.74), controlPoint1: CGPoint(x: 15.97, y: 71.15), controlPoint2: CGPoint(x: -0, y: 70.74))
        bezier255Path.addCurve(to: CGPoint(x: 24.06, y: 69.69), controlPoint1: CGPoint(x: -0, y: 70.74), controlPoint2: CGPoint(x: 15.96, y: 70.32))
        bezier255Path.addCurve(to: CGPoint(x: 32.38, y: 68.22), controlPoint1: CGPoint(x: 32.15, y: 69.06), controlPoint2: CGPoint(x: 30.35, y: 68.18))
        bezier255Path.addCurve(to: CGPoint(x: 41.77, y: 69.59), controlPoint1: CGPoint(x: 34.41, y: 68.27), controlPoint2: CGPoint(x: 32.36, y: 69.06))
        bezier255Path.addCurve(to: CGPoint(x: 70, y: 70.31), controlPoint1: CGPoint(x: 51.17, y: 70.11), controlPoint2: CGPoint(x: 70, y: 70.31))
        bezier255Path.addCurve(to: CGPoint(x: 41.76, y: 71.29), controlPoint1: CGPoint(x: 70, y: 70.31), controlPoint2: CGPoint(x: 51.18, y: 70.81))
        bezier255Path.addCurve(to: CGPoint(x: 32.31, y: 72.23), controlPoint1: CGPoint(x: 32.33, y: 71.77), controlPoint2: CGPoint(x: 34.26, y: 72.3))
        bezier255Path.addCurve(to: CGPoint(x: 24.05, y: 71.53), controlPoint1: CGPoint(x: 30.36, y: 72.15), controlPoint2: CGPoint(x: 32.12, y: 71.9))
        bezier255Path.close()
        context.saveGState()
        bezier255Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 70.37), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 70.03), endRadius: 61.29,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// Group 156
        context.saveGState()
        context.translateBy(x: 17.83, y: 201.85)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Bezier 256 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: 8.57)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier256Path = UIBezierPath()
        bezier256Path.move(to: CGPoint(x: 26.59, y: 3))
        bezier256Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.66, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier256Path.addCurve(to: CGPoint(x: 26.6, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.65, y: 1.9))
        bezier256Path.addCurve(to: CGPoint(x: 35.8, y: 0), controlPoint1: CGPoint(x: 35.55, y: 0.76), controlPoint2: CGPoint(x: 33.56, y: -0.04))
        bezier256Path.addCurve(to: CGPoint(x: 46.18, y: 1.24), controlPoint1: CGPoint(x: 38.05, y: 0.04), controlPoint2: CGPoint(x: 35.78, y: 0.76))
        bezier256Path.addCurve(to: CGPoint(x: 77.4, y: 1.9), controlPoint1: CGPoint(x: 56.58, y: 1.71), controlPoint2: CGPoint(x: 77.4, y: 1.9))
        bezier256Path.addCurve(to: CGPoint(x: 46.17, y: 2.79), controlPoint1: CGPoint(x: 77.4, y: 1.9), controlPoint2: CGPoint(x: 56.59, y: 2.35))
        bezier256Path.addCurve(to: CGPoint(x: 35.73, y: 3.64), controlPoint1: CGPoint(x: 35.75, y: 3.22), controlPoint2: CGPoint(x: 37.88, y: 3.71))
        bezier256Path.addCurve(to: CGPoint(x: 26.59, y: 3), controlPoint1: CGPoint(x: 33.57, y: 3.57), controlPoint2: CGPoint(x: 35.52, y: 3.34))
        bezier256Path.close()
        context.saveGState()
        bezier256Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 35.51, y: 1.93), startRadius: 0.22,
            endCenter: CGPoint(x: 36.56, y: 1.6), endRadius: 67.73,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 257 Drawing
        let bezier257Path = UIBezierPath()
        bezier257Path.move(to: CGPoint(x: 24.05, y: 45.53))
        bezier257Path.addCurve(to: CGPoint(x: 0, y: 44.74), controlPoint1: CGPoint(x: 15.97, y: 45.15), controlPoint2: CGPoint(x: 0, y: 44.74))
        bezier257Path.addCurve(to: CGPoint(x: 24.06, y: 43.69), controlPoint1: CGPoint(x: 0, y: 44.74), controlPoint2: CGPoint(x: 15.96, y: 44.32))
        bezier257Path.addCurve(to: CGPoint(x: 32.38, y: 42.22), controlPoint1: CGPoint(x: 32.15, y: 43.06), controlPoint2: CGPoint(x: 30.35, y: 42.18))
        bezier257Path.addCurve(to: CGPoint(x: 41.77, y: 43.59), controlPoint1: CGPoint(x: 34.41, y: 42.27), controlPoint2: CGPoint(x: 32.36, y: 43.06))
        bezier257Path.addCurve(to: CGPoint(x: 70, y: 44.31), controlPoint1: CGPoint(x: 51.17, y: 44.11), controlPoint2: CGPoint(x: 70, y: 44.31))
        bezier257Path.addCurve(to: CGPoint(x: 41.76, y: 45.29), controlPoint1: CGPoint(x: 70, y: 44.31), controlPoint2: CGPoint(x: 51.18, y: 44.81))
        bezier257Path.addCurve(to: CGPoint(x: 32.31, y: 46.23), controlPoint1: CGPoint(x: 32.33, y: 45.77), controlPoint2: CGPoint(x: 34.26, y: 46.3))
        bezier257Path.addCurve(to: CGPoint(x: 24.05, y: 45.53), controlPoint1: CGPoint(x: 30.36, y: 46.15), controlPoint2: CGPoint(x: 32.12, y: 45.9))
        bezier257Path.close()
        context.saveGState()
        bezier257Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 44.37), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 44.03), endRadius: 61.29,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// Group 158
        context.saveGState()
        context.translateBy(x: 359.02, y: 217.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Bezier 258 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: 172.5)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier258Path = UIBezierPath()
        bezier258Path.move(to: CGPoint(x: 26.59, y: 3))
        bezier258Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.66, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier258Path.addCurve(to: CGPoint(x: 26.6, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.65, y: 1.9))
        bezier258Path.addCurve(to: CGPoint(x: 35.8, y: 0), controlPoint1: CGPoint(x: 35.55, y: 0.76), controlPoint2: CGPoint(x: 33.56, y: -0.04))
        bezier258Path.addCurve(to: CGPoint(x: 46.18, y: 1.24), controlPoint1: CGPoint(x: 38.05, y: 0.04), controlPoint2: CGPoint(x: 35.78, y: 0.76))
        bezier258Path.addCurve(to: CGPoint(x: 77.4, y: 1.9), controlPoint1: CGPoint(x: 56.58, y: 1.71), controlPoint2: CGPoint(x: 77.4, y: 1.9))
        bezier258Path.addCurve(to: CGPoint(x: 46.17, y: 2.79), controlPoint1: CGPoint(x: 77.4, y: 1.9), controlPoint2: CGPoint(x: 56.59, y: 2.35))
        bezier258Path.addCurve(to: CGPoint(x: 35.73, y: 3.64), controlPoint1: CGPoint(x: 35.75, y: 3.22), controlPoint2: CGPoint(x: 37.88, y: 3.71))
        bezier258Path.addCurve(to: CGPoint(x: 26.59, y: 3), controlPoint1: CGPoint(x: 33.57, y: 3.57), controlPoint2: CGPoint(x: 35.52, y: 3.34))
        bezier258Path.close()
        context.saveGState()
        bezier258Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 35.51, y: 1.93), startRadius: 0.22,
            endCenter: CGPoint(x: 36.56, y: 1.6), endRadius: 67.73,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 259 Drawing
        let bezier259Path = UIBezierPath()
        bezier259Path.move(to: CGPoint(x: 24.05, y: 209.53))
        bezier259Path.addCurve(to: CGPoint(x: 0, y: 208.74), controlPoint1: CGPoint(x: 15.97, y: 209.15), controlPoint2: CGPoint(x: 0, y: 208.74))
        bezier259Path.addCurve(to: CGPoint(x: 24.06, y: 207.69), controlPoint1: CGPoint(x: 0, y: 208.74), controlPoint2: CGPoint(x: 15.96, y: 208.32))
        bezier259Path.addCurve(to: CGPoint(x: 32.38, y: 206.22), controlPoint1: CGPoint(x: 32.15, y: 207.06), controlPoint2: CGPoint(x: 30.35, y: 206.18))
        bezier259Path.addCurve(to: CGPoint(x: 41.77, y: 207.59), controlPoint1: CGPoint(x: 34.41, y: 206.27), controlPoint2: CGPoint(x: 32.36, y: 207.06))
        bezier259Path.addCurve(to: CGPoint(x: 70, y: 208.31), controlPoint1: CGPoint(x: 51.17, y: 208.11), controlPoint2: CGPoint(x: 70, y: 208.31))
        bezier259Path.addCurve(to: CGPoint(x: 41.76, y: 209.29), controlPoint1: CGPoint(x: 70, y: 208.31), controlPoint2: CGPoint(x: 51.18, y: 208.81))
        bezier259Path.addCurve(to: CGPoint(x: 32.31, y: 210.23), controlPoint1: CGPoint(x: 32.33, y: 209.77), controlPoint2: CGPoint(x: 34.26, y: 210.3))
        bezier259Path.addCurve(to: CGPoint(x: 24.05, y: 209.53), controlPoint1: CGPoint(x: 30.36, y: 210.15), controlPoint2: CGPoint(x: 32.12, y: 209.9))
        bezier259Path.close()
        context.saveGState()
        bezier259Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 208.37), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 208.03), endRadius: 61.29,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawCommonScreen_58(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 375, height: 812), resizing: ResizingBehavior = .aspectFit, starBlink: CGFloat = 0, tubeOvalOffset: CGFloat = 0.25) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 375, height: 812), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 375, y: resizedFrame.height / 812)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 375, resizedFrame.height / 812)


        //// Color Declarations
        let bezierGradientColor = UIColor(red: 0.071, green: 0.086, blue: 1.000, alpha: 1.000)
        let bezierGradientColor5 = UIColor(red: 0.192, green: 1.000, blue: 0.953, alpha: 1.000)
        let paint0_linear3Color3 = UIColor(red: 0.033, green: 0.360, blue: 0.892, alpha: 1.000)
        let paint0_linear3Color2 = UIColor(red: 0.122, green: 0.071, blue: 0.349, alpha: 1.000)
        let paint0_linear3Color = UIColor(red: 0.054, green: 0.296, blue: 0.844, alpha: 1.000)
        let gradientColor23 = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1.000)
        let gradient2Color2 = UIColor(red: 0.063, green: 0.105, blue: 0.324, alpha: 1.000)
        let gradient2Color3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.000)
        let gradient2Color = UIColor(red: 0.098, green: 0.121, blue: 0.857, alpha: 1.000)
        let gradientColor24 = UIColor(red: 0.004, green: 0.004, blue: 0.004, alpha: 1.000)
        let starGradient2Color3 = UIColor(red: 0.025, green: 0.231, blue: 0.909, alpha: 1.000)
        let starGradientColor = UIColor(red: 0.136, green: 0.000, blue: 1.000, alpha: 0.000)
        let gradient3Color5 = UIColor(red: 0.118, green: 0.110, blue: 0.463, alpha: 1.000)
        let gradient3Color4 = UIColor(red: 0.129, green: 0.153, blue: 0.604, alpha: 1.000)
        let gradient3Color3 = UIColor(red: 0.180, green: 0.180, blue: 0.796, alpha: 1.000)
        let gradient3Color = UIColor(red: 0.525, green: 0.557, blue: 0.953, alpha: 1.000)
        let gradient3Color2 = UIColor(red: 0.267, green: 0.247, blue: 0.910, alpha: 1.000)
        let plane_picture_shadow_2 = UIColor(red: 0.000, green: 0.696, blue: 1.000, alpha: 1.000)
        let starGradient2Color = UIColor(red: 0.160, green: 0.042, blue: 0.907, alpha: 0.000)
        let fillColor15 = UIColor(red: 1.000, green: 0.000, blue: 0.647, alpha: 1.000)
        let bkgLightsColor2 = UIColor(red: 0.051, green: 0.031, blue: 0.243, alpha: 1.000)
        let bkgLightsColor = UIColor(red: 0.043, green: 0.075, blue: 0.788, alpha: 1.000)
        let bkgLightsColor3 = UIColor(red: 0.051, green: 0.031, blue: 0.243, alpha: 1.000)

        //// Gradient Declarations
        let bezierGradient = CGGradient(colorsSpace: nil, colors: [bezierGradientColor.cgColor, bezierGradientColor5.cgColor, bezierGradientColor.cgColor] as CFArray, locations: [0, 0.5, 1])!
        let paint0_linear3 = CGGradient(colorsSpace: nil, colors: [paint0_linear3Color3.cgColor, paint0_linear3Color3.blended(withFraction: 0.5, of: paint0_linear3Color).cgColor, paint0_linear3Color.cgColor, paint0_linear3Color2.cgColor] as CFArray, locations: [0, 0.06, 0.17, 1])!
        let gradient2 = CGGradient(colorsSpace: nil, colors: [gradientColor23.cgColor, gradient2Color.cgColor, gradient2Color2.cgColor, gradient2Color2.blended(withFraction: 0.5, of: gradientColor24).cgColor, gradientColor24.cgColor, gradient2Color3.cgColor] as CFArray, locations: [0, 0.03, 0.18, 0.27, 0.69, 0.96])!
        let starGradient = CGGradient(colorsSpace: nil, colors: [gradientColor23.cgColor, gradient3Color.cgColor, gradient3Color2.cgColor, gradient3Color3.cgColor, gradient3Color3.blended(withFraction: 0.5, of: gradient3Color4).cgColor, gradient3Color4.cgColor, gradient3Color5.cgColor, gradient3Color5.blended(withFraction: 0.5, of: starGradientColor).cgColor, starGradientColor.cgColor] as CFArray, locations: [0, 0.02, 0.04, 0.06, 0.07, 0.09, 0.12, 0.46, 1])!
        let starGradient2 = CGGradient(colorsSpace: nil, colors: [gradientColor23.cgColor, gradient3Color.cgColor, starGradient2Color3.cgColor, starGradient2Color.cgColor] as CFArray, locations: [0, 0.02, 0.11, 1])!
        let bkgLights = CGGradient(colorsSpace: nil, colors: [bkgLightsColor.cgColor, bkgLightsColor.blended(withFraction: 0.5, of: bkgLightsColor3).cgColor, bkgLightsColor3.cgColor, bkgLightsColor2.cgColor] as CFArray, locations: [0, 0.25, 0.47, 1])!

        //// Shadow Declarations
        let shadow2 = NSShadow()
        shadow2.shadowColor = UIColor.black
        shadow2.shadowOffset = CGSize(width: 3, height: 4)
        shadow2.shadowBlurRadius = 5

        //// Variable Declarations
        let star5Expr: CGFloat = starBlink < 0.25 || starBlink > 0.8 - tubeOvalOffset ? 0 : (starBlink > 0.25 && starBlink <= 0.3 ? (starBlink - 0.25) * 20 : (starBlink > 0.75 - tubeOvalOffset && starBlink <= 0.8 - tubeOvalOffset ? (0.8 - tubeOvalOffset - starBlink) * 20 : 1))
        let star4Expr: CGFloat = starBlink < 0.2 || starBlink > 0.75 - tubeOvalOffset ? 0 : (starBlink > 0.2 && starBlink <= 0.25 ? (starBlink - 0.2) * 20 : (starBlink > 0.7 - tubeOvalOffset && starBlink <= 0.75 - tubeOvalOffset ? (0.75 - tubeOvalOffset - starBlink) * 20 : 1))
        let star3Expr: CGFloat = starBlink < 0.15 || starBlink > 0.7 - tubeOvalOffset ? 0 : (starBlink > 0.15 && starBlink <= 0.2 ? (starBlink - 0.15) * 20 : (starBlink > 0.65 - tubeOvalOffset && starBlink <= 0.7 - tubeOvalOffset ? (0.7 - tubeOvalOffset - starBlink) * 20 : 1))

        //// Rectangle 22 Drawing
        let rectangle22Path = UIBezierPath(rect: CGRect(x: -1, y: 181.09, width: 376, height: 661.81))
        context.saveGState()
        rectangle22Path.addClip()
        context.drawLinearGradient(bkgLights, start: CGPoint(x: 187, y: 181.09), end: CGPoint(x: 187, y: 842.9), options: [])
        context.restoreGState()


        //// Bezier 56 Drawing
        let bezier56Path = UIBezierPath()
        bezier56Path.move(to: CGPoint(x: 376.32, y: 260.34))
        bezier56Path.addCurve(to: CGPoint(x: 361.98, y: 284.89), controlPoint1: CGPoint(x: 376.32, y: 260.34), controlPoint2: CGPoint(x: 379.35, y: 284.03))
        bezier56Path.addCurve(to: CGPoint(x: 328.41, y: 212.58), controlPoint1: CGPoint(x: 343.74, y: 286.5), controlPoint2: CGPoint(x: 340.13, y: 234.13))
        bezier56Path.addCurve(to: CGPoint(x: 294.09, y: 182.01), controlPoint1: CGPoint(x: 319.62, y: 185.48), controlPoint2: CGPoint(x: 307.39, y: 182.84))
        bezier56Path.addCurve(to: CGPoint(x: 223.9, y: 267.52), controlPoint1: CGPoint(x: 253.3, y: 182.71), controlPoint2: CGPoint(x: 253.49, y: 267.52))
        bezier56Path.addCurve(to: CGPoint(x: 168.54, y: 225.53), controlPoint1: CGPoint(x: 194.31, y: 267.52), controlPoint2: CGPoint(x: 175.72, y: 229.91))
        bezier56Path.addCurve(to: CGPoint(x: 131.27, y: 223.19), controlPoint1: CGPoint(x: 159.24, y: 216.13), controlPoint2: CGPoint(x: 155.58, y: 213.49))
        bezier56Path.addCurve(to: CGPoint(x: 85.86, y: 255.42), controlPoint1: CGPoint(x: 115.97, y: 230.29), controlPoint2: CGPoint(x: 101.41, y: 247.97))
        bezier56Path.addCurve(to: CGPoint(x: 42.81, y: 257.12), controlPoint1: CGPoint(x: 72.31, y: 261.91), controlPoint2: CGPoint(x: 56.27, y: 259.25))
        bezier56Path.addCurve(to: CGPoint(x: 0, y: 243.74), controlPoint1: CGPoint(x: 23.58, y: 254.09), controlPoint2: CGPoint(x: 0, y: 243.74))
        bezier56Path.addLine(to: CGPoint(x: -1, y: 0))
        bezier56Path.addLine(to: CGPoint(x: 374.61, y: 0))
        bezier56Path.addLine(to: CGPoint(x: 376.32, y: 260.34))
        bezier56Path.close()
        context.saveGState()
        bezier56Path.addClip()
        context.drawLinearGradient(paint0_linear3, start: CGPoint(x: 175.82, y: 269.47), end: CGPoint(x: 200.73, y: -15.21), options: [])
        context.restoreGState()


        //// Bezier 62 Drawing
        let bezier62Path = UIBezierPath()
        bezier62Path.move(to: CGPoint(x: 0, y: 245.07))
        bezier62Path.addCurve(to: CGPoint(x: 68.65, y: 263.32), controlPoint1: CGPoint(x: 31.46, y: 257.28), controlPoint2: CGPoint(x: 53.85, y: 263.45))
        bezier62Path.addCurve(to: CGPoint(x: 92.52, y: 255.54), controlPoint1: CGPoint(x: 76.05, y: 263.26), controlPoint2: CGPoint(x: 84.7, y: 260.07))
        bezier62Path.addCurve(to: CGPoint(x: 113.98, y: 239.47), controlPoint1: CGPoint(x: 98.61, y: 252.02), controlPoint2: CGPoint(x: 105.05, y: 246.91))
        bezier62Path.addCurve(to: CGPoint(x: 137.98, y: 222.1), controlPoint1: CGPoint(x: 129.36, y: 226.67), controlPoint2: CGPoint(x: 131.67, y: 225.27))
        bezier62Path.addCurve(to: CGPoint(x: 149.67, y: 219.12), controlPoint1: CGPoint(x: 141.93, y: 220.13), controlPoint2: CGPoint(x: 145.67, y: 219.12))
        bezier62Path.addCurve(to: CGPoint(x: 173.51, y: 234.93), controlPoint1: CGPoint(x: 157.91, y: 219.12), controlPoint2: CGPoint(x: 164.07, y: 224.32))
        bezier62Path.addCurve(to: CGPoint(x: 177.34, y: 239.45), controlPoint1: CGPoint(x: 174.8, y: 236.39), controlPoint2: CGPoint(x: 175.62, y: 237.42))
        bezier62Path.addCurve(to: CGPoint(x: 181.73, y: 244.68), controlPoint1: CGPoint(x: 177.84, y: 240.04), controlPoint2: CGPoint(x: 180.84, y: 243.63))
        bezier62Path.addCurve(to: CGPoint(x: 200.67, y: 263.18), controlPoint1: CGPoint(x: 188.94, y: 253.19), controlPoint2: CGPoint(x: 195.04, y: 259.04))
        bezier62Path.addCurve(to: CGPoint(x: 223.64, y: 270.62), controlPoint1: CGPoint(x: 207.84, y: 268.46), controlPoint2: CGPoint(x: 215.54, y: 270.62))
        bezier62Path.addCurve(to: CGPoint(x: 242.89, y: 259.82), controlPoint1: CGPoint(x: 230.95, y: 270.62), controlPoint2: CGPoint(x: 236.77, y: 267.76))
        bezier62Path.addCurve(to: CGPoint(x: 256.96, y: 230.33), controlPoint1: CGPoint(x: 247.69, y: 253.59), controlPoint2: CGPoint(x: 252.02, y: 243.3))
        bezier62Path.addCurve(to: CGPoint(x: 259.41, y: 223.81), controlPoint1: CGPoint(x: 257.16, y: 229.82), controlPoint2: CGPoint(x: 258.91, y: 225.14))
        bezier62Path.addCurve(to: CGPoint(x: 274.09, y: 195.64), controlPoint1: CGPoint(x: 264.95, y: 209.33), controlPoint2: CGPoint(x: 268.88, y: 202.51))
        bezier62Path.addCurve(to: CGPoint(x: 295.69, y: 184.9), controlPoint1: CGPoint(x: 280.79, y: 186.83), controlPoint2: CGPoint(x: 289.43, y: 184.85))
        bezier62Path.addCurve(to: CGPoint(x: 317.51, y: 198.04), controlPoint1: CGPoint(x: 301.95, y: 184.96), controlPoint2: CGPoint(x: 310.72, y: 187.5))
        bezier62Path.addCurve(to: CGPoint(x: 332.33, y: 232.62), controlPoint1: CGPoint(x: 322.95, y: 206.49), controlPoint2: CGPoint(x: 327.58, y: 216.59))
        bezier62Path.addCurve(to: CGPoint(x: 338.03, y: 252.59), controlPoint1: CGPoint(x: 333.55, y: 236.73), controlPoint2: CGPoint(x: 337.41, y: 250.43))
        bezier62Path.addCurve(to: CGPoint(x: 359.84, y: 287.78), controlPoint1: CGPoint(x: 344.48, y: 274.73), controlPoint2: CGPoint(x: 350.56, y: 288.25))
        bezier62Path.addCurve(to: CGPoint(x: 375, y: 277.5), controlPoint1: CGPoint(x: 370.93, y: 287.21), controlPoint2: CGPoint(x: 373.88, y: 280.13))
        bezier62Path.addLine(to: CGPoint(x: 375, y: 268.28))
        bezier62Path.addCurve(to: CGPoint(x: 360.41, y: 282.85), controlPoint1: CGPoint(x: 372.62, y: 276.22), controlPoint2: CGPoint(x: 368.43, y: 282.59))
        bezier62Path.addCurve(to: CGPoint(x: 342.75, y: 251.14), controlPoint1: CGPoint(x: 353.68, y: 283.06), controlPoint2: CGPoint(x: 349.21, y: 273.33))
        bezier62Path.addCurve(to: CGPoint(x: 336.95, y: 230.93), controlPoint1: CGPoint(x: 342.12, y: 248.99), controlPoint2: CGPoint(x: 338.16, y: 235.04))
        bezier62Path.addCurve(to: CGPoint(x: 321.78, y: 195.57), controlPoint1: CGPoint(x: 332.2, y: 214.91), controlPoint2: CGPoint(x: 327.21, y: 204))
        bezier62Path.addCurve(to: CGPoint(x: 295.48, y: 180), controlPoint1: CGPoint(x: 315, y: 185.05), controlPoint2: CGPoint(x: 305.65, y: 180))
        bezier62Path.addCurve(to: CGPoint(x: 269.67, y: 193.03), controlPoint1: CGPoint(x: 285.29, y: 180), controlPoint2: CGPoint(x: 276.35, y: 184.23))
        bezier62Path.addCurve(to: CGPoint(x: 254.68, y: 222.49), controlPoint1: CGPoint(x: 264.47, y: 199.88), controlPoint2: CGPoint(x: 260.22, y: 208.01))
        bezier62Path.addCurve(to: CGPoint(x: 252.26, y: 228.84), controlPoint1: CGPoint(x: 254.18, y: 223.81), controlPoint2: CGPoint(x: 252.45, y: 228.34))
        bezier62Path.addCurve(to: CGPoint(x: 240.67, y: 254.46), controlPoint1: CGPoint(x: 247.31, y: 241.82), controlPoint2: CGPoint(x: 244.68, y: 248.7))
        bezier62Path.addCurve(to: CGPoint(x: 223.31, y: 265.65), controlPoint1: CGPoint(x: 235.55, y: 261.81), controlPoint2: CGPoint(x: 230.66, y: 265.65))
        bezier62Path.addCurve(to: CGPoint(x: 200.67, y: 256.68), controlPoint1: CGPoint(x: 215.19, y: 265.65), controlPoint2: CGPoint(x: 207.86, y: 261.97))
        bezier62Path.addCurve(to: CGPoint(x: 182.91, y: 237.98), controlPoint1: CGPoint(x: 195.03, y: 252.53), controlPoint2: CGPoint(x: 190.13, y: 246.49))
        bezier62Path.addCurve(to: CGPoint(x: 179.02, y: 233.67), controlPoint1: CGPoint(x: 182.02, y: 236.93), controlPoint2: CGPoint(x: 179.51, y: 234.26))
        bezier62Path.addCurve(to: CGPoint(x: 174.84, y: 229.01), controlPoint1: CGPoint(x: 177.3, y: 231.64), controlPoint2: CGPoint(x: 176.14, y: 230.46))
        bezier62Path.addCurve(to: CGPoint(x: 149.36, y: 214.21), controlPoint1: CGPoint(x: 165.42, y: 218.42), controlPoint2: CGPoint(x: 157.56, y: 214.21))
        bezier62Path.addCurve(to: CGPoint(x: 136.87, y: 217.24), controlPoint1: CGPoint(x: 145.37, y: 214.21), controlPoint2: CGPoint(x: 141.24, y: 215.18))
        bezier62Path.addCurve(to: CGPoint(x: 110.55, y: 236.07), controlPoint1: CGPoint(x: 129.88, y: 220.55), controlPoint2: CGPoint(x: 125.92, y: 223.28))
        bezier62Path.addCurve(to: CGPoint(x: 90.43, y: 251.19), controlPoint1: CGPoint(x: 101.61, y: 243.51), controlPoint2: CGPoint(x: 96.53, y: 247.66))
        bezier62Path.addCurve(to: CGPoint(x: 67.86, y: 258.41), controlPoint1: CGPoint(x: 82.6, y: 255.73), controlPoint2: CGPoint(x: 75.28, y: 258.34))
        bezier62Path.addCurve(to: CGPoint(x: 0.18, y: 239.86), controlPoint1: CGPoint(x: 53.04, y: 258.54), controlPoint2: CGPoint(x: 31.66, y: 252.08))
        bezier62Path.addLine(to: CGPoint(x: 0, y: 245.07))
        bezier62Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier62Path.addClip()
        context.drawLinearGradient(bezierGradient, start: CGPoint(x: 0, y: 233.89), end: CGPoint(x: 375, y: 233.89), options: [])
        context.endTransparencyLayer()
        context.restoreGState()



        //// Stars Group
        //// Group 22
        context.saveGState()
        context.translateBy(x: 200.35, y: 18.04)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 80 Drawing
        let bezier80Path = UIBezierPath()
        bezier80Path.move(to: CGPoint(x: -9.09, y: 1.06))
        bezier80Path.addCurve(to: CGPoint(x: -34.99, y: 0.62), controlPoint1: CGPoint(x: -17.79, y: 0.85), controlPoint2: CGPoint(x: -34.99, y: 0.62))
        bezier80Path.addCurve(to: CGPoint(x: -9.08, y: 0.03), controlPoint1: CGPoint(x: -34.99, y: 0.62), controlPoint2: CGPoint(x: -17.8, y: 0.38))
        bezier80Path.addCurve(to: CGPoint(x: -0.12, y: -0.8), controlPoint1: CGPoint(x: -0.36, y: -0.33), controlPoint2: CGPoint(x: -2.31, y: -0.82))
        bezier80Path.addCurve(to: CGPoint(x: 9.99, y: -0.03), controlPoint1: CGPoint(x: 2.07, y: -0.77), controlPoint2: CGPoint(x: -0.14, y: -0.33))
        bezier80Path.addCurve(to: CGPoint(x: 40.4, y: 0.38), controlPoint1: CGPoint(x: 20.12, y: 0.26), controlPoint2: CGPoint(x: 40.4, y: 0.38))
        bezier80Path.addCurve(to: CGPoint(x: 9.98, y: 0.93), controlPoint1: CGPoint(x: 40.4, y: 0.38), controlPoint2: CGPoint(x: 20.13, y: 0.66))
        bezier80Path.addCurve(to: CGPoint(x: -0.19, y: 1.45), controlPoint1: CGPoint(x: -0.17, y: 1.2), controlPoint2: CGPoint(x: 1.91, y: 1.5))
        bezier80Path.addCurve(to: CGPoint(x: -9.09, y: 1.06), controlPoint1: CGPoint(x: -2.29, y: 1.41), controlPoint2: CGPoint(x: -0.39, y: 1.27))
        bezier80Path.close()
        context.saveGState()
        bezier80Path.addClip()
        context.drawRadialGradient(gradient2,
            startCenter: CGPoint(x: -0.18, y: 0.43), startRadius: 0.2,
            endCenter: CGPoint(x: 0.77, y: 0.13), endRadius: 61.23,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 81 Drawing
        context.saveGState()
        context.setAlpha(star5Expr)
        context.setBlendMode(.color)

        let bezier81Path = UIBezierPath()
        bezier81Path.move(to: CGPoint(x: -8.39, y: 1.07))
        bezier81Path.addCurve(to: CGPoint(x: -34.29, y: 0.63), controlPoint1: CGPoint(x: -17.09, y: 0.87), controlPoint2: CGPoint(x: -34.29, y: 0.63))
        bezier81Path.addCurve(to: CGPoint(x: -8.38, y: 0.04), controlPoint1: CGPoint(x: -34.29, y: 0.63), controlPoint2: CGPoint(x: -17.1, y: 0.4))
        bezier81Path.addCurve(to: CGPoint(x: 0.58, y: -0.78), controlPoint1: CGPoint(x: 0.34, y: -0.31), controlPoint2: CGPoint(x: -1.6, y: -0.81))
        bezier81Path.addCurve(to: CGPoint(x: 10.69, y: -0.02), controlPoint1: CGPoint(x: 2.77, y: -0.76), controlPoint2: CGPoint(x: 0.56, y: -0.31))
        bezier81Path.addCurve(to: CGPoint(x: 41.1, y: 0.39), controlPoint1: CGPoint(x: 20.82, y: 0.28), controlPoint2: CGPoint(x: 41.1, y: 0.39))
        bezier81Path.addCurve(to: CGPoint(x: 10.68, y: 0.94), controlPoint1: CGPoint(x: 41.1, y: 0.39), controlPoint2: CGPoint(x: 20.83, y: 0.67))
        bezier81Path.addCurve(to: CGPoint(x: 0.51, y: 1.47), controlPoint1: CGPoint(x: 0.53, y: 1.21), controlPoint2: CGPoint(x: 2.61, y: 1.51))
        bezier81Path.addCurve(to: CGPoint(x: -8.39, y: 1.07), controlPoint1: CGPoint(x: -1.59, y: 1.43), controlPoint2: CGPoint(x: 0.31, y: 1.28))
        bezier81Path.close()
        plane_picture_shadow_2.setFill()
        bezier81Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 23
        context.saveGState()
        context.translateBy(x: 70.1, y: 58.12)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 82 Drawing
        let bezier82Path = UIBezierPath()
        bezier82Path.move(to: CGPoint(x: -9.09, y: 1.9))
        bezier82Path.addCurve(to: CGPoint(x: -34.98, y: 1.18), controlPoint1: CGPoint(x: -17.79, y: 1.56), controlPoint2: CGPoint(x: -34.98, y: 1.18))
        bezier82Path.addCurve(to: CGPoint(x: -9.07, y: 0.23), controlPoint1: CGPoint(x: -34.98, y: 1.18), controlPoint2: CGPoint(x: -17.79, y: 0.8))
        bezier82Path.addCurve(to: CGPoint(x: -0.11, y: -1.1), controlPoint1: CGPoint(x: -0.36, y: -0.34), controlPoint2: CGPoint(x: -2.3, y: -1.15))
        bezier82Path.addCurve(to: CGPoint(x: 10, y: 0.13), controlPoint1: CGPoint(x: 2.07, y: -1.06), controlPoint2: CGPoint(x: -0.13, y: -0.34))
        bezier82Path.addCurve(to: CGPoint(x: 40.4, y: 0.79), controlPoint1: CGPoint(x: 20.13, y: 0.61), controlPoint2: CGPoint(x: 40.4, y: 0.79))
        bezier82Path.addCurve(to: CGPoint(x: 9.99, y: 1.68), controlPoint1: CGPoint(x: 40.4, y: 0.79), controlPoint2: CGPoint(x: 20.13, y: 1.25))
        bezier82Path.addCurve(to: CGPoint(x: -0.18, y: 2.53), controlPoint1: CGPoint(x: -0.16, y: 2.12), controlPoint2: CGPoint(x: 1.91, y: 2.6))
        bezier82Path.addCurve(to: CGPoint(x: -9.09, y: 1.9), controlPoint1: CGPoint(x: -2.28, y: 2.47), controlPoint2: CGPoint(x: -0.39, y: 2.23))
        bezier82Path.close()
        context.saveGState()
        bezier82Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: -0.17, y: 0.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 0.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 83 Drawing
        context.saveGState()
        context.setAlpha(star4Expr)
        context.setBlendMode(.color)

        let bezier83Path = UIBezierPath()
        bezier83Path.move(to: CGPoint(x: -9.15, y: 1.9))
        bezier83Path.addCurve(to: CGPoint(x: -35.04, y: 1.19), controlPoint1: CGPoint(x: -17.85, y: 1.56), controlPoint2: CGPoint(x: -35.04, y: 1.19))
        bezier83Path.addCurve(to: CGPoint(x: -9.14, y: 0.23), controlPoint1: CGPoint(x: -35.04, y: 1.19), controlPoint2: CGPoint(x: -17.85, y: 0.8))
        bezier83Path.addCurve(to: CGPoint(x: -0.17, y: -1.1), controlPoint1: CGPoint(x: -0.42, y: -0.34), controlPoint2: CGPoint(x: -2.36, y: -1.14))
        bezier83Path.addCurve(to: CGPoint(x: 9.94, y: 0.14), controlPoint1: CGPoint(x: 2.01, y: -1.06), controlPoint2: CGPoint(x: -0.19, y: -0.34))
        bezier83Path.addCurve(to: CGPoint(x: 40.34, y: 0.8), controlPoint1: CGPoint(x: 20.06, y: 0.61), controlPoint2: CGPoint(x: 40.34, y: 0.8))
        bezier83Path.addCurve(to: CGPoint(x: 9.93, y: 1.69), controlPoint1: CGPoint(x: 40.34, y: 0.8), controlPoint2: CGPoint(x: 20.07, y: 1.25))
        bezier83Path.addCurve(to: CGPoint(x: -0.25, y: 2.54), controlPoint1: CGPoint(x: -0.22, y: 2.12), controlPoint2: CGPoint(x: 1.85, y: 2.61))
        bezier83Path.addCurve(to: CGPoint(x: -9.15, y: 1.9), controlPoint1: CGPoint(x: -2.34, y: 2.47), controlPoint2: CGPoint(x: -0.45, y: 2.24))
        bezier83Path.close()
        fillColor15.setFill()
        bezier83Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 24
        context.saveGState()
        context.translateBy(x: 81.49, y: 123.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 25
        //// Bezier 84 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier84Path = UIBezierPath()
        bezier84Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier84Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier84Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier84Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier84Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier84Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier84Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier84Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier84Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier84Path.close()
        context.saveGState()
        bezier84Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 85 Drawing
        let bezier85Path = UIBezierPath()
        bezier85Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier85Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier85Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier85Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier85Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier85Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier85Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier85Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier85Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier85Path.close()
        context.saveGState()
        bezier85Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 26
        //// Bezier 86 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier86Path = UIBezierPath()
        bezier86Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier86Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier86Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier86Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier86Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier86Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier86Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier86Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier86Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier86Path.close()
        context.saveGState()
        bezier86Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 87 Drawing
        let bezier87Path = UIBezierPath()
        bezier87Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier87Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier87Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier87Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier87Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier87Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier87Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier87Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier87Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier87Path.close()
        context.saveGState()
        bezier87Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 27
        context.saveGState()
        context.translateBy(x: 285.49, y: 113.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 28
        //// Bezier 88 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -34.11)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier88Path = UIBezierPath()
        bezier88Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier88Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier88Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier88Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier88Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier88Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier88Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier88Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier88Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier88Path.close()
        context.saveGState()
        bezier88Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 34.81, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 35.76, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 89 Drawing
        let bezier89Path = UIBezierPath()
        bezier89Path.move(to: CGPoint(x: -9.09, y: 1.9))
        bezier89Path.addCurve(to: CGPoint(x: -34.98, y: 1.18), controlPoint1: CGPoint(x: -17.79, y: 1.56), controlPoint2: CGPoint(x: -34.98, y: 1.18))
        bezier89Path.addCurve(to: CGPoint(x: -9.07, y: 0.23), controlPoint1: CGPoint(x: -34.98, y: 1.18), controlPoint2: CGPoint(x: -17.79, y: 0.8))
        bezier89Path.addCurve(to: CGPoint(x: -0.11, y: -1.1), controlPoint1: CGPoint(x: -0.36, y: -0.34), controlPoint2: CGPoint(x: -2.3, y: -1.15))
        bezier89Path.addCurve(to: CGPoint(x: 10, y: 0.13), controlPoint1: CGPoint(x: 2.07, y: -1.06), controlPoint2: CGPoint(x: -0.13, y: -0.34))
        bezier89Path.addCurve(to: CGPoint(x: 40.4, y: 0.79), controlPoint1: CGPoint(x: 20.13, y: 0.61), controlPoint2: CGPoint(x: 40.4, y: 0.79))
        bezier89Path.addCurve(to: CGPoint(x: 9.99, y: 1.68), controlPoint1: CGPoint(x: 40.4, y: 0.79), controlPoint2: CGPoint(x: 20.13, y: 1.25))
        bezier89Path.addCurve(to: CGPoint(x: -0.18, y: 2.53), controlPoint1: CGPoint(x: -0.16, y: 2.12), controlPoint2: CGPoint(x: 1.91, y: 2.6))
        bezier89Path.addCurve(to: CGPoint(x: -9.09, y: 1.9), controlPoint1: CGPoint(x: -2.28, y: 2.47), controlPoint2: CGPoint(x: -0.39, y: 2.23))
        bezier89Path.close()
        context.saveGState()
        bezier89Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: -0.17, y: 0.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 0.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 29
        context.saveGState()
        context.setAlpha(0)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 90 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -34.09)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier90Path = UIBezierPath()
        bezier90Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier90Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier90Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier90Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier90Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier90Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier90Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier90Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier90Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier90Path.close()
        plane_picture_shadow_2.setFill()
        bezier90Path.fill()

        context.restoreGState()


        //// Bezier 91 Drawing
        let bezier91Path = UIBezierPath()
        bezier91Path.move(to: CGPoint(x: -9.09, y: 1.91))
        bezier91Path.addCurve(to: CGPoint(x: -34.99, y: 1.2), controlPoint1: CGPoint(x: -17.79, y: 1.57), controlPoint2: CGPoint(x: -34.99, y: 1.2))
        bezier91Path.addCurve(to: CGPoint(x: -9.08, y: 0.24), controlPoint1: CGPoint(x: -34.99, y: 1.2), controlPoint2: CGPoint(x: -17.79, y: 0.81))
        bezier91Path.addCurve(to: CGPoint(x: -0.12, y: -1.09), controlPoint1: CGPoint(x: -0.36, y: -0.33), controlPoint2: CGPoint(x: -2.3, y: -1.13))
        bezier91Path.addCurve(to: CGPoint(x: 9.99, y: 0.15), controlPoint1: CGPoint(x: 2.07, y: -1.05), controlPoint2: CGPoint(x: -0.14, y: -0.33))
        bezier91Path.addCurve(to: CGPoint(x: 40.4, y: 0.81), controlPoint1: CGPoint(x: 20.12, y: 0.62), controlPoint2: CGPoint(x: 40.4, y: 0.81))
        bezier91Path.addCurve(to: CGPoint(x: 9.98, y: 1.7), controlPoint1: CGPoint(x: 40.4, y: 0.81), controlPoint2: CGPoint(x: 20.13, y: 1.26))
        bezier91Path.addCurve(to: CGPoint(x: -0.19, y: 2.55), controlPoint1: CGPoint(x: -0.16, y: 2.13), controlPoint2: CGPoint(x: 1.91, y: 2.62))
        bezier91Path.addCurve(to: CGPoint(x: -9.09, y: 1.91), controlPoint1: CGPoint(x: -2.29, y: 2.48), controlPoint2: CGPoint(x: -0.39, y: 2.25))
        bezier91Path.close()
        plane_picture_shadow_2.setFill()
        bezier91Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 30
        context.saveGState()
        context.translateBy(x: 337.49, y: 87.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 31
        //// Bezier 92 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -34.11)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier92Path = UIBezierPath()
        bezier92Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier92Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier92Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier92Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier92Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier92Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier92Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier92Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier92Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier92Path.close()
        context.saveGState()
        bezier92Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 34.81, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 35.76, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 93 Drawing
        let bezier93Path = UIBezierPath()
        bezier93Path.move(to: CGPoint(x: -9.09, y: 1.9))
        bezier93Path.addCurve(to: CGPoint(x: -34.98, y: 1.18), controlPoint1: CGPoint(x: -17.79, y: 1.56), controlPoint2: CGPoint(x: -34.98, y: 1.18))
        bezier93Path.addCurve(to: CGPoint(x: -9.07, y: 0.23), controlPoint1: CGPoint(x: -34.98, y: 1.18), controlPoint2: CGPoint(x: -17.79, y: 0.8))
        bezier93Path.addCurve(to: CGPoint(x: -0.11, y: -1.1), controlPoint1: CGPoint(x: -0.36, y: -0.34), controlPoint2: CGPoint(x: -2.3, y: -1.15))
        bezier93Path.addCurve(to: CGPoint(x: 10, y: 0.13), controlPoint1: CGPoint(x: 2.07, y: -1.06), controlPoint2: CGPoint(x: -0.13, y: -0.34))
        bezier93Path.addCurve(to: CGPoint(x: 40.4, y: 0.79), controlPoint1: CGPoint(x: 20.13, y: 0.61), controlPoint2: CGPoint(x: 40.4, y: 0.79))
        bezier93Path.addCurve(to: CGPoint(x: 9.99, y: 1.68), controlPoint1: CGPoint(x: 40.4, y: 0.79), controlPoint2: CGPoint(x: 20.13, y: 1.25))
        bezier93Path.addCurve(to: CGPoint(x: -0.18, y: 2.53), controlPoint1: CGPoint(x: -0.16, y: 2.12), controlPoint2: CGPoint(x: 1.91, y: 2.6))
        bezier93Path.addCurve(to: CGPoint(x: -9.09, y: 1.9), controlPoint1: CGPoint(x: -2.28, y: 2.47), controlPoint2: CGPoint(x: -0.39, y: 2.23))
        bezier93Path.close()
        context.saveGState()
        bezier93Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: -0.17, y: 0.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 0.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 32
        context.saveGState()
        context.setAlpha(star3Expr)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 94 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -34.09)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier94Path = UIBezierPath()
        bezier94Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier94Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier94Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier94Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier94Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier94Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier94Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier94Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier94Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier94Path.close()
        plane_picture_shadow_2.setFill()
        bezier94Path.fill()

        context.restoreGState()


        //// Bezier 95 Drawing
        let bezier95Path = UIBezierPath()
        bezier95Path.move(to: CGPoint(x: -9.09, y: 1.91))
        bezier95Path.addCurve(to: CGPoint(x: -34.99, y: 1.2), controlPoint1: CGPoint(x: -17.79, y: 1.57), controlPoint2: CGPoint(x: -34.99, y: 1.2))
        bezier95Path.addCurve(to: CGPoint(x: -9.08, y: 0.24), controlPoint1: CGPoint(x: -34.99, y: 1.2), controlPoint2: CGPoint(x: -17.79, y: 0.81))
        bezier95Path.addCurve(to: CGPoint(x: -0.12, y: -1.09), controlPoint1: CGPoint(x: -0.36, y: -0.33), controlPoint2: CGPoint(x: -2.3, y: -1.13))
        bezier95Path.addCurve(to: CGPoint(x: 9.99, y: 0.15), controlPoint1: CGPoint(x: 2.07, y: -1.05), controlPoint2: CGPoint(x: -0.14, y: -0.33))
        bezier95Path.addCurve(to: CGPoint(x: 40.4, y: 0.81), controlPoint1: CGPoint(x: 20.12, y: 0.62), controlPoint2: CGPoint(x: 40.4, y: 0.81))
        bezier95Path.addCurve(to: CGPoint(x: 9.98, y: 1.7), controlPoint1: CGPoint(x: 40.4, y: 0.81), controlPoint2: CGPoint(x: 20.13, y: 1.26))
        bezier95Path.addCurve(to: CGPoint(x: -0.19, y: 2.55), controlPoint1: CGPoint(x: -0.16, y: 2.13), controlPoint2: CGPoint(x: 1.91, y: 2.62))
        bezier95Path.addCurve(to: CGPoint(x: -9.09, y: 1.91), controlPoint1: CGPoint(x: -2.29, y: 2.48), controlPoint2: CGPoint(x: -0.39, y: 2.25))
        bezier95Path.close()
        plane_picture_shadow_2.setFill()
        bezier95Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 33
        context.saveGState()
        context.translateBy(x: 105.49, y: 27.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.2)



        //// Group 34
        //// Bezier 96 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier96Path = UIBezierPath()
        bezier96Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier96Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier96Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier96Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier96Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier96Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier96Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier96Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier96Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier96Path.close()
        context.saveGState()
        bezier96Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 97 Drawing
        let bezier97Path = UIBezierPath()
        bezier97Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier97Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier97Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier97Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier97Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier97Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier97Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier97Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier97Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier97Path.close()
        context.saveGState()
        bezier97Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 35
        //// Bezier 98 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier98Path = UIBezierPath()
        bezier98Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier98Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier98Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier98Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier98Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier98Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier98Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier98Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier98Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier98Path.close()
        context.saveGState()
        bezier98Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 99 Drawing
        let bezier99Path = UIBezierPath()
        bezier99Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier99Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier99Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier99Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier99Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier99Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier99Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier99Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier99Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier99Path.close()
        context.saveGState()
        bezier99Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 36
        context.saveGState()
        context.translateBy(x: 122.49, y: 52.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.4, y: 0.4)



        //// Group 37
        //// Bezier 100 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier100Path = UIBezierPath()
        bezier100Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier100Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier100Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier100Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier100Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier100Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier100Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier100Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier100Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier100Path.close()
        context.saveGState()
        bezier100Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 101 Drawing
        let bezier101Path = UIBezierPath()
        bezier101Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier101Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier101Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier101Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier101Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier101Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier101Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier101Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier101Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier101Path.close()
        context.saveGState()
        bezier101Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 38
        //// Bezier 102 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier102Path = UIBezierPath()
        bezier102Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier102Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier102Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier102Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier102Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier102Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier102Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier102Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier102Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier102Path.close()
        context.saveGState()
        bezier102Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 103 Drawing
        let bezier103Path = UIBezierPath()
        bezier103Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier103Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier103Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier103Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier103Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier103Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier103Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier103Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier103Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier103Path.close()
        context.saveGState()
        bezier103Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 39
        context.saveGState()
        context.translateBy(x: 146.49, y: 40.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 40
        //// Bezier 104 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier104Path = UIBezierPath()
        bezier104Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier104Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier104Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier104Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier104Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier104Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier104Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier104Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier104Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier104Path.close()
        context.saveGState()
        bezier104Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 105 Drawing
        let bezier105Path = UIBezierPath()
        bezier105Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier105Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier105Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier105Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier105Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier105Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier105Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier105Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier105Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier105Path.close()
        context.saveGState()
        bezier105Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 41
        //// Bezier 106 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier106Path = UIBezierPath()
        bezier106Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier106Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier106Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier106Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier106Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier106Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier106Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier106Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier106Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier106Path.close()
        context.saveGState()
        bezier106Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 107 Drawing
        let bezier107Path = UIBezierPath()
        bezier107Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier107Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier107Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier107Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier107Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier107Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier107Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier107Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier107Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier107Path.close()
        context.saveGState()
        bezier107Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 42
        context.saveGState()
        context.translateBy(x: 156.49, y: 50.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 43
        //// Bezier 108 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier108Path = UIBezierPath()
        bezier108Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier108Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier108Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier108Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier108Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier108Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier108Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier108Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier108Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier108Path.close()
        context.saveGState()
        bezier108Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 109 Drawing
        let bezier109Path = UIBezierPath()
        bezier109Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier109Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier109Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier109Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier109Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier109Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier109Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier109Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier109Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier109Path.close()
        context.saveGState()
        bezier109Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 44
        //// Bezier 110 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier110Path = UIBezierPath()
        bezier110Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier110Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier110Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier110Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier110Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier110Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier110Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier110Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier110Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier110Path.close()
        context.saveGState()
        bezier110Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 111 Drawing
        let bezier111Path = UIBezierPath()
        bezier111Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier111Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier111Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier111Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier111Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier111Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier111Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier111Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier111Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier111Path.close()
        context.saveGState()
        bezier111Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 45
        context.saveGState()
        context.translateBy(x: 76.49, y: 20.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 46
        //// Bezier 112 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier112Path = UIBezierPath()
        bezier112Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier112Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier112Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier112Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier112Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier112Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier112Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier112Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier112Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier112Path.close()
        context.saveGState()
        bezier112Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 113 Drawing
        let bezier113Path = UIBezierPath()
        bezier113Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier113Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier113Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier113Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier113Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier113Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier113Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier113Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier113Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier113Path.close()
        context.saveGState()
        bezier113Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 47
        //// Bezier 114 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier114Path = UIBezierPath()
        bezier114Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier114Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier114Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier114Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier114Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier114Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier114Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier114Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier114Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier114Path.close()
        context.saveGState()
        bezier114Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 115 Drawing
        let bezier115Path = UIBezierPath()
        bezier115Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier115Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier115Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier115Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier115Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier115Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier115Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier115Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier115Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier115Path.close()
        context.saveGState()
        bezier115Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 48
        context.saveGState()
        context.translateBy(x: 86.49, y: 38.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 49
        //// Bezier 116 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier116Path = UIBezierPath()
        bezier116Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier116Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier116Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier116Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier116Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier116Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier116Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier116Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier116Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier116Path.close()
        context.saveGState()
        bezier116Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 117 Drawing
        let bezier117Path = UIBezierPath()
        bezier117Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier117Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier117Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier117Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier117Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier117Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier117Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier117Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier117Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier117Path.close()
        context.saveGState()
        bezier117Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 50
        //// Bezier 118 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier118Path = UIBezierPath()
        bezier118Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier118Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier118Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier118Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier118Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier118Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier118Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier118Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier118Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier118Path.close()
        context.saveGState()
        bezier118Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 119 Drawing
        let bezier119Path = UIBezierPath()
        bezier119Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier119Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier119Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier119Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier119Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier119Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier119Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier119Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier119Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier119Path.close()
        context.saveGState()
        bezier119Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 51
        context.saveGState()
        context.translateBy(x: 131.49, y: 20.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 52
        //// Bezier 120 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier120Path = UIBezierPath()
        bezier120Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier120Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier120Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier120Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier120Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier120Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier120Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier120Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier120Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier120Path.close()
        context.saveGState()
        bezier120Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 121 Drawing
        let bezier121Path = UIBezierPath()
        bezier121Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier121Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier121Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier121Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier121Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier121Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier121Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier121Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier121Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier121Path.close()
        context.saveGState()
        bezier121Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 53
        //// Bezier 122 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier122Path = UIBezierPath()
        bezier122Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier122Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier122Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier122Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier122Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier122Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier122Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier122Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier122Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier122Path.close()
        context.saveGState()
        bezier122Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 123 Drawing
        let bezier123Path = UIBezierPath()
        bezier123Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier123Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier123Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier123Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier123Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier123Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier123Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier123Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier123Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier123Path.close()
        context.saveGState()
        bezier123Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 54
        context.saveGState()
        context.translateBy(x: 178.49, y: 27.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 55
        //// Bezier 124 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier124Path = UIBezierPath()
        bezier124Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier124Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier124Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier124Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier124Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier124Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier124Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier124Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier124Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier124Path.close()
        context.saveGState()
        bezier124Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 125 Drawing
        let bezier125Path = UIBezierPath()
        bezier125Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier125Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier125Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier125Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier125Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier125Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier125Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier125Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier125Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier125Path.close()
        context.saveGState()
        bezier125Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 56
        //// Bezier 126 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier126Path = UIBezierPath()
        bezier126Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier126Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier126Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier126Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier126Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier126Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier126Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier126Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier126Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier126Path.close()
        context.saveGState()
        bezier126Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 127 Drawing
        let bezier127Path = UIBezierPath()
        bezier127Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier127Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier127Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier127Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier127Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier127Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier127Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier127Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier127Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier127Path.close()
        context.saveGState()
        bezier127Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 57
        context.saveGState()
        context.translateBy(x: 188.49, y: 54.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 58
        //// Bezier 128 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier128Path = UIBezierPath()
        bezier128Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier128Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier128Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier128Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier128Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier128Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier128Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier128Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier128Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier128Path.close()
        context.saveGState()
        bezier128Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 129 Drawing
        let bezier129Path = UIBezierPath()
        bezier129Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier129Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier129Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier129Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier129Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier129Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier129Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier129Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier129Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier129Path.close()
        context.saveGState()
        bezier129Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 59
        //// Bezier 130 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier130Path = UIBezierPath()
        bezier130Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier130Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier130Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier130Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier130Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier130Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier130Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier130Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier130Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier130Path.close()
        context.saveGState()
        bezier130Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 131 Drawing
        let bezier131Path = UIBezierPath()
        bezier131Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier131Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier131Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier131Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier131Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier131Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier131Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier131Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier131Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier131Path.close()
        context.saveGState()
        bezier131Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 60
        context.saveGState()
        context.translateBy(x: 220.49, y: 42.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.3)



        //// Group 61
        //// Bezier 132 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier132Path = UIBezierPath()
        bezier132Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier132Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier132Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier132Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier132Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier132Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier132Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier132Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier132Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier132Path.close()
        context.saveGState()
        bezier132Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 133 Drawing
        let bezier133Path = UIBezierPath()
        bezier133Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier133Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier133Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier133Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier133Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier133Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier133Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier133Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier133Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier133Path.close()
        context.saveGState()
        bezier133Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 62
        //// Bezier 134 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier134Path = UIBezierPath()
        bezier134Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier134Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier134Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier134Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier134Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier134Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier134Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier134Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier134Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier134Path.close()
        context.saveGState()
        bezier134Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 135 Drawing
        let bezier135Path = UIBezierPath()
        bezier135Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier135Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier135Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier135Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier135Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier135Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier135Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier135Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier135Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier135Path.close()
        context.saveGState()
        bezier135Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 63
        context.saveGState()
        context.translateBy(x: 248.49, y: 24.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 64
        //// Bezier 136 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier136Path = UIBezierPath()
        bezier136Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier136Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier136Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier136Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier136Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier136Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier136Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier136Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier136Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier136Path.close()
        context.saveGState()
        bezier136Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 137 Drawing
        let bezier137Path = UIBezierPath()
        bezier137Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier137Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier137Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier137Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier137Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier137Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier137Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier137Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier137Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier137Path.close()
        context.saveGState()
        bezier137Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 65
        //// Bezier 138 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier138Path = UIBezierPath()
        bezier138Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier138Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier138Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier138Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier138Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier138Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier138Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier138Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier138Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier138Path.close()
        context.saveGState()
        bezier138Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 139 Drawing
        let bezier139Path = UIBezierPath()
        bezier139Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier139Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier139Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier139Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier139Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier139Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier139Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier139Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier139Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier139Path.close()
        context.saveGState()
        bezier139Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 66
        context.saveGState()
        context.translateBy(x: 266.49, y: 40.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 67
        //// Bezier 140 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier140Path = UIBezierPath()
        bezier140Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier140Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier140Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier140Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier140Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier140Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier140Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier140Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier140Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier140Path.close()
        context.saveGState()
        bezier140Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 141 Drawing
        let bezier141Path = UIBezierPath()
        bezier141Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier141Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier141Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier141Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier141Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier141Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier141Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier141Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier141Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier141Path.close()
        context.saveGState()
        bezier141Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 68
        //// Bezier 142 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier142Path = UIBezierPath()
        bezier142Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier142Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier142Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier142Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier142Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier142Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier142Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier142Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier142Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier142Path.close()
        context.saveGState()
        bezier142Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 143 Drawing
        let bezier143Path = UIBezierPath()
        bezier143Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier143Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier143Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier143Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier143Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier143Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier143Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier143Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier143Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier143Path.close()
        context.saveGState()
        bezier143Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 69
        context.saveGState()
        context.translateBy(x: 256.49, y: 46.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.2)



        //// Group 70
        //// Bezier 144 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier144Path = UIBezierPath()
        bezier144Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier144Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier144Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier144Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier144Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier144Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier144Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier144Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier144Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier144Path.close()
        context.saveGState()
        bezier144Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 145 Drawing
        let bezier145Path = UIBezierPath()
        bezier145Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier145Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier145Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier145Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier145Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier145Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier145Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier145Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier145Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier145Path.close()
        context.saveGState()
        bezier145Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 71
        //// Bezier 146 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier146Path = UIBezierPath()
        bezier146Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier146Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier146Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier146Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier146Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier146Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier146Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier146Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier146Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier146Path.close()
        context.saveGState()
        bezier146Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 147 Drawing
        let bezier147Path = UIBezierPath()
        bezier147Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier147Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier147Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier147Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier147Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier147Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier147Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier147Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier147Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier147Path.close()
        context.saveGState()
        bezier147Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 72
        context.saveGState()
        context.translateBy(x: 300.49, y: 56.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 73
        //// Bezier 148 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier148Path = UIBezierPath()
        bezier148Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier148Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier148Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier148Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier148Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier148Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier148Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier148Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier148Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier148Path.close()
        context.saveGState()
        bezier148Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 149 Drawing
        let bezier149Path = UIBezierPath()
        bezier149Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier149Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier149Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier149Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier149Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier149Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier149Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier149Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier149Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier149Path.close()
        context.saveGState()
        bezier149Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 74
        //// Bezier 150 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier150Path = UIBezierPath()
        bezier150Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier150Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier150Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier150Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier150Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier150Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier150Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier150Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier150Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier150Path.close()
        context.saveGState()
        bezier150Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 151 Drawing
        let bezier151Path = UIBezierPath()
        bezier151Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier151Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier151Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier151Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier151Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier151Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier151Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier151Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier151Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier151Path.close()
        context.saveGState()
        bezier151Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 75
        context.saveGState()
        context.translateBy(x: 310.49, y: 22.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 76
        //// Bezier 152 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier152Path = UIBezierPath()
        bezier152Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier152Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier152Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier152Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier152Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier152Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier152Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier152Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier152Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier152Path.close()
        context.saveGState()
        bezier152Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 153 Drawing
        let bezier153Path = UIBezierPath()
        bezier153Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier153Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier153Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier153Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier153Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier153Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier153Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier153Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier153Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier153Path.close()
        context.saveGState()
        bezier153Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 77
        //// Bezier 154 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier154Path = UIBezierPath()
        bezier154Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier154Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier154Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier154Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier154Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier154Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier154Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier154Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier154Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier154Path.close()
        context.saveGState()
        bezier154Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 155 Drawing
        let bezier155Path = UIBezierPath()
        bezier155Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier155Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier155Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier155Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier155Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier155Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier155Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier155Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier155Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier155Path.close()
        context.saveGState()
        bezier155Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 78
        context.saveGState()
        context.translateBy(x: 331.49, y: 32.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 79
        //// Bezier 156 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier156Path = UIBezierPath()
        bezier156Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier156Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier156Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier156Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier156Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier156Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier156Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier156Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier156Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier156Path.close()
        context.saveGState()
        bezier156Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 157 Drawing
        let bezier157Path = UIBezierPath()
        bezier157Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier157Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier157Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier157Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier157Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier157Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier157Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier157Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier157Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier157Path.close()
        context.saveGState()
        bezier157Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 80
        //// Bezier 158 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier158Path = UIBezierPath()
        bezier158Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier158Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier158Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier158Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier158Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier158Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier158Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier158Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier158Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier158Path.close()
        context.saveGState()
        bezier158Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 159 Drawing
        let bezier159Path = UIBezierPath()
        bezier159Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier159Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier159Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier159Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier159Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier159Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier159Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier159Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier159Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier159Path.close()
        context.saveGState()
        bezier159Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 81
        context.saveGState()
        context.translateBy(x: 342.49, y: 49.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 82
        //// Bezier 160 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier160Path = UIBezierPath()
        bezier160Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier160Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier160Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier160Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier160Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier160Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier160Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier160Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier160Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier160Path.close()
        context.saveGState()
        bezier160Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 161 Drawing
        let bezier161Path = UIBezierPath()
        bezier161Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier161Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier161Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier161Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier161Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier161Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier161Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier161Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier161Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier161Path.close()
        context.saveGState()
        bezier161Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 83
        //// Bezier 162 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier162Path = UIBezierPath()
        bezier162Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier162Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier162Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier162Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier162Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier162Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier162Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier162Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier162Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier162Path.close()
        context.saveGState()
        bezier162Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 163 Drawing
        let bezier163Path = UIBezierPath()
        bezier163Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier163Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier163Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier163Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier163Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier163Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier163Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier163Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier163Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier163Path.close()
        context.saveGState()
        bezier163Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 84
        context.saveGState()
        context.translateBy(x: 360.49, y: 58.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 85
        //// Bezier 164 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier164Path = UIBezierPath()
        bezier164Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier164Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier164Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier164Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier164Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier164Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier164Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier164Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier164Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier164Path.close()
        context.saveGState()
        bezier164Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 165 Drawing
        let bezier165Path = UIBezierPath()
        bezier165Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier165Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier165Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier165Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier165Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier165Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier165Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier165Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier165Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier165Path.close()
        context.saveGState()
        bezier165Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 86
        //// Bezier 166 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier166Path = UIBezierPath()
        bezier166Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier166Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier166Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier166Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier166Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier166Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier166Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier166Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier166Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier166Path.close()
        context.saveGState()
        bezier166Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 167 Drawing
        let bezier167Path = UIBezierPath()
        bezier167Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier167Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier167Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier167Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier167Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier167Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier167Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier167Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier167Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier167Path.close()
        context.saveGState()
        bezier167Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 87
        context.saveGState()
        context.translateBy(x: 370.49, y: 20.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 88
        //// Bezier 168 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier168Path = UIBezierPath()
        bezier168Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier168Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier168Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier168Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier168Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier168Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier168Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier168Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier168Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier168Path.close()
        context.saveGState()
        bezier168Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 169 Drawing
        let bezier169Path = UIBezierPath()
        bezier169Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier169Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier169Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier169Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier169Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier169Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier169Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier169Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier169Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier169Path.close()
        context.saveGState()
        bezier169Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 89
        //// Bezier 170 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier170Path = UIBezierPath()
        bezier170Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier170Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier170Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier170Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier170Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier170Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier170Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier170Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier170Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier170Path.close()
        context.saveGState()
        bezier170Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 171 Drawing
        let bezier171Path = UIBezierPath()
        bezier171Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier171Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier171Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier171Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier171Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier171Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier171Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier171Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier171Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier171Path.close()
        context.saveGState()
        bezier171Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 90
        context.saveGState()
        context.translateBy(x: 349.49, y: 20.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 91
        //// Bezier 172 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier172Path = UIBezierPath()
        bezier172Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier172Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier172Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier172Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier172Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier172Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier172Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier172Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier172Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier172Path.close()
        context.saveGState()
        bezier172Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 173 Drawing
        let bezier173Path = UIBezierPath()
        bezier173Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier173Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier173Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier173Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier173Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier173Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier173Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier173Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier173Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier173Path.close()
        context.saveGState()
        bezier173Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 92
        //// Bezier 174 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier174Path = UIBezierPath()
        bezier174Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier174Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier174Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier174Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier174Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier174Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier174Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier174Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier174Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier174Path.close()
        context.saveGState()
        bezier174Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 175 Drawing
        let bezier175Path = UIBezierPath()
        bezier175Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier175Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier175Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier175Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier175Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier175Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier175Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier175Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier175Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier175Path.close()
        context.saveGState()
        bezier175Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 93
        context.saveGState()
        context.translateBy(x: 48.49, y: 30.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.33, y: 0.33)



        //// Group 94
        //// Bezier 176 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier176Path = UIBezierPath()
        bezier176Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier176Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier176Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier176Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier176Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier176Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier176Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier176Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier176Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier176Path.close()
        context.saveGState()
        bezier176Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 177 Drawing
        let bezier177Path = UIBezierPath()
        bezier177Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier177Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier177Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier177Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier177Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier177Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier177Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier177Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier177Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier177Path.close()
        context.saveGState()
        bezier177Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 95
        //// Bezier 178 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier178Path = UIBezierPath()
        bezier178Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier178Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier178Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier178Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier178Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier178Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier178Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier178Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier178Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier178Path.close()
        context.saveGState()
        bezier178Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 179 Drawing
        let bezier179Path = UIBezierPath()
        bezier179Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier179Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier179Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier179Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier179Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier179Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier179Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier179Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier179Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier179Path.close()
        context.saveGState()
        bezier179Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 96
        context.saveGState()
        context.translateBy(x: 31.49, y: 50.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 97
        //// Bezier 180 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier180Path = UIBezierPath()
        bezier180Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier180Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier180Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier180Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier180Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier180Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier180Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier180Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier180Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier180Path.close()
        context.saveGState()
        bezier180Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 181 Drawing
        let bezier181Path = UIBezierPath()
        bezier181Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier181Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier181Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier181Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier181Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier181Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier181Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier181Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier181Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier181Path.close()
        context.saveGState()
        bezier181Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 98
        //// Bezier 182 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier182Path = UIBezierPath()
        bezier182Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier182Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier182Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier182Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier182Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier182Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier182Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier182Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier182Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier182Path.close()
        context.saveGState()
        bezier182Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 183 Drawing
        let bezier183Path = UIBezierPath()
        bezier183Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier183Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier183Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier183Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier183Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier183Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier183Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier183Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier183Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier183Path.close()
        context.saveGState()
        bezier183Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 99
        context.saveGState()
        context.translateBy(x: 26.49, y: 21.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 100
        //// Bezier 184 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier184Path = UIBezierPath()
        bezier184Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier184Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier184Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier184Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier184Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier184Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier184Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier184Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier184Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier184Path.close()
        context.saveGState()
        bezier184Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 185 Drawing
        let bezier185Path = UIBezierPath()
        bezier185Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier185Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier185Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier185Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier185Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier185Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier185Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier185Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier185Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier185Path.close()
        context.saveGState()
        bezier185Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 101
        //// Bezier 186 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier186Path = UIBezierPath()
        bezier186Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier186Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier186Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier186Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier186Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier186Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier186Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier186Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier186Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier186Path.close()
        context.saveGState()
        bezier186Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 187 Drawing
        let bezier187Path = UIBezierPath()
        bezier187Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier187Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier187Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier187Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier187Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier187Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier187Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier187Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier187Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier187Path.close()
        context.saveGState()
        bezier187Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 102
        context.saveGState()
        context.translateBy(x: 62.49, y: 44.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 103
        //// Bezier 188 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier188Path = UIBezierPath()
        bezier188Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier188Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier188Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier188Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier188Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier188Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier188Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier188Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier188Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier188Path.close()
        context.saveGState()
        bezier188Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 189 Drawing
        let bezier189Path = UIBezierPath()
        bezier189Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier189Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier189Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier189Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier189Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier189Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier189Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier189Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier189Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier189Path.close()
        context.saveGState()
        bezier189Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 104
        //// Bezier 190 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier190Path = UIBezierPath()
        bezier190Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier190Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier190Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier190Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier190Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier190Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier190Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier190Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier190Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier190Path.close()
        context.saveGState()
        bezier190Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 191 Drawing
        let bezier191Path = UIBezierPath()
        bezier191Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier191Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier191Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier191Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier191Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier191Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier191Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier191Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier191Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier191Path.close()
        context.saveGState()
        bezier191Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 105
        context.saveGState()
        context.translateBy(x: 133.49, y: 99.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 106
        //// Bezier 192 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier192Path = UIBezierPath()
        bezier192Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier192Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier192Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier192Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier192Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier192Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier192Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier192Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier192Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier192Path.close()
        context.saveGState()
        bezier192Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 193 Drawing
        let bezier193Path = UIBezierPath()
        bezier193Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier193Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier193Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier193Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier193Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier193Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier193Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier193Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier193Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier193Path.close()
        context.saveGState()
        bezier193Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 107
        //// Bezier 194 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier194Path = UIBezierPath()
        bezier194Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier194Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier194Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier194Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier194Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier194Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier194Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier194Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier194Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier194Path.close()
        context.saveGState()
        bezier194Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 195 Drawing
        let bezier195Path = UIBezierPath()
        bezier195Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier195Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier195Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier195Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier195Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier195Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier195Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier195Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier195Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier195Path.close()
        context.saveGState()
        bezier195Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 108
        context.saveGState()
        context.translateBy(x: 199.49, y: 109.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.4)



        //// Group 109
        //// Bezier 196 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier196Path = UIBezierPath()
        bezier196Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier196Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier196Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier196Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier196Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier196Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier196Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier196Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier196Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier196Path.close()
        context.saveGState()
        bezier196Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 197 Drawing
        let bezier197Path = UIBezierPath()
        bezier197Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier197Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier197Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier197Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier197Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier197Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier197Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier197Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier197Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier197Path.close()
        context.saveGState()
        bezier197Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 110
        //// Bezier 198 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier198Path = UIBezierPath()
        bezier198Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier198Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier198Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier198Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier198Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier198Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier198Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier198Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier198Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier198Path.close()
        context.saveGState()
        bezier198Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 199 Drawing
        let bezier199Path = UIBezierPath()
        bezier199Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier199Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier199Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier199Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier199Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier199Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier199Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier199Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier199Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier199Path.close()
        context.saveGState()
        bezier199Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 111
        context.saveGState()
        context.translateBy(x: 238.49, y: 84.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 112
        //// Bezier 200 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier200Path = UIBezierPath()
        bezier200Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier200Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier200Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier200Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier200Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier200Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier200Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier200Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier200Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier200Path.close()
        context.saveGState()
        bezier200Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 201 Drawing
        let bezier201Path = UIBezierPath()
        bezier201Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier201Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier201Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier201Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier201Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier201Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier201Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier201Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier201Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier201Path.close()
        context.saveGState()
        bezier201Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 113
        //// Bezier 202 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier202Path = UIBezierPath()
        bezier202Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier202Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier202Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier202Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier202Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier202Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier202Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier202Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier202Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier202Path.close()
        context.saveGState()
        bezier202Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 203 Drawing
        let bezier203Path = UIBezierPath()
        bezier203Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier203Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier203Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier203Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier203Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier203Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier203Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier203Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier203Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier203Path.close()
        context.saveGState()
        bezier203Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 114
        context.saveGState()
        context.translateBy(x: 171.49, y: 84.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 115
        //// Bezier 204 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier204Path = UIBezierPath()
        bezier204Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier204Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier204Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier204Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier204Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier204Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier204Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier204Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier204Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier204Path.close()
        context.saveGState()
        bezier204Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 205 Drawing
        let bezier205Path = UIBezierPath()
        bezier205Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier205Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier205Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier205Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier205Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier205Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier205Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier205Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier205Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier205Path.close()
        context.saveGState()
        bezier205Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 116
        //// Bezier 206 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier206Path = UIBezierPath()
        bezier206Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier206Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier206Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier206Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier206Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier206Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier206Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier206Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier206Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier206Path.close()
        context.saveGState()
        bezier206Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 207 Drawing
        let bezier207Path = UIBezierPath()
        bezier207Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier207Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier207Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier207Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier207Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier207Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier207Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier207Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier207Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier207Path.close()
        context.saveGState()
        bezier207Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 117
        context.saveGState()
        context.translateBy(x: 59.49, y: 94.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.3)



        //// Group 118
        //// Bezier 208 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier208Path = UIBezierPath()
        bezier208Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier208Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier208Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier208Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier208Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier208Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier208Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier208Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier208Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier208Path.close()
        context.saveGState()
        bezier208Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 209 Drawing
        let bezier209Path = UIBezierPath()
        bezier209Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier209Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier209Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier209Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier209Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier209Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier209Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier209Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier209Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier209Path.close()
        context.saveGState()
        bezier209Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 119
        //// Bezier 210 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier210Path = UIBezierPath()
        bezier210Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier210Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier210Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier210Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier210Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier210Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier210Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier210Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier210Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier210Path.close()
        context.saveGState()
        bezier210Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 211 Drawing
        let bezier211Path = UIBezierPath()
        bezier211Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier211Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier211Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier211Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier211Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier211Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier211Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier211Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier211Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier211Path.close()
        context.saveGState()
        bezier211Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 120
        context.saveGState()
        context.translateBy(x: 18.49, y: 104.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.34, y: 0.34)



        //// Group 121
        //// Bezier 212 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier212Path = UIBezierPath()
        bezier212Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier212Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier212Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier212Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier212Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier212Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier212Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier212Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier212Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier212Path.close()
        context.saveGState()
        bezier212Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 213 Drawing
        let bezier213Path = UIBezierPath()
        bezier213Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier213Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier213Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier213Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier213Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier213Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier213Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier213Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier213Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier213Path.close()
        context.saveGState()
        bezier213Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 122
        //// Bezier 214 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier214Path = UIBezierPath()
        bezier214Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier214Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier214Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier214Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier214Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier214Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier214Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier214Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier214Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier214Path.close()
        context.saveGState()
        bezier214Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 215 Drawing
        let bezier215Path = UIBezierPath()
        bezier215Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier215Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier215Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier215Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier215Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier215Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier215Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier215Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier215Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier215Path.close()
        context.saveGState()
        bezier215Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 123
        context.saveGState()
        context.translateBy(x: 28.49, y: 163.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 124
        //// Bezier 216 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier216Path = UIBezierPath()
        bezier216Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier216Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier216Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier216Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier216Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier216Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier216Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier216Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier216Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier216Path.close()
        context.saveGState()
        bezier216Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 217 Drawing
        let bezier217Path = UIBezierPath()
        bezier217Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier217Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier217Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier217Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier217Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier217Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier217Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier217Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier217Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier217Path.close()
        context.saveGState()
        bezier217Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 125
        //// Bezier 218 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier218Path = UIBezierPath()
        bezier218Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier218Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier218Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier218Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier218Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier218Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier218Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier218Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier218Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier218Path.close()
        context.saveGState()
        bezier218Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 219 Drawing
        let bezier219Path = UIBezierPath()
        bezier219Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier219Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier219Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier219Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier219Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier219Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier219Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier219Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier219Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier219Path.close()
        context.saveGState()
        bezier219Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 126
        context.saveGState()
        context.translateBy(x: 112.49, y: 170.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 127
        //// Bezier 220 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier220Path = UIBezierPath()
        bezier220Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier220Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier220Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier220Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier220Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier220Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier220Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier220Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier220Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier220Path.close()
        context.saveGState()
        bezier220Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 221 Drawing
        let bezier221Path = UIBezierPath()
        bezier221Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier221Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier221Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier221Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier221Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier221Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier221Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier221Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier221Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier221Path.close()
        context.saveGState()
        bezier221Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 128
        //// Bezier 222 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier222Path = UIBezierPath()
        bezier222Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier222Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier222Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier222Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier222Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier222Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier222Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier222Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier222Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier222Path.close()
        context.saveGState()
        bezier222Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 223 Drawing
        let bezier223Path = UIBezierPath()
        bezier223Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier223Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier223Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier223Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier223Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier223Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier223Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier223Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier223Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier223Path.close()
        context.saveGState()
        bezier223Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 129
        context.saveGState()
        context.translateBy(x: 165.49, y: 148.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 130
        //// Bezier 224 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier224Path = UIBezierPath()
        bezier224Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier224Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier224Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier224Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier224Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier224Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier224Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier224Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier224Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier224Path.close()
        context.saveGState()
        bezier224Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 225 Drawing
        let bezier225Path = UIBezierPath()
        bezier225Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier225Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier225Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier225Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier225Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier225Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier225Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier225Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier225Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier225Path.close()
        context.saveGState()
        bezier225Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 131
        //// Bezier 226 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier226Path = UIBezierPath()
        bezier226Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier226Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier226Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier226Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier226Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier226Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier226Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier226Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier226Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier226Path.close()
        context.saveGState()
        bezier226Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 227 Drawing
        let bezier227Path = UIBezierPath()
        bezier227Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier227Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier227Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier227Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier227Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier227Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier227Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier227Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier227Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier227Path.close()
        context.saveGState()
        bezier227Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 132
        context.saveGState()
        context.translateBy(x: 253.49, y: 162.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Group 133
        //// Bezier 228 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier228Path = UIBezierPath()
        bezier228Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier228Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier228Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier228Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier228Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier228Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier228Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier228Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier228Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier228Path.close()
        context.saveGState()
        bezier228Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 229 Drawing
        let bezier229Path = UIBezierPath()
        bezier229Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier229Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier229Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier229Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier229Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier229Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier229Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier229Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier229Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier229Path.close()
        context.saveGState()
        bezier229Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 134
        //// Bezier 230 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier230Path = UIBezierPath()
        bezier230Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier230Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier230Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier230Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier230Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier230Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier230Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier230Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier230Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier230Path.close()
        context.saveGState()
        bezier230Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 231 Drawing
        let bezier231Path = UIBezierPath()
        bezier231Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier231Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier231Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier231Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier231Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier231Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier231Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier231Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier231Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier231Path.close()
        context.saveGState()
        bezier231Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 135
        context.saveGState()
        context.translateBy(x: 326.49, y: 168.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.15, y: 0.15)



        //// Group 136
        //// Bezier 232 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier232Path = UIBezierPath()
        bezier232Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier232Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier232Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier232Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier232Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier232Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier232Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier232Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier232Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier232Path.close()
        context.saveGState()
        bezier232Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 233 Drawing
        let bezier233Path = UIBezierPath()
        bezier233Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier233Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier233Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier233Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier233Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier233Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier233Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier233Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier233Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier233Path.close()
        context.saveGState()
        bezier233Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 137
        //// Bezier 234 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier234Path = UIBezierPath()
        bezier234Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier234Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier234Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier234Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier234Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier234Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier234Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier234Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier234Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier234Path.close()
        context.saveGState()
        bezier234Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 235 Drawing
        let bezier235Path = UIBezierPath()
        bezier235Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier235Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier235Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier235Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier235Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier235Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier235Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier235Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier235Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier235Path.close()
        context.saveGState()
        bezier235Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 138
        context.saveGState()
        context.translateBy(x: 320.49, y: 163.23)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.3)



        //// Group 139
        //// Bezier 236 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier236Path = UIBezierPath()
        bezier236Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier236Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier236Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier236Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier236Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier236Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier236Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier236Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier236Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier236Path.close()
        context.saveGState()
        bezier236Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 237 Drawing
        let bezier237Path = UIBezierPath()
        bezier237Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier237Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier237Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier237Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier237Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier237Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier237Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier237Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier237Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier237Path.close()
        context.saveGState()
        bezier237Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 140
        //// Bezier 238 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier238Path = UIBezierPath()
        bezier238Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier238Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier238Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier238Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier238Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier238Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier238Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier238Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier238Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier238Path.close()
        context.saveGState()
        bezier238Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 239 Drawing
        let bezier239Path = UIBezierPath()
        bezier239Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier239Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier239Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier239Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier239Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier239Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier239Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier239Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier239Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier239Path.close()
        context.saveGState()
        bezier239Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 141
        context.saveGState()
        context.translateBy(x: 226.55, y: 200.16)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Group 142
        //// Bezier 240 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier240Path = UIBezierPath()
        bezier240Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier240Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier240Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier240Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier240Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier240Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier240Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier240Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier240Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier240Path.close()
        context.saveGState()
        bezier240Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 241 Drawing
        let bezier241Path = UIBezierPath()
        bezier241Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier241Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier241Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier241Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier241Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier241Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier241Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier241Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier241Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier241Path.close()
        context.saveGState()
        bezier241Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 143
        //// Bezier 242 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier242Path = UIBezierPath()
        bezier242Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier242Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier242Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier242Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier242Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier242Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier242Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier242Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier242Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier242Path.close()
        context.saveGState()
        bezier242Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 243 Drawing
        let bezier243Path = UIBezierPath()
        bezier243Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier243Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier243Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier243Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier243Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier243Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier243Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier243Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier243Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier243Path.close()
        context.saveGState()
        bezier243Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 147
        context.saveGState()
        context.translateBy(x: 216.72, y: 246.68)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Bezier 246 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: -0)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier246Path = UIBezierPath()
        bezier246Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier246Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier246Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier246Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier246Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier246Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier246Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier246Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier246Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier246Path.close()
        context.saveGState()
        bezier246Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 247 Drawing
        let bezier247Path = UIBezierPath()
        bezier247Path.move(to: CGPoint(x: 24.05, y: 33.21))
        bezier247Path.addCurve(to: CGPoint(x: -0, y: 32.49), controlPoint1: CGPoint(x: 15.97, y: 32.87), controlPoint2: CGPoint(x: -0, y: 32.49))
        bezier247Path.addCurve(to: CGPoint(x: 24.06, y: 31.54), controlPoint1: CGPoint(x: -0, y: 32.49), controlPoint2: CGPoint(x: 15.96, y: 32.11))
        bezier247Path.addCurve(to: CGPoint(x: 32.38, y: 30.2), controlPoint1: CGPoint(x: 32.15, y: 30.96), controlPoint2: CGPoint(x: 30.35, y: 30.16))
        bezier247Path.addCurve(to: CGPoint(x: 41.77, y: 31.44), controlPoint1: CGPoint(x: 34.41, y: 30.25), controlPoint2: CGPoint(x: 32.36, y: 30.97))
        bezier247Path.addCurve(to: CGPoint(x: 70, y: 32.1), controlPoint1: CGPoint(x: 51.17, y: 31.92), controlPoint2: CGPoint(x: 70, y: 32.1))
        bezier247Path.addCurve(to: CGPoint(x: 41.76, y: 32.99), controlPoint1: CGPoint(x: 70, y: 32.1), controlPoint2: CGPoint(x: 51.18, y: 32.56))
        bezier247Path.addCurve(to: CGPoint(x: 32.31, y: 33.84), controlPoint1: CGPoint(x: 32.33, y: 33.43), controlPoint2: CGPoint(x: 34.26, y: 33.91))
        bezier247Path.addCurve(to: CGPoint(x: 24.05, y: 33.21), controlPoint1: CGPoint(x: 30.36, y: 33.77), controlPoint2: CGPoint(x: 32.12, y: 33.54))
        bezier247Path.close()
        context.saveGState()
        bezier247Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 32.17), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 31.83), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// Group 149
        context.saveGState()
        context.translateBy(x: 54.13, y: 228.5)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Bezier 248 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: -0)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier248Path = UIBezierPath()
        bezier248Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier248Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier248Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier248Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier248Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier248Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier248Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier248Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier248Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier248Path.close()
        context.saveGState()
        bezier248Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 249 Drawing
        let bezier249Path = UIBezierPath()
        bezier249Path.move(to: CGPoint(x: 24.05, y: 33.21))
        bezier249Path.addCurve(to: CGPoint(x: -0, y: 32.49), controlPoint1: CGPoint(x: 15.97, y: 32.87), controlPoint2: CGPoint(x: -0, y: 32.49))
        bezier249Path.addCurve(to: CGPoint(x: 24.06, y: 31.54), controlPoint1: CGPoint(x: -0, y: 32.49), controlPoint2: CGPoint(x: 15.96, y: 32.11))
        bezier249Path.addCurve(to: CGPoint(x: 32.38, y: 30.2), controlPoint1: CGPoint(x: 32.15, y: 30.96), controlPoint2: CGPoint(x: 30.35, y: 30.16))
        bezier249Path.addCurve(to: CGPoint(x: 41.77, y: 31.44), controlPoint1: CGPoint(x: 34.41, y: 30.25), controlPoint2: CGPoint(x: 32.36, y: 30.97))
        bezier249Path.addCurve(to: CGPoint(x: 70, y: 32.1), controlPoint1: CGPoint(x: 51.17, y: 31.92), controlPoint2: CGPoint(x: 70, y: 32.1))
        bezier249Path.addCurve(to: CGPoint(x: 41.76, y: 32.99), controlPoint1: CGPoint(x: 70, y: 32.1), controlPoint2: CGPoint(x: 51.18, y: 32.56))
        bezier249Path.addCurve(to: CGPoint(x: 32.31, y: 33.84), controlPoint1: CGPoint(x: 32.33, y: 33.43), controlPoint2: CGPoint(x: 34.26, y: 33.91))
        bezier249Path.addCurve(to: CGPoint(x: 24.05, y: 33.21), controlPoint1: CGPoint(x: 30.36, y: 33.77), controlPoint2: CGPoint(x: 32.12, y: 33.54))
        bezier249Path.close()
        context.saveGState()
        bezier249Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 32.17), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 31.83), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// Group 152
        context.saveGState()
        context.translateBy(x: 77.81, y: 226.19)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.4, y: 0.4)



        //// Bezier 252 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: -0)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier252Path = UIBezierPath()
        bezier252Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier252Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier252Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier252Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier252Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier252Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier252Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier252Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier252Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier252Path.close()
        context.saveGState()
        bezier252Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 253 Drawing
        let bezier253Path = UIBezierPath()
        bezier253Path.move(to: CGPoint(x: 24.05, y: 33.21))
        bezier253Path.addCurve(to: CGPoint(x: -0, y: 32.49), controlPoint1: CGPoint(x: 15.97, y: 32.87), controlPoint2: CGPoint(x: -0, y: 32.49))
        bezier253Path.addCurve(to: CGPoint(x: 24.06, y: 31.54), controlPoint1: CGPoint(x: -0, y: 32.49), controlPoint2: CGPoint(x: 15.96, y: 32.11))
        bezier253Path.addCurve(to: CGPoint(x: 32.38, y: 30.2), controlPoint1: CGPoint(x: 32.15, y: 30.96), controlPoint2: CGPoint(x: 30.35, y: 30.16))
        bezier253Path.addCurve(to: CGPoint(x: 41.77, y: 31.44), controlPoint1: CGPoint(x: 34.41, y: 30.25), controlPoint2: CGPoint(x: 32.36, y: 30.97))
        bezier253Path.addCurve(to: CGPoint(x: 70, y: 32.1), controlPoint1: CGPoint(x: 51.17, y: 31.92), controlPoint2: CGPoint(x: 70, y: 32.1))
        bezier253Path.addCurve(to: CGPoint(x: 41.76, y: 32.99), controlPoint1: CGPoint(x: 70, y: 32.1), controlPoint2: CGPoint(x: 51.18, y: 32.56))
        bezier253Path.addCurve(to: CGPoint(x: 32.31, y: 33.84), controlPoint1: CGPoint(x: 32.33, y: 33.43), controlPoint2: CGPoint(x: 34.26, y: 33.91))
        bezier253Path.addCurve(to: CGPoint(x: 24.05, y: 33.21), controlPoint1: CGPoint(x: 30.36, y: 33.77), controlPoint2: CGPoint(x: 32.12, y: 33.54))
        bezier253Path.close()
        context.saveGState()
        bezier253Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 32.17), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 31.83), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// Group 154
        context.saveGState()
        context.translateBy(x: 64.82, y: 166.38)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.3)



        //// Bezier 254 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: -0)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier254Path = UIBezierPath()
        bezier254Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier254Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier254Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier254Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier254Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier254Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier254Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier254Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier254Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier254Path.close()
        context.saveGState()
        bezier254Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 255 Drawing
        let bezier255Path = UIBezierPath()
        bezier255Path.move(to: CGPoint(x: 24.05, y: 33.21))
        bezier255Path.addCurve(to: CGPoint(x: -0, y: 32.49), controlPoint1: CGPoint(x: 15.97, y: 32.87), controlPoint2: CGPoint(x: -0, y: 32.49))
        bezier255Path.addCurve(to: CGPoint(x: 24.06, y: 31.54), controlPoint1: CGPoint(x: -0, y: 32.49), controlPoint2: CGPoint(x: 15.96, y: 32.11))
        bezier255Path.addCurve(to: CGPoint(x: 32.38, y: 30.2), controlPoint1: CGPoint(x: 32.15, y: 30.96), controlPoint2: CGPoint(x: 30.35, y: 30.16))
        bezier255Path.addCurve(to: CGPoint(x: 41.77, y: 31.44), controlPoint1: CGPoint(x: 34.41, y: 30.25), controlPoint2: CGPoint(x: 32.36, y: 30.97))
        bezier255Path.addCurve(to: CGPoint(x: 70, y: 32.1), controlPoint1: CGPoint(x: 51.17, y: 31.92), controlPoint2: CGPoint(x: 70, y: 32.1))
        bezier255Path.addCurve(to: CGPoint(x: 41.76, y: 32.99), controlPoint1: CGPoint(x: 70, y: 32.1), controlPoint2: CGPoint(x: 51.18, y: 32.56))
        bezier255Path.addCurve(to: CGPoint(x: 32.31, y: 33.84), controlPoint1: CGPoint(x: 32.33, y: 33.43), controlPoint2: CGPoint(x: 34.26, y: 33.91))
        bezier255Path.addCurve(to: CGPoint(x: 24.05, y: 33.21), controlPoint1: CGPoint(x: 30.36, y: 33.77), controlPoint2: CGPoint(x: 32.12, y: 33.54))
        bezier255Path.close()
        context.saveGState()
        bezier255Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 32.17), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 31.83), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// Group 156
        context.saveGState()
        context.translateBy(x: 23.74, y: 215.81)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Bezier 256 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: -0)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier256Path = UIBezierPath()
        bezier256Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier256Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier256Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier256Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier256Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier256Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier256Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier256Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier256Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier256Path.close()
        context.saveGState()
        bezier256Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 257 Drawing
        let bezier257Path = UIBezierPath()
        bezier257Path.move(to: CGPoint(x: 24.05, y: 33.21))
        bezier257Path.addCurve(to: CGPoint(x: -0, y: 32.49), controlPoint1: CGPoint(x: 15.97, y: 32.87), controlPoint2: CGPoint(x: -0, y: 32.49))
        bezier257Path.addCurve(to: CGPoint(x: 24.06, y: 31.54), controlPoint1: CGPoint(x: -0, y: 32.49), controlPoint2: CGPoint(x: 15.96, y: 32.11))
        bezier257Path.addCurve(to: CGPoint(x: 32.38, y: 30.2), controlPoint1: CGPoint(x: 32.15, y: 30.96), controlPoint2: CGPoint(x: 30.35, y: 30.16))
        bezier257Path.addCurve(to: CGPoint(x: 41.77, y: 31.44), controlPoint1: CGPoint(x: 34.41, y: 30.25), controlPoint2: CGPoint(x: 32.36, y: 30.97))
        bezier257Path.addCurve(to: CGPoint(x: 70, y: 32.1), controlPoint1: CGPoint(x: 51.17, y: 31.92), controlPoint2: CGPoint(x: 70, y: 32.1))
        bezier257Path.addCurve(to: CGPoint(x: 41.76, y: 32.99), controlPoint1: CGPoint(x: 70, y: 32.1), controlPoint2: CGPoint(x: 51.18, y: 32.56))
        bezier257Path.addCurve(to: CGPoint(x: 32.31, y: 33.84), controlPoint1: CGPoint(x: 32.33, y: 33.43), controlPoint2: CGPoint(x: 34.26, y: 33.91))
        bezier257Path.addCurve(to: CGPoint(x: 24.05, y: 33.21), controlPoint1: CGPoint(x: 30.36, y: 33.77), controlPoint2: CGPoint(x: 32.12, y: 33.54))
        bezier257Path.close()
        context.saveGState()
        bezier257Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 32.17), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 31.83), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()


        //// Group 158
        context.saveGState()
        context.translateBy(x: 352.34, y: 263.62)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Bezier 258 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: -0)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier258Path = UIBezierPath()
        bezier258Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier258Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier258Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier258Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier258Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier258Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier258Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier258Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier258Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier258Path.close()
        context.saveGState()
        bezier258Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 259 Drawing
        let bezier259Path = UIBezierPath()
        bezier259Path.move(to: CGPoint(x: 24.05, y: 33.21))
        bezier259Path.addCurve(to: CGPoint(x: -0, y: 32.49), controlPoint1: CGPoint(x: 15.97, y: 32.87), controlPoint2: CGPoint(x: -0, y: 32.49))
        bezier259Path.addCurve(to: CGPoint(x: 24.06, y: 31.54), controlPoint1: CGPoint(x: -0, y: 32.49), controlPoint2: CGPoint(x: 15.96, y: 32.11))
        bezier259Path.addCurve(to: CGPoint(x: 32.38, y: 30.2), controlPoint1: CGPoint(x: 32.15, y: 30.96), controlPoint2: CGPoint(x: 30.35, y: 30.16))
        bezier259Path.addCurve(to: CGPoint(x: 41.77, y: 31.44), controlPoint1: CGPoint(x: 34.41, y: 30.25), controlPoint2: CGPoint(x: 32.36, y: 30.97))
        bezier259Path.addCurve(to: CGPoint(x: 70, y: 32.1), controlPoint1: CGPoint(x: 51.17, y: 31.92), controlPoint2: CGPoint(x: 70, y: 32.1))
        bezier259Path.addCurve(to: CGPoint(x: 41.76, y: 32.99), controlPoint1: CGPoint(x: 70, y: 32.1), controlPoint2: CGPoint(x: 51.18, y: 32.56))
        bezier259Path.addCurve(to: CGPoint(x: 32.31, y: 33.84), controlPoint1: CGPoint(x: 32.33, y: 33.43), controlPoint2: CGPoint(x: 34.26, y: 33.91))
        bezier259Path.addCurve(to: CGPoint(x: 24.05, y: 33.21), controlPoint1: CGPoint(x: 30.36, y: 33.77), controlPoint2: CGPoint(x: 32.12, y: 33.54))
        bezier259Path.close()
        context.saveGState()
        bezier259Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 32.17), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 31.83), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawCommonScreen_55(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 736), resizing: ResizingBehavior = .aspectFit, starBlink: CGFloat = 0, tubeOvalOffset: CGFloat = 0.25) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 736), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 736)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 414, resizedFrame.height / 736)


        //// Color Declarations
        let bezierGradientColor = UIColor(red: 0.071, green: 0.086, blue: 1.000, alpha: 1.000)
        let bezierGradientColor5 = UIColor(red: 0.192, green: 1.000, blue: 0.953, alpha: 1.000)
        let paint0_linear3Color3 = UIColor(red: 0.033, green: 0.360, blue: 0.892, alpha: 1.000)
        let paint0_linear3Color2 = UIColor(red: 0.122, green: 0.071, blue: 0.349, alpha: 1.000)
        let paint0_linear3Color = UIColor(red: 0.054, green: 0.296, blue: 0.844, alpha: 1.000)
        let gradientColor23 = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1.000)
        let gradient2Color2 = UIColor(red: 0.063, green: 0.105, blue: 0.324, alpha: 1.000)
        let gradient2Color3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.000)
        let gradient2Color = UIColor(red: 0.098, green: 0.121, blue: 0.857, alpha: 1.000)
        let gradientColor24 = UIColor(red: 0.004, green: 0.004, blue: 0.004, alpha: 1.000)
        let starGradient2Color3 = UIColor(red: 0.025, green: 0.231, blue: 0.909, alpha: 1.000)
        let starGradientColor = UIColor(red: 0.136, green: 0.000, blue: 1.000, alpha: 0.000)
        let gradient3Color5 = UIColor(red: 0.118, green: 0.110, blue: 0.463, alpha: 1.000)
        let gradient3Color4 = UIColor(red: 0.129, green: 0.153, blue: 0.604, alpha: 1.000)
        let gradient3Color3 = UIColor(red: 0.180, green: 0.180, blue: 0.796, alpha: 1.000)
        let gradient3Color = UIColor(red: 0.525, green: 0.557, blue: 0.953, alpha: 1.000)
        let gradient3Color2 = UIColor(red: 0.267, green: 0.247, blue: 0.910, alpha: 1.000)
        let plane_picture_shadow_2 = UIColor(red: 0.000, green: 0.696, blue: 1.000, alpha: 1.000)
        let starGradient2Color = UIColor(red: 0.160, green: 0.042, blue: 0.907, alpha: 0.000)
        let fillColor15 = UIColor(red: 1.000, green: 0.000, blue: 0.647, alpha: 1.000)
        let bkgLightsColor2 = UIColor(red: 0.051, green: 0.031, blue: 0.243, alpha: 1.000)
        let bkgLightsColor = UIColor(red: 0.043, green: 0.075, blue: 0.788, alpha: 1.000)
        let bkgLightsColor3 = UIColor(red: 0.051, green: 0.031, blue: 0.243, alpha: 1.000)

        //// Gradient Declarations
        let bezierGradient = CGGradient(colorsSpace: nil, colors: [bezierGradientColor.cgColor, bezierGradientColor5.cgColor, bezierGradientColor.cgColor] as CFArray, locations: [0, 0.5, 1])!
        let paint0_linear3 = CGGradient(colorsSpace: nil, colors: [paint0_linear3Color3.cgColor, paint0_linear3Color3.blended(withFraction: 0.5, of: paint0_linear3Color).cgColor, paint0_linear3Color.cgColor, paint0_linear3Color2.cgColor] as CFArray, locations: [0, 0.06, 0.17, 1])!
        let gradient2 = CGGradient(colorsSpace: nil, colors: [gradientColor23.cgColor, gradient2Color.cgColor, gradient2Color2.cgColor, gradient2Color2.blended(withFraction: 0.5, of: gradientColor24).cgColor, gradientColor24.cgColor, gradient2Color3.cgColor] as CFArray, locations: [0, 0.03, 0.18, 0.27, 0.69, 0.96])!
        let starGradient = CGGradient(colorsSpace: nil, colors: [gradientColor23.cgColor, gradient3Color.cgColor, gradient3Color2.cgColor, gradient3Color3.cgColor, gradient3Color3.blended(withFraction: 0.5, of: gradient3Color4).cgColor, gradient3Color4.cgColor, gradient3Color5.cgColor, gradient3Color5.blended(withFraction: 0.5, of: starGradientColor).cgColor, starGradientColor.cgColor] as CFArray, locations: [0, 0.02, 0.04, 0.06, 0.07, 0.09, 0.12, 0.46, 1])!
        let starGradient2 = CGGradient(colorsSpace: nil, colors: [gradientColor23.cgColor, gradient3Color.cgColor, starGradient2Color3.cgColor, starGradient2Color.cgColor] as CFArray, locations: [0, 0.02, 0.11, 1])!
        let bkgLights = CGGradient(colorsSpace: nil, colors: [bkgLightsColor.cgColor, bkgLightsColor.blended(withFraction: 0.5, of: bkgLightsColor3).cgColor, bkgLightsColor3.cgColor, bkgLightsColor2.cgColor] as CFArray, locations: [0, 0.25, 0.47, 1])!

        //// Shadow Declarations
        let shadow2 = NSShadow()
        shadow2.shadowColor = UIColor.black
        shadow2.shadowOffset = CGSize(width: 3, height: 4)
        shadow2.shadowBlurRadius = 5

        //// Variable Declarations
        let star5Expr: CGFloat = starBlink < 0.25 || starBlink > 0.8 - tubeOvalOffset ? 0 : (starBlink > 0.25 && starBlink <= 0.3 ? (starBlink - 0.25) * 20 : (starBlink > 0.75 - tubeOvalOffset && starBlink <= 0.8 - tubeOvalOffset ? (0.8 - tubeOvalOffset - starBlink) * 20 : 1))
        let star4Expr: CGFloat = starBlink < 0.2 || starBlink > 0.75 - tubeOvalOffset ? 0 : (starBlink > 0.2 && starBlink <= 0.25 ? (starBlink - 0.2) * 20 : (starBlink > 0.7 - tubeOvalOffset && starBlink <= 0.75 - tubeOvalOffset ? (0.75 - tubeOvalOffset - starBlink) * 20 : 1))
        let star3Expr: CGFloat = starBlink < 0.15 || starBlink > 0.7 - tubeOvalOffset ? 0 : (starBlink > 0.15 && starBlink <= 0.2 ? (starBlink - 0.15) * 20 : (starBlink > 0.65 - tubeOvalOffset && starBlink <= 0.7 - tubeOvalOffset ? (0.7 - tubeOvalOffset - starBlink) * 20 : 1))

        //// Rectangle 22 Drawing
        let rectangle22Path = UIBezierPath(rect: CGRect(x: -1.04, y: 135.05, width: 415, height: 661.81))
        context.saveGState()
        rectangle22Path.addClip()
        context.drawLinearGradient(bkgLights, start: CGPoint(x: 206.46, y: 135.05), end: CGPoint(x: 206.46, y: 796.86), options: [])
        context.restoreGState()


        //// Bezier 56 Drawing
        let bezier56Path = UIBezierPath()
        bezier56Path.move(to: CGPoint(x: 414.41, y: 216.64))
        bezier56Path.addCurve(to: CGPoint(x: 398.55, y: 236.92), controlPoint1: CGPoint(x: 414.41, y: 216.64), controlPoint2: CGPoint(x: 417.73, y: 236.13))
        bezier56Path.addCurve(to: CGPoint(x: 365, y: 171.81), controlPoint1: CGPoint(x: 378.4, y: 238.42), controlPoint2: CGPoint(x: 377.94, y: 191.85))
        bezier56Path.addCurve(to: CGPoint(x: 327.8, y: 133.88), controlPoint1: CGPoint(x: 355.29, y: 146.64), controlPoint2: CGPoint(x: 342.48, y: 134.65))
        bezier56Path.addCurve(to: CGPoint(x: 247.86, y: 217.06), controlPoint1: CGPoint(x: 282.75, y: 134.53), controlPoint2: CGPoint(x: 280.53, y: 217.06))
        bezier56Path.addCurve(to: CGPoint(x: 186.66, y: 178.43), controlPoint1: CGPoint(x: 215.18, y: 217.06), controlPoint2: CGPoint(x: 194.58, y: 182.5))
        bezier56Path.addCurve(to: CGPoint(x: 143.75, y: 174.3), controlPoint1: CGPoint(x: 176.38, y: 169.69), controlPoint2: CGPoint(x: 170.59, y: 165.29))
        bezier56Path.addCurve(to: CGPoint(x: 93.04, y: 207.95), controlPoint1: CGPoint(x: 126.85, y: 180.9), controlPoint2: CGPoint(x: 110.21, y: 201.03))
        bezier56Path.addCurve(to: CGPoint(x: 49.11, y: 208.83), controlPoint1: CGPoint(x: 78.07, y: 213.98), controlPoint2: CGPoint(x: 63.98, y: 210.8))
        bezier56Path.addCurve(to: CGPoint(x: 0.32, y: 195.46), controlPoint1: CGPoint(x: 27.88, y: 206.02), controlPoint2: CGPoint(x: 0.32, y: 195.46))
        bezier56Path.addLine(to: CGPoint(x: 0.09, y: -0.99))
        bezier56Path.addLine(to: CGPoint(x: 414.88, y: -0.99))
        bezier56Path.addLine(to: CGPoint(x: 414.41, y: 216.64))
        bezier56Path.close()
        context.saveGState()
        bezier56Path.addClip()
        context.drawLinearGradient(paint0_linear3, start: CGPoint(x: 197.51, y: 222.56), end: CGPoint(x: 218.57, y: -18.17), options: [])
        context.restoreGState()


        //// Stars Group
        //// Group 22
        context.saveGState()
        context.translateBy(x: 220.11, y: 8.22)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 80 Drawing
        let bezier80Path = UIBezierPath()
        bezier80Path.move(to: CGPoint(x: -9.09, y: 11.06))
        bezier80Path.addCurve(to: CGPoint(x: -34.99, y: 10.62), controlPoint1: CGPoint(x: -17.79, y: 10.85), controlPoint2: CGPoint(x: -34.99, y: 10.62))
        bezier80Path.addCurve(to: CGPoint(x: -9.08, y: 10.03), controlPoint1: CGPoint(x: -34.99, y: 10.62), controlPoint2: CGPoint(x: -17.8, y: 10.38))
        bezier80Path.addCurve(to: CGPoint(x: -0.12, y: 9.2), controlPoint1: CGPoint(x: -0.36, y: 9.67), controlPoint2: CGPoint(x: -2.31, y: 9.18))
        bezier80Path.addCurve(to: CGPoint(x: 9.99, y: 9.97), controlPoint1: CGPoint(x: 2.07, y: 9.23), controlPoint2: CGPoint(x: -0.14, y: 9.67))
        bezier80Path.addCurve(to: CGPoint(x: 40.4, y: 10.38), controlPoint1: CGPoint(x: 20.12, y: 10.26), controlPoint2: CGPoint(x: 40.4, y: 10.38))
        bezier80Path.addCurve(to: CGPoint(x: 9.98, y: 10.93), controlPoint1: CGPoint(x: 40.4, y: 10.38), controlPoint2: CGPoint(x: 20.13, y: 10.66))
        bezier80Path.addCurve(to: CGPoint(x: -0.19, y: 11.45), controlPoint1: CGPoint(x: -0.17, y: 11.2), controlPoint2: CGPoint(x: 1.91, y: 11.5))
        bezier80Path.addCurve(to: CGPoint(x: -9.09, y: 11.06), controlPoint1: CGPoint(x: -2.29, y: 11.41), controlPoint2: CGPoint(x: -0.39, y: 11.27))
        bezier80Path.close()
        context.saveGState()
        bezier80Path.addClip()
        context.drawRadialGradient(gradient2,
            startCenter: CGPoint(x: -0.18, y: 10.43), startRadius: 0.2,
            endCenter: CGPoint(x: 0.77, y: 10.13), endRadius: 61.23,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 81 Drawing
        context.saveGState()
        context.setAlpha(star5Expr)
        context.setBlendMode(.color)

        let bezier81Path = UIBezierPath()
        bezier81Path.move(to: CGPoint(x: -8.39, y: 11.07))
        bezier81Path.addCurve(to: CGPoint(x: -34.29, y: 10.63), controlPoint1: CGPoint(x: -17.09, y: 10.87), controlPoint2: CGPoint(x: -34.29, y: 10.63))
        bezier81Path.addCurve(to: CGPoint(x: -8.38, y: 10.04), controlPoint1: CGPoint(x: -34.29, y: 10.63), controlPoint2: CGPoint(x: -17.1, y: 10.4))
        bezier81Path.addCurve(to: CGPoint(x: 0.58, y: 9.22), controlPoint1: CGPoint(x: 0.34, y: 9.69), controlPoint2: CGPoint(x: -1.6, y: 9.19))
        bezier81Path.addCurve(to: CGPoint(x: 10.69, y: 9.98), controlPoint1: CGPoint(x: 2.77, y: 9.24), controlPoint2: CGPoint(x: 0.56, y: 9.69))
        bezier81Path.addCurve(to: CGPoint(x: 41.1, y: 10.39), controlPoint1: CGPoint(x: 20.82, y: 10.28), controlPoint2: CGPoint(x: 41.1, y: 10.39))
        bezier81Path.addCurve(to: CGPoint(x: 10.68, y: 10.94), controlPoint1: CGPoint(x: 41.1, y: 10.39), controlPoint2: CGPoint(x: 20.83, y: 10.67))
        bezier81Path.addCurve(to: CGPoint(x: 0.51, y: 11.47), controlPoint1: CGPoint(x: 0.53, y: 11.21), controlPoint2: CGPoint(x: 2.61, y: 11.51))
        bezier81Path.addCurve(to: CGPoint(x: -8.39, y: 11.07), controlPoint1: CGPoint(x: -1.59, y: 11.43), controlPoint2: CGPoint(x: 0.31, y: 11.28))
        bezier81Path.close()
        plane_picture_shadow_2.setFill()
        bezier81Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 23
        context.saveGState()
        context.translateBy(x: 89.86, y: 48.29)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 82 Drawing
        let bezier82Path = UIBezierPath()
        bezier82Path.move(to: CGPoint(x: -77.33, y: 1.9))
        bezier82Path.addCurve(to: CGPoint(x: -105.98, y: 1.18), controlPoint1: CGPoint(x: -86.96, y: 1.56), controlPoint2: CGPoint(x: -105.98, y: 1.18))
        bezier82Path.addCurve(to: CGPoint(x: -77.32, y: 0.23), controlPoint1: CGPoint(x: -105.98, y: 1.18), controlPoint2: CGPoint(x: -86.96, y: 0.8))
        bezier82Path.addCurve(to: CGPoint(x: -67.41, y: -1.1), controlPoint1: CGPoint(x: -67.68, y: -0.34), controlPoint2: CGPoint(x: -69.83, y: -1.15))
        bezier82Path.addCurve(to: CGPoint(x: -56.23, y: 0.13), controlPoint1: CGPoint(x: -64.99, y: -1.06), controlPoint2: CGPoint(x: -67.43, y: -0.34))
        bezier82Path.addCurve(to: CGPoint(x: -22.6, y: 0.79), controlPoint1: CGPoint(x: -45.03, y: 0.61), controlPoint2: CGPoint(x: -22.6, y: 0.79))
        bezier82Path.addCurve(to: CGPoint(x: -56.24, y: 1.68), controlPoint1: CGPoint(x: -22.6, y: 0.79), controlPoint2: CGPoint(x: -45.02, y: 1.25))
        bezier82Path.addCurve(to: CGPoint(x: -67.49, y: 2.53), controlPoint1: CGPoint(x: -67.46, y: 2.12), controlPoint2: CGPoint(x: -65.17, y: 2.6))
        bezier82Path.addCurve(to: CGPoint(x: -77.33, y: 1.9), controlPoint1: CGPoint(x: -69.81, y: 2.47), controlPoint2: CGPoint(x: -67.71, y: 2.23))
        bezier82Path.close()
        context.saveGState()
        bezier82Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: -67.47, y: 0.82), startRadius: 0.22,
            endCenter: CGPoint(x: -66.43, y: 0.5), endRadius: 67.75,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 83 Drawing
        context.saveGState()
        context.setAlpha(star4Expr)
        context.setBlendMode(.color)

        let bezier83Path = UIBezierPath()
        bezier83Path.move(to: CGPoint(x: -77.4, y: 1.9))
        bezier83Path.addCurve(to: CGPoint(x: -106.04, y: 1.19), controlPoint1: CGPoint(x: -87.02, y: 1.56), controlPoint2: CGPoint(x: -106.04, y: 1.19))
        bezier83Path.addCurve(to: CGPoint(x: -77.39, y: 0.23), controlPoint1: CGPoint(x: -106.04, y: 1.19), controlPoint2: CGPoint(x: -87.03, y: 0.8))
        bezier83Path.addCurve(to: CGPoint(x: -67.48, y: -1.1), controlPoint1: CGPoint(x: -67.75, y: -0.34), controlPoint2: CGPoint(x: -69.9, y: -1.14))
        bezier83Path.addCurve(to: CGPoint(x: -56.3, y: 0.14), controlPoint1: CGPoint(x: -65.06, y: -1.06), controlPoint2: CGPoint(x: -67.5, y: -0.34))
        bezier83Path.addCurve(to: CGPoint(x: -22.66, y: 0.8), controlPoint1: CGPoint(x: -45.09, y: 0.61), controlPoint2: CGPoint(x: -22.66, y: 0.8))
        bezier83Path.addCurve(to: CGPoint(x: -56.31, y: 1.69), controlPoint1: CGPoint(x: -22.66, y: 0.8), controlPoint2: CGPoint(x: -45.08, y: 1.25))
        bezier83Path.addCurve(to: CGPoint(x: -67.56, y: 2.54), controlPoint1: CGPoint(x: -67.53, y: 2.12), controlPoint2: CGPoint(x: -65.23, y: 2.61))
        bezier83Path.addCurve(to: CGPoint(x: -77.4, y: 1.9), controlPoint1: CGPoint(x: -69.88, y: 2.47), controlPoint2: CGPoint(x: -67.78, y: 2.24))
        bezier83Path.close()
        fillColor15.setFill()
        bezier83Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 24
        context.saveGState()
        context.translateBy(x: 101.25, y: 113.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 25
        //// Bezier 84 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -115.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier84Path = UIBezierPath()
        bezier84Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier84Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier84Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier84Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier84Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier84Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier84Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier84Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier84Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier84Path.close()
        context.saveGState()
        bezier84Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 85 Drawing
        let bezier85Path = UIBezierPath()
        bezier85Path.move(to: CGPoint(x: 5.41, y: -82.15))
        bezier85Path.addCurve(to: CGPoint(x: -18.64, y: -82.87), controlPoint1: CGPoint(x: -2.67, y: -82.49), controlPoint2: CGPoint(x: -18.64, y: -82.87))
        bezier85Path.addCurve(to: CGPoint(x: 5.42, y: -83.82), controlPoint1: CGPoint(x: -18.64, y: -82.87), controlPoint2: CGPoint(x: -2.67, y: -83.25))
        bezier85Path.addCurve(to: CGPoint(x: 13.74, y: -85.15), controlPoint1: CGPoint(x: 13.51, y: -84.39), controlPoint2: CGPoint(x: 11.71, y: -85.2))
        bezier85Path.addCurve(to: CGPoint(x: 23.13, y: -83.91), controlPoint1: CGPoint(x: 15.77, y: -85.11), controlPoint2: CGPoint(x: 13.72, y: -84.39))
        bezier85Path.addCurve(to: CGPoint(x: 51.36, y: -83.25), controlPoint1: CGPoint(x: 32.53, y: -83.44), controlPoint2: CGPoint(x: 51.36, y: -83.25))
        bezier85Path.addCurve(to: CGPoint(x: 23.12, y: -82.37), controlPoint1: CGPoint(x: 51.36, y: -83.25), controlPoint2: CGPoint(x: 32.54, y: -82.8))
        bezier85Path.addCurve(to: CGPoint(x: 13.67, y: -81.51), controlPoint1: CGPoint(x: 13.7, y: -81.93), controlPoint2: CGPoint(x: 15.62, y: -81.44))
        bezier85Path.addCurve(to: CGPoint(x: 5.41, y: -82.15), controlPoint1: CGPoint(x: 11.73, y: -81.58), controlPoint2: CGPoint(x: 13.49, y: -81.81))
        bezier85Path.close()
        context.saveGState()
        bezier85Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -83.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -83.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 26
        //// Bezier 86 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -115.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier86Path = UIBezierPath()
        bezier86Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier86Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier86Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier86Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier86Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier86Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier86Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier86Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier86Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier86Path.close()
        context.saveGState()
        bezier86Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 87 Drawing
        let bezier87Path = UIBezierPath()
        bezier87Path.move(to: CGPoint(x: 5.68, y: -82.31))
        bezier87Path.addCurve(to: CGPoint(x: -18.37, y: -83.03), controlPoint1: CGPoint(x: -2.4, y: -82.65), controlPoint2: CGPoint(x: -18.37, y: -83.03))
        bezier87Path.addCurve(to: CGPoint(x: 5.69, y: -83.98), controlPoint1: CGPoint(x: -18.37, y: -83.03), controlPoint2: CGPoint(x: -2.41, y: -83.41))
        bezier87Path.addCurve(to: CGPoint(x: 14.01, y: -85.31), controlPoint1: CGPoint(x: 13.78, y: -84.55), controlPoint2: CGPoint(x: 11.98, y: -85.35))
        bezier87Path.addCurve(to: CGPoint(x: 23.39, y: -84.07), controlPoint1: CGPoint(x: 16.04, y: -85.27), controlPoint2: CGPoint(x: 13.99, y: -84.55))
        bezier87Path.addCurve(to: CGPoint(x: 51.63, y: -83.41), controlPoint1: CGPoint(x: 32.8, y: -83.6), controlPoint2: CGPoint(x: 51.63, y: -83.41))
        bezier87Path.addCurve(to: CGPoint(x: 23.39, y: -82.52), controlPoint1: CGPoint(x: 51.63, y: -83.41), controlPoint2: CGPoint(x: 32.81, y: -82.96))
        bezier87Path.addCurve(to: CGPoint(x: 13.94, y: -81.67), controlPoint1: CGPoint(x: 13.96, y: -82.09), controlPoint2: CGPoint(x: 15.89, y: -81.6))
        bezier87Path.addCurve(to: CGPoint(x: 5.68, y: -82.31), controlPoint1: CGPoint(x: 11.99, y: -81.74), controlPoint2: CGPoint(x: 13.75, y: -81.97))
        bezier87Path.close()
        context.saveGState()
        bezier87Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -83.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -83.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 27
        context.saveGState()
        context.translateBy(x: 305.25, y: 103.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 28
        //// Bezier 88 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: 22.89)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier88Path = UIBezierPath()
        bezier88Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier88Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier88Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier88Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier88Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier88Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier88Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier88Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier88Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier88Path.close()
        context.saveGState()
        bezier88Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 34.81, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 35.76, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 89 Drawing
        let bezier89Path = UIBezierPath()
        bezier89Path.move(to: CGPoint(x: -9.09, y: 58.9))
        bezier89Path.addCurve(to: CGPoint(x: -34.98, y: 58.18), controlPoint1: CGPoint(x: -17.79, y: 58.56), controlPoint2: CGPoint(x: -34.98, y: 58.18))
        bezier89Path.addCurve(to: CGPoint(x: -9.07, y: 57.23), controlPoint1: CGPoint(x: -34.98, y: 58.18), controlPoint2: CGPoint(x: -17.79, y: 57.8))
        bezier89Path.addCurve(to: CGPoint(x: -0.11, y: 55.9), controlPoint1: CGPoint(x: -0.36, y: 56.66), controlPoint2: CGPoint(x: -2.3, y: 55.85))
        bezier89Path.addCurve(to: CGPoint(x: 10, y: 57.13), controlPoint1: CGPoint(x: 2.07, y: 55.94), controlPoint2: CGPoint(x: -0.13, y: 56.66))
        bezier89Path.addCurve(to: CGPoint(x: 40.4, y: 57.79), controlPoint1: CGPoint(x: 20.13, y: 57.61), controlPoint2: CGPoint(x: 40.4, y: 57.79))
        bezier89Path.addCurve(to: CGPoint(x: 9.99, y: 58.68), controlPoint1: CGPoint(x: 40.4, y: 57.79), controlPoint2: CGPoint(x: 20.13, y: 58.25))
        bezier89Path.addCurve(to: CGPoint(x: -0.18, y: 59.53), controlPoint1: CGPoint(x: -0.16, y: 59.12), controlPoint2: CGPoint(x: 1.91, y: 59.6))
        bezier89Path.addCurve(to: CGPoint(x: -9.09, y: 58.9), controlPoint1: CGPoint(x: -2.28, y: 59.47), controlPoint2: CGPoint(x: -0.39, y: 59.23))
        bezier89Path.close()
        context.saveGState()
        bezier89Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: -0.17, y: 57.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 57.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 29
        context.saveGState()
        context.setAlpha(0)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 90 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: 22.91)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier90Path = UIBezierPath()
        bezier90Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier90Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier90Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier90Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier90Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier90Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier90Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier90Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier90Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier90Path.close()
        plane_picture_shadow_2.setFill()
        bezier90Path.fill()

        context.restoreGState()


        //// Bezier 91 Drawing
        let bezier91Path = UIBezierPath()
        bezier91Path.move(to: CGPoint(x: -9.09, y: 58.91))
        bezier91Path.addCurve(to: CGPoint(x: -34.99, y: 58.2), controlPoint1: CGPoint(x: -17.79, y: 58.57), controlPoint2: CGPoint(x: -34.99, y: 58.2))
        bezier91Path.addCurve(to: CGPoint(x: -9.08, y: 57.24), controlPoint1: CGPoint(x: -34.99, y: 58.2), controlPoint2: CGPoint(x: -17.79, y: 57.81))
        bezier91Path.addCurve(to: CGPoint(x: -0.12, y: 55.91), controlPoint1: CGPoint(x: -0.36, y: 56.67), controlPoint2: CGPoint(x: -2.3, y: 55.87))
        bezier91Path.addCurve(to: CGPoint(x: 9.99, y: 57.15), controlPoint1: CGPoint(x: 2.07, y: 55.95), controlPoint2: CGPoint(x: -0.14, y: 56.67))
        bezier91Path.addCurve(to: CGPoint(x: 40.4, y: 57.81), controlPoint1: CGPoint(x: 20.12, y: 57.62), controlPoint2: CGPoint(x: 40.4, y: 57.81))
        bezier91Path.addCurve(to: CGPoint(x: 9.98, y: 58.7), controlPoint1: CGPoint(x: 40.4, y: 57.81), controlPoint2: CGPoint(x: 20.13, y: 58.26))
        bezier91Path.addCurve(to: CGPoint(x: -0.19, y: 59.55), controlPoint1: CGPoint(x: -0.16, y: 59.13), controlPoint2: CGPoint(x: 1.91, y: 59.62))
        bezier91Path.addCurve(to: CGPoint(x: -9.09, y: 58.91), controlPoint1: CGPoint(x: -2.29, y: 59.48), controlPoint2: CGPoint(x: -0.39, y: 59.25))
        bezier91Path.close()
        plane_picture_shadow_2.setFill()
        bezier91Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 30
        context.saveGState()
        context.translateBy(x: 357.25, y: 77.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 31
        //// Bezier 92 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: 53.89)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier92Path = UIBezierPath()
        bezier92Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier92Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier92Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier92Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier92Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier92Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier92Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier92Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier92Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier92Path.close()
        context.saveGState()
        bezier92Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 34.81, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 35.76, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 93 Drawing
        let bezier93Path = UIBezierPath()
        bezier93Path.move(to: CGPoint(x: -9.09, y: 89.9))
        bezier93Path.addCurve(to: CGPoint(x: -34.98, y: 89.18), controlPoint1: CGPoint(x: -17.79, y: 89.56), controlPoint2: CGPoint(x: -34.98, y: 89.18))
        bezier93Path.addCurve(to: CGPoint(x: -9.07, y: 88.23), controlPoint1: CGPoint(x: -34.98, y: 89.18), controlPoint2: CGPoint(x: -17.79, y: 88.8))
        bezier93Path.addCurve(to: CGPoint(x: -0.11, y: 86.9), controlPoint1: CGPoint(x: -0.36, y: 87.66), controlPoint2: CGPoint(x: -2.3, y: 86.85))
        bezier93Path.addCurve(to: CGPoint(x: 10, y: 88.13), controlPoint1: CGPoint(x: 2.07, y: 86.94), controlPoint2: CGPoint(x: -0.13, y: 87.66))
        bezier93Path.addCurve(to: CGPoint(x: 40.4, y: 88.79), controlPoint1: CGPoint(x: 20.13, y: 88.61), controlPoint2: CGPoint(x: 40.4, y: 88.79))
        bezier93Path.addCurve(to: CGPoint(x: 9.99, y: 89.68), controlPoint1: CGPoint(x: 40.4, y: 88.79), controlPoint2: CGPoint(x: 20.13, y: 89.25))
        bezier93Path.addCurve(to: CGPoint(x: -0.18, y: 90.53), controlPoint1: CGPoint(x: -0.16, y: 90.12), controlPoint2: CGPoint(x: 1.91, y: 90.6))
        bezier93Path.addCurve(to: CGPoint(x: -9.09, y: 89.9), controlPoint1: CGPoint(x: -2.28, y: 90.47), controlPoint2: CGPoint(x: -0.39, y: 90.23))
        bezier93Path.close()
        context.saveGState()
        bezier93Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: -0.17, y: 88.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 88.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 32
        context.saveGState()
        context.setAlpha(star3Expr)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 94 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: 53.91)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier94Path = UIBezierPath()
        bezier94Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier94Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier94Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier94Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier94Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier94Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier94Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier94Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier94Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier94Path.close()
        plane_picture_shadow_2.setFill()
        bezier94Path.fill()

        context.restoreGState()


        //// Bezier 95 Drawing
        let bezier95Path = UIBezierPath()
        bezier95Path.move(to: CGPoint(x: -9.09, y: 89.91))
        bezier95Path.addCurve(to: CGPoint(x: -34.99, y: 89.2), controlPoint1: CGPoint(x: -17.79, y: 89.57), controlPoint2: CGPoint(x: -34.99, y: 89.2))
        bezier95Path.addCurve(to: CGPoint(x: -9.08, y: 88.24), controlPoint1: CGPoint(x: -34.99, y: 89.2), controlPoint2: CGPoint(x: -17.79, y: 88.81))
        bezier95Path.addCurve(to: CGPoint(x: -0.12, y: 86.91), controlPoint1: CGPoint(x: -0.36, y: 87.67), controlPoint2: CGPoint(x: -2.3, y: 86.87))
        bezier95Path.addCurve(to: CGPoint(x: 9.99, y: 88.15), controlPoint1: CGPoint(x: 2.07, y: 86.95), controlPoint2: CGPoint(x: -0.14, y: 87.67))
        bezier95Path.addCurve(to: CGPoint(x: 40.4, y: 88.81), controlPoint1: CGPoint(x: 20.12, y: 88.62), controlPoint2: CGPoint(x: 40.4, y: 88.81))
        bezier95Path.addCurve(to: CGPoint(x: 9.98, y: 89.7), controlPoint1: CGPoint(x: 40.4, y: 88.81), controlPoint2: CGPoint(x: 20.13, y: 89.26))
        bezier95Path.addCurve(to: CGPoint(x: -0.19, y: 90.55), controlPoint1: CGPoint(x: -0.16, y: 90.13), controlPoint2: CGPoint(x: 1.91, y: 90.62))
        bezier95Path.addCurve(to: CGPoint(x: -9.09, y: 89.91), controlPoint1: CGPoint(x: -2.29, y: 90.48), controlPoint2: CGPoint(x: -0.39, y: 90.25))
        bezier95Path.close()
        plane_picture_shadow_2.setFill()
        bezier95Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 33
        context.saveGState()
        context.translateBy(x: 125.25, y: 17.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.2)



        //// Group 34
        //// Bezier 96 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -100.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier96Path = UIBezierPath()
        bezier96Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier96Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier96Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier96Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier96Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier96Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier96Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier96Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier96Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier96Path.close()
        context.saveGState()
        bezier96Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 97 Drawing
        let bezier97Path = UIBezierPath()
        bezier97Path.move(to: CGPoint(x: 5.41, y: -67.15))
        bezier97Path.addCurve(to: CGPoint(x: -18.64, y: -67.87), controlPoint1: CGPoint(x: -2.67, y: -67.49), controlPoint2: CGPoint(x: -18.64, y: -67.87))
        bezier97Path.addCurve(to: CGPoint(x: 5.42, y: -68.82), controlPoint1: CGPoint(x: -18.64, y: -67.87), controlPoint2: CGPoint(x: -2.67, y: -68.25))
        bezier97Path.addCurve(to: CGPoint(x: 13.74, y: -70.15), controlPoint1: CGPoint(x: 13.51, y: -69.39), controlPoint2: CGPoint(x: 11.71, y: -70.2))
        bezier97Path.addCurve(to: CGPoint(x: 23.13, y: -68.91), controlPoint1: CGPoint(x: 15.77, y: -70.11), controlPoint2: CGPoint(x: 13.72, y: -69.39))
        bezier97Path.addCurve(to: CGPoint(x: 51.36, y: -68.25), controlPoint1: CGPoint(x: 32.53, y: -68.44), controlPoint2: CGPoint(x: 51.36, y: -68.25))
        bezier97Path.addCurve(to: CGPoint(x: 23.12, y: -67.37), controlPoint1: CGPoint(x: 51.36, y: -68.25), controlPoint2: CGPoint(x: 32.54, y: -67.8))
        bezier97Path.addCurve(to: CGPoint(x: 13.67, y: -66.51), controlPoint1: CGPoint(x: 13.7, y: -66.93), controlPoint2: CGPoint(x: 15.62, y: -66.44))
        bezier97Path.addCurve(to: CGPoint(x: 5.41, y: -67.15), controlPoint1: CGPoint(x: 11.73, y: -66.58), controlPoint2: CGPoint(x: 13.49, y: -66.81))
        bezier97Path.close()
        context.saveGState()
        bezier97Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -68.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -68.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 35
        //// Bezier 98 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -100.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier98Path = UIBezierPath()
        bezier98Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier98Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier98Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier98Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier98Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier98Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier98Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier98Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier98Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier98Path.close()
        context.saveGState()
        bezier98Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 99 Drawing
        let bezier99Path = UIBezierPath()
        bezier99Path.move(to: CGPoint(x: 5.68, y: -67.31))
        bezier99Path.addCurve(to: CGPoint(x: -18.37, y: -68.03), controlPoint1: CGPoint(x: -2.4, y: -67.65), controlPoint2: CGPoint(x: -18.37, y: -68.03))
        bezier99Path.addCurve(to: CGPoint(x: 5.69, y: -68.98), controlPoint1: CGPoint(x: -18.37, y: -68.03), controlPoint2: CGPoint(x: -2.41, y: -68.41))
        bezier99Path.addCurve(to: CGPoint(x: 14.01, y: -70.31), controlPoint1: CGPoint(x: 13.78, y: -69.55), controlPoint2: CGPoint(x: 11.98, y: -70.35))
        bezier99Path.addCurve(to: CGPoint(x: 23.39, y: -69.07), controlPoint1: CGPoint(x: 16.04, y: -70.27), controlPoint2: CGPoint(x: 13.99, y: -69.55))
        bezier99Path.addCurve(to: CGPoint(x: 51.63, y: -68.41), controlPoint1: CGPoint(x: 32.8, y: -68.6), controlPoint2: CGPoint(x: 51.63, y: -68.41))
        bezier99Path.addCurve(to: CGPoint(x: 23.39, y: -67.52), controlPoint1: CGPoint(x: 51.63, y: -68.41), controlPoint2: CGPoint(x: 32.81, y: -67.96))
        bezier99Path.addCurve(to: CGPoint(x: 13.94, y: -66.67), controlPoint1: CGPoint(x: 13.96, y: -67.09), controlPoint2: CGPoint(x: 15.89, y: -66.6))
        bezier99Path.addCurve(to: CGPoint(x: 5.68, y: -67.31), controlPoint1: CGPoint(x: 11.99, y: -66.74), controlPoint2: CGPoint(x: 13.75, y: -66.97))
        bezier99Path.close()
        context.saveGState()
        bezier99Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -68.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -68.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 36
        context.saveGState()
        context.translateBy(x: 142.25, y: 42.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.4, y: 0.4)



        //// Group 37
        //// Bezier 100 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -71.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier100Path = UIBezierPath()
        bezier100Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier100Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier100Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier100Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier100Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier100Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier100Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier100Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier100Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier100Path.close()
        context.saveGState()
        bezier100Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 101 Drawing
        let bezier101Path = UIBezierPath()
        bezier101Path.move(to: CGPoint(x: 5.41, y: -38.15))
        bezier101Path.addCurve(to: CGPoint(x: -18.64, y: -38.87), controlPoint1: CGPoint(x: -2.67, y: -38.49), controlPoint2: CGPoint(x: -18.64, y: -38.87))
        bezier101Path.addCurve(to: CGPoint(x: 5.42, y: -39.82), controlPoint1: CGPoint(x: -18.64, y: -38.87), controlPoint2: CGPoint(x: -2.67, y: -39.25))
        bezier101Path.addCurve(to: CGPoint(x: 13.74, y: -41.15), controlPoint1: CGPoint(x: 13.51, y: -40.39), controlPoint2: CGPoint(x: 11.71, y: -41.2))
        bezier101Path.addCurve(to: CGPoint(x: 23.13, y: -39.91), controlPoint1: CGPoint(x: 15.77, y: -41.11), controlPoint2: CGPoint(x: 13.72, y: -40.39))
        bezier101Path.addCurve(to: CGPoint(x: 51.36, y: -39.25), controlPoint1: CGPoint(x: 32.53, y: -39.44), controlPoint2: CGPoint(x: 51.36, y: -39.25))
        bezier101Path.addCurve(to: CGPoint(x: 23.12, y: -38.37), controlPoint1: CGPoint(x: 51.36, y: -39.25), controlPoint2: CGPoint(x: 32.54, y: -38.8))
        bezier101Path.addCurve(to: CGPoint(x: 13.67, y: -37.51), controlPoint1: CGPoint(x: 13.7, y: -37.93), controlPoint2: CGPoint(x: 15.62, y: -37.44))
        bezier101Path.addCurve(to: CGPoint(x: 5.41, y: -38.15), controlPoint1: CGPoint(x: 11.73, y: -37.58), controlPoint2: CGPoint(x: 13.49, y: -37.81))
        bezier101Path.close()
        context.saveGState()
        bezier101Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -39.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -39.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 38
        //// Bezier 102 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -71.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier102Path = UIBezierPath()
        bezier102Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier102Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier102Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier102Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier102Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier102Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier102Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier102Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier102Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier102Path.close()
        context.saveGState()
        bezier102Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 103 Drawing
        let bezier103Path = UIBezierPath()
        bezier103Path.move(to: CGPoint(x: 5.68, y: -38.31))
        bezier103Path.addCurve(to: CGPoint(x: -18.37, y: -39.03), controlPoint1: CGPoint(x: -2.4, y: -38.65), controlPoint2: CGPoint(x: -18.37, y: -39.03))
        bezier103Path.addCurve(to: CGPoint(x: 5.69, y: -39.98), controlPoint1: CGPoint(x: -18.37, y: -39.03), controlPoint2: CGPoint(x: -2.41, y: -39.41))
        bezier103Path.addCurve(to: CGPoint(x: 14.01, y: -41.31), controlPoint1: CGPoint(x: 13.78, y: -40.55), controlPoint2: CGPoint(x: 11.98, y: -41.35))
        bezier103Path.addCurve(to: CGPoint(x: 23.39, y: -40.07), controlPoint1: CGPoint(x: 16.04, y: -41.27), controlPoint2: CGPoint(x: 13.99, y: -40.55))
        bezier103Path.addCurve(to: CGPoint(x: 51.63, y: -39.41), controlPoint1: CGPoint(x: 32.8, y: -39.6), controlPoint2: CGPoint(x: 51.63, y: -39.41))
        bezier103Path.addCurve(to: CGPoint(x: 23.39, y: -38.52), controlPoint1: CGPoint(x: 51.63, y: -39.41), controlPoint2: CGPoint(x: 32.81, y: -38.96))
        bezier103Path.addCurve(to: CGPoint(x: 13.94, y: -37.67), controlPoint1: CGPoint(x: 13.96, y: -38.09), controlPoint2: CGPoint(x: 15.89, y: -37.6))
        bezier103Path.addCurve(to: CGPoint(x: 5.68, y: -38.31), controlPoint1: CGPoint(x: 11.99, y: -37.74), controlPoint2: CGPoint(x: 13.75, y: -37.97))
        bezier103Path.close()
        context.saveGState()
        bezier103Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -39.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -39.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 39
        context.saveGState()
        context.translateBy(x: 166.25, y: 30.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 40
        //// Bezier 104 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -76.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier104Path = UIBezierPath()
        bezier104Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier104Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier104Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier104Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier104Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier104Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier104Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier104Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier104Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier104Path.close()
        context.saveGState()
        bezier104Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 105 Drawing
        let bezier105Path = UIBezierPath()
        bezier105Path.move(to: CGPoint(x: 5.41, y: -43.15))
        bezier105Path.addCurve(to: CGPoint(x: -18.64, y: -43.87), controlPoint1: CGPoint(x: -2.67, y: -43.49), controlPoint2: CGPoint(x: -18.64, y: -43.87))
        bezier105Path.addCurve(to: CGPoint(x: 5.42, y: -44.82), controlPoint1: CGPoint(x: -18.64, y: -43.87), controlPoint2: CGPoint(x: -2.67, y: -44.25))
        bezier105Path.addCurve(to: CGPoint(x: 13.74, y: -46.15), controlPoint1: CGPoint(x: 13.51, y: -45.39), controlPoint2: CGPoint(x: 11.71, y: -46.2))
        bezier105Path.addCurve(to: CGPoint(x: 23.13, y: -44.91), controlPoint1: CGPoint(x: 15.77, y: -46.11), controlPoint2: CGPoint(x: 13.72, y: -45.39))
        bezier105Path.addCurve(to: CGPoint(x: 51.36, y: -44.25), controlPoint1: CGPoint(x: 32.53, y: -44.44), controlPoint2: CGPoint(x: 51.36, y: -44.25))
        bezier105Path.addCurve(to: CGPoint(x: 23.12, y: -43.37), controlPoint1: CGPoint(x: 51.36, y: -44.25), controlPoint2: CGPoint(x: 32.54, y: -43.8))
        bezier105Path.addCurve(to: CGPoint(x: 13.67, y: -42.51), controlPoint1: CGPoint(x: 13.7, y: -42.93), controlPoint2: CGPoint(x: 15.62, y: -42.44))
        bezier105Path.addCurve(to: CGPoint(x: 5.41, y: -43.15), controlPoint1: CGPoint(x: 11.73, y: -42.58), controlPoint2: CGPoint(x: 13.49, y: -42.81))
        bezier105Path.close()
        context.saveGState()
        bezier105Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -44.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -44.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 41
        //// Bezier 106 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -76.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier106Path = UIBezierPath()
        bezier106Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier106Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier106Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier106Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier106Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier106Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier106Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier106Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier106Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier106Path.close()
        context.saveGState()
        bezier106Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 107 Drawing
        let bezier107Path = UIBezierPath()
        bezier107Path.move(to: CGPoint(x: 5.68, y: -43.31))
        bezier107Path.addCurve(to: CGPoint(x: -18.37, y: -44.03), controlPoint1: CGPoint(x: -2.4, y: -43.65), controlPoint2: CGPoint(x: -18.37, y: -44.03))
        bezier107Path.addCurve(to: CGPoint(x: 5.69, y: -44.98), controlPoint1: CGPoint(x: -18.37, y: -44.03), controlPoint2: CGPoint(x: -2.41, y: -44.41))
        bezier107Path.addCurve(to: CGPoint(x: 14.01, y: -46.31), controlPoint1: CGPoint(x: 13.78, y: -45.55), controlPoint2: CGPoint(x: 11.98, y: -46.35))
        bezier107Path.addCurve(to: CGPoint(x: 23.39, y: -45.07), controlPoint1: CGPoint(x: 16.04, y: -46.27), controlPoint2: CGPoint(x: 13.99, y: -45.55))
        bezier107Path.addCurve(to: CGPoint(x: 51.63, y: -44.41), controlPoint1: CGPoint(x: 32.8, y: -44.6), controlPoint2: CGPoint(x: 51.63, y: -44.41))
        bezier107Path.addCurve(to: CGPoint(x: 23.39, y: -43.52), controlPoint1: CGPoint(x: 51.63, y: -44.41), controlPoint2: CGPoint(x: 32.81, y: -43.96))
        bezier107Path.addCurve(to: CGPoint(x: 13.94, y: -42.67), controlPoint1: CGPoint(x: 13.96, y: -43.09), controlPoint2: CGPoint(x: 15.89, y: -42.6))
        bezier107Path.addCurve(to: CGPoint(x: 5.68, y: -43.31), controlPoint1: CGPoint(x: 11.99, y: -42.74), controlPoint2: CGPoint(x: 13.75, y: -42.97))
        bezier107Path.close()
        context.saveGState()
        bezier107Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -44.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -44.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 42
        context.saveGState()
        context.translateBy(x: 176.25, y: 40.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 43
        //// Bezier 108 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -70.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier108Path = UIBezierPath()
        bezier108Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier108Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier108Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier108Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier108Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier108Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier108Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier108Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier108Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier108Path.close()
        context.saveGState()
        bezier108Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 109 Drawing
        let bezier109Path = UIBezierPath()
        bezier109Path.move(to: CGPoint(x: 5.41, y: -37.15))
        bezier109Path.addCurve(to: CGPoint(x: -18.64, y: -37.87), controlPoint1: CGPoint(x: -2.67, y: -37.49), controlPoint2: CGPoint(x: -18.64, y: -37.87))
        bezier109Path.addCurve(to: CGPoint(x: 5.42, y: -38.82), controlPoint1: CGPoint(x: -18.64, y: -37.87), controlPoint2: CGPoint(x: -2.67, y: -38.25))
        bezier109Path.addCurve(to: CGPoint(x: 13.74, y: -40.15), controlPoint1: CGPoint(x: 13.51, y: -39.39), controlPoint2: CGPoint(x: 11.71, y: -40.2))
        bezier109Path.addCurve(to: CGPoint(x: 23.13, y: -38.91), controlPoint1: CGPoint(x: 15.77, y: -40.11), controlPoint2: CGPoint(x: 13.72, y: -39.39))
        bezier109Path.addCurve(to: CGPoint(x: 51.36, y: -38.25), controlPoint1: CGPoint(x: 32.53, y: -38.44), controlPoint2: CGPoint(x: 51.36, y: -38.25))
        bezier109Path.addCurve(to: CGPoint(x: 23.12, y: -37.37), controlPoint1: CGPoint(x: 51.36, y: -38.25), controlPoint2: CGPoint(x: 32.54, y: -37.8))
        bezier109Path.addCurve(to: CGPoint(x: 13.67, y: -36.51), controlPoint1: CGPoint(x: 13.7, y: -36.93), controlPoint2: CGPoint(x: 15.62, y: -36.44))
        bezier109Path.addCurve(to: CGPoint(x: 5.41, y: -37.15), controlPoint1: CGPoint(x: 11.73, y: -36.58), controlPoint2: CGPoint(x: 13.49, y: -36.81))
        bezier109Path.close()
        context.saveGState()
        bezier109Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -38.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -38.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 44
        //// Bezier 110 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -70.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier110Path = UIBezierPath()
        bezier110Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier110Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier110Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier110Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier110Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier110Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier110Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier110Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier110Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier110Path.close()
        context.saveGState()
        bezier110Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 111 Drawing
        let bezier111Path = UIBezierPath()
        bezier111Path.move(to: CGPoint(x: 5.68, y: -37.31))
        bezier111Path.addCurve(to: CGPoint(x: -18.37, y: -38.03), controlPoint1: CGPoint(x: -2.4, y: -37.65), controlPoint2: CGPoint(x: -18.37, y: -38.03))
        bezier111Path.addCurve(to: CGPoint(x: 5.69, y: -38.98), controlPoint1: CGPoint(x: -18.37, y: -38.03), controlPoint2: CGPoint(x: -2.41, y: -38.41))
        bezier111Path.addCurve(to: CGPoint(x: 14.01, y: -40.31), controlPoint1: CGPoint(x: 13.78, y: -39.55), controlPoint2: CGPoint(x: 11.98, y: -40.35))
        bezier111Path.addCurve(to: CGPoint(x: 23.39, y: -39.07), controlPoint1: CGPoint(x: 16.04, y: -40.27), controlPoint2: CGPoint(x: 13.99, y: -39.55))
        bezier111Path.addCurve(to: CGPoint(x: 51.63, y: -38.41), controlPoint1: CGPoint(x: 32.8, y: -38.6), controlPoint2: CGPoint(x: 51.63, y: -38.41))
        bezier111Path.addCurve(to: CGPoint(x: 23.39, y: -37.52), controlPoint1: CGPoint(x: 51.63, y: -38.41), controlPoint2: CGPoint(x: 32.81, y: -37.96))
        bezier111Path.addCurve(to: CGPoint(x: 13.94, y: -36.67), controlPoint1: CGPoint(x: 13.96, y: -37.09), controlPoint2: CGPoint(x: 15.89, y: -36.6))
        bezier111Path.addCurve(to: CGPoint(x: 5.68, y: -37.31), controlPoint1: CGPoint(x: 11.99, y: -36.74), controlPoint2: CGPoint(x: 13.75, y: -36.97))
        bezier111Path.close()
        context.saveGState()
        bezier111Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -38.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -38.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 45
        context.saveGState()
        context.translateBy(x: 96.25, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 46
        //// Bezier 112 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -117.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier112Path = UIBezierPath()
        bezier112Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier112Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier112Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier112Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier112Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier112Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier112Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier112Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier112Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier112Path.close()
        context.saveGState()
        bezier112Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 113 Drawing
        let bezier113Path = UIBezierPath()
        bezier113Path.move(to: CGPoint(x: 5.41, y: -84.15))
        bezier113Path.addCurve(to: CGPoint(x: -18.64, y: -84.87), controlPoint1: CGPoint(x: -2.67, y: -84.49), controlPoint2: CGPoint(x: -18.64, y: -84.87))
        bezier113Path.addCurve(to: CGPoint(x: 5.42, y: -85.82), controlPoint1: CGPoint(x: -18.64, y: -84.87), controlPoint2: CGPoint(x: -2.67, y: -85.25))
        bezier113Path.addCurve(to: CGPoint(x: 13.74, y: -87.15), controlPoint1: CGPoint(x: 13.51, y: -86.39), controlPoint2: CGPoint(x: 11.71, y: -87.2))
        bezier113Path.addCurve(to: CGPoint(x: 23.13, y: -85.91), controlPoint1: CGPoint(x: 15.77, y: -87.11), controlPoint2: CGPoint(x: 13.72, y: -86.39))
        bezier113Path.addCurve(to: CGPoint(x: 51.36, y: -85.25), controlPoint1: CGPoint(x: 32.53, y: -85.44), controlPoint2: CGPoint(x: 51.36, y: -85.25))
        bezier113Path.addCurve(to: CGPoint(x: 23.12, y: -84.37), controlPoint1: CGPoint(x: 51.36, y: -85.25), controlPoint2: CGPoint(x: 32.54, y: -84.8))
        bezier113Path.addCurve(to: CGPoint(x: 13.67, y: -83.51), controlPoint1: CGPoint(x: 13.7, y: -83.93), controlPoint2: CGPoint(x: 15.62, y: -83.44))
        bezier113Path.addCurve(to: CGPoint(x: 5.41, y: -84.15), controlPoint1: CGPoint(x: 11.73, y: -83.58), controlPoint2: CGPoint(x: 13.49, y: -83.81))
        bezier113Path.close()
        context.saveGState()
        bezier113Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -85.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -85.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 47
        //// Bezier 114 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -117.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier114Path = UIBezierPath()
        bezier114Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier114Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier114Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier114Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier114Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier114Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier114Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier114Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier114Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier114Path.close()
        context.saveGState()
        bezier114Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 115 Drawing
        let bezier115Path = UIBezierPath()
        bezier115Path.move(to: CGPoint(x: 5.68, y: -84.31))
        bezier115Path.addCurve(to: CGPoint(x: -18.37, y: -85.03), controlPoint1: CGPoint(x: -2.4, y: -84.65), controlPoint2: CGPoint(x: -18.37, y: -85.03))
        bezier115Path.addCurve(to: CGPoint(x: 5.69, y: -85.98), controlPoint1: CGPoint(x: -18.37, y: -85.03), controlPoint2: CGPoint(x: -2.41, y: -85.41))
        bezier115Path.addCurve(to: CGPoint(x: 14.01, y: -87.31), controlPoint1: CGPoint(x: 13.78, y: -86.55), controlPoint2: CGPoint(x: 11.98, y: -87.35))
        bezier115Path.addCurve(to: CGPoint(x: 23.39, y: -86.07), controlPoint1: CGPoint(x: 16.04, y: -87.27), controlPoint2: CGPoint(x: 13.99, y: -86.55))
        bezier115Path.addCurve(to: CGPoint(x: 51.63, y: -85.41), controlPoint1: CGPoint(x: 32.8, y: -85.6), controlPoint2: CGPoint(x: 51.63, y: -85.41))
        bezier115Path.addCurve(to: CGPoint(x: 23.39, y: -84.52), controlPoint1: CGPoint(x: 51.63, y: -85.41), controlPoint2: CGPoint(x: 32.81, y: -84.96))
        bezier115Path.addCurve(to: CGPoint(x: 13.94, y: -83.67), controlPoint1: CGPoint(x: 13.96, y: -84.09), controlPoint2: CGPoint(x: 15.89, y: -83.6))
        bezier115Path.addCurve(to: CGPoint(x: 5.68, y: -84.31), controlPoint1: CGPoint(x: 11.99, y: -83.74), controlPoint2: CGPoint(x: 13.75, y: -83.97))
        bezier115Path.close()
        context.saveGState()
        bezier115Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -85.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -85.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 48
        context.saveGState()
        context.translateBy(x: 106.25, y: 28.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 49
        //// Bezier 116 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -112.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier116Path = UIBezierPath()
        bezier116Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier116Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier116Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier116Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier116Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier116Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier116Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier116Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier116Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier116Path.close()
        context.saveGState()
        bezier116Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 117 Drawing
        let bezier117Path = UIBezierPath()
        bezier117Path.move(to: CGPoint(x: 5.41, y: -79.15))
        bezier117Path.addCurve(to: CGPoint(x: -18.64, y: -79.87), controlPoint1: CGPoint(x: -2.67, y: -79.49), controlPoint2: CGPoint(x: -18.64, y: -79.87))
        bezier117Path.addCurve(to: CGPoint(x: 5.42, y: -80.82), controlPoint1: CGPoint(x: -18.64, y: -79.87), controlPoint2: CGPoint(x: -2.67, y: -80.25))
        bezier117Path.addCurve(to: CGPoint(x: 13.74, y: -82.15), controlPoint1: CGPoint(x: 13.51, y: -81.39), controlPoint2: CGPoint(x: 11.71, y: -82.2))
        bezier117Path.addCurve(to: CGPoint(x: 23.13, y: -80.91), controlPoint1: CGPoint(x: 15.77, y: -82.11), controlPoint2: CGPoint(x: 13.72, y: -81.39))
        bezier117Path.addCurve(to: CGPoint(x: 51.36, y: -80.25), controlPoint1: CGPoint(x: 32.53, y: -80.44), controlPoint2: CGPoint(x: 51.36, y: -80.25))
        bezier117Path.addCurve(to: CGPoint(x: 23.12, y: -79.37), controlPoint1: CGPoint(x: 51.36, y: -80.25), controlPoint2: CGPoint(x: 32.54, y: -79.8))
        bezier117Path.addCurve(to: CGPoint(x: 13.67, y: -78.51), controlPoint1: CGPoint(x: 13.7, y: -78.93), controlPoint2: CGPoint(x: 15.62, y: -78.44))
        bezier117Path.addCurve(to: CGPoint(x: 5.41, y: -79.15), controlPoint1: CGPoint(x: 11.73, y: -78.58), controlPoint2: CGPoint(x: 13.49, y: -78.81))
        bezier117Path.close()
        context.saveGState()
        bezier117Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -80.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -80.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 50
        //// Bezier 118 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -112.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier118Path = UIBezierPath()
        bezier118Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier118Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier118Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier118Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier118Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier118Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier118Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier118Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier118Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier118Path.close()
        context.saveGState()
        bezier118Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 119 Drawing
        let bezier119Path = UIBezierPath()
        bezier119Path.move(to: CGPoint(x: 5.68, y: -79.31))
        bezier119Path.addCurve(to: CGPoint(x: -18.37, y: -80.03), controlPoint1: CGPoint(x: -2.4, y: -79.65), controlPoint2: CGPoint(x: -18.37, y: -80.03))
        bezier119Path.addCurve(to: CGPoint(x: 5.69, y: -80.98), controlPoint1: CGPoint(x: -18.37, y: -80.03), controlPoint2: CGPoint(x: -2.41, y: -80.41))
        bezier119Path.addCurve(to: CGPoint(x: 14.01, y: -82.31), controlPoint1: CGPoint(x: 13.78, y: -81.55), controlPoint2: CGPoint(x: 11.98, y: -82.35))
        bezier119Path.addCurve(to: CGPoint(x: 23.39, y: -81.07), controlPoint1: CGPoint(x: 16.04, y: -82.27), controlPoint2: CGPoint(x: 13.99, y: -81.55))
        bezier119Path.addCurve(to: CGPoint(x: 51.63, y: -80.41), controlPoint1: CGPoint(x: 32.8, y: -80.6), controlPoint2: CGPoint(x: 51.63, y: -80.41))
        bezier119Path.addCurve(to: CGPoint(x: 23.39, y: -79.52), controlPoint1: CGPoint(x: 51.63, y: -80.41), controlPoint2: CGPoint(x: 32.81, y: -79.96))
        bezier119Path.addCurve(to: CGPoint(x: 13.94, y: -78.67), controlPoint1: CGPoint(x: 13.96, y: -79.09), controlPoint2: CGPoint(x: 15.89, y: -78.6))
        bezier119Path.addCurve(to: CGPoint(x: 5.68, y: -79.31), controlPoint1: CGPoint(x: 11.99, y: -78.74), controlPoint2: CGPoint(x: 13.75, y: -78.97))
        bezier119Path.close()
        context.saveGState()
        bezier119Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -80.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -80.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 51
        context.saveGState()
        context.translateBy(x: 151.25, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 52
        //// Bezier 120 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -84.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier120Path = UIBezierPath()
        bezier120Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier120Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier120Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier120Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier120Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier120Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier120Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier120Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier120Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier120Path.close()
        context.saveGState()
        bezier120Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 121 Drawing
        let bezier121Path = UIBezierPath()
        bezier121Path.move(to: CGPoint(x: 5.41, y: -51.15))
        bezier121Path.addCurve(to: CGPoint(x: -18.64, y: -51.87), controlPoint1: CGPoint(x: -2.67, y: -51.49), controlPoint2: CGPoint(x: -18.64, y: -51.87))
        bezier121Path.addCurve(to: CGPoint(x: 5.42, y: -52.82), controlPoint1: CGPoint(x: -18.64, y: -51.87), controlPoint2: CGPoint(x: -2.67, y: -52.25))
        bezier121Path.addCurve(to: CGPoint(x: 13.74, y: -54.15), controlPoint1: CGPoint(x: 13.51, y: -53.39), controlPoint2: CGPoint(x: 11.71, y: -54.2))
        bezier121Path.addCurve(to: CGPoint(x: 23.13, y: -52.91), controlPoint1: CGPoint(x: 15.77, y: -54.11), controlPoint2: CGPoint(x: 13.72, y: -53.39))
        bezier121Path.addCurve(to: CGPoint(x: 51.36, y: -52.25), controlPoint1: CGPoint(x: 32.53, y: -52.44), controlPoint2: CGPoint(x: 51.36, y: -52.25))
        bezier121Path.addCurve(to: CGPoint(x: 23.12, y: -51.37), controlPoint1: CGPoint(x: 51.36, y: -52.25), controlPoint2: CGPoint(x: 32.54, y: -51.8))
        bezier121Path.addCurve(to: CGPoint(x: 13.67, y: -50.51), controlPoint1: CGPoint(x: 13.7, y: -50.93), controlPoint2: CGPoint(x: 15.62, y: -50.44))
        bezier121Path.addCurve(to: CGPoint(x: 5.41, y: -51.15), controlPoint1: CGPoint(x: 11.73, y: -50.58), controlPoint2: CGPoint(x: 13.49, y: -50.81))
        bezier121Path.close()
        context.saveGState()
        bezier121Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -52.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -52.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 53
        //// Bezier 122 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -84.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier122Path = UIBezierPath()
        bezier122Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier122Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier122Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier122Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier122Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier122Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier122Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier122Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier122Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier122Path.close()
        context.saveGState()
        bezier122Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 123 Drawing
        let bezier123Path = UIBezierPath()
        bezier123Path.move(to: CGPoint(x: 5.68, y: -51.31))
        bezier123Path.addCurve(to: CGPoint(x: -18.37, y: -52.03), controlPoint1: CGPoint(x: -2.4, y: -51.65), controlPoint2: CGPoint(x: -18.37, y: -52.03))
        bezier123Path.addCurve(to: CGPoint(x: 5.69, y: -52.98), controlPoint1: CGPoint(x: -18.37, y: -52.03), controlPoint2: CGPoint(x: -2.41, y: -52.41))
        bezier123Path.addCurve(to: CGPoint(x: 14.01, y: -54.31), controlPoint1: CGPoint(x: 13.78, y: -53.55), controlPoint2: CGPoint(x: 11.98, y: -54.35))
        bezier123Path.addCurve(to: CGPoint(x: 23.39, y: -53.07), controlPoint1: CGPoint(x: 16.04, y: -54.27), controlPoint2: CGPoint(x: 13.99, y: -53.55))
        bezier123Path.addCurve(to: CGPoint(x: 51.63, y: -52.41), controlPoint1: CGPoint(x: 32.8, y: -52.6), controlPoint2: CGPoint(x: 51.63, y: -52.41))
        bezier123Path.addCurve(to: CGPoint(x: 23.39, y: -51.52), controlPoint1: CGPoint(x: 51.63, y: -52.41), controlPoint2: CGPoint(x: 32.81, y: -51.96))
        bezier123Path.addCurve(to: CGPoint(x: 13.94, y: -50.67), controlPoint1: CGPoint(x: 13.96, y: -51.09), controlPoint2: CGPoint(x: 15.89, y: -50.6))
        bezier123Path.addCurve(to: CGPoint(x: 5.68, y: -51.31), controlPoint1: CGPoint(x: 11.99, y: -50.74), controlPoint2: CGPoint(x: 13.75, y: -50.97))
        bezier123Path.close()
        context.saveGState()
        bezier123Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -52.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -52.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 54
        context.saveGState()
        context.translateBy(x: 198.25, y: 17.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 55
        //// Bezier 124 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -56.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier124Path = UIBezierPath()
        bezier124Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier124Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier124Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier124Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier124Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier124Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier124Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier124Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier124Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier124Path.close()
        context.saveGState()
        bezier124Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 125 Drawing
        let bezier125Path = UIBezierPath()
        bezier125Path.move(to: CGPoint(x: 5.41, y: -23.15))
        bezier125Path.addCurve(to: CGPoint(x: -18.64, y: -23.87), controlPoint1: CGPoint(x: -2.67, y: -23.49), controlPoint2: CGPoint(x: -18.64, y: -23.87))
        bezier125Path.addCurve(to: CGPoint(x: 5.42, y: -24.82), controlPoint1: CGPoint(x: -18.64, y: -23.87), controlPoint2: CGPoint(x: -2.67, y: -24.25))
        bezier125Path.addCurve(to: CGPoint(x: 13.74, y: -26.15), controlPoint1: CGPoint(x: 13.51, y: -25.39), controlPoint2: CGPoint(x: 11.71, y: -26.2))
        bezier125Path.addCurve(to: CGPoint(x: 23.13, y: -24.91), controlPoint1: CGPoint(x: 15.77, y: -26.11), controlPoint2: CGPoint(x: 13.72, y: -25.39))
        bezier125Path.addCurve(to: CGPoint(x: 51.36, y: -24.25), controlPoint1: CGPoint(x: 32.53, y: -24.44), controlPoint2: CGPoint(x: 51.36, y: -24.25))
        bezier125Path.addCurve(to: CGPoint(x: 23.12, y: -23.37), controlPoint1: CGPoint(x: 51.36, y: -24.25), controlPoint2: CGPoint(x: 32.54, y: -23.8))
        bezier125Path.addCurve(to: CGPoint(x: 13.67, y: -22.51), controlPoint1: CGPoint(x: 13.7, y: -22.93), controlPoint2: CGPoint(x: 15.62, y: -22.44))
        bezier125Path.addCurve(to: CGPoint(x: 5.41, y: -23.15), controlPoint1: CGPoint(x: 11.73, y: -22.58), controlPoint2: CGPoint(x: 13.49, y: -22.81))
        bezier125Path.close()
        context.saveGState()
        bezier125Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -24.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -24.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 56
        //// Bezier 126 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -56.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier126Path = UIBezierPath()
        bezier126Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier126Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier126Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier126Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier126Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier126Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier126Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier126Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier126Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier126Path.close()
        context.saveGState()
        bezier126Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 127 Drawing
        let bezier127Path = UIBezierPath()
        bezier127Path.move(to: CGPoint(x: 5.68, y: -23.31))
        bezier127Path.addCurve(to: CGPoint(x: -18.37, y: -24.03), controlPoint1: CGPoint(x: -2.4, y: -23.65), controlPoint2: CGPoint(x: -18.37, y: -24.03))
        bezier127Path.addCurve(to: CGPoint(x: 5.69, y: -24.98), controlPoint1: CGPoint(x: -18.37, y: -24.03), controlPoint2: CGPoint(x: -2.41, y: -24.41))
        bezier127Path.addCurve(to: CGPoint(x: 14.01, y: -26.31), controlPoint1: CGPoint(x: 13.78, y: -25.55), controlPoint2: CGPoint(x: 11.98, y: -26.35))
        bezier127Path.addCurve(to: CGPoint(x: 23.39, y: -25.07), controlPoint1: CGPoint(x: 16.04, y: -26.27), controlPoint2: CGPoint(x: 13.99, y: -25.55))
        bezier127Path.addCurve(to: CGPoint(x: 51.63, y: -24.41), controlPoint1: CGPoint(x: 32.8, y: -24.6), controlPoint2: CGPoint(x: 51.63, y: -24.41))
        bezier127Path.addCurve(to: CGPoint(x: 23.39, y: -23.52), controlPoint1: CGPoint(x: 51.63, y: -24.41), controlPoint2: CGPoint(x: 32.81, y: -23.96))
        bezier127Path.addCurve(to: CGPoint(x: 13.94, y: -22.67), controlPoint1: CGPoint(x: 13.96, y: -23.09), controlPoint2: CGPoint(x: 15.89, y: -22.6))
        bezier127Path.addCurve(to: CGPoint(x: 5.68, y: -23.31), controlPoint1: CGPoint(x: 11.99, y: -22.74), controlPoint2: CGPoint(x: 13.75, y: -22.97))
        bezier127Path.close()
        context.saveGState()
        bezier127Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -24.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -24.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 57
        context.saveGState()
        context.translateBy(x: 208.25, y: 44.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 58
        //// Bezier 128 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -50.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier128Path = UIBezierPath()
        bezier128Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier128Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier128Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier128Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier128Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier128Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier128Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier128Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier128Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier128Path.close()
        context.saveGState()
        bezier128Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 129 Drawing
        let bezier129Path = UIBezierPath()
        bezier129Path.move(to: CGPoint(x: 5.41, y: -17.15))
        bezier129Path.addCurve(to: CGPoint(x: -18.64, y: -17.87), controlPoint1: CGPoint(x: -2.67, y: -17.49), controlPoint2: CGPoint(x: -18.64, y: -17.87))
        bezier129Path.addCurve(to: CGPoint(x: 5.42, y: -18.82), controlPoint1: CGPoint(x: -18.64, y: -17.87), controlPoint2: CGPoint(x: -2.67, y: -18.25))
        bezier129Path.addCurve(to: CGPoint(x: 13.74, y: -20.15), controlPoint1: CGPoint(x: 13.51, y: -19.39), controlPoint2: CGPoint(x: 11.71, y: -20.2))
        bezier129Path.addCurve(to: CGPoint(x: 23.13, y: -18.91), controlPoint1: CGPoint(x: 15.77, y: -20.11), controlPoint2: CGPoint(x: 13.72, y: -19.39))
        bezier129Path.addCurve(to: CGPoint(x: 51.36, y: -18.25), controlPoint1: CGPoint(x: 32.53, y: -18.44), controlPoint2: CGPoint(x: 51.36, y: -18.25))
        bezier129Path.addCurve(to: CGPoint(x: 23.12, y: -17.37), controlPoint1: CGPoint(x: 51.36, y: -18.25), controlPoint2: CGPoint(x: 32.54, y: -17.8))
        bezier129Path.addCurve(to: CGPoint(x: 13.67, y: -16.51), controlPoint1: CGPoint(x: 13.7, y: -16.93), controlPoint2: CGPoint(x: 15.62, y: -16.44))
        bezier129Path.addCurve(to: CGPoint(x: 5.41, y: -17.15), controlPoint1: CGPoint(x: 11.73, y: -16.58), controlPoint2: CGPoint(x: 13.49, y: -16.81))
        bezier129Path.close()
        context.saveGState()
        bezier129Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -18.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -18.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 59
        //// Bezier 130 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -50.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier130Path = UIBezierPath()
        bezier130Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier130Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier130Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier130Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier130Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier130Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier130Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier130Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier130Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier130Path.close()
        context.saveGState()
        bezier130Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 131 Drawing
        let bezier131Path = UIBezierPath()
        bezier131Path.move(to: CGPoint(x: 5.68, y: -17.31))
        bezier131Path.addCurve(to: CGPoint(x: -18.37, y: -18.03), controlPoint1: CGPoint(x: -2.4, y: -17.65), controlPoint2: CGPoint(x: -18.37, y: -18.03))
        bezier131Path.addCurve(to: CGPoint(x: 5.69, y: -18.98), controlPoint1: CGPoint(x: -18.37, y: -18.03), controlPoint2: CGPoint(x: -2.41, y: -18.41))
        bezier131Path.addCurve(to: CGPoint(x: 14.01, y: -20.31), controlPoint1: CGPoint(x: 13.78, y: -19.55), controlPoint2: CGPoint(x: 11.98, y: -20.35))
        bezier131Path.addCurve(to: CGPoint(x: 23.39, y: -19.07), controlPoint1: CGPoint(x: 16.04, y: -20.27), controlPoint2: CGPoint(x: 13.99, y: -19.55))
        bezier131Path.addCurve(to: CGPoint(x: 51.63, y: -18.41), controlPoint1: CGPoint(x: 32.8, y: -18.6), controlPoint2: CGPoint(x: 51.63, y: -18.41))
        bezier131Path.addCurve(to: CGPoint(x: 23.39, y: -17.52), controlPoint1: CGPoint(x: 51.63, y: -18.41), controlPoint2: CGPoint(x: 32.81, y: -17.96))
        bezier131Path.addCurve(to: CGPoint(x: 13.94, y: -16.67), controlPoint1: CGPoint(x: 13.96, y: -17.09), controlPoint2: CGPoint(x: 15.89, y: -16.6))
        bezier131Path.addCurve(to: CGPoint(x: 5.68, y: -17.31), controlPoint1: CGPoint(x: 11.99, y: -16.74), controlPoint2: CGPoint(x: 13.75, y: -16.97))
        bezier131Path.close()
        context.saveGState()
        bezier131Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -18.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -18.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 60
        context.saveGState()
        context.translateBy(x: 240.25, y: 32.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.3)



        //// Group 61
        //// Bezier 132 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -39.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier132Path = UIBezierPath()
        bezier132Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier132Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier132Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier132Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier132Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier132Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier132Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier132Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier132Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier132Path.close()
        context.saveGState()
        bezier132Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 133 Drawing
        let bezier133Path = UIBezierPath()
        bezier133Path.move(to: CGPoint(x: 5.41, y: -6.15))
        bezier133Path.addCurve(to: CGPoint(x: -18.64, y: -6.87), controlPoint1: CGPoint(x: -2.67, y: -6.49), controlPoint2: CGPoint(x: -18.64, y: -6.87))
        bezier133Path.addCurve(to: CGPoint(x: 5.42, y: -7.82), controlPoint1: CGPoint(x: -18.64, y: -6.87), controlPoint2: CGPoint(x: -2.67, y: -7.25))
        bezier133Path.addCurve(to: CGPoint(x: 13.74, y: -9.15), controlPoint1: CGPoint(x: 13.51, y: -8.39), controlPoint2: CGPoint(x: 11.71, y: -9.2))
        bezier133Path.addCurve(to: CGPoint(x: 23.13, y: -7.91), controlPoint1: CGPoint(x: 15.77, y: -9.11), controlPoint2: CGPoint(x: 13.72, y: -8.39))
        bezier133Path.addCurve(to: CGPoint(x: 51.36, y: -7.25), controlPoint1: CGPoint(x: 32.53, y: -7.44), controlPoint2: CGPoint(x: 51.36, y: -7.25))
        bezier133Path.addCurve(to: CGPoint(x: 23.12, y: -6.37), controlPoint1: CGPoint(x: 51.36, y: -7.25), controlPoint2: CGPoint(x: 32.54, y: -6.8))
        bezier133Path.addCurve(to: CGPoint(x: 13.67, y: -5.51), controlPoint1: CGPoint(x: 13.7, y: -5.93), controlPoint2: CGPoint(x: 15.62, y: -5.44))
        bezier133Path.addCurve(to: CGPoint(x: 5.41, y: -6.15), controlPoint1: CGPoint(x: 11.73, y: -5.58), controlPoint2: CGPoint(x: 13.49, y: -5.81))
        bezier133Path.close()
        context.saveGState()
        bezier133Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -7.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -7.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 62
        //// Bezier 134 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -39.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier134Path = UIBezierPath()
        bezier134Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier134Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier134Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier134Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier134Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier134Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier134Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier134Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier134Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier134Path.close()
        context.saveGState()
        bezier134Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 135 Drawing
        let bezier135Path = UIBezierPath()
        bezier135Path.move(to: CGPoint(x: 5.68, y: -6.31))
        bezier135Path.addCurve(to: CGPoint(x: -18.37, y: -7.03), controlPoint1: CGPoint(x: -2.4, y: -6.65), controlPoint2: CGPoint(x: -18.37, y: -7.03))
        bezier135Path.addCurve(to: CGPoint(x: 5.69, y: -7.98), controlPoint1: CGPoint(x: -18.37, y: -7.03), controlPoint2: CGPoint(x: -2.41, y: -7.41))
        bezier135Path.addCurve(to: CGPoint(x: 14.01, y: -9.31), controlPoint1: CGPoint(x: 13.78, y: -8.55), controlPoint2: CGPoint(x: 11.98, y: -9.35))
        bezier135Path.addCurve(to: CGPoint(x: 23.39, y: -8.07), controlPoint1: CGPoint(x: 16.04, y: -9.27), controlPoint2: CGPoint(x: 13.99, y: -8.55))
        bezier135Path.addCurve(to: CGPoint(x: 51.63, y: -7.41), controlPoint1: CGPoint(x: 32.8, y: -7.6), controlPoint2: CGPoint(x: 51.63, y: -7.41))
        bezier135Path.addCurve(to: CGPoint(x: 23.39, y: -6.52), controlPoint1: CGPoint(x: 51.63, y: -7.41), controlPoint2: CGPoint(x: 32.81, y: -6.96))
        bezier135Path.addCurve(to: CGPoint(x: 13.94, y: -5.67), controlPoint1: CGPoint(x: 13.96, y: -6.09), controlPoint2: CGPoint(x: 15.89, y: -5.6))
        bezier135Path.addCurve(to: CGPoint(x: 5.68, y: -6.31), controlPoint1: CGPoint(x: 11.99, y: -5.74), controlPoint2: CGPoint(x: 13.75, y: -5.97))
        bezier135Path.close()
        context.saveGState()
        bezier135Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -7.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -7.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 63
        context.saveGState()
        context.translateBy(x: 268.25, y: 14.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 64
        //// Bezier 136 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 22.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier136Path = UIBezierPath()
        bezier136Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier136Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier136Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier136Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier136Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier136Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier136Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier136Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier136Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier136Path.close()
        context.saveGState()
        bezier136Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 137 Drawing
        let bezier137Path = UIBezierPath()
        bezier137Path.move(to: CGPoint(x: 5.41, y: 55.85))
        bezier137Path.addCurve(to: CGPoint(x: -18.64, y: 55.13), controlPoint1: CGPoint(x: -2.67, y: 55.51), controlPoint2: CGPoint(x: -18.64, y: 55.13))
        bezier137Path.addCurve(to: CGPoint(x: 5.42, y: 54.18), controlPoint1: CGPoint(x: -18.64, y: 55.13), controlPoint2: CGPoint(x: -2.67, y: 54.75))
        bezier137Path.addCurve(to: CGPoint(x: 13.74, y: 52.85), controlPoint1: CGPoint(x: 13.51, y: 53.61), controlPoint2: CGPoint(x: 11.71, y: 52.8))
        bezier137Path.addCurve(to: CGPoint(x: 23.13, y: 54.09), controlPoint1: CGPoint(x: 15.77, y: 52.89), controlPoint2: CGPoint(x: 13.72, y: 53.61))
        bezier137Path.addCurve(to: CGPoint(x: 51.36, y: 54.75), controlPoint1: CGPoint(x: 32.53, y: 54.56), controlPoint2: CGPoint(x: 51.36, y: 54.75))
        bezier137Path.addCurve(to: CGPoint(x: 23.12, y: 55.63), controlPoint1: CGPoint(x: 51.36, y: 54.75), controlPoint2: CGPoint(x: 32.54, y: 55.2))
        bezier137Path.addCurve(to: CGPoint(x: 13.67, y: 56.49), controlPoint1: CGPoint(x: 13.7, y: 56.07), controlPoint2: CGPoint(x: 15.62, y: 56.56))
        bezier137Path.addCurve(to: CGPoint(x: 5.41, y: 55.85), controlPoint1: CGPoint(x: 11.73, y: 56.42), controlPoint2: CGPoint(x: 13.49, y: 56.19))
        bezier137Path.close()
        context.saveGState()
        bezier137Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 54.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 54.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 65
        //// Bezier 138 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 22.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier138Path = UIBezierPath()
        bezier138Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier138Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier138Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier138Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier138Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier138Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier138Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier138Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier138Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier138Path.close()
        context.saveGState()
        bezier138Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 139 Drawing
        let bezier139Path = UIBezierPath()
        bezier139Path.move(to: CGPoint(x: 5.68, y: 55.69))
        bezier139Path.addCurve(to: CGPoint(x: -18.37, y: 54.97), controlPoint1: CGPoint(x: -2.4, y: 55.35), controlPoint2: CGPoint(x: -18.37, y: 54.97))
        bezier139Path.addCurve(to: CGPoint(x: 5.69, y: 54.02), controlPoint1: CGPoint(x: -18.37, y: 54.97), controlPoint2: CGPoint(x: -2.41, y: 54.59))
        bezier139Path.addCurve(to: CGPoint(x: 14.01, y: 52.69), controlPoint1: CGPoint(x: 13.78, y: 53.45), controlPoint2: CGPoint(x: 11.98, y: 52.65))
        bezier139Path.addCurve(to: CGPoint(x: 23.39, y: 53.93), controlPoint1: CGPoint(x: 16.04, y: 52.73), controlPoint2: CGPoint(x: 13.99, y: 53.45))
        bezier139Path.addCurve(to: CGPoint(x: 51.63, y: 54.59), controlPoint1: CGPoint(x: 32.8, y: 54.4), controlPoint2: CGPoint(x: 51.63, y: 54.59))
        bezier139Path.addCurve(to: CGPoint(x: 23.39, y: 55.48), controlPoint1: CGPoint(x: 51.63, y: 54.59), controlPoint2: CGPoint(x: 32.81, y: 55.04))
        bezier139Path.addCurve(to: CGPoint(x: 13.94, y: 56.33), controlPoint1: CGPoint(x: 13.96, y: 55.91), controlPoint2: CGPoint(x: 15.89, y: 56.4))
        bezier139Path.addCurve(to: CGPoint(x: 5.68, y: 55.69), controlPoint1: CGPoint(x: 11.99, y: 56.26), controlPoint2: CGPoint(x: 13.75, y: 56.03))
        bezier139Path.close()
        context.saveGState()
        bezier139Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 54.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 54.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 66
        context.saveGState()
        context.translateBy(x: 286.25, y: 30.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 67
        //// Bezier 140 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 43.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier140Path = UIBezierPath()
        bezier140Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier140Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier140Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier140Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier140Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier140Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier140Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier140Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier140Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier140Path.close()
        context.saveGState()
        bezier140Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 141 Drawing
        let bezier141Path = UIBezierPath()
        bezier141Path.move(to: CGPoint(x: 5.41, y: 76.85))
        bezier141Path.addCurve(to: CGPoint(x: -18.64, y: 76.13), controlPoint1: CGPoint(x: -2.67, y: 76.51), controlPoint2: CGPoint(x: -18.64, y: 76.13))
        bezier141Path.addCurve(to: CGPoint(x: 5.42, y: 75.18), controlPoint1: CGPoint(x: -18.64, y: 76.13), controlPoint2: CGPoint(x: -2.67, y: 75.75))
        bezier141Path.addCurve(to: CGPoint(x: 13.74, y: 73.85), controlPoint1: CGPoint(x: 13.51, y: 74.61), controlPoint2: CGPoint(x: 11.71, y: 73.8))
        bezier141Path.addCurve(to: CGPoint(x: 23.13, y: 75.09), controlPoint1: CGPoint(x: 15.77, y: 73.89), controlPoint2: CGPoint(x: 13.72, y: 74.61))
        bezier141Path.addCurve(to: CGPoint(x: 51.36, y: 75.75), controlPoint1: CGPoint(x: 32.53, y: 75.56), controlPoint2: CGPoint(x: 51.36, y: 75.75))
        bezier141Path.addCurve(to: CGPoint(x: 23.12, y: 76.63), controlPoint1: CGPoint(x: 51.36, y: 75.75), controlPoint2: CGPoint(x: 32.54, y: 76.2))
        bezier141Path.addCurve(to: CGPoint(x: 13.67, y: 77.49), controlPoint1: CGPoint(x: 13.7, y: 77.07), controlPoint2: CGPoint(x: 15.62, y: 77.56))
        bezier141Path.addCurve(to: CGPoint(x: 5.41, y: 76.85), controlPoint1: CGPoint(x: 11.73, y: 77.42), controlPoint2: CGPoint(x: 13.49, y: 77.19))
        bezier141Path.close()
        context.saveGState()
        bezier141Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 75.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 75.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 68
        //// Bezier 142 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 43.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier142Path = UIBezierPath()
        bezier142Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier142Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier142Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier142Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier142Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier142Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier142Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier142Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier142Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier142Path.close()
        context.saveGState()
        bezier142Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 143 Drawing
        let bezier143Path = UIBezierPath()
        bezier143Path.move(to: CGPoint(x: 5.68, y: 76.69))
        bezier143Path.addCurve(to: CGPoint(x: -18.37, y: 75.97), controlPoint1: CGPoint(x: -2.4, y: 76.35), controlPoint2: CGPoint(x: -18.37, y: 75.97))
        bezier143Path.addCurve(to: CGPoint(x: 5.69, y: 75.02), controlPoint1: CGPoint(x: -18.37, y: 75.97), controlPoint2: CGPoint(x: -2.41, y: 75.59))
        bezier143Path.addCurve(to: CGPoint(x: 14.01, y: 73.69), controlPoint1: CGPoint(x: 13.78, y: 74.45), controlPoint2: CGPoint(x: 11.98, y: 73.65))
        bezier143Path.addCurve(to: CGPoint(x: 23.39, y: 74.93), controlPoint1: CGPoint(x: 16.04, y: 73.73), controlPoint2: CGPoint(x: 13.99, y: 74.45))
        bezier143Path.addCurve(to: CGPoint(x: 51.63, y: 75.59), controlPoint1: CGPoint(x: 32.8, y: 75.4), controlPoint2: CGPoint(x: 51.63, y: 75.59))
        bezier143Path.addCurve(to: CGPoint(x: 23.39, y: 76.48), controlPoint1: CGPoint(x: 51.63, y: 75.59), controlPoint2: CGPoint(x: 32.81, y: 76.04))
        bezier143Path.addCurve(to: CGPoint(x: 13.94, y: 77.33), controlPoint1: CGPoint(x: 13.96, y: 76.91), controlPoint2: CGPoint(x: 15.89, y: 77.4))
        bezier143Path.addCurve(to: CGPoint(x: 5.68, y: 76.69), controlPoint1: CGPoint(x: 11.99, y: 77.26), controlPoint2: CGPoint(x: 13.75, y: 77.03))
        bezier143Path.close()
        context.saveGState()
        bezier143Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 75.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 75.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 69
        context.saveGState()
        context.translateBy(x: 276.25, y: 36.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.2)



        //// Group 70
        //// Bezier 144 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -11.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier144Path = UIBezierPath()
        bezier144Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier144Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier144Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier144Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier144Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier144Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier144Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier144Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier144Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier144Path.close()
        context.saveGState()
        bezier144Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 145 Drawing
        let bezier145Path = UIBezierPath()
        bezier145Path.move(to: CGPoint(x: 5.41, y: 21.85))
        bezier145Path.addCurve(to: CGPoint(x: -18.64, y: 21.13), controlPoint1: CGPoint(x: -2.67, y: 21.51), controlPoint2: CGPoint(x: -18.64, y: 21.13))
        bezier145Path.addCurve(to: CGPoint(x: 5.42, y: 20.18), controlPoint1: CGPoint(x: -18.64, y: 21.13), controlPoint2: CGPoint(x: -2.67, y: 20.75))
        bezier145Path.addCurve(to: CGPoint(x: 13.74, y: 18.85), controlPoint1: CGPoint(x: 13.51, y: 19.61), controlPoint2: CGPoint(x: 11.71, y: 18.8))
        bezier145Path.addCurve(to: CGPoint(x: 23.13, y: 20.09), controlPoint1: CGPoint(x: 15.77, y: 18.89), controlPoint2: CGPoint(x: 13.72, y: 19.61))
        bezier145Path.addCurve(to: CGPoint(x: 51.36, y: 20.75), controlPoint1: CGPoint(x: 32.53, y: 20.56), controlPoint2: CGPoint(x: 51.36, y: 20.75))
        bezier145Path.addCurve(to: CGPoint(x: 23.12, y: 21.63), controlPoint1: CGPoint(x: 51.36, y: 20.75), controlPoint2: CGPoint(x: 32.54, y: 21.2))
        bezier145Path.addCurve(to: CGPoint(x: 13.67, y: 22.49), controlPoint1: CGPoint(x: 13.7, y: 22.07), controlPoint2: CGPoint(x: 15.62, y: 22.56))
        bezier145Path.addCurve(to: CGPoint(x: 5.41, y: 21.85), controlPoint1: CGPoint(x: 11.73, y: 22.42), controlPoint2: CGPoint(x: 13.49, y: 22.19))
        bezier145Path.close()
        context.saveGState()
        bezier145Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 20.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 20.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 71
        //// Bezier 146 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -11.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier146Path = UIBezierPath()
        bezier146Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier146Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier146Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier146Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier146Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier146Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier146Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier146Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier146Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier146Path.close()
        context.saveGState()
        bezier146Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 147 Drawing
        let bezier147Path = UIBezierPath()
        bezier147Path.move(to: CGPoint(x: 5.68, y: 21.69))
        bezier147Path.addCurve(to: CGPoint(x: -18.37, y: 20.97), controlPoint1: CGPoint(x: -2.4, y: 21.35), controlPoint2: CGPoint(x: -18.37, y: 20.97))
        bezier147Path.addCurve(to: CGPoint(x: 5.69, y: 20.02), controlPoint1: CGPoint(x: -18.37, y: 20.97), controlPoint2: CGPoint(x: -2.41, y: 20.59))
        bezier147Path.addCurve(to: CGPoint(x: 14.01, y: 18.69), controlPoint1: CGPoint(x: 13.78, y: 19.45), controlPoint2: CGPoint(x: 11.98, y: 18.65))
        bezier147Path.addCurve(to: CGPoint(x: 23.39, y: 19.93), controlPoint1: CGPoint(x: 16.04, y: 18.73), controlPoint2: CGPoint(x: 13.99, y: 19.45))
        bezier147Path.addCurve(to: CGPoint(x: 51.63, y: 20.59), controlPoint1: CGPoint(x: 32.8, y: 20.4), controlPoint2: CGPoint(x: 51.63, y: 20.59))
        bezier147Path.addCurve(to: CGPoint(x: 23.39, y: 21.48), controlPoint1: CGPoint(x: 51.63, y: 20.59), controlPoint2: CGPoint(x: 32.81, y: 21.04))
        bezier147Path.addCurve(to: CGPoint(x: 13.94, y: 22.33), controlPoint1: CGPoint(x: 13.96, y: 21.91), controlPoint2: CGPoint(x: 15.89, y: 22.4))
        bezier147Path.addCurve(to: CGPoint(x: 5.68, y: 21.69), controlPoint1: CGPoint(x: 11.99, y: 22.26), controlPoint2: CGPoint(x: 13.75, y: 22.03))
        bezier147Path.close()
        context.saveGState()
        bezier147Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 20.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 20.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 72
        context.saveGState()
        context.translateBy(x: 320.25, y: 46.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 73
        //// Bezier 148 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 14.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier148Path = UIBezierPath()
        bezier148Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier148Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier148Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier148Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier148Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier148Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier148Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier148Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier148Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier148Path.close()
        context.saveGState()
        bezier148Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 149 Drawing
        let bezier149Path = UIBezierPath()
        bezier149Path.move(to: CGPoint(x: 5.41, y: 47.85))
        bezier149Path.addCurve(to: CGPoint(x: -18.64, y: 47.13), controlPoint1: CGPoint(x: -2.67, y: 47.51), controlPoint2: CGPoint(x: -18.64, y: 47.13))
        bezier149Path.addCurve(to: CGPoint(x: 5.42, y: 46.18), controlPoint1: CGPoint(x: -18.64, y: 47.13), controlPoint2: CGPoint(x: -2.67, y: 46.75))
        bezier149Path.addCurve(to: CGPoint(x: 13.74, y: 44.85), controlPoint1: CGPoint(x: 13.51, y: 45.61), controlPoint2: CGPoint(x: 11.71, y: 44.8))
        bezier149Path.addCurve(to: CGPoint(x: 23.13, y: 46.09), controlPoint1: CGPoint(x: 15.77, y: 44.89), controlPoint2: CGPoint(x: 13.72, y: 45.61))
        bezier149Path.addCurve(to: CGPoint(x: 51.36, y: 46.75), controlPoint1: CGPoint(x: 32.53, y: 46.56), controlPoint2: CGPoint(x: 51.36, y: 46.75))
        bezier149Path.addCurve(to: CGPoint(x: 23.12, y: 47.63), controlPoint1: CGPoint(x: 51.36, y: 46.75), controlPoint2: CGPoint(x: 32.54, y: 47.2))
        bezier149Path.addCurve(to: CGPoint(x: 13.67, y: 48.49), controlPoint1: CGPoint(x: 13.7, y: 48.07), controlPoint2: CGPoint(x: 15.62, y: 48.56))
        bezier149Path.addCurve(to: CGPoint(x: 5.41, y: 47.85), controlPoint1: CGPoint(x: 11.73, y: 48.42), controlPoint2: CGPoint(x: 13.49, y: 48.19))
        bezier149Path.close()
        context.saveGState()
        bezier149Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 46.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 46.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 74
        //// Bezier 150 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 14.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier150Path = UIBezierPath()
        bezier150Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier150Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier150Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier150Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier150Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier150Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier150Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier150Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier150Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier150Path.close()
        context.saveGState()
        bezier150Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 151 Drawing
        let bezier151Path = UIBezierPath()
        bezier151Path.move(to: CGPoint(x: 5.68, y: 47.69))
        bezier151Path.addCurve(to: CGPoint(x: -18.37, y: 46.97), controlPoint1: CGPoint(x: -2.4, y: 47.35), controlPoint2: CGPoint(x: -18.37, y: 46.97))
        bezier151Path.addCurve(to: CGPoint(x: 5.69, y: 46.02), controlPoint1: CGPoint(x: -18.37, y: 46.97), controlPoint2: CGPoint(x: -2.41, y: 46.59))
        bezier151Path.addCurve(to: CGPoint(x: 14.01, y: 44.69), controlPoint1: CGPoint(x: 13.78, y: 45.45), controlPoint2: CGPoint(x: 11.98, y: 44.65))
        bezier151Path.addCurve(to: CGPoint(x: 23.39, y: 45.93), controlPoint1: CGPoint(x: 16.04, y: 44.73), controlPoint2: CGPoint(x: 13.99, y: 45.45))
        bezier151Path.addCurve(to: CGPoint(x: 51.63, y: 46.59), controlPoint1: CGPoint(x: 32.8, y: 46.4), controlPoint2: CGPoint(x: 51.63, y: 46.59))
        bezier151Path.addCurve(to: CGPoint(x: 23.39, y: 47.48), controlPoint1: CGPoint(x: 51.63, y: 46.59), controlPoint2: CGPoint(x: 32.81, y: 47.04))
        bezier151Path.addCurve(to: CGPoint(x: 13.94, y: 48.33), controlPoint1: CGPoint(x: 13.96, y: 47.91), controlPoint2: CGPoint(x: 15.89, y: 48.4))
        bezier151Path.addCurve(to: CGPoint(x: 5.68, y: 47.69), controlPoint1: CGPoint(x: 11.99, y: 48.26), controlPoint2: CGPoint(x: 13.75, y: 48.03))
        bezier151Path.close()
        context.saveGState()
        bezier151Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 46.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 46.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 75
        context.saveGState()
        context.translateBy(x: 330.25, y: 12.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 76
        //// Bezier 152 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 20.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier152Path = UIBezierPath()
        bezier152Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier152Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier152Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier152Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier152Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier152Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier152Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier152Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier152Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier152Path.close()
        context.saveGState()
        bezier152Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 153 Drawing
        let bezier153Path = UIBezierPath()
        bezier153Path.move(to: CGPoint(x: 5.41, y: 53.85))
        bezier153Path.addCurve(to: CGPoint(x: -18.64, y: 53.13), controlPoint1: CGPoint(x: -2.67, y: 53.51), controlPoint2: CGPoint(x: -18.64, y: 53.13))
        bezier153Path.addCurve(to: CGPoint(x: 5.42, y: 52.18), controlPoint1: CGPoint(x: -18.64, y: 53.13), controlPoint2: CGPoint(x: -2.67, y: 52.75))
        bezier153Path.addCurve(to: CGPoint(x: 13.74, y: 50.85), controlPoint1: CGPoint(x: 13.51, y: 51.61), controlPoint2: CGPoint(x: 11.71, y: 50.8))
        bezier153Path.addCurve(to: CGPoint(x: 23.13, y: 52.09), controlPoint1: CGPoint(x: 15.77, y: 50.89), controlPoint2: CGPoint(x: 13.72, y: 51.61))
        bezier153Path.addCurve(to: CGPoint(x: 51.36, y: 52.75), controlPoint1: CGPoint(x: 32.53, y: 52.56), controlPoint2: CGPoint(x: 51.36, y: 52.75))
        bezier153Path.addCurve(to: CGPoint(x: 23.12, y: 53.63), controlPoint1: CGPoint(x: 51.36, y: 52.75), controlPoint2: CGPoint(x: 32.54, y: 53.2))
        bezier153Path.addCurve(to: CGPoint(x: 13.67, y: 54.49), controlPoint1: CGPoint(x: 13.7, y: 54.07), controlPoint2: CGPoint(x: 15.62, y: 54.56))
        bezier153Path.addCurve(to: CGPoint(x: 5.41, y: 53.85), controlPoint1: CGPoint(x: 11.73, y: 54.42), controlPoint2: CGPoint(x: 13.49, y: 54.19))
        bezier153Path.close()
        context.saveGState()
        bezier153Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 52.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 52.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 77
        //// Bezier 154 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 20.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier154Path = UIBezierPath()
        bezier154Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier154Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier154Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier154Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier154Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier154Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier154Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier154Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier154Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier154Path.close()
        context.saveGState()
        bezier154Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 155 Drawing
        let bezier155Path = UIBezierPath()
        bezier155Path.move(to: CGPoint(x: 5.68, y: 53.69))
        bezier155Path.addCurve(to: CGPoint(x: -18.37, y: 52.97), controlPoint1: CGPoint(x: -2.4, y: 53.35), controlPoint2: CGPoint(x: -18.37, y: 52.97))
        bezier155Path.addCurve(to: CGPoint(x: 5.69, y: 52.02), controlPoint1: CGPoint(x: -18.37, y: 52.97), controlPoint2: CGPoint(x: -2.41, y: 52.59))
        bezier155Path.addCurve(to: CGPoint(x: 14.01, y: 50.69), controlPoint1: CGPoint(x: 13.78, y: 51.45), controlPoint2: CGPoint(x: 11.98, y: 50.65))
        bezier155Path.addCurve(to: CGPoint(x: 23.39, y: 51.93), controlPoint1: CGPoint(x: 16.04, y: 50.73), controlPoint2: CGPoint(x: 13.99, y: 51.45))
        bezier155Path.addCurve(to: CGPoint(x: 51.63, y: 52.59), controlPoint1: CGPoint(x: 32.8, y: 52.4), controlPoint2: CGPoint(x: 51.63, y: 52.59))
        bezier155Path.addCurve(to: CGPoint(x: 23.39, y: 53.48), controlPoint1: CGPoint(x: 51.63, y: 52.59), controlPoint2: CGPoint(x: 32.81, y: 53.04))
        bezier155Path.addCurve(to: CGPoint(x: 13.94, y: 54.33), controlPoint1: CGPoint(x: 13.96, y: 53.91), controlPoint2: CGPoint(x: 15.89, y: 54.4))
        bezier155Path.addCurve(to: CGPoint(x: 5.68, y: 53.69), controlPoint1: CGPoint(x: 11.99, y: 54.26), controlPoint2: CGPoint(x: 13.75, y: 54.03))
        bezier155Path.close()
        context.saveGState()
        bezier155Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 52.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 52.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 78
        context.saveGState()
        context.translateBy(x: 351.25, y: 22.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 79
        //// Bezier 156 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 33.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier156Path = UIBezierPath()
        bezier156Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier156Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier156Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier156Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier156Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier156Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier156Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier156Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier156Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier156Path.close()
        context.saveGState()
        bezier156Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 157 Drawing
        let bezier157Path = UIBezierPath()
        bezier157Path.move(to: CGPoint(x: 5.41, y: 66.85))
        bezier157Path.addCurve(to: CGPoint(x: -18.64, y: 66.13), controlPoint1: CGPoint(x: -2.67, y: 66.51), controlPoint2: CGPoint(x: -18.64, y: 66.13))
        bezier157Path.addCurve(to: CGPoint(x: 5.42, y: 65.18), controlPoint1: CGPoint(x: -18.64, y: 66.13), controlPoint2: CGPoint(x: -2.67, y: 65.75))
        bezier157Path.addCurve(to: CGPoint(x: 13.74, y: 63.85), controlPoint1: CGPoint(x: 13.51, y: 64.61), controlPoint2: CGPoint(x: 11.71, y: 63.8))
        bezier157Path.addCurve(to: CGPoint(x: 23.13, y: 65.09), controlPoint1: CGPoint(x: 15.77, y: 63.89), controlPoint2: CGPoint(x: 13.72, y: 64.61))
        bezier157Path.addCurve(to: CGPoint(x: 51.36, y: 65.75), controlPoint1: CGPoint(x: 32.53, y: 65.56), controlPoint2: CGPoint(x: 51.36, y: 65.75))
        bezier157Path.addCurve(to: CGPoint(x: 23.12, y: 66.63), controlPoint1: CGPoint(x: 51.36, y: 65.75), controlPoint2: CGPoint(x: 32.54, y: 66.2))
        bezier157Path.addCurve(to: CGPoint(x: 13.67, y: 67.49), controlPoint1: CGPoint(x: 13.7, y: 67.07), controlPoint2: CGPoint(x: 15.62, y: 67.56))
        bezier157Path.addCurve(to: CGPoint(x: 5.41, y: 66.85), controlPoint1: CGPoint(x: 11.73, y: 67.42), controlPoint2: CGPoint(x: 13.49, y: 67.19))
        bezier157Path.close()
        context.saveGState()
        bezier157Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 65.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 65.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 80
        //// Bezier 158 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 33.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier158Path = UIBezierPath()
        bezier158Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier158Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier158Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier158Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier158Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier158Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier158Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier158Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier158Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier158Path.close()
        context.saveGState()
        bezier158Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 159 Drawing
        let bezier159Path = UIBezierPath()
        bezier159Path.move(to: CGPoint(x: 5.68, y: 66.69))
        bezier159Path.addCurve(to: CGPoint(x: -18.37, y: 65.97), controlPoint1: CGPoint(x: -2.4, y: 66.35), controlPoint2: CGPoint(x: -18.37, y: 65.97))
        bezier159Path.addCurve(to: CGPoint(x: 5.69, y: 65.02), controlPoint1: CGPoint(x: -18.37, y: 65.97), controlPoint2: CGPoint(x: -2.41, y: 65.59))
        bezier159Path.addCurve(to: CGPoint(x: 14.01, y: 63.69), controlPoint1: CGPoint(x: 13.78, y: 64.45), controlPoint2: CGPoint(x: 11.98, y: 63.65))
        bezier159Path.addCurve(to: CGPoint(x: 23.39, y: 64.93), controlPoint1: CGPoint(x: 16.04, y: 63.73), controlPoint2: CGPoint(x: 13.99, y: 64.45))
        bezier159Path.addCurve(to: CGPoint(x: 51.63, y: 65.59), controlPoint1: CGPoint(x: 32.8, y: 65.4), controlPoint2: CGPoint(x: 51.63, y: 65.59))
        bezier159Path.addCurve(to: CGPoint(x: 23.39, y: 66.48), controlPoint1: CGPoint(x: 51.63, y: 65.59), controlPoint2: CGPoint(x: 32.81, y: 66.04))
        bezier159Path.addCurve(to: CGPoint(x: 13.94, y: 67.33), controlPoint1: CGPoint(x: 13.96, y: 66.91), controlPoint2: CGPoint(x: 15.89, y: 67.4))
        bezier159Path.addCurve(to: CGPoint(x: 5.68, y: 66.69), controlPoint1: CGPoint(x: 11.99, y: 67.26), controlPoint2: CGPoint(x: 13.75, y: 67.03))
        bezier159Path.close()
        context.saveGState()
        bezier159Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 65.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 65.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 81
        context.saveGState()
        context.translateBy(x: 362.25, y: 39.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 82
        //// Bezier 160 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 134.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier160Path = UIBezierPath()
        bezier160Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier160Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier160Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier160Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier160Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier160Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier160Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier160Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier160Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier160Path.close()
        context.saveGState()
        bezier160Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 161 Drawing
        let bezier161Path = UIBezierPath()
        bezier161Path.move(to: CGPoint(x: 5.41, y: 167.85))
        bezier161Path.addCurve(to: CGPoint(x: -18.64, y: 167.13), controlPoint1: CGPoint(x: -2.67, y: 167.51), controlPoint2: CGPoint(x: -18.64, y: 167.13))
        bezier161Path.addCurve(to: CGPoint(x: 5.42, y: 166.18), controlPoint1: CGPoint(x: -18.64, y: 167.13), controlPoint2: CGPoint(x: -2.67, y: 166.75))
        bezier161Path.addCurve(to: CGPoint(x: 13.74, y: 164.85), controlPoint1: CGPoint(x: 13.51, y: 165.61), controlPoint2: CGPoint(x: 11.71, y: 164.8))
        bezier161Path.addCurve(to: CGPoint(x: 23.13, y: 166.09), controlPoint1: CGPoint(x: 15.77, y: 164.89), controlPoint2: CGPoint(x: 13.72, y: 165.61))
        bezier161Path.addCurve(to: CGPoint(x: 51.36, y: 166.75), controlPoint1: CGPoint(x: 32.53, y: 166.56), controlPoint2: CGPoint(x: 51.36, y: 166.75))
        bezier161Path.addCurve(to: CGPoint(x: 23.12, y: 167.63), controlPoint1: CGPoint(x: 51.36, y: 166.75), controlPoint2: CGPoint(x: 32.54, y: 167.2))
        bezier161Path.addCurve(to: CGPoint(x: 13.67, y: 168.49), controlPoint1: CGPoint(x: 13.7, y: 168.07), controlPoint2: CGPoint(x: 15.62, y: 168.56))
        bezier161Path.addCurve(to: CGPoint(x: 5.41, y: 167.85), controlPoint1: CGPoint(x: 11.73, y: 168.42), controlPoint2: CGPoint(x: 13.49, y: 168.19))
        bezier161Path.close()
        context.saveGState()
        bezier161Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 166.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 166.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 83
        //// Bezier 162 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 134.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier162Path = UIBezierPath()
        bezier162Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier162Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier162Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier162Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier162Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier162Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier162Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier162Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier162Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier162Path.close()
        context.saveGState()
        bezier162Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 163 Drawing
        let bezier163Path = UIBezierPath()
        bezier163Path.move(to: CGPoint(x: 5.68, y: 167.69))
        bezier163Path.addCurve(to: CGPoint(x: -18.37, y: 166.97), controlPoint1: CGPoint(x: -2.4, y: 167.35), controlPoint2: CGPoint(x: -18.37, y: 166.97))
        bezier163Path.addCurve(to: CGPoint(x: 5.69, y: 166.02), controlPoint1: CGPoint(x: -18.37, y: 166.97), controlPoint2: CGPoint(x: -2.41, y: 166.59))
        bezier163Path.addCurve(to: CGPoint(x: 14.01, y: 164.69), controlPoint1: CGPoint(x: 13.78, y: 165.45), controlPoint2: CGPoint(x: 11.98, y: 164.65))
        bezier163Path.addCurve(to: CGPoint(x: 23.39, y: 165.93), controlPoint1: CGPoint(x: 16.04, y: 164.73), controlPoint2: CGPoint(x: 13.99, y: 165.45))
        bezier163Path.addCurve(to: CGPoint(x: 51.63, y: 166.59), controlPoint1: CGPoint(x: 32.8, y: 166.4), controlPoint2: CGPoint(x: 51.63, y: 166.59))
        bezier163Path.addCurve(to: CGPoint(x: 23.39, y: 167.48), controlPoint1: CGPoint(x: 51.63, y: 166.59), controlPoint2: CGPoint(x: 32.81, y: 167.04))
        bezier163Path.addCurve(to: CGPoint(x: 13.94, y: 168.33), controlPoint1: CGPoint(x: 13.96, y: 167.91), controlPoint2: CGPoint(x: 15.89, y: 168.4))
        bezier163Path.addCurve(to: CGPoint(x: 5.68, y: 167.69), controlPoint1: CGPoint(x: 11.99, y: 168.26), controlPoint2: CGPoint(x: 13.75, y: 168.03))
        bezier163Path.close()
        context.saveGState()
        bezier163Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 166.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 166.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 84
        context.saveGState()
        context.translateBy(x: 380.25, y: 48.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 85
        //// Bezier 164 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 51.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier164Path = UIBezierPath()
        bezier164Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier164Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier164Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier164Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier164Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier164Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier164Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier164Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier164Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier164Path.close()
        context.saveGState()
        bezier164Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 165 Drawing
        let bezier165Path = UIBezierPath()
        bezier165Path.move(to: CGPoint(x: 5.41, y: 84.85))
        bezier165Path.addCurve(to: CGPoint(x: -18.64, y: 84.13), controlPoint1: CGPoint(x: -2.67, y: 84.51), controlPoint2: CGPoint(x: -18.64, y: 84.13))
        bezier165Path.addCurve(to: CGPoint(x: 5.42, y: 83.18), controlPoint1: CGPoint(x: -18.64, y: 84.13), controlPoint2: CGPoint(x: -2.67, y: 83.75))
        bezier165Path.addCurve(to: CGPoint(x: 13.74, y: 81.85), controlPoint1: CGPoint(x: 13.51, y: 82.61), controlPoint2: CGPoint(x: 11.71, y: 81.8))
        bezier165Path.addCurve(to: CGPoint(x: 23.13, y: 83.09), controlPoint1: CGPoint(x: 15.77, y: 81.89), controlPoint2: CGPoint(x: 13.72, y: 82.61))
        bezier165Path.addCurve(to: CGPoint(x: 51.36, y: 83.75), controlPoint1: CGPoint(x: 32.53, y: 83.56), controlPoint2: CGPoint(x: 51.36, y: 83.75))
        bezier165Path.addCurve(to: CGPoint(x: 23.12, y: 84.63), controlPoint1: CGPoint(x: 51.36, y: 83.75), controlPoint2: CGPoint(x: 32.54, y: 84.2))
        bezier165Path.addCurve(to: CGPoint(x: 13.67, y: 85.49), controlPoint1: CGPoint(x: 13.7, y: 85.07), controlPoint2: CGPoint(x: 15.62, y: 85.56))
        bezier165Path.addCurve(to: CGPoint(x: 5.41, y: 84.85), controlPoint1: CGPoint(x: 11.73, y: 85.42), controlPoint2: CGPoint(x: 13.49, y: 85.19))
        bezier165Path.close()
        context.saveGState()
        bezier165Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 83.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 83.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 86
        //// Bezier 166 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 51.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier166Path = UIBezierPath()
        bezier166Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier166Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier166Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier166Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier166Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier166Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier166Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier166Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier166Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier166Path.close()
        context.saveGState()
        bezier166Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 167 Drawing
        let bezier167Path = UIBezierPath()
        bezier167Path.move(to: CGPoint(x: 5.68, y: 84.69))
        bezier167Path.addCurve(to: CGPoint(x: -18.37, y: 83.97), controlPoint1: CGPoint(x: -2.4, y: 84.35), controlPoint2: CGPoint(x: -18.37, y: 83.97))
        bezier167Path.addCurve(to: CGPoint(x: 5.69, y: 83.02), controlPoint1: CGPoint(x: -18.37, y: 83.97), controlPoint2: CGPoint(x: -2.41, y: 83.59))
        bezier167Path.addCurve(to: CGPoint(x: 14.01, y: 81.69), controlPoint1: CGPoint(x: 13.78, y: 82.45), controlPoint2: CGPoint(x: 11.98, y: 81.65))
        bezier167Path.addCurve(to: CGPoint(x: 23.39, y: 82.93), controlPoint1: CGPoint(x: 16.04, y: 81.73), controlPoint2: CGPoint(x: 13.99, y: 82.45))
        bezier167Path.addCurve(to: CGPoint(x: 51.63, y: 83.59), controlPoint1: CGPoint(x: 32.8, y: 83.4), controlPoint2: CGPoint(x: 51.63, y: 83.59))
        bezier167Path.addCurve(to: CGPoint(x: 23.39, y: 84.48), controlPoint1: CGPoint(x: 51.63, y: 83.59), controlPoint2: CGPoint(x: 32.81, y: 84.04))
        bezier167Path.addCurve(to: CGPoint(x: 13.94, y: 85.33), controlPoint1: CGPoint(x: 13.96, y: 84.91), controlPoint2: CGPoint(x: 15.89, y: 85.4))
        bezier167Path.addCurve(to: CGPoint(x: 5.68, y: 84.69), controlPoint1: CGPoint(x: 11.99, y: 85.26), controlPoint2: CGPoint(x: 13.75, y: 85.03))
        bezier167Path.close()
        context.saveGState()
        bezier167Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 83.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 83.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 87
        context.saveGState()
        context.translateBy(x: 390.25, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 88
        //// Bezier 168 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 167.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier168Path = UIBezierPath()
        bezier168Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier168Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier168Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier168Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier168Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier168Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier168Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier168Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier168Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier168Path.close()
        context.saveGState()
        bezier168Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 169 Drawing
        let bezier169Path = UIBezierPath()
        bezier169Path.move(to: CGPoint(x: 5.41, y: 200.85))
        bezier169Path.addCurve(to: CGPoint(x: -18.64, y: 200.13), controlPoint1: CGPoint(x: -2.67, y: 200.51), controlPoint2: CGPoint(x: -18.64, y: 200.13))
        bezier169Path.addCurve(to: CGPoint(x: 5.42, y: 199.18), controlPoint1: CGPoint(x: -18.64, y: 200.13), controlPoint2: CGPoint(x: -2.67, y: 199.75))
        bezier169Path.addCurve(to: CGPoint(x: 13.74, y: 197.85), controlPoint1: CGPoint(x: 13.51, y: 198.61), controlPoint2: CGPoint(x: 11.71, y: 197.8))
        bezier169Path.addCurve(to: CGPoint(x: 23.13, y: 199.09), controlPoint1: CGPoint(x: 15.77, y: 197.89), controlPoint2: CGPoint(x: 13.72, y: 198.61))
        bezier169Path.addCurve(to: CGPoint(x: 51.36, y: 199.75), controlPoint1: CGPoint(x: 32.53, y: 199.56), controlPoint2: CGPoint(x: 51.36, y: 199.75))
        bezier169Path.addCurve(to: CGPoint(x: 23.12, y: 200.63), controlPoint1: CGPoint(x: 51.36, y: 199.75), controlPoint2: CGPoint(x: 32.54, y: 200.2))
        bezier169Path.addCurve(to: CGPoint(x: 13.67, y: 201.49), controlPoint1: CGPoint(x: 13.7, y: 201.07), controlPoint2: CGPoint(x: 15.62, y: 201.56))
        bezier169Path.addCurve(to: CGPoint(x: 5.41, y: 200.85), controlPoint1: CGPoint(x: 11.73, y: 201.42), controlPoint2: CGPoint(x: 13.49, y: 201.19))
        bezier169Path.close()
        context.saveGState()
        bezier169Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 199.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 199.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 89
        //// Bezier 170 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 167.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier170Path = UIBezierPath()
        bezier170Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier170Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier170Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier170Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier170Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier170Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier170Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier170Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier170Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier170Path.close()
        context.saveGState()
        bezier170Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 171 Drawing
        let bezier171Path = UIBezierPath()
        bezier171Path.move(to: CGPoint(x: 5.68, y: 200.69))
        bezier171Path.addCurve(to: CGPoint(x: -18.37, y: 199.97), controlPoint1: CGPoint(x: -2.4, y: 200.35), controlPoint2: CGPoint(x: -18.37, y: 199.97))
        bezier171Path.addCurve(to: CGPoint(x: 5.69, y: 199.02), controlPoint1: CGPoint(x: -18.37, y: 199.97), controlPoint2: CGPoint(x: -2.41, y: 199.59))
        bezier171Path.addCurve(to: CGPoint(x: 14.01, y: 197.69), controlPoint1: CGPoint(x: 13.78, y: 198.45), controlPoint2: CGPoint(x: 11.98, y: 197.65))
        bezier171Path.addCurve(to: CGPoint(x: 23.39, y: 198.93), controlPoint1: CGPoint(x: 16.04, y: 197.73), controlPoint2: CGPoint(x: 13.99, y: 198.45))
        bezier171Path.addCurve(to: CGPoint(x: 51.63, y: 199.59), controlPoint1: CGPoint(x: 32.8, y: 199.4), controlPoint2: CGPoint(x: 51.63, y: 199.59))
        bezier171Path.addCurve(to: CGPoint(x: 23.39, y: 200.48), controlPoint1: CGPoint(x: 51.63, y: 199.59), controlPoint2: CGPoint(x: 32.81, y: 200.04))
        bezier171Path.addCurve(to: CGPoint(x: 13.94, y: 201.33), controlPoint1: CGPoint(x: 13.96, y: 200.91), controlPoint2: CGPoint(x: 15.89, y: 201.4))
        bezier171Path.addCurve(to: CGPoint(x: 5.68, y: 200.69), controlPoint1: CGPoint(x: 11.99, y: 201.26), controlPoint2: CGPoint(x: 13.75, y: 201.03))
        bezier171Path.close()
        context.saveGState()
        bezier171Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 199.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 199.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 90
        context.saveGState()
        context.translateBy(x: 369.25, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 91
        //// Bezier 172 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 44.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier172Path = UIBezierPath()
        bezier172Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier172Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier172Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier172Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier172Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier172Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier172Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier172Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier172Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier172Path.close()
        context.saveGState()
        bezier172Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 173 Drawing
        let bezier173Path = UIBezierPath()
        bezier173Path.move(to: CGPoint(x: 5.41, y: 77.85))
        bezier173Path.addCurve(to: CGPoint(x: -18.64, y: 77.13), controlPoint1: CGPoint(x: -2.67, y: 77.51), controlPoint2: CGPoint(x: -18.64, y: 77.13))
        bezier173Path.addCurve(to: CGPoint(x: 5.42, y: 76.18), controlPoint1: CGPoint(x: -18.64, y: 77.13), controlPoint2: CGPoint(x: -2.67, y: 76.75))
        bezier173Path.addCurve(to: CGPoint(x: 13.74, y: 74.85), controlPoint1: CGPoint(x: 13.51, y: 75.61), controlPoint2: CGPoint(x: 11.71, y: 74.8))
        bezier173Path.addCurve(to: CGPoint(x: 23.13, y: 76.09), controlPoint1: CGPoint(x: 15.77, y: 74.89), controlPoint2: CGPoint(x: 13.72, y: 75.61))
        bezier173Path.addCurve(to: CGPoint(x: 51.36, y: 76.75), controlPoint1: CGPoint(x: 32.53, y: 76.56), controlPoint2: CGPoint(x: 51.36, y: 76.75))
        bezier173Path.addCurve(to: CGPoint(x: 23.12, y: 77.63), controlPoint1: CGPoint(x: 51.36, y: 76.75), controlPoint2: CGPoint(x: 32.54, y: 77.2))
        bezier173Path.addCurve(to: CGPoint(x: 13.67, y: 78.49), controlPoint1: CGPoint(x: 13.7, y: 78.07), controlPoint2: CGPoint(x: 15.62, y: 78.56))
        bezier173Path.addCurve(to: CGPoint(x: 5.41, y: 77.85), controlPoint1: CGPoint(x: 11.73, y: 78.42), controlPoint2: CGPoint(x: 13.49, y: 78.19))
        bezier173Path.close()
        context.saveGState()
        bezier173Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 76.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 76.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 92
        //// Bezier 174 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 44.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier174Path = UIBezierPath()
        bezier174Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier174Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier174Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier174Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier174Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier174Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier174Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier174Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier174Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier174Path.close()
        context.saveGState()
        bezier174Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 175 Drawing
        let bezier175Path = UIBezierPath()
        bezier175Path.move(to: CGPoint(x: 5.68, y: 77.69))
        bezier175Path.addCurve(to: CGPoint(x: -18.37, y: 76.97), controlPoint1: CGPoint(x: -2.4, y: 77.35), controlPoint2: CGPoint(x: -18.37, y: 76.97))
        bezier175Path.addCurve(to: CGPoint(x: 5.69, y: 76.02), controlPoint1: CGPoint(x: -18.37, y: 76.97), controlPoint2: CGPoint(x: -2.41, y: 76.59))
        bezier175Path.addCurve(to: CGPoint(x: 14.01, y: 74.69), controlPoint1: CGPoint(x: 13.78, y: 75.45), controlPoint2: CGPoint(x: 11.98, y: 74.65))
        bezier175Path.addCurve(to: CGPoint(x: 23.39, y: 75.93), controlPoint1: CGPoint(x: 16.04, y: 74.73), controlPoint2: CGPoint(x: 13.99, y: 75.45))
        bezier175Path.addCurve(to: CGPoint(x: 51.63, y: 76.59), controlPoint1: CGPoint(x: 32.8, y: 76.4), controlPoint2: CGPoint(x: 51.63, y: 76.59))
        bezier175Path.addCurve(to: CGPoint(x: 23.39, y: 77.48), controlPoint1: CGPoint(x: 51.63, y: 76.59), controlPoint2: CGPoint(x: 32.81, y: 77.04))
        bezier175Path.addCurve(to: CGPoint(x: 13.94, y: 78.33), controlPoint1: CGPoint(x: 13.96, y: 77.91), controlPoint2: CGPoint(x: 15.89, y: 78.4))
        bezier175Path.addCurve(to: CGPoint(x: 5.68, y: 77.69), controlPoint1: CGPoint(x: 11.99, y: 78.26), controlPoint2: CGPoint(x: 13.75, y: 78.03))
        bezier175Path.close()
        context.saveGState()
        bezier175Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 76.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 76.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 93
        context.saveGState()
        context.translateBy(x: 68.25, y: 20.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.33, y: 0.33)



        //// Group 94
        //// Bezier 176 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -102.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier176Path = UIBezierPath()
        bezier176Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier176Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier176Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier176Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier176Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier176Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier176Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier176Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier176Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier176Path.close()
        context.saveGState()
        bezier176Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 177 Drawing
        let bezier177Path = UIBezierPath()
        bezier177Path.move(to: CGPoint(x: 5.41, y: -69.15))
        bezier177Path.addCurve(to: CGPoint(x: -18.64, y: -69.87), controlPoint1: CGPoint(x: -2.67, y: -69.49), controlPoint2: CGPoint(x: -18.64, y: -69.87))
        bezier177Path.addCurve(to: CGPoint(x: 5.42, y: -70.82), controlPoint1: CGPoint(x: -18.64, y: -69.87), controlPoint2: CGPoint(x: -2.67, y: -70.25))
        bezier177Path.addCurve(to: CGPoint(x: 13.74, y: -72.15), controlPoint1: CGPoint(x: 13.51, y: -71.39), controlPoint2: CGPoint(x: 11.71, y: -72.2))
        bezier177Path.addCurve(to: CGPoint(x: 23.13, y: -70.91), controlPoint1: CGPoint(x: 15.77, y: -72.11), controlPoint2: CGPoint(x: 13.72, y: -71.39))
        bezier177Path.addCurve(to: CGPoint(x: 51.36, y: -70.25), controlPoint1: CGPoint(x: 32.53, y: -70.44), controlPoint2: CGPoint(x: 51.36, y: -70.25))
        bezier177Path.addCurve(to: CGPoint(x: 23.12, y: -69.37), controlPoint1: CGPoint(x: 51.36, y: -70.25), controlPoint2: CGPoint(x: 32.54, y: -69.8))
        bezier177Path.addCurve(to: CGPoint(x: 13.67, y: -68.51), controlPoint1: CGPoint(x: 13.7, y: -68.93), controlPoint2: CGPoint(x: 15.62, y: -68.44))
        bezier177Path.addCurve(to: CGPoint(x: 5.41, y: -69.15), controlPoint1: CGPoint(x: 11.73, y: -68.58), controlPoint2: CGPoint(x: 13.49, y: -68.81))
        bezier177Path.close()
        context.saveGState()
        bezier177Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -70.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -70.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 95
        //// Bezier 178 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -102.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier178Path = UIBezierPath()
        bezier178Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier178Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier178Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier178Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier178Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier178Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier178Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier178Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier178Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier178Path.close()
        context.saveGState()
        bezier178Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 179 Drawing
        let bezier179Path = UIBezierPath()
        bezier179Path.move(to: CGPoint(x: 5.68, y: -69.31))
        bezier179Path.addCurve(to: CGPoint(x: -18.37, y: -70.03), controlPoint1: CGPoint(x: -2.4, y: -69.65), controlPoint2: CGPoint(x: -18.37, y: -70.03))
        bezier179Path.addCurve(to: CGPoint(x: 5.69, y: -70.98), controlPoint1: CGPoint(x: -18.37, y: -70.03), controlPoint2: CGPoint(x: -2.41, y: -70.41))
        bezier179Path.addCurve(to: CGPoint(x: 14.01, y: -72.31), controlPoint1: CGPoint(x: 13.78, y: -71.55), controlPoint2: CGPoint(x: 11.98, y: -72.35))
        bezier179Path.addCurve(to: CGPoint(x: 23.39, y: -71.07), controlPoint1: CGPoint(x: 16.04, y: -72.27), controlPoint2: CGPoint(x: 13.99, y: -71.55))
        bezier179Path.addCurve(to: CGPoint(x: 51.63, y: -70.41), controlPoint1: CGPoint(x: 32.8, y: -70.6), controlPoint2: CGPoint(x: 51.63, y: -70.41))
        bezier179Path.addCurve(to: CGPoint(x: 23.39, y: -69.52), controlPoint1: CGPoint(x: 51.63, y: -70.41), controlPoint2: CGPoint(x: 32.81, y: -69.96))
        bezier179Path.addCurve(to: CGPoint(x: 13.94, y: -68.67), controlPoint1: CGPoint(x: 13.96, y: -69.09), controlPoint2: CGPoint(x: 15.89, y: -68.6))
        bezier179Path.addCurve(to: CGPoint(x: 5.68, y: -69.31), controlPoint1: CGPoint(x: 11.99, y: -68.74), controlPoint2: CGPoint(x: 13.75, y: -68.97))
        bezier179Path.close()
        context.saveGState()
        bezier179Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -70.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -70.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 96
        context.saveGState()
        context.translateBy(x: 51.25, y: 40.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 97
        //// Bezier 180 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -144.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier180Path = UIBezierPath()
        bezier180Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier180Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier180Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier180Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier180Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier180Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier180Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier180Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier180Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier180Path.close()
        context.saveGState()
        bezier180Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 181 Drawing
        let bezier181Path = UIBezierPath()
        bezier181Path.move(to: CGPoint(x: 5.41, y: -111.15))
        bezier181Path.addCurve(to: CGPoint(x: -18.64, y: -111.87), controlPoint1: CGPoint(x: -2.67, y: -111.49), controlPoint2: CGPoint(x: -18.64, y: -111.87))
        bezier181Path.addCurve(to: CGPoint(x: 5.42, y: -112.82), controlPoint1: CGPoint(x: -18.64, y: -111.87), controlPoint2: CGPoint(x: -2.67, y: -112.25))
        bezier181Path.addCurve(to: CGPoint(x: 13.74, y: -114.15), controlPoint1: CGPoint(x: 13.51, y: -113.39), controlPoint2: CGPoint(x: 11.71, y: -114.2))
        bezier181Path.addCurve(to: CGPoint(x: 23.13, y: -112.91), controlPoint1: CGPoint(x: 15.77, y: -114.11), controlPoint2: CGPoint(x: 13.72, y: -113.39))
        bezier181Path.addCurve(to: CGPoint(x: 51.36, y: -112.25), controlPoint1: CGPoint(x: 32.53, y: -112.44), controlPoint2: CGPoint(x: 51.36, y: -112.25))
        bezier181Path.addCurve(to: CGPoint(x: 23.12, y: -111.37), controlPoint1: CGPoint(x: 51.36, y: -112.25), controlPoint2: CGPoint(x: 32.54, y: -111.8))
        bezier181Path.addCurve(to: CGPoint(x: 13.67, y: -110.51), controlPoint1: CGPoint(x: 13.7, y: -110.93), controlPoint2: CGPoint(x: 15.62, y: -110.44))
        bezier181Path.addCurve(to: CGPoint(x: 5.41, y: -111.15), controlPoint1: CGPoint(x: 11.73, y: -110.58), controlPoint2: CGPoint(x: 13.49, y: -110.81))
        bezier181Path.close()
        context.saveGState()
        bezier181Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -112.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -112.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 98
        //// Bezier 182 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -144.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier182Path = UIBezierPath()
        bezier182Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier182Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier182Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier182Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier182Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier182Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier182Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier182Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier182Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier182Path.close()
        context.saveGState()
        bezier182Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 183 Drawing
        let bezier183Path = UIBezierPath()
        bezier183Path.move(to: CGPoint(x: 5.68, y: -111.31))
        bezier183Path.addCurve(to: CGPoint(x: -18.37, y: -112.03), controlPoint1: CGPoint(x: -2.4, y: -111.65), controlPoint2: CGPoint(x: -18.37, y: -112.03))
        bezier183Path.addCurve(to: CGPoint(x: 5.69, y: -112.98), controlPoint1: CGPoint(x: -18.37, y: -112.03), controlPoint2: CGPoint(x: -2.41, y: -112.41))
        bezier183Path.addCurve(to: CGPoint(x: 14.01, y: -114.31), controlPoint1: CGPoint(x: 13.78, y: -113.55), controlPoint2: CGPoint(x: 11.98, y: -114.35))
        bezier183Path.addCurve(to: CGPoint(x: 23.39, y: -113.07), controlPoint1: CGPoint(x: 16.04, y: -114.27), controlPoint2: CGPoint(x: 13.99, y: -113.55))
        bezier183Path.addCurve(to: CGPoint(x: 51.63, y: -112.41), controlPoint1: CGPoint(x: 32.8, y: -112.6), controlPoint2: CGPoint(x: 51.63, y: -112.41))
        bezier183Path.addCurve(to: CGPoint(x: 23.39, y: -111.52), controlPoint1: CGPoint(x: 51.63, y: -112.41), controlPoint2: CGPoint(x: 32.81, y: -111.96))
        bezier183Path.addCurve(to: CGPoint(x: 13.94, y: -110.67), controlPoint1: CGPoint(x: 13.96, y: -111.09), controlPoint2: CGPoint(x: 15.89, y: -110.6))
        bezier183Path.addCurve(to: CGPoint(x: 5.68, y: -111.31), controlPoint1: CGPoint(x: 11.99, y: -110.74), controlPoint2: CGPoint(x: 13.75, y: -110.97))
        bezier183Path.close()
        context.saveGState()
        bezier183Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -112.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -112.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 99
        context.saveGState()
        context.translateBy(x: 46.25, y: 11.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 100
        //// Bezier 184 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -147.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier184Path = UIBezierPath()
        bezier184Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier184Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier184Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier184Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier184Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier184Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier184Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier184Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier184Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier184Path.close()
        context.saveGState()
        bezier184Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 185 Drawing
        let bezier185Path = UIBezierPath()
        bezier185Path.move(to: CGPoint(x: 5.41, y: -114.15))
        bezier185Path.addCurve(to: CGPoint(x: -18.64, y: -114.87), controlPoint1: CGPoint(x: -2.67, y: -114.49), controlPoint2: CGPoint(x: -18.64, y: -114.87))
        bezier185Path.addCurve(to: CGPoint(x: 5.42, y: -115.82), controlPoint1: CGPoint(x: -18.64, y: -114.87), controlPoint2: CGPoint(x: -2.67, y: -115.25))
        bezier185Path.addCurve(to: CGPoint(x: 13.74, y: -117.15), controlPoint1: CGPoint(x: 13.51, y: -116.39), controlPoint2: CGPoint(x: 11.71, y: -117.2))
        bezier185Path.addCurve(to: CGPoint(x: 23.13, y: -115.91), controlPoint1: CGPoint(x: 15.77, y: -117.11), controlPoint2: CGPoint(x: 13.72, y: -116.39))
        bezier185Path.addCurve(to: CGPoint(x: 51.36, y: -115.25), controlPoint1: CGPoint(x: 32.53, y: -115.44), controlPoint2: CGPoint(x: 51.36, y: -115.25))
        bezier185Path.addCurve(to: CGPoint(x: 23.12, y: -114.37), controlPoint1: CGPoint(x: 51.36, y: -115.25), controlPoint2: CGPoint(x: 32.54, y: -114.8))
        bezier185Path.addCurve(to: CGPoint(x: 13.67, y: -113.51), controlPoint1: CGPoint(x: 13.7, y: -113.93), controlPoint2: CGPoint(x: 15.62, y: -113.44))
        bezier185Path.addCurve(to: CGPoint(x: 5.41, y: -114.15), controlPoint1: CGPoint(x: 11.73, y: -113.58), controlPoint2: CGPoint(x: 13.49, y: -113.81))
        bezier185Path.close()
        context.saveGState()
        bezier185Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -115.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -115.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 101
        //// Bezier 186 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -147.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier186Path = UIBezierPath()
        bezier186Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier186Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier186Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier186Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier186Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier186Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier186Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier186Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier186Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier186Path.close()
        context.saveGState()
        bezier186Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 187 Drawing
        let bezier187Path = UIBezierPath()
        bezier187Path.move(to: CGPoint(x: 5.68, y: -114.31))
        bezier187Path.addCurve(to: CGPoint(x: -18.37, y: -115.03), controlPoint1: CGPoint(x: -2.4, y: -114.65), controlPoint2: CGPoint(x: -18.37, y: -115.03))
        bezier187Path.addCurve(to: CGPoint(x: 5.69, y: -115.98), controlPoint1: CGPoint(x: -18.37, y: -115.03), controlPoint2: CGPoint(x: -2.41, y: -115.41))
        bezier187Path.addCurve(to: CGPoint(x: 14.01, y: -117.31), controlPoint1: CGPoint(x: 13.78, y: -116.55), controlPoint2: CGPoint(x: 11.98, y: -117.35))
        bezier187Path.addCurve(to: CGPoint(x: 23.39, y: -116.07), controlPoint1: CGPoint(x: 16.04, y: -117.27), controlPoint2: CGPoint(x: 13.99, y: -116.55))
        bezier187Path.addCurve(to: CGPoint(x: 51.63, y: -115.41), controlPoint1: CGPoint(x: 32.8, y: -115.6), controlPoint2: CGPoint(x: 51.63, y: -115.41))
        bezier187Path.addCurve(to: CGPoint(x: 23.39, y: -114.52), controlPoint1: CGPoint(x: 51.63, y: -115.41), controlPoint2: CGPoint(x: 32.81, y: -114.96))
        bezier187Path.addCurve(to: CGPoint(x: 13.94, y: -113.67), controlPoint1: CGPoint(x: 13.96, y: -114.09), controlPoint2: CGPoint(x: 15.89, y: -113.6))
        bezier187Path.addCurve(to: CGPoint(x: 5.68, y: -114.31), controlPoint1: CGPoint(x: 11.99, y: -113.74), controlPoint2: CGPoint(x: 13.75, y: -113.97))
        bezier187Path.close()
        context.saveGState()
        bezier187Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -115.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -115.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 102
        context.saveGState()
        context.translateBy(x: 82.25, y: 34.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 103
        //// Bezier 188 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -125.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier188Path = UIBezierPath()
        bezier188Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier188Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier188Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier188Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier188Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier188Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier188Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier188Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier188Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier188Path.close()
        context.saveGState()
        bezier188Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 189 Drawing
        let bezier189Path = UIBezierPath()
        bezier189Path.move(to: CGPoint(x: 5.41, y: -92.15))
        bezier189Path.addCurve(to: CGPoint(x: -18.64, y: -92.87), controlPoint1: CGPoint(x: -2.67, y: -92.49), controlPoint2: CGPoint(x: -18.64, y: -92.87))
        bezier189Path.addCurve(to: CGPoint(x: 5.42, y: -93.82), controlPoint1: CGPoint(x: -18.64, y: -92.87), controlPoint2: CGPoint(x: -2.67, y: -93.25))
        bezier189Path.addCurve(to: CGPoint(x: 13.74, y: -95.15), controlPoint1: CGPoint(x: 13.51, y: -94.39), controlPoint2: CGPoint(x: 11.71, y: -95.2))
        bezier189Path.addCurve(to: CGPoint(x: 23.13, y: -93.91), controlPoint1: CGPoint(x: 15.77, y: -95.11), controlPoint2: CGPoint(x: 13.72, y: -94.39))
        bezier189Path.addCurve(to: CGPoint(x: 51.36, y: -93.25), controlPoint1: CGPoint(x: 32.53, y: -93.44), controlPoint2: CGPoint(x: 51.36, y: -93.25))
        bezier189Path.addCurve(to: CGPoint(x: 23.12, y: -92.37), controlPoint1: CGPoint(x: 51.36, y: -93.25), controlPoint2: CGPoint(x: 32.54, y: -92.8))
        bezier189Path.addCurve(to: CGPoint(x: 13.67, y: -91.51), controlPoint1: CGPoint(x: 13.7, y: -91.93), controlPoint2: CGPoint(x: 15.62, y: -91.44))
        bezier189Path.addCurve(to: CGPoint(x: 5.41, y: -92.15), controlPoint1: CGPoint(x: 11.73, y: -91.58), controlPoint2: CGPoint(x: 13.49, y: -91.81))
        bezier189Path.close()
        context.saveGState()
        bezier189Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -93.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -93.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 104
        //// Bezier 190 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -125.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier190Path = UIBezierPath()
        bezier190Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier190Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier190Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier190Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier190Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier190Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier190Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier190Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier190Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier190Path.close()
        context.saveGState()
        bezier190Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 191 Drawing
        let bezier191Path = UIBezierPath()
        bezier191Path.move(to: CGPoint(x: 5.68, y: -92.31))
        bezier191Path.addCurve(to: CGPoint(x: -18.37, y: -93.03), controlPoint1: CGPoint(x: -2.4, y: -92.65), controlPoint2: CGPoint(x: -18.37, y: -93.03))
        bezier191Path.addCurve(to: CGPoint(x: 5.69, y: -93.98), controlPoint1: CGPoint(x: -18.37, y: -93.03), controlPoint2: CGPoint(x: -2.41, y: -93.41))
        bezier191Path.addCurve(to: CGPoint(x: 14.01, y: -95.31), controlPoint1: CGPoint(x: 13.78, y: -94.55), controlPoint2: CGPoint(x: 11.98, y: -95.35))
        bezier191Path.addCurve(to: CGPoint(x: 23.39, y: -94.07), controlPoint1: CGPoint(x: 16.04, y: -95.27), controlPoint2: CGPoint(x: 13.99, y: -94.55))
        bezier191Path.addCurve(to: CGPoint(x: 51.63, y: -93.41), controlPoint1: CGPoint(x: 32.8, y: -93.6), controlPoint2: CGPoint(x: 51.63, y: -93.41))
        bezier191Path.addCurve(to: CGPoint(x: 23.39, y: -92.52), controlPoint1: CGPoint(x: 51.63, y: -93.41), controlPoint2: CGPoint(x: 32.81, y: -92.96))
        bezier191Path.addCurve(to: CGPoint(x: 13.94, y: -91.67), controlPoint1: CGPoint(x: 13.96, y: -92.09), controlPoint2: CGPoint(x: 15.89, y: -91.6))
        bezier191Path.addCurve(to: CGPoint(x: 5.68, y: -92.31), controlPoint1: CGPoint(x: 11.99, y: -91.74), controlPoint2: CGPoint(x: 13.75, y: -91.97))
        bezier191Path.close()
        context.saveGState()
        bezier191Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -93.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -93.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 105
        context.saveGState()
        context.translateBy(x: 153.25, y: 89.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 106
        //// Bezier 192 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -84.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier192Path = UIBezierPath()
        bezier192Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier192Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier192Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier192Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier192Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier192Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier192Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier192Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier192Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier192Path.close()
        context.saveGState()
        bezier192Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 193 Drawing
        let bezier193Path = UIBezierPath()
        bezier193Path.move(to: CGPoint(x: 5.41, y: -51.15))
        bezier193Path.addCurve(to: CGPoint(x: -18.64, y: -51.87), controlPoint1: CGPoint(x: -2.67, y: -51.49), controlPoint2: CGPoint(x: -18.64, y: -51.87))
        bezier193Path.addCurve(to: CGPoint(x: 5.42, y: -52.82), controlPoint1: CGPoint(x: -18.64, y: -51.87), controlPoint2: CGPoint(x: -2.67, y: -52.25))
        bezier193Path.addCurve(to: CGPoint(x: 13.74, y: -54.15), controlPoint1: CGPoint(x: 13.51, y: -53.39), controlPoint2: CGPoint(x: 11.71, y: -54.2))
        bezier193Path.addCurve(to: CGPoint(x: 23.13, y: -52.91), controlPoint1: CGPoint(x: 15.77, y: -54.11), controlPoint2: CGPoint(x: 13.72, y: -53.39))
        bezier193Path.addCurve(to: CGPoint(x: 51.36, y: -52.25), controlPoint1: CGPoint(x: 32.53, y: -52.44), controlPoint2: CGPoint(x: 51.36, y: -52.25))
        bezier193Path.addCurve(to: CGPoint(x: 23.12, y: -51.37), controlPoint1: CGPoint(x: 51.36, y: -52.25), controlPoint2: CGPoint(x: 32.54, y: -51.8))
        bezier193Path.addCurve(to: CGPoint(x: 13.67, y: -50.51), controlPoint1: CGPoint(x: 13.7, y: -50.93), controlPoint2: CGPoint(x: 15.62, y: -50.44))
        bezier193Path.addCurve(to: CGPoint(x: 5.41, y: -51.15), controlPoint1: CGPoint(x: 11.73, y: -50.58), controlPoint2: CGPoint(x: 13.49, y: -50.81))
        bezier193Path.close()
        context.saveGState()
        bezier193Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -52.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -52.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 107
        //// Bezier 194 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -84.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier194Path = UIBezierPath()
        bezier194Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier194Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier194Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier194Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier194Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier194Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier194Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier194Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier194Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier194Path.close()
        context.saveGState()
        bezier194Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 195 Drawing
        let bezier195Path = UIBezierPath()
        bezier195Path.move(to: CGPoint(x: 5.68, y: -51.31))
        bezier195Path.addCurve(to: CGPoint(x: -18.37, y: -52.03), controlPoint1: CGPoint(x: -2.4, y: -51.65), controlPoint2: CGPoint(x: -18.37, y: -52.03))
        bezier195Path.addCurve(to: CGPoint(x: 5.69, y: -52.98), controlPoint1: CGPoint(x: -18.37, y: -52.03), controlPoint2: CGPoint(x: -2.41, y: -52.41))
        bezier195Path.addCurve(to: CGPoint(x: 14.01, y: -54.31), controlPoint1: CGPoint(x: 13.78, y: -53.55), controlPoint2: CGPoint(x: 11.98, y: -54.35))
        bezier195Path.addCurve(to: CGPoint(x: 23.39, y: -53.07), controlPoint1: CGPoint(x: 16.04, y: -54.27), controlPoint2: CGPoint(x: 13.99, y: -53.55))
        bezier195Path.addCurve(to: CGPoint(x: 51.63, y: -52.41), controlPoint1: CGPoint(x: 32.8, y: -52.6), controlPoint2: CGPoint(x: 51.63, y: -52.41))
        bezier195Path.addCurve(to: CGPoint(x: 23.39, y: -51.52), controlPoint1: CGPoint(x: 51.63, y: -52.41), controlPoint2: CGPoint(x: 32.81, y: -51.96))
        bezier195Path.addCurve(to: CGPoint(x: 13.94, y: -50.67), controlPoint1: CGPoint(x: 13.96, y: -51.09), controlPoint2: CGPoint(x: 15.89, y: -50.6))
        bezier195Path.addCurve(to: CGPoint(x: 5.68, y: -51.31), controlPoint1: CGPoint(x: 11.99, y: -50.74), controlPoint2: CGPoint(x: 13.75, y: -50.97))
        bezier195Path.close()
        context.saveGState()
        bezier195Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -52.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -52.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 108
        context.saveGState()
        context.translateBy(x: 219.25, y: 99.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.4)



        //// Group 109
        //// Bezier 196 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -49.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier196Path = UIBezierPath()
        bezier196Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier196Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier196Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier196Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier196Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier196Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier196Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier196Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier196Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier196Path.close()
        context.saveGState()
        bezier196Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 197 Drawing
        let bezier197Path = UIBezierPath()
        bezier197Path.move(to: CGPoint(x: 5.41, y: -16.15))
        bezier197Path.addCurve(to: CGPoint(x: -18.64, y: -16.87), controlPoint1: CGPoint(x: -2.67, y: -16.49), controlPoint2: CGPoint(x: -18.64, y: -16.87))
        bezier197Path.addCurve(to: CGPoint(x: 5.42, y: -17.82), controlPoint1: CGPoint(x: -18.64, y: -16.87), controlPoint2: CGPoint(x: -2.67, y: -17.25))
        bezier197Path.addCurve(to: CGPoint(x: 13.74, y: -19.15), controlPoint1: CGPoint(x: 13.51, y: -18.39), controlPoint2: CGPoint(x: 11.71, y: -19.2))
        bezier197Path.addCurve(to: CGPoint(x: 23.13, y: -17.91), controlPoint1: CGPoint(x: 15.77, y: -19.11), controlPoint2: CGPoint(x: 13.72, y: -18.39))
        bezier197Path.addCurve(to: CGPoint(x: 51.36, y: -17.25), controlPoint1: CGPoint(x: 32.53, y: -17.44), controlPoint2: CGPoint(x: 51.36, y: -17.25))
        bezier197Path.addCurve(to: CGPoint(x: 23.12, y: -16.37), controlPoint1: CGPoint(x: 51.36, y: -17.25), controlPoint2: CGPoint(x: 32.54, y: -16.8))
        bezier197Path.addCurve(to: CGPoint(x: 13.67, y: -15.51), controlPoint1: CGPoint(x: 13.7, y: -15.93), controlPoint2: CGPoint(x: 15.62, y: -15.44))
        bezier197Path.addCurve(to: CGPoint(x: 5.41, y: -16.15), controlPoint1: CGPoint(x: 11.73, y: -15.58), controlPoint2: CGPoint(x: 13.49, y: -15.81))
        bezier197Path.close()
        context.saveGState()
        bezier197Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -17.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -17.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 110
        //// Bezier 198 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -49.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier198Path = UIBezierPath()
        bezier198Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier198Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier198Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier198Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier198Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier198Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier198Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier198Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier198Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier198Path.close()
        context.saveGState()
        bezier198Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 199 Drawing
        let bezier199Path = UIBezierPath()
        bezier199Path.move(to: CGPoint(x: 5.68, y: -16.31))
        bezier199Path.addCurve(to: CGPoint(x: -18.37, y: -17.03), controlPoint1: CGPoint(x: -2.4, y: -16.65), controlPoint2: CGPoint(x: -18.37, y: -17.03))
        bezier199Path.addCurve(to: CGPoint(x: 5.69, y: -17.98), controlPoint1: CGPoint(x: -18.37, y: -17.03), controlPoint2: CGPoint(x: -2.41, y: -17.41))
        bezier199Path.addCurve(to: CGPoint(x: 14.01, y: -19.31), controlPoint1: CGPoint(x: 13.78, y: -18.55), controlPoint2: CGPoint(x: 11.98, y: -19.35))
        bezier199Path.addCurve(to: CGPoint(x: 23.39, y: -18.07), controlPoint1: CGPoint(x: 16.04, y: -19.27), controlPoint2: CGPoint(x: 13.99, y: -18.55))
        bezier199Path.addCurve(to: CGPoint(x: 51.63, y: -17.41), controlPoint1: CGPoint(x: 32.8, y: -17.6), controlPoint2: CGPoint(x: 51.63, y: -17.41))
        bezier199Path.addCurve(to: CGPoint(x: 23.39, y: -16.52), controlPoint1: CGPoint(x: 51.63, y: -17.41), controlPoint2: CGPoint(x: 32.81, y: -16.96))
        bezier199Path.addCurve(to: CGPoint(x: 13.94, y: -15.67), controlPoint1: CGPoint(x: 13.96, y: -16.09), controlPoint2: CGPoint(x: 15.89, y: -15.6))
        bezier199Path.addCurve(to: CGPoint(x: 5.68, y: -16.31), controlPoint1: CGPoint(x: 11.99, y: -15.74), controlPoint2: CGPoint(x: 13.75, y: -15.97))
        bezier199Path.close()
        context.saveGState()
        bezier199Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -17.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -17.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 111
        context.saveGState()
        context.translateBy(x: 258.25, y: 74.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 112
        //// Bezier 200 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -22.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier200Path = UIBezierPath()
        bezier200Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier200Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier200Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier200Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier200Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier200Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier200Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier200Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier200Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier200Path.close()
        context.saveGState()
        bezier200Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 201 Drawing
        let bezier201Path = UIBezierPath()
        bezier201Path.move(to: CGPoint(x: 5.41, y: 10.85))
        bezier201Path.addCurve(to: CGPoint(x: -18.64, y: 10.13), controlPoint1: CGPoint(x: -2.67, y: 10.51), controlPoint2: CGPoint(x: -18.64, y: 10.13))
        bezier201Path.addCurve(to: CGPoint(x: 5.42, y: 9.18), controlPoint1: CGPoint(x: -18.64, y: 10.13), controlPoint2: CGPoint(x: -2.67, y: 9.75))
        bezier201Path.addCurve(to: CGPoint(x: 13.74, y: 7.85), controlPoint1: CGPoint(x: 13.51, y: 8.61), controlPoint2: CGPoint(x: 11.71, y: 7.8))
        bezier201Path.addCurve(to: CGPoint(x: 23.13, y: 9.09), controlPoint1: CGPoint(x: 15.77, y: 7.89), controlPoint2: CGPoint(x: 13.72, y: 8.61))
        bezier201Path.addCurve(to: CGPoint(x: 51.36, y: 9.75), controlPoint1: CGPoint(x: 32.53, y: 9.56), controlPoint2: CGPoint(x: 51.36, y: 9.75))
        bezier201Path.addCurve(to: CGPoint(x: 23.12, y: 10.63), controlPoint1: CGPoint(x: 51.36, y: 9.75), controlPoint2: CGPoint(x: 32.54, y: 10.2))
        bezier201Path.addCurve(to: CGPoint(x: 13.67, y: 11.49), controlPoint1: CGPoint(x: 13.7, y: 11.07), controlPoint2: CGPoint(x: 15.62, y: 11.56))
        bezier201Path.addCurve(to: CGPoint(x: 5.41, y: 10.85), controlPoint1: CGPoint(x: 11.73, y: 11.42), controlPoint2: CGPoint(x: 13.49, y: 11.19))
        bezier201Path.close()
        context.saveGState()
        bezier201Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 9.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 9.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 113
        //// Bezier 202 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -22.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier202Path = UIBezierPath()
        bezier202Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier202Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier202Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier202Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier202Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier202Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier202Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier202Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier202Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier202Path.close()
        context.saveGState()
        bezier202Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 203 Drawing
        let bezier203Path = UIBezierPath()
        bezier203Path.move(to: CGPoint(x: 5.68, y: 10.69))
        bezier203Path.addCurve(to: CGPoint(x: -18.37, y: 9.97), controlPoint1: CGPoint(x: -2.4, y: 10.35), controlPoint2: CGPoint(x: -18.37, y: 9.97))
        bezier203Path.addCurve(to: CGPoint(x: 5.69, y: 9.02), controlPoint1: CGPoint(x: -18.37, y: 9.97), controlPoint2: CGPoint(x: -2.41, y: 9.59))
        bezier203Path.addCurve(to: CGPoint(x: 14.01, y: 7.69), controlPoint1: CGPoint(x: 13.78, y: 8.45), controlPoint2: CGPoint(x: 11.98, y: 7.65))
        bezier203Path.addCurve(to: CGPoint(x: 23.39, y: 8.93), controlPoint1: CGPoint(x: 16.04, y: 7.73), controlPoint2: CGPoint(x: 13.99, y: 8.45))
        bezier203Path.addCurve(to: CGPoint(x: 51.63, y: 9.59), controlPoint1: CGPoint(x: 32.8, y: 9.4), controlPoint2: CGPoint(x: 51.63, y: 9.59))
        bezier203Path.addCurve(to: CGPoint(x: 23.39, y: 10.48), controlPoint1: CGPoint(x: 51.63, y: 9.59), controlPoint2: CGPoint(x: 32.81, y: 10.04))
        bezier203Path.addCurve(to: CGPoint(x: 13.94, y: 11.33), controlPoint1: CGPoint(x: 13.96, y: 10.91), controlPoint2: CGPoint(x: 15.89, y: 11.4))
        bezier203Path.addCurve(to: CGPoint(x: 5.68, y: 10.69), controlPoint1: CGPoint(x: 11.99, y: 11.26), controlPoint2: CGPoint(x: 13.75, y: 11.03))
        bezier203Path.close()
        context.saveGState()
        bezier203Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 9.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 9.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 114
        context.saveGState()
        context.translateBy(x: 191.25, y: 74.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 115
        //// Bezier 204 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -60.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier204Path = UIBezierPath()
        bezier204Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier204Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier204Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier204Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier204Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier204Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier204Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier204Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier204Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier204Path.close()
        context.saveGState()
        bezier204Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 205 Drawing
        let bezier205Path = UIBezierPath()
        bezier205Path.move(to: CGPoint(x: 5.41, y: -27.15))
        bezier205Path.addCurve(to: CGPoint(x: -18.64, y: -27.87), controlPoint1: CGPoint(x: -2.67, y: -27.49), controlPoint2: CGPoint(x: -18.64, y: -27.87))
        bezier205Path.addCurve(to: CGPoint(x: 5.42, y: -28.82), controlPoint1: CGPoint(x: -18.64, y: -27.87), controlPoint2: CGPoint(x: -2.67, y: -28.25))
        bezier205Path.addCurve(to: CGPoint(x: 13.74, y: -30.15), controlPoint1: CGPoint(x: 13.51, y: -29.39), controlPoint2: CGPoint(x: 11.71, y: -30.2))
        bezier205Path.addCurve(to: CGPoint(x: 23.13, y: -28.91), controlPoint1: CGPoint(x: 15.77, y: -30.11), controlPoint2: CGPoint(x: 13.72, y: -29.39))
        bezier205Path.addCurve(to: CGPoint(x: 51.36, y: -28.25), controlPoint1: CGPoint(x: 32.53, y: -28.44), controlPoint2: CGPoint(x: 51.36, y: -28.25))
        bezier205Path.addCurve(to: CGPoint(x: 23.12, y: -27.37), controlPoint1: CGPoint(x: 51.36, y: -28.25), controlPoint2: CGPoint(x: 32.54, y: -27.8))
        bezier205Path.addCurve(to: CGPoint(x: 13.67, y: -26.51), controlPoint1: CGPoint(x: 13.7, y: -26.93), controlPoint2: CGPoint(x: 15.62, y: -26.44))
        bezier205Path.addCurve(to: CGPoint(x: 5.41, y: -27.15), controlPoint1: CGPoint(x: 11.73, y: -26.58), controlPoint2: CGPoint(x: 13.49, y: -26.81))
        bezier205Path.close()
        context.saveGState()
        bezier205Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -28.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -28.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 116
        //// Bezier 206 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -60.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier206Path = UIBezierPath()
        bezier206Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier206Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier206Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier206Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier206Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier206Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier206Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier206Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier206Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier206Path.close()
        context.saveGState()
        bezier206Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 207 Drawing
        let bezier207Path = UIBezierPath()
        bezier207Path.move(to: CGPoint(x: 5.68, y: -27.31))
        bezier207Path.addCurve(to: CGPoint(x: -18.37, y: -28.03), controlPoint1: CGPoint(x: -2.4, y: -27.65), controlPoint2: CGPoint(x: -18.37, y: -28.03))
        bezier207Path.addCurve(to: CGPoint(x: 5.69, y: -28.98), controlPoint1: CGPoint(x: -18.37, y: -28.03), controlPoint2: CGPoint(x: -2.41, y: -28.41))
        bezier207Path.addCurve(to: CGPoint(x: 14.01, y: -30.31), controlPoint1: CGPoint(x: 13.78, y: -29.55), controlPoint2: CGPoint(x: 11.98, y: -30.35))
        bezier207Path.addCurve(to: CGPoint(x: 23.39, y: -29.07), controlPoint1: CGPoint(x: 16.04, y: -30.27), controlPoint2: CGPoint(x: 13.99, y: -29.55))
        bezier207Path.addCurve(to: CGPoint(x: 51.63, y: -28.41), controlPoint1: CGPoint(x: 32.8, y: -28.6), controlPoint2: CGPoint(x: 51.63, y: -28.41))
        bezier207Path.addCurve(to: CGPoint(x: 23.39, y: -27.52), controlPoint1: CGPoint(x: 51.63, y: -28.41), controlPoint2: CGPoint(x: 32.81, y: -27.96))
        bezier207Path.addCurve(to: CGPoint(x: 13.94, y: -26.67), controlPoint1: CGPoint(x: 13.96, y: -27.09), controlPoint2: CGPoint(x: 15.89, y: -26.6))
        bezier207Path.addCurve(to: CGPoint(x: 5.68, y: -27.31), controlPoint1: CGPoint(x: 11.99, y: -26.74), controlPoint2: CGPoint(x: 13.75, y: -26.97))
        bezier207Path.close()
        context.saveGState()
        bezier207Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -28.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -28.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 117
        context.saveGState()
        context.translateBy(x: 79.25, y: 84.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.3)



        //// Group 118
        //// Bezier 208 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -103.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier208Path = UIBezierPath()
        bezier208Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier208Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier208Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier208Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier208Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier208Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier208Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier208Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier208Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier208Path.close()
        context.saveGState()
        bezier208Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 209 Drawing
        let bezier209Path = UIBezierPath()
        bezier209Path.move(to: CGPoint(x: 5.41, y: -70.15))
        bezier209Path.addCurve(to: CGPoint(x: -18.64, y: -70.87), controlPoint1: CGPoint(x: -2.67, y: -70.49), controlPoint2: CGPoint(x: -18.64, y: -70.87))
        bezier209Path.addCurve(to: CGPoint(x: 5.42, y: -71.82), controlPoint1: CGPoint(x: -18.64, y: -70.87), controlPoint2: CGPoint(x: -2.67, y: -71.25))
        bezier209Path.addCurve(to: CGPoint(x: 13.74, y: -73.15), controlPoint1: CGPoint(x: 13.51, y: -72.39), controlPoint2: CGPoint(x: 11.71, y: -73.2))
        bezier209Path.addCurve(to: CGPoint(x: 23.13, y: -71.91), controlPoint1: CGPoint(x: 15.77, y: -73.11), controlPoint2: CGPoint(x: 13.72, y: -72.39))
        bezier209Path.addCurve(to: CGPoint(x: 51.36, y: -71.25), controlPoint1: CGPoint(x: 32.53, y: -71.44), controlPoint2: CGPoint(x: 51.36, y: -71.25))
        bezier209Path.addCurve(to: CGPoint(x: 23.12, y: -70.37), controlPoint1: CGPoint(x: 51.36, y: -71.25), controlPoint2: CGPoint(x: 32.54, y: -70.8))
        bezier209Path.addCurve(to: CGPoint(x: 13.67, y: -69.51), controlPoint1: CGPoint(x: 13.7, y: -69.93), controlPoint2: CGPoint(x: 15.62, y: -69.44))
        bezier209Path.addCurve(to: CGPoint(x: 5.41, y: -70.15), controlPoint1: CGPoint(x: 11.73, y: -69.58), controlPoint2: CGPoint(x: 13.49, y: -69.81))
        bezier209Path.close()
        context.saveGState()
        bezier209Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -71.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -71.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 119
        //// Bezier 210 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -103.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier210Path = UIBezierPath()
        bezier210Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier210Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier210Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier210Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier210Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier210Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier210Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier210Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier210Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier210Path.close()
        context.saveGState()
        bezier210Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 211 Drawing
        let bezier211Path = UIBezierPath()
        bezier211Path.move(to: CGPoint(x: 5.68, y: -70.31))
        bezier211Path.addCurve(to: CGPoint(x: -18.37, y: -71.03), controlPoint1: CGPoint(x: -2.4, y: -70.65), controlPoint2: CGPoint(x: -18.37, y: -71.03))
        bezier211Path.addCurve(to: CGPoint(x: 5.69, y: -71.98), controlPoint1: CGPoint(x: -18.37, y: -71.03), controlPoint2: CGPoint(x: -2.41, y: -71.41))
        bezier211Path.addCurve(to: CGPoint(x: 14.01, y: -73.31), controlPoint1: CGPoint(x: 13.78, y: -72.55), controlPoint2: CGPoint(x: 11.98, y: -73.35))
        bezier211Path.addCurve(to: CGPoint(x: 23.39, y: -72.07), controlPoint1: CGPoint(x: 16.04, y: -73.27), controlPoint2: CGPoint(x: 13.99, y: -72.55))
        bezier211Path.addCurve(to: CGPoint(x: 51.63, y: -71.41), controlPoint1: CGPoint(x: 32.8, y: -71.6), controlPoint2: CGPoint(x: 51.63, y: -71.41))
        bezier211Path.addCurve(to: CGPoint(x: 23.39, y: -70.52), controlPoint1: CGPoint(x: 51.63, y: -71.41), controlPoint2: CGPoint(x: 32.81, y: -70.96))
        bezier211Path.addCurve(to: CGPoint(x: 13.94, y: -69.67), controlPoint1: CGPoint(x: 13.96, y: -70.09), controlPoint2: CGPoint(x: 15.89, y: -69.6))
        bezier211Path.addCurve(to: CGPoint(x: 5.68, y: -70.31), controlPoint1: CGPoint(x: 11.99, y: -69.74), controlPoint2: CGPoint(x: 13.75, y: -69.97))
        bezier211Path.close()
        context.saveGState()
        bezier211Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -71.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -71.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 120
        context.saveGState()
        context.translateBy(x: 38.25, y: 94.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.34, y: 0.34)



        //// Group 121
        //// Bezier 212 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -112.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier212Path = UIBezierPath()
        bezier212Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier212Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier212Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier212Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier212Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier212Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier212Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier212Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier212Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier212Path.close()
        context.saveGState()
        bezier212Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 213 Drawing
        let bezier213Path = UIBezierPath()
        bezier213Path.move(to: CGPoint(x: 5.41, y: -79.15))
        bezier213Path.addCurve(to: CGPoint(x: -18.64, y: -79.87), controlPoint1: CGPoint(x: -2.67, y: -79.49), controlPoint2: CGPoint(x: -18.64, y: -79.87))
        bezier213Path.addCurve(to: CGPoint(x: 5.42, y: -80.82), controlPoint1: CGPoint(x: -18.64, y: -79.87), controlPoint2: CGPoint(x: -2.67, y: -80.25))
        bezier213Path.addCurve(to: CGPoint(x: 13.74, y: -82.15), controlPoint1: CGPoint(x: 13.51, y: -81.39), controlPoint2: CGPoint(x: 11.71, y: -82.2))
        bezier213Path.addCurve(to: CGPoint(x: 23.13, y: -80.91), controlPoint1: CGPoint(x: 15.77, y: -82.11), controlPoint2: CGPoint(x: 13.72, y: -81.39))
        bezier213Path.addCurve(to: CGPoint(x: 51.36, y: -80.25), controlPoint1: CGPoint(x: 32.53, y: -80.44), controlPoint2: CGPoint(x: 51.36, y: -80.25))
        bezier213Path.addCurve(to: CGPoint(x: 23.12, y: -79.37), controlPoint1: CGPoint(x: 51.36, y: -80.25), controlPoint2: CGPoint(x: 32.54, y: -79.8))
        bezier213Path.addCurve(to: CGPoint(x: 13.67, y: -78.51), controlPoint1: CGPoint(x: 13.7, y: -78.93), controlPoint2: CGPoint(x: 15.62, y: -78.44))
        bezier213Path.addCurve(to: CGPoint(x: 5.41, y: -79.15), controlPoint1: CGPoint(x: 11.73, y: -78.58), controlPoint2: CGPoint(x: 13.49, y: -78.81))
        bezier213Path.close()
        context.saveGState()
        bezier213Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -80.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -80.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 122
        //// Bezier 214 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -112.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier214Path = UIBezierPath()
        bezier214Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier214Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier214Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier214Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier214Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier214Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier214Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier214Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier214Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier214Path.close()
        context.saveGState()
        bezier214Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 215 Drawing
        let bezier215Path = UIBezierPath()
        bezier215Path.move(to: CGPoint(x: 5.68, y: -79.31))
        bezier215Path.addCurve(to: CGPoint(x: -18.37, y: -80.03), controlPoint1: CGPoint(x: -2.4, y: -79.65), controlPoint2: CGPoint(x: -18.37, y: -80.03))
        bezier215Path.addCurve(to: CGPoint(x: 5.69, y: -80.98), controlPoint1: CGPoint(x: -18.37, y: -80.03), controlPoint2: CGPoint(x: -2.41, y: -80.41))
        bezier215Path.addCurve(to: CGPoint(x: 14.01, y: -82.31), controlPoint1: CGPoint(x: 13.78, y: -81.55), controlPoint2: CGPoint(x: 11.98, y: -82.35))
        bezier215Path.addCurve(to: CGPoint(x: 23.39, y: -81.07), controlPoint1: CGPoint(x: 16.04, y: -82.27), controlPoint2: CGPoint(x: 13.99, y: -81.55))
        bezier215Path.addCurve(to: CGPoint(x: 51.63, y: -80.41), controlPoint1: CGPoint(x: 32.8, y: -80.6), controlPoint2: CGPoint(x: 51.63, y: -80.41))
        bezier215Path.addCurve(to: CGPoint(x: 23.39, y: -79.52), controlPoint1: CGPoint(x: 51.63, y: -80.41), controlPoint2: CGPoint(x: 32.81, y: -79.96))
        bezier215Path.addCurve(to: CGPoint(x: 13.94, y: -78.67), controlPoint1: CGPoint(x: 13.96, y: -79.09), controlPoint2: CGPoint(x: 15.89, y: -78.6))
        bezier215Path.addCurve(to: CGPoint(x: 5.68, y: -79.31), controlPoint1: CGPoint(x: 11.99, y: -78.74), controlPoint2: CGPoint(x: 13.75, y: -78.97))
        bezier215Path.close()
        context.saveGState()
        bezier215Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -80.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -80.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 123
        context.saveGState()
        context.translateBy(x: 48.25, y: 153.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 124
        //// Bezier 216 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -146.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier216Path = UIBezierPath()
        bezier216Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier216Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier216Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier216Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier216Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier216Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier216Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier216Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier216Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier216Path.close()
        context.saveGState()
        bezier216Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 217 Drawing
        let bezier217Path = UIBezierPath()
        bezier217Path.move(to: CGPoint(x: 5.41, y: -113.15))
        bezier217Path.addCurve(to: CGPoint(x: -18.64, y: -113.87), controlPoint1: CGPoint(x: -2.67, y: -113.49), controlPoint2: CGPoint(x: -18.64, y: -113.87))
        bezier217Path.addCurve(to: CGPoint(x: 5.42, y: -114.82), controlPoint1: CGPoint(x: -18.64, y: -113.87), controlPoint2: CGPoint(x: -2.67, y: -114.25))
        bezier217Path.addCurve(to: CGPoint(x: 13.74, y: -116.15), controlPoint1: CGPoint(x: 13.51, y: -115.39), controlPoint2: CGPoint(x: 11.71, y: -116.2))
        bezier217Path.addCurve(to: CGPoint(x: 23.13, y: -114.91), controlPoint1: CGPoint(x: 15.77, y: -116.11), controlPoint2: CGPoint(x: 13.72, y: -115.39))
        bezier217Path.addCurve(to: CGPoint(x: 51.36, y: -114.25), controlPoint1: CGPoint(x: 32.53, y: -114.44), controlPoint2: CGPoint(x: 51.36, y: -114.25))
        bezier217Path.addCurve(to: CGPoint(x: 23.12, y: -113.37), controlPoint1: CGPoint(x: 51.36, y: -114.25), controlPoint2: CGPoint(x: 32.54, y: -113.8))
        bezier217Path.addCurve(to: CGPoint(x: 13.67, y: -112.51), controlPoint1: CGPoint(x: 13.7, y: -112.93), controlPoint2: CGPoint(x: 15.62, y: -112.44))
        bezier217Path.addCurve(to: CGPoint(x: 5.41, y: -113.15), controlPoint1: CGPoint(x: 11.73, y: -112.58), controlPoint2: CGPoint(x: 13.49, y: -112.81))
        bezier217Path.close()
        context.saveGState()
        bezier217Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -114.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -114.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 125
        //// Bezier 218 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -146.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier218Path = UIBezierPath()
        bezier218Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier218Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier218Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier218Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier218Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier218Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier218Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier218Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier218Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier218Path.close()
        context.saveGState()
        bezier218Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 219 Drawing
        let bezier219Path = UIBezierPath()
        bezier219Path.move(to: CGPoint(x: 5.68, y: -113.31))
        bezier219Path.addCurve(to: CGPoint(x: -18.37, y: -114.03), controlPoint1: CGPoint(x: -2.4, y: -113.65), controlPoint2: CGPoint(x: -18.37, y: -114.03))
        bezier219Path.addCurve(to: CGPoint(x: 5.69, y: -114.98), controlPoint1: CGPoint(x: -18.37, y: -114.03), controlPoint2: CGPoint(x: -2.41, y: -114.41))
        bezier219Path.addCurve(to: CGPoint(x: 14.01, y: -116.31), controlPoint1: CGPoint(x: 13.78, y: -115.55), controlPoint2: CGPoint(x: 11.98, y: -116.35))
        bezier219Path.addCurve(to: CGPoint(x: 23.39, y: -115.07), controlPoint1: CGPoint(x: 16.04, y: -116.27), controlPoint2: CGPoint(x: 13.99, y: -115.55))
        bezier219Path.addCurve(to: CGPoint(x: 51.63, y: -114.41), controlPoint1: CGPoint(x: 32.8, y: -114.6), controlPoint2: CGPoint(x: 51.63, y: -114.41))
        bezier219Path.addCurve(to: CGPoint(x: 23.39, y: -113.52), controlPoint1: CGPoint(x: 51.63, y: -114.41), controlPoint2: CGPoint(x: 32.81, y: -113.96))
        bezier219Path.addCurve(to: CGPoint(x: 13.94, y: -112.67), controlPoint1: CGPoint(x: 13.96, y: -113.09), controlPoint2: CGPoint(x: 15.89, y: -112.6))
        bezier219Path.addCurve(to: CGPoint(x: 5.68, y: -113.31), controlPoint1: CGPoint(x: 11.99, y: -112.74), controlPoint2: CGPoint(x: 13.75, y: -112.97))
        bezier219Path.close()
        context.saveGState()
        bezier219Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -114.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -114.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 126
        context.saveGState()
        context.translateBy(x: 132.25, y: 160.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 127
        //// Bezier 220 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -139.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier220Path = UIBezierPath()
        bezier220Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier220Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier220Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier220Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier220Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier220Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier220Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier220Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier220Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier220Path.close()
        context.saveGState()
        bezier220Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 221 Drawing
        let bezier221Path = UIBezierPath()
        bezier221Path.move(to: CGPoint(x: 5.41, y: -106.15))
        bezier221Path.addCurve(to: CGPoint(x: -18.64, y: -106.87), controlPoint1: CGPoint(x: -2.67, y: -106.49), controlPoint2: CGPoint(x: -18.64, y: -106.87))
        bezier221Path.addCurve(to: CGPoint(x: 5.42, y: -107.82), controlPoint1: CGPoint(x: -18.64, y: -106.87), controlPoint2: CGPoint(x: -2.67, y: -107.25))
        bezier221Path.addCurve(to: CGPoint(x: 13.74, y: -109.15), controlPoint1: CGPoint(x: 13.51, y: -108.39), controlPoint2: CGPoint(x: 11.71, y: -109.2))
        bezier221Path.addCurve(to: CGPoint(x: 23.13, y: -107.91), controlPoint1: CGPoint(x: 15.77, y: -109.11), controlPoint2: CGPoint(x: 13.72, y: -108.39))
        bezier221Path.addCurve(to: CGPoint(x: 51.36, y: -107.25), controlPoint1: CGPoint(x: 32.53, y: -107.44), controlPoint2: CGPoint(x: 51.36, y: -107.25))
        bezier221Path.addCurve(to: CGPoint(x: 23.12, y: -106.37), controlPoint1: CGPoint(x: 51.36, y: -107.25), controlPoint2: CGPoint(x: 32.54, y: -106.8))
        bezier221Path.addCurve(to: CGPoint(x: 13.67, y: -105.51), controlPoint1: CGPoint(x: 13.7, y: -105.93), controlPoint2: CGPoint(x: 15.62, y: -105.44))
        bezier221Path.addCurve(to: CGPoint(x: 5.41, y: -106.15), controlPoint1: CGPoint(x: 11.73, y: -105.58), controlPoint2: CGPoint(x: 13.49, y: -105.81))
        bezier221Path.close()
        context.saveGState()
        bezier221Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -107.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -107.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 128
        //// Bezier 222 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -139.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier222Path = UIBezierPath()
        bezier222Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier222Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier222Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier222Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier222Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier222Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier222Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier222Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier222Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier222Path.close()
        context.saveGState()
        bezier222Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 223 Drawing
        let bezier223Path = UIBezierPath()
        bezier223Path.move(to: CGPoint(x: 5.68, y: -106.31))
        bezier223Path.addCurve(to: CGPoint(x: -18.37, y: -107.03), controlPoint1: CGPoint(x: -2.4, y: -106.65), controlPoint2: CGPoint(x: -18.37, y: -107.03))
        bezier223Path.addCurve(to: CGPoint(x: 5.69, y: -107.98), controlPoint1: CGPoint(x: -18.37, y: -107.03), controlPoint2: CGPoint(x: -2.41, y: -107.41))
        bezier223Path.addCurve(to: CGPoint(x: 14.01, y: -109.31), controlPoint1: CGPoint(x: 13.78, y: -108.55), controlPoint2: CGPoint(x: 11.98, y: -109.35))
        bezier223Path.addCurve(to: CGPoint(x: 23.39, y: -108.07), controlPoint1: CGPoint(x: 16.04, y: -109.27), controlPoint2: CGPoint(x: 13.99, y: -108.55))
        bezier223Path.addCurve(to: CGPoint(x: 51.63, y: -107.41), controlPoint1: CGPoint(x: 32.8, y: -107.6), controlPoint2: CGPoint(x: 51.63, y: -107.41))
        bezier223Path.addCurve(to: CGPoint(x: 23.39, y: -106.52), controlPoint1: CGPoint(x: 51.63, y: -107.41), controlPoint2: CGPoint(x: 32.81, y: -106.96))
        bezier223Path.addCurve(to: CGPoint(x: 13.94, y: -105.67), controlPoint1: CGPoint(x: 13.96, y: -106.09), controlPoint2: CGPoint(x: 15.89, y: -105.6))
        bezier223Path.addCurve(to: CGPoint(x: 5.68, y: -106.31), controlPoint1: CGPoint(x: 11.99, y: -105.74), controlPoint2: CGPoint(x: 13.75, y: -105.97))
        bezier223Path.close()
        context.saveGState()
        bezier223Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -107.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -107.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 129
        context.saveGState()
        context.translateBy(x: 185.25, y: 138.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 130
        //// Bezier 224 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -65.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier224Path = UIBezierPath()
        bezier224Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier224Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier224Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier224Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier224Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier224Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier224Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier224Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier224Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier224Path.close()
        context.saveGState()
        bezier224Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 225 Drawing
        let bezier225Path = UIBezierPath()
        bezier225Path.move(to: CGPoint(x: 5.41, y: -32.15))
        bezier225Path.addCurve(to: CGPoint(x: -18.64, y: -32.87), controlPoint1: CGPoint(x: -2.67, y: -32.49), controlPoint2: CGPoint(x: -18.64, y: -32.87))
        bezier225Path.addCurve(to: CGPoint(x: 5.42, y: -33.82), controlPoint1: CGPoint(x: -18.64, y: -32.87), controlPoint2: CGPoint(x: -2.67, y: -33.25))
        bezier225Path.addCurve(to: CGPoint(x: 13.74, y: -35.15), controlPoint1: CGPoint(x: 13.51, y: -34.39), controlPoint2: CGPoint(x: 11.71, y: -35.2))
        bezier225Path.addCurve(to: CGPoint(x: 23.13, y: -33.91), controlPoint1: CGPoint(x: 15.77, y: -35.11), controlPoint2: CGPoint(x: 13.72, y: -34.39))
        bezier225Path.addCurve(to: CGPoint(x: 51.36, y: -33.25), controlPoint1: CGPoint(x: 32.53, y: -33.44), controlPoint2: CGPoint(x: 51.36, y: -33.25))
        bezier225Path.addCurve(to: CGPoint(x: 23.12, y: -32.37), controlPoint1: CGPoint(x: 51.36, y: -33.25), controlPoint2: CGPoint(x: 32.54, y: -32.8))
        bezier225Path.addCurve(to: CGPoint(x: 13.67, y: -31.51), controlPoint1: CGPoint(x: 13.7, y: -31.93), controlPoint2: CGPoint(x: 15.62, y: -31.44))
        bezier225Path.addCurve(to: CGPoint(x: 5.41, y: -32.15), controlPoint1: CGPoint(x: 11.73, y: -31.58), controlPoint2: CGPoint(x: 13.49, y: -31.81))
        bezier225Path.close()
        context.saveGState()
        bezier225Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -33.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -33.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 131
        //// Bezier 226 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -65.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier226Path = UIBezierPath()
        bezier226Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier226Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier226Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier226Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier226Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier226Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier226Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier226Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier226Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier226Path.close()
        context.saveGState()
        bezier226Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 227 Drawing
        let bezier227Path = UIBezierPath()
        bezier227Path.move(to: CGPoint(x: 5.68, y: -32.31))
        bezier227Path.addCurve(to: CGPoint(x: -18.37, y: -33.03), controlPoint1: CGPoint(x: -2.4, y: -32.65), controlPoint2: CGPoint(x: -18.37, y: -33.03))
        bezier227Path.addCurve(to: CGPoint(x: 5.69, y: -33.98), controlPoint1: CGPoint(x: -18.37, y: -33.03), controlPoint2: CGPoint(x: -2.41, y: -33.41))
        bezier227Path.addCurve(to: CGPoint(x: 14.01, y: -35.31), controlPoint1: CGPoint(x: 13.78, y: -34.55), controlPoint2: CGPoint(x: 11.98, y: -35.35))
        bezier227Path.addCurve(to: CGPoint(x: 23.39, y: -34.07), controlPoint1: CGPoint(x: 16.04, y: -35.27), controlPoint2: CGPoint(x: 13.99, y: -34.55))
        bezier227Path.addCurve(to: CGPoint(x: 51.63, y: -33.41), controlPoint1: CGPoint(x: 32.8, y: -33.6), controlPoint2: CGPoint(x: 51.63, y: -33.41))
        bezier227Path.addCurve(to: CGPoint(x: 23.39, y: -32.52), controlPoint1: CGPoint(x: 51.63, y: -33.41), controlPoint2: CGPoint(x: 32.81, y: -32.96))
        bezier227Path.addCurve(to: CGPoint(x: 13.94, y: -31.67), controlPoint1: CGPoint(x: 13.96, y: -32.09), controlPoint2: CGPoint(x: 15.89, y: -31.6))
        bezier227Path.addCurve(to: CGPoint(x: 5.68, y: -32.31), controlPoint1: CGPoint(x: 11.99, y: -31.74), controlPoint2: CGPoint(x: 13.75, y: -31.97))
        bezier227Path.close()
        context.saveGState()
        bezier227Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -33.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -33.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 132
        context.saveGState()
        context.translateBy(x: 273.25, y: 152.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Group 133
        //// Bezier 228 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -16.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier228Path = UIBezierPath()
        bezier228Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier228Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier228Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier228Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier228Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier228Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier228Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier228Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier228Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier228Path.close()
        context.saveGState()
        bezier228Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 229 Drawing
        let bezier229Path = UIBezierPath()
        bezier229Path.move(to: CGPoint(x: 5.41, y: 16.85))
        bezier229Path.addCurve(to: CGPoint(x: -18.64, y: 16.13), controlPoint1: CGPoint(x: -2.67, y: 16.51), controlPoint2: CGPoint(x: -18.64, y: 16.13))
        bezier229Path.addCurve(to: CGPoint(x: 5.42, y: 15.18), controlPoint1: CGPoint(x: -18.64, y: 16.13), controlPoint2: CGPoint(x: -2.67, y: 15.75))
        bezier229Path.addCurve(to: CGPoint(x: 13.74, y: 13.85), controlPoint1: CGPoint(x: 13.51, y: 14.61), controlPoint2: CGPoint(x: 11.71, y: 13.8))
        bezier229Path.addCurve(to: CGPoint(x: 23.13, y: 15.09), controlPoint1: CGPoint(x: 15.77, y: 13.89), controlPoint2: CGPoint(x: 13.72, y: 14.61))
        bezier229Path.addCurve(to: CGPoint(x: 51.36, y: 15.75), controlPoint1: CGPoint(x: 32.53, y: 15.56), controlPoint2: CGPoint(x: 51.36, y: 15.75))
        bezier229Path.addCurve(to: CGPoint(x: 23.12, y: 16.63), controlPoint1: CGPoint(x: 51.36, y: 15.75), controlPoint2: CGPoint(x: 32.54, y: 16.2))
        bezier229Path.addCurve(to: CGPoint(x: 13.67, y: 17.49), controlPoint1: CGPoint(x: 13.7, y: 17.07), controlPoint2: CGPoint(x: 15.62, y: 17.56))
        bezier229Path.addCurve(to: CGPoint(x: 5.41, y: 16.85), controlPoint1: CGPoint(x: 11.73, y: 17.42), controlPoint2: CGPoint(x: 13.49, y: 17.19))
        bezier229Path.close()
        context.saveGState()
        bezier229Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 15.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 15.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 134
        //// Bezier 230 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -16.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier230Path = UIBezierPath()
        bezier230Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier230Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier230Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier230Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier230Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier230Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier230Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier230Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier230Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier230Path.close()
        context.saveGState()
        bezier230Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 231 Drawing
        let bezier231Path = UIBezierPath()
        bezier231Path.move(to: CGPoint(x: 5.68, y: 16.69))
        bezier231Path.addCurve(to: CGPoint(x: -18.37, y: 15.97), controlPoint1: CGPoint(x: -2.4, y: 16.35), controlPoint2: CGPoint(x: -18.37, y: 15.97))
        bezier231Path.addCurve(to: CGPoint(x: 5.69, y: 15.02), controlPoint1: CGPoint(x: -18.37, y: 15.97), controlPoint2: CGPoint(x: -2.41, y: 15.59))
        bezier231Path.addCurve(to: CGPoint(x: 14.01, y: 13.69), controlPoint1: CGPoint(x: 13.78, y: 14.45), controlPoint2: CGPoint(x: 11.98, y: 13.65))
        bezier231Path.addCurve(to: CGPoint(x: 23.39, y: 14.93), controlPoint1: CGPoint(x: 16.04, y: 13.73), controlPoint2: CGPoint(x: 13.99, y: 14.45))
        bezier231Path.addCurve(to: CGPoint(x: 51.63, y: 15.59), controlPoint1: CGPoint(x: 32.8, y: 15.4), controlPoint2: CGPoint(x: 51.63, y: 15.59))
        bezier231Path.addCurve(to: CGPoint(x: 23.39, y: 16.48), controlPoint1: CGPoint(x: 51.63, y: 15.59), controlPoint2: CGPoint(x: 32.81, y: 16.04))
        bezier231Path.addCurve(to: CGPoint(x: 13.94, y: 17.33), controlPoint1: CGPoint(x: 13.96, y: 16.91), controlPoint2: CGPoint(x: 15.89, y: 17.4))
        bezier231Path.addCurve(to: CGPoint(x: 5.68, y: 16.69), controlPoint1: CGPoint(x: 11.99, y: 17.26), controlPoint2: CGPoint(x: 13.75, y: 17.03))
        bezier231Path.close()
        context.saveGState()
        bezier231Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 15.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 15.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 135
        context.saveGState()
        context.translateBy(x: 350.91, y: 118.78)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.15, y: 0.15)



        //// Group 136
        //// Bezier 232 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 46.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier232Path = UIBezierPath()
        bezier232Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier232Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier232Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier232Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier232Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier232Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier232Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier232Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier232Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier232Path.close()
        context.saveGState()
        bezier232Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 233 Drawing
        let bezier233Path = UIBezierPath()
        bezier233Path.move(to: CGPoint(x: 5.41, y: 79.85))
        bezier233Path.addCurve(to: CGPoint(x: -18.64, y: 79.13), controlPoint1: CGPoint(x: -2.67, y: 79.51), controlPoint2: CGPoint(x: -18.64, y: 79.13))
        bezier233Path.addCurve(to: CGPoint(x: 5.42, y: 78.18), controlPoint1: CGPoint(x: -18.64, y: 79.13), controlPoint2: CGPoint(x: -2.67, y: 78.75))
        bezier233Path.addCurve(to: CGPoint(x: 13.74, y: 76.85), controlPoint1: CGPoint(x: 13.51, y: 77.61), controlPoint2: CGPoint(x: 11.71, y: 76.8))
        bezier233Path.addCurve(to: CGPoint(x: 23.13, y: 78.09), controlPoint1: CGPoint(x: 15.77, y: 76.89), controlPoint2: CGPoint(x: 13.72, y: 77.61))
        bezier233Path.addCurve(to: CGPoint(x: 51.36, y: 78.75), controlPoint1: CGPoint(x: 32.53, y: 78.56), controlPoint2: CGPoint(x: 51.36, y: 78.75))
        bezier233Path.addCurve(to: CGPoint(x: 23.12, y: 79.63), controlPoint1: CGPoint(x: 51.36, y: 78.75), controlPoint2: CGPoint(x: 32.54, y: 79.2))
        bezier233Path.addCurve(to: CGPoint(x: 13.67, y: 80.49), controlPoint1: CGPoint(x: 13.7, y: 80.07), controlPoint2: CGPoint(x: 15.62, y: 80.56))
        bezier233Path.addCurve(to: CGPoint(x: 5.41, y: 79.85), controlPoint1: CGPoint(x: 11.73, y: 80.42), controlPoint2: CGPoint(x: 13.49, y: 80.19))
        bezier233Path.close()
        context.saveGState()
        bezier233Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 78.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 78.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 137
        //// Bezier 234 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 46.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier234Path = UIBezierPath()
        bezier234Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier234Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier234Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier234Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier234Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier234Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier234Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier234Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier234Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier234Path.close()
        context.saveGState()
        bezier234Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 235 Drawing
        let bezier235Path = UIBezierPath()
        bezier235Path.move(to: CGPoint(x: 5.68, y: 79.69))
        bezier235Path.addCurve(to: CGPoint(x: -18.37, y: 78.97), controlPoint1: CGPoint(x: -2.4, y: 79.35), controlPoint2: CGPoint(x: -18.37, y: 78.97))
        bezier235Path.addCurve(to: CGPoint(x: 5.69, y: 78.02), controlPoint1: CGPoint(x: -18.37, y: 78.97), controlPoint2: CGPoint(x: -2.41, y: 78.59))
        bezier235Path.addCurve(to: CGPoint(x: 14.01, y: 76.69), controlPoint1: CGPoint(x: 13.78, y: 77.45), controlPoint2: CGPoint(x: 11.98, y: 76.65))
        bezier235Path.addCurve(to: CGPoint(x: 23.39, y: 77.93), controlPoint1: CGPoint(x: 16.04, y: 76.73), controlPoint2: CGPoint(x: 13.99, y: 77.45))
        bezier235Path.addCurve(to: CGPoint(x: 51.63, y: 78.59), controlPoint1: CGPoint(x: 32.8, y: 78.4), controlPoint2: CGPoint(x: 51.63, y: 78.59))
        bezier235Path.addCurve(to: CGPoint(x: 23.39, y: 79.48), controlPoint1: CGPoint(x: 51.63, y: 78.59), controlPoint2: CGPoint(x: 32.81, y: 79.04))
        bezier235Path.addCurve(to: CGPoint(x: 13.94, y: 80.33), controlPoint1: CGPoint(x: 13.96, y: 79.91), controlPoint2: CGPoint(x: 15.89, y: 80.4))
        bezier235Path.addCurve(to: CGPoint(x: 5.68, y: 79.69), controlPoint1: CGPoint(x: 11.99, y: 80.26), controlPoint2: CGPoint(x: 13.75, y: 80.03))
        bezier235Path.close()
        context.saveGState()
        bezier235Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 78.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 78.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 138
        context.saveGState()
        context.translateBy(x: 360.72, y: 127.5)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.3)



        //// Group 139
        //// Bezier 236 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: 0.64)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier236Path = UIBezierPath()
        bezier236Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier236Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier236Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier236Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier236Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier236Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier236Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier236Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier236Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier236Path.close()
        context.saveGState()
        bezier236Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 237 Drawing
        let bezier237Path = UIBezierPath()
        bezier237Path.move(to: CGPoint(x: 5.41, y: 33.85))
        bezier237Path.addCurve(to: CGPoint(x: -18.64, y: 33.13), controlPoint1: CGPoint(x: -2.67, y: 33.51), controlPoint2: CGPoint(x: -18.64, y: 33.13))
        bezier237Path.addCurve(to: CGPoint(x: 5.42, y: 32.18), controlPoint1: CGPoint(x: -18.64, y: 33.13), controlPoint2: CGPoint(x: -2.67, y: 32.75))
        bezier237Path.addCurve(to: CGPoint(x: 13.74, y: 30.85), controlPoint1: CGPoint(x: 13.51, y: 31.61), controlPoint2: CGPoint(x: 11.71, y: 30.8))
        bezier237Path.addCurve(to: CGPoint(x: 23.13, y: 32.09), controlPoint1: CGPoint(x: 15.77, y: 30.89), controlPoint2: CGPoint(x: 13.72, y: 31.61))
        bezier237Path.addCurve(to: CGPoint(x: 51.36, y: 32.75), controlPoint1: CGPoint(x: 32.53, y: 32.56), controlPoint2: CGPoint(x: 51.36, y: 32.75))
        bezier237Path.addCurve(to: CGPoint(x: 23.12, y: 33.63), controlPoint1: CGPoint(x: 51.36, y: 32.75), controlPoint2: CGPoint(x: 32.54, y: 33.2))
        bezier237Path.addCurve(to: CGPoint(x: 13.67, y: 34.49), controlPoint1: CGPoint(x: 13.7, y: 34.07), controlPoint2: CGPoint(x: 15.62, y: 34.56))
        bezier237Path.addCurve(to: CGPoint(x: 5.41, y: 33.85), controlPoint1: CGPoint(x: 11.73, y: 34.42), controlPoint2: CGPoint(x: 13.49, y: 34.19))
        bezier237Path.close()
        context.saveGState()
        bezier237Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 32.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 32.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 140
        //// Bezier 238 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: 0.49)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier238Path = UIBezierPath()
        bezier238Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier238Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier238Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier238Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier238Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier238Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier238Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier238Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier238Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier238Path.close()
        context.saveGState()
        bezier238Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 239 Drawing
        let bezier239Path = UIBezierPath()
        bezier239Path.move(to: CGPoint(x: 5.68, y: 33.69))
        bezier239Path.addCurve(to: CGPoint(x: -18.37, y: 32.97), controlPoint1: CGPoint(x: -2.4, y: 33.35), controlPoint2: CGPoint(x: -18.37, y: 32.97))
        bezier239Path.addCurve(to: CGPoint(x: 5.69, y: 32.02), controlPoint1: CGPoint(x: -18.37, y: 32.97), controlPoint2: CGPoint(x: -2.41, y: 32.59))
        bezier239Path.addCurve(to: CGPoint(x: 14.01, y: 30.69), controlPoint1: CGPoint(x: 13.78, y: 31.45), controlPoint2: CGPoint(x: 11.98, y: 30.65))
        bezier239Path.addCurve(to: CGPoint(x: 23.39, y: 31.93), controlPoint1: CGPoint(x: 16.04, y: 30.73), controlPoint2: CGPoint(x: 13.99, y: 31.45))
        bezier239Path.addCurve(to: CGPoint(x: 51.63, y: 32.59), controlPoint1: CGPoint(x: 32.8, y: 32.4), controlPoint2: CGPoint(x: 51.63, y: 32.59))
        bezier239Path.addCurve(to: CGPoint(x: 23.39, y: 33.48), controlPoint1: CGPoint(x: 51.63, y: 32.59), controlPoint2: CGPoint(x: 32.81, y: 33.04))
        bezier239Path.addCurve(to: CGPoint(x: 13.94, y: 34.33), controlPoint1: CGPoint(x: 13.96, y: 33.91), controlPoint2: CGPoint(x: 15.89, y: 34.4))
        bezier239Path.addCurve(to: CGPoint(x: 5.68, y: 33.69), controlPoint1: CGPoint(x: 11.99, y: 34.26), controlPoint2: CGPoint(x: 13.75, y: 34.03))
        bezier239Path.close()
        context.saveGState()
        bezier239Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 32.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 32.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 141
        context.saveGState()
        context.translateBy(x: 246.31, y: 190.34)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Group 142
        //// Bezier 240 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -30.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier240Path = UIBezierPath()
        bezier240Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier240Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier240Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier240Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier240Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier240Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier240Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier240Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier240Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier240Path.close()
        context.saveGState()
        bezier240Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 241 Drawing
        let bezier241Path = UIBezierPath()
        bezier241Path.move(to: CGPoint(x: 5.41, y: 2.85))
        bezier241Path.addCurve(to: CGPoint(x: -18.64, y: 2.13), controlPoint1: CGPoint(x: -2.67, y: 2.51), controlPoint2: CGPoint(x: -18.64, y: 2.13))
        bezier241Path.addCurve(to: CGPoint(x: 5.42, y: 1.18), controlPoint1: CGPoint(x: -18.64, y: 2.13), controlPoint2: CGPoint(x: -2.67, y: 1.75))
        bezier241Path.addCurve(to: CGPoint(x: 13.74, y: -0.15), controlPoint1: CGPoint(x: 13.51, y: 0.61), controlPoint2: CGPoint(x: 11.71, y: -0.2))
        bezier241Path.addCurve(to: CGPoint(x: 23.13, y: 1.09), controlPoint1: CGPoint(x: 15.77, y: -0.11), controlPoint2: CGPoint(x: 13.72, y: 0.61))
        bezier241Path.addCurve(to: CGPoint(x: 51.36, y: 1.75), controlPoint1: CGPoint(x: 32.53, y: 1.56), controlPoint2: CGPoint(x: 51.36, y: 1.75))
        bezier241Path.addCurve(to: CGPoint(x: 23.12, y: 2.63), controlPoint1: CGPoint(x: 51.36, y: 1.75), controlPoint2: CGPoint(x: 32.54, y: 2.2))
        bezier241Path.addCurve(to: CGPoint(x: 13.67, y: 3.49), controlPoint1: CGPoint(x: 13.7, y: 3.07), controlPoint2: CGPoint(x: 15.62, y: 3.56))
        bezier241Path.addCurve(to: CGPoint(x: 5.41, y: 2.85), controlPoint1: CGPoint(x: 11.73, y: 3.42), controlPoint2: CGPoint(x: 13.49, y: 3.19))
        bezier241Path.close()
        context.saveGState()
        bezier241Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 1.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 1.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 143
        //// Bezier 242 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -30.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier242Path = UIBezierPath()
        bezier242Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier242Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier242Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier242Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier242Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier242Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier242Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier242Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier242Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier242Path.close()
        context.saveGState()
        bezier242Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 243 Drawing
        let bezier243Path = UIBezierPath()
        bezier243Path.move(to: CGPoint(x: 5.68, y: 2.69))
        bezier243Path.addCurve(to: CGPoint(x: -18.37, y: 1.97), controlPoint1: CGPoint(x: -2.4, y: 2.35), controlPoint2: CGPoint(x: -18.37, y: 1.97))
        bezier243Path.addCurve(to: CGPoint(x: 5.69, y: 1.02), controlPoint1: CGPoint(x: -18.37, y: 1.97), controlPoint2: CGPoint(x: -2.41, y: 1.59))
        bezier243Path.addCurve(to: CGPoint(x: 14.01, y: -0.31), controlPoint1: CGPoint(x: 13.78, y: 0.45), controlPoint2: CGPoint(x: 11.98, y: -0.35))
        bezier243Path.addCurve(to: CGPoint(x: 23.39, y: 0.93), controlPoint1: CGPoint(x: 16.04, y: -0.27), controlPoint2: CGPoint(x: 13.99, y: 0.45))
        bezier243Path.addCurve(to: CGPoint(x: 51.63, y: 1.59), controlPoint1: CGPoint(x: 32.8, y: 1.4), controlPoint2: CGPoint(x: 51.63, y: 1.59))
        bezier243Path.addCurve(to: CGPoint(x: 23.39, y: 2.48), controlPoint1: CGPoint(x: 51.63, y: 1.59), controlPoint2: CGPoint(x: 32.81, y: 2.04))
        bezier243Path.addCurve(to: CGPoint(x: 13.94, y: 3.33), controlPoint1: CGPoint(x: 13.96, y: 2.91), controlPoint2: CGPoint(x: 15.89, y: 3.4))
        bezier243Path.addCurve(to: CGPoint(x: 5.68, y: 2.69), controlPoint1: CGPoint(x: 11.99, y: 3.26), controlPoint2: CGPoint(x: 13.75, y: 3.03))
        bezier243Path.close()
        context.saveGState()
        bezier243Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 1.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 1.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 158
        context.saveGState()
        context.translateBy(x: 365.83, y: 154.36)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Bezier 258 Drawing
        context.saveGState()
        context.translateBy(x: 34.9, y: 91.06)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier258Path = UIBezierPath()
        bezier258Path.move(to: CGPoint(x: 26.91, y: 3))
        bezier258Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.87, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier258Path.addCurve(to: CGPoint(x: 26.92, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.86, y: 1.9))
        bezier258Path.addCurve(to: CGPoint(x: 36.23, y: 0), controlPoint1: CGPoint(x: 35.98, y: 0.76), controlPoint2: CGPoint(x: 33.96, y: -0.04))
        bezier258Path.addCurve(to: CGPoint(x: 46.73, y: 1.24), controlPoint1: CGPoint(x: 38.5, y: 0.04), controlPoint2: CGPoint(x: 36.21, y: 0.76))
        bezier258Path.addCurve(to: CGPoint(x: 78.32, y: 1.9), controlPoint1: CGPoint(x: 57.25, y: 1.71), controlPoint2: CGPoint(x: 78.32, y: 1.9))
        bezier258Path.addCurve(to: CGPoint(x: 46.72, y: 2.79), controlPoint1: CGPoint(x: 78.32, y: 1.9), controlPoint2: CGPoint(x: 57.26, y: 2.35))
        bezier258Path.addCurve(to: CGPoint(x: 36.15, y: 3.64), controlPoint1: CGPoint(x: 36.18, y: 3.22), controlPoint2: CGPoint(x: 38.33, y: 3.71))
        bezier258Path.addCurve(to: CGPoint(x: 26.91, y: 3), controlPoint1: CGPoint(x: 33.97, y: 3.57), controlPoint2: CGPoint(x: 35.94, y: 3.34))
        bezier258Path.close()
        context.saveGState()
        bezier258Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 35.94, y: 1.93), startRadius: 0.22,
            endCenter: CGPoint(x: 37, y: 1.6), endRadius: 68.54,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 259 Drawing
        let bezier259Path = UIBezierPath()
        bezier259Path.move(to: CGPoint(x: 24.05, y: 129.02))
        bezier259Path.addCurve(to: CGPoint(x: -0, y: 128.22), controlPoint1: CGPoint(x: 15.97, y: 128.64), controlPoint2: CGPoint(x: -0, y: 128.22))
        bezier259Path.addCurve(to: CGPoint(x: 24.06, y: 127.16), controlPoint1: CGPoint(x: -0, y: 128.22), controlPoint2: CGPoint(x: 15.96, y: 127.8))
        bezier259Path.addCurve(to: CGPoint(x: 32.38, y: 125.67), controlPoint1: CGPoint(x: 32.15, y: 126.52), controlPoint2: CGPoint(x: 30.35, y: 125.63))
        bezier259Path.addCurve(to: CGPoint(x: 41.77, y: 127.05), controlPoint1: CGPoint(x: 34.41, y: 125.72), controlPoint2: CGPoint(x: 32.36, y: 126.53))
        bezier259Path.addCurve(to: CGPoint(x: 70, y: 127.79), controlPoint1: CGPoint(x: 51.17, y: 127.58), controlPoint2: CGPoint(x: 70, y: 127.79))
        bezier259Path.addCurve(to: CGPoint(x: 41.76, y: 128.78), controlPoint1: CGPoint(x: 70, y: 127.79), controlPoint2: CGPoint(x: 51.18, y: 128.3))
        bezier259Path.addCurve(to: CGPoint(x: 32.31, y: 129.73), controlPoint1: CGPoint(x: 32.33, y: 129.26), controlPoint2: CGPoint(x: 34.26, y: 129.81))
        bezier259Path.addCurve(to: CGPoint(x: 24.05, y: 129.02), controlPoint1: CGPoint(x: 30.36, y: 129.65), controlPoint2: CGPoint(x: 32.12, y: 129.4))
        bezier259Path.close()
        context.saveGState()
        bezier259Path.addClip()
        context.drawRadialGradient(starGradient2,
            startCenter: CGPoint(x: 33.16, y: 127.84), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 127.51), endRadius: 61.29,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()



        context.restoreGState()




        //// Bezier 62 Drawing
        let bezier62Path = UIBezierPath()
        bezier62Path.move(to: CGPoint(x: 0, y: 195.07))
        bezier62Path.addCurve(to: CGPoint(x: 75.79, y: 213.32), controlPoint1: CGPoint(x: 34.74, y: 207.28), controlPoint2: CGPoint(x: 59.45, y: 213.45))
        bezier62Path.addCurve(to: CGPoint(x: 102.14, y: 205.54), controlPoint1: CGPoint(x: 83.96, y: 213.26), controlPoint2: CGPoint(x: 93.51, y: 210.07))
        bezier62Path.addCurve(to: CGPoint(x: 125.84, y: 189.47), controlPoint1: CGPoint(x: 108.86, y: 202.02), controlPoint2: CGPoint(x: 115.97, y: 196.91))
        bezier62Path.addCurve(to: CGPoint(x: 152.34, y: 172.1), controlPoint1: CGPoint(x: 142.82, y: 176.67), controlPoint2: CGPoint(x: 145.37, y: 175.27))
        bezier62Path.addCurve(to: CGPoint(x: 165.24, y: 169.12), controlPoint1: CGPoint(x: 156.69, y: 170.13), controlPoint2: CGPoint(x: 160.82, y: 169.12))
        bezier62Path.addCurve(to: CGPoint(x: 191.55, y: 184.93), controlPoint1: CGPoint(x: 174.33, y: 169.12), controlPoint2: CGPoint(x: 181.13, y: 174.32))
        bezier62Path.addCurve(to: CGPoint(x: 195.78, y: 189.45), controlPoint1: CGPoint(x: 192.98, y: 186.39), controlPoint2: CGPoint(x: 193.89, y: 187.42))
        bezier62Path.addCurve(to: CGPoint(x: 200.63, y: 194.68), controlPoint1: CGPoint(x: 196.33, y: 190.04), controlPoint2: CGPoint(x: 199.65, y: 193.63))
        bezier62Path.addCurve(to: CGPoint(x: 221.54, y: 213.18), controlPoint1: CGPoint(x: 208.59, y: 203.19), controlPoint2: CGPoint(x: 215.33, y: 209.04))
        bezier62Path.addCurve(to: CGPoint(x: 246.89, y: 220.62), controlPoint1: CGPoint(x: 229.46, y: 218.46), controlPoint2: CGPoint(x: 237.96, y: 220.62))
        bezier62Path.addCurve(to: CGPoint(x: 268.15, y: 209.82), controlPoint1: CGPoint(x: 254.97, y: 220.62), controlPoint2: CGPoint(x: 261.39, y: 217.76))
        bezier62Path.addCurve(to: CGPoint(x: 283.69, y: 180.33), controlPoint1: CGPoint(x: 273.45, y: 203.59), controlPoint2: CGPoint(x: 278.23, y: 193.3))
        bezier62Path.addCurve(to: CGPoint(x: 286.39, y: 173.81), controlPoint1: CGPoint(x: 283.9, y: 179.82), controlPoint2: CGPoint(x: 285.83, y: 175.14))
        bezier62Path.addCurve(to: CGPoint(x: 302.6, y: 145.64), controlPoint1: CGPoint(x: 292.51, y: 159.33), controlPoint2: CGPoint(x: 296.85, y: 152.51))
        bezier62Path.addCurve(to: CGPoint(x: 326.44, y: 134.9), controlPoint1: CGPoint(x: 309.99, y: 136.83), controlPoint2: CGPoint(x: 319.53, y: 134.85))
        bezier62Path.addCurve(to: CGPoint(x: 350.53, y: 148.04), controlPoint1: CGPoint(x: 333.35, y: 134.96), controlPoint2: CGPoint(x: 343.04, y: 137.5))
        bezier62Path.addCurve(to: CGPoint(x: 366.89, y: 182.62), controlPoint1: CGPoint(x: 356.54, y: 156.49), controlPoint2: CGPoint(x: 361.65, y: 166.59))
        bezier62Path.addCurve(to: CGPoint(x: 373.19, y: 202.59), controlPoint1: CGPoint(x: 368.24, y: 186.73), controlPoint2: CGPoint(x: 372.5, y: 200.43))
        bezier62Path.addCurve(to: CGPoint(x: 397.26, y: 237.78), controlPoint1: CGPoint(x: 380.31, y: 224.73), controlPoint2: CGPoint(x: 387.01, y: 238.25))
        bezier62Path.addCurve(to: CGPoint(x: 414, y: 227.5), controlPoint1: CGPoint(x: 409.5, y: 237.21), controlPoint2: CGPoint(x: 412.76, y: 230.13))
        bezier62Path.addLine(to: CGPoint(x: 414, y: 218.28))
        bezier62Path.addCurve(to: CGPoint(x: 397.9, y: 232.85), controlPoint1: CGPoint(x: 411.38, y: 226.22), controlPoint2: CGPoint(x: 406.74, y: 232.59))
        bezier62Path.addCurve(to: CGPoint(x: 378.39, y: 201.14), controlPoint1: CGPoint(x: 390.46, y: 233.06), controlPoint2: CGPoint(x: 385.53, y: 223.33))
        bezier62Path.addCurve(to: CGPoint(x: 371.99, y: 180.93), controlPoint1: CGPoint(x: 377.7, y: 198.99), controlPoint2: CGPoint(x: 373.33, y: 185.04))
        bezier62Path.addCurve(to: CGPoint(x: 355.24, y: 145.57), controlPoint1: CGPoint(x: 366.75, y: 164.91), controlPoint2: CGPoint(x: 361.24, y: 154))
        bezier62Path.addCurve(to: CGPoint(x: 326.21, y: 130), controlPoint1: CGPoint(x: 347.76, y: 135.05), controlPoint2: CGPoint(x: 337.44, y: 130))
        bezier62Path.addCurve(to: CGPoint(x: 297.71, y: 143.03), controlPoint1: CGPoint(x: 314.96, y: 130), controlPoint2: CGPoint(x: 305.09, y: 134.23))
        bezier62Path.addCurve(to: CGPoint(x: 281.17, y: 172.49), controlPoint1: CGPoint(x: 291.97, y: 149.88), controlPoint2: CGPoint(x: 287.29, y: 158.01))
        bezier62Path.addCurve(to: CGPoint(x: 278.5, y: 178.84), controlPoint1: CGPoint(x: 280.61, y: 173.81), controlPoint2: CGPoint(x: 278.71, y: 178.34))
        bezier62Path.addCurve(to: CGPoint(x: 265.7, y: 204.46), controlPoint1: CGPoint(x: 273.03, y: 191.82), controlPoint2: CGPoint(x: 270.12, y: 198.7))
        bezier62Path.addCurve(to: CGPoint(x: 246.53, y: 215.65), controlPoint1: CGPoint(x: 260.05, y: 211.81), controlPoint2: CGPoint(x: 254.65, y: 215.65))
        bezier62Path.addCurve(to: CGPoint(x: 221.54, y: 206.68), controlPoint1: CGPoint(x: 237.57, y: 215.65), controlPoint2: CGPoint(x: 229.47, y: 211.97))
        bezier62Path.addCurve(to: CGPoint(x: 201.93, y: 187.98), controlPoint1: CGPoint(x: 215.32, y: 202.53), controlPoint2: CGPoint(x: 209.9, y: 196.49))
        bezier62Path.addCurve(to: CGPoint(x: 197.64, y: 183.67), controlPoint1: CGPoint(x: 200.95, y: 186.93), controlPoint2: CGPoint(x: 198.18, y: 184.26))
        bezier62Path.addCurve(to: CGPoint(x: 193.03, y: 179.01), controlPoint1: CGPoint(x: 195.74, y: 181.64), controlPoint2: CGPoint(x: 194.46, y: 180.46))
        bezier62Path.addCurve(to: CGPoint(x: 164.89, y: 164.21), controlPoint1: CGPoint(x: 182.63, y: 168.42), controlPoint2: CGPoint(x: 173.94, y: 164.21))
        bezier62Path.addCurve(to: CGPoint(x: 151.11, y: 167.24), controlPoint1: CGPoint(x: 160.49, y: 164.21), controlPoint2: CGPoint(x: 155.93, y: 165.18))
        bezier62Path.addCurve(to: CGPoint(x: 122.04, y: 186.07), controlPoint1: CGPoint(x: 143.39, y: 170.55), controlPoint2: CGPoint(x: 139.01, y: 173.28))
        bezier62Path.addCurve(to: CGPoint(x: 99.84, y: 201.19), controlPoint1: CGPoint(x: 112.17, y: 193.51), controlPoint2: CGPoint(x: 106.57, y: 197.66))
        bezier62Path.addCurve(to: CGPoint(x: 74.92, y: 208.41), controlPoint1: CGPoint(x: 91.19, y: 205.73), controlPoint2: CGPoint(x: 83.11, y: 208.34))
        bezier62Path.addCurve(to: CGPoint(x: 0.2, y: 189.86), controlPoint1: CGPoint(x: 58.56, y: 208.54), controlPoint2: CGPoint(x: 34.95, y: 202.08))
        bezier62Path.addLine(to: CGPoint(x: 0, y: 195.07))
        bezier62Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier62Path.addClip()
        context.drawLinearGradient(bezierGradient, start: CGPoint(x: 0, y: 183.89), end: CGPoint(x: 414, y: 183.89), options: [])
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawCommonScreen_47(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 375, height: 667), resizing: ResizingBehavior = .aspectFit, starBlink: CGFloat = 0, tubeOvalOffset: CGFloat = 0.25) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 375, height: 667), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 375, y: resizedFrame.height / 667)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 375, resizedFrame.height / 667)


        //// Color Declarations
        let bezierGradientColor = UIColor(red: 0.071, green: 0.086, blue: 1.000, alpha: 1.000)
        let bezierGradientColor5 = UIColor(red: 0.192, green: 1.000, blue: 0.953, alpha: 1.000)
        let paint0_linear3Color3 = UIColor(red: 0.033, green: 0.360, blue: 0.892, alpha: 1.000)
        let paint0_linear3Color2 = UIColor(red: 0.122, green: 0.071, blue: 0.349, alpha: 1.000)
        let paint0_linear3Color = UIColor(red: 0.054, green: 0.296, blue: 0.844, alpha: 1.000)
        let gradientColor23 = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1.000)
        let gradient2Color2 = UIColor(red: 0.063, green: 0.105, blue: 0.324, alpha: 1.000)
        let gradient2Color3 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.000)
        let gradient2Color = UIColor(red: 0.098, green: 0.121, blue: 0.857, alpha: 1.000)
        let gradientColor24 = UIColor(red: 0.004, green: 0.004, blue: 0.004, alpha: 1.000)
        let starGradientColor = UIColor(red: 0.136, green: 0.000, blue: 1.000, alpha: 0.000)
        let gradient3Color5 = UIColor(red: 0.118, green: 0.110, blue: 0.463, alpha: 1.000)
        let gradient3Color4 = UIColor(red: 0.129, green: 0.153, blue: 0.604, alpha: 1.000)
        let gradient3Color3 = UIColor(red: 0.180, green: 0.180, blue: 0.796, alpha: 1.000)
        let gradient3Color = UIColor(red: 0.525, green: 0.557, blue: 0.953, alpha: 1.000)
        let gradient3Color2 = UIColor(red: 0.267, green: 0.247, blue: 0.910, alpha: 1.000)
        let plane_picture_shadow_2 = UIColor(red: 0.000, green: 0.696, blue: 1.000, alpha: 1.000)
        let fillColor15 = UIColor(red: 1.000, green: 0.000, blue: 0.647, alpha: 1.000)
        let bkgLightsColor2 = UIColor(red: 0.051, green: 0.031, blue: 0.243, alpha: 1.000)
        let bkgLightsColor = UIColor(red: 0.043, green: 0.075, blue: 0.788, alpha: 1.000)
        let bkgLightsColor3 = UIColor(red: 0.051, green: 0.031, blue: 0.243, alpha: 1.000)

        //// Gradient Declarations
        let bezierGradient = CGGradient(colorsSpace: nil, colors: [bezierGradientColor.cgColor, bezierGradientColor5.cgColor, bezierGradientColor.cgColor] as CFArray, locations: [0, 0.5, 1])!
        let paint0_linear3 = CGGradient(colorsSpace: nil, colors: [paint0_linear3Color3.cgColor, paint0_linear3Color3.blended(withFraction: 0.5, of: paint0_linear3Color).cgColor, paint0_linear3Color.cgColor, paint0_linear3Color2.cgColor] as CFArray, locations: [0, 0.06, 0.17, 1])!
        let gradient2 = CGGradient(colorsSpace: nil, colors: [gradientColor23.cgColor, gradient2Color.cgColor, gradient2Color2.cgColor, gradient2Color2.blended(withFraction: 0.5, of: gradientColor24).cgColor, gradientColor24.cgColor, gradient2Color3.cgColor] as CFArray, locations: [0, 0.03, 0.18, 0.27, 0.69, 0.96])!
        let starGradient = CGGradient(colorsSpace: nil, colors: [gradientColor23.cgColor, gradient3Color.cgColor, gradient3Color2.cgColor, gradient3Color3.cgColor, gradient3Color3.blended(withFraction: 0.5, of: gradient3Color4).cgColor, gradient3Color4.cgColor, gradient3Color5.cgColor, gradient3Color5.blended(withFraction: 0.5, of: starGradientColor).cgColor, starGradientColor.cgColor] as CFArray, locations: [0, 0.02, 0.04, 0.06, 0.07, 0.09, 0.12, 0.46, 1])!
        let bkgLights = CGGradient(colorsSpace: nil, colors: [bkgLightsColor.cgColor, bkgLightsColor.blended(withFraction: 0.5, of: bkgLightsColor3).cgColor, bkgLightsColor3.cgColor, bkgLightsColor2.cgColor] as CFArray, locations: [0, 0.25, 0.47, 1])!

        //// Shadow Declarations
        let shadow2 = NSShadow()
        shadow2.shadowColor = UIColor.black
        shadow2.shadowOffset = CGSize(width: 3, height: 4)
        shadow2.shadowBlurRadius = 5

        //// Variable Declarations
        let star5Expr: CGFloat = starBlink < 0.25 || starBlink > 0.8 - tubeOvalOffset ? 0 : (starBlink > 0.25 && starBlink <= 0.3 ? (starBlink - 0.25) * 20 : (starBlink > 0.75 - tubeOvalOffset && starBlink <= 0.8 - tubeOvalOffset ? (0.8 - tubeOvalOffset - starBlink) * 20 : 1))
        let star4Expr: CGFloat = starBlink < 0.2 || starBlink > 0.75 - tubeOvalOffset ? 0 : (starBlink > 0.2 && starBlink <= 0.25 ? (starBlink - 0.2) * 20 : (starBlink > 0.7 - tubeOvalOffset && starBlink <= 0.75 - tubeOvalOffset ? (0.75 - tubeOvalOffset - starBlink) * 20 : 1))
        let star3Expr: CGFloat = starBlink < 0.15 || starBlink > 0.7 - tubeOvalOffset ? 0 : (starBlink > 0.15 && starBlink <= 0.2 ? (starBlink - 0.15) * 20 : (starBlink > 0.65 - tubeOvalOffset && starBlink <= 0.7 - tubeOvalOffset ? (0.7 - tubeOvalOffset - starBlink) * 20 : 1))

        //// Rectangle 22 Drawing
        let rectangle22Path = UIBezierPath(rect: CGRect(x: -19.55, y: 111.84, width: 414, height: 684.76))
        context.saveGState()
        rectangle22Path.addClip()
        context.drawLinearGradient(bkgLights, start: CGPoint(x: 187.45, y: 111.84), end: CGPoint(x: 187.45, y: 796.59), options: [])
        context.restoreGState()


        //// Bezier 56 Drawing
        let bezier56Path = UIBezierPath()
        bezier56Path.move(to: CGPoint(x: 375.79, y: 191.43))
        bezier56Path.addCurve(to: CGPoint(x: 361.59, y: 215.32), controlPoint1: CGPoint(x: 375.79, y: 191.43), controlPoint2: CGPoint(x: 378.97, y: 214.59))
        bezier56Path.addCurve(to: CGPoint(x: 331.02, y: 150.5), controlPoint1: CGPoint(x: 343.34, y: 216.69), controlPoint2: CGPoint(x: 342.74, y: 168.79))
        bezier56Path.addCurve(to: CGPoint(x: 297.68, y: 113.33), controlPoint1: CGPoint(x: 322.23, y: 127.52), controlPoint2: CGPoint(x: 310.98, y: 114.03))
        bezier56Path.addCurve(to: CGPoint(x: 224.1, y: 198.13), controlPoint1: CGPoint(x: 256.87, y: 113.92), controlPoint2: CGPoint(x: 253.7, y: 198.13))
        bezier56Path.addCurve(to: CGPoint(x: 169.46, y: 156.54), controlPoint1: CGPoint(x: 194.5, y: 198.13), controlPoint2: CGPoint(x: 176.63, y: 160.25))
        bezier56Path.addCurve(to: CGPoint(x: 130.58, y: 152.77), controlPoint1: CGPoint(x: 160.15, y: 148.56), controlPoint2: CGPoint(x: 154.9, y: 144.54))
        bezier56Path.addCurve(to: CGPoint(x: 85.82, y: 185.97), controlPoint1: CGPoint(x: 115.27, y: 158.79), controlPoint2: CGPoint(x: 101.38, y: 179.66))
        bezier56Path.addCurve(to: CGPoint(x: 43.76, y: 186.77), controlPoint1: CGPoint(x: 72.26, y: 191.48), controlPoint2: CGPoint(x: 57.23, y: 188.57))
        bezier56Path.addCurve(to: CGPoint(x: 0.64, y: 172.09), controlPoint1: CGPoint(x: 24.52, y: 184.19), controlPoint2: CGPoint(x: 0.64, y: 172.09))
        bezier56Path.addLine(to: CGPoint(x: -1, y: 0))
        bezier56Path.addLine(to: CGPoint(x: 374.77, y: 0))
        bezier56Path.addLine(to: CGPoint(x: 375.79, y: 191.43))
        bezier56Path.close()
        context.saveGState()
        bezier56Path.addClip()
        context.drawLinearGradient(paint0_linear3, start: CGPoint(x: 178.69, y: 199.45), end: CGPoint(x: 197.49, y: -15.51), options: [])
        context.restoreGState()


        //// Bezier 62 Drawing
        let bezier62Path = UIBezierPath()
        bezier62Path.move(to: CGPoint(x: -0.41, y: 175.07))
        bezier62Path.addCurve(to: CGPoint(x: 68.24, y: 193.32), controlPoint1: CGPoint(x: 31.06, y: 187.28), controlPoint2: CGPoint(x: 53.44, y: 193.45))
        bezier62Path.addCurve(to: CGPoint(x: 92.11, y: 185.54), controlPoint1: CGPoint(x: 75.65, y: 193.26), controlPoint2: CGPoint(x: 84.3, y: 190.07))
        bezier62Path.addCurve(to: CGPoint(x: 113.58, y: 169.47), controlPoint1: CGPoint(x: 98.2, y: 182.02), controlPoint2: CGPoint(x: 104.64, y: 176.91))
        bezier62Path.addCurve(to: CGPoint(x: 137.58, y: 152.1), controlPoint1: CGPoint(x: 128.96, y: 156.67), controlPoint2: CGPoint(x: 131.27, y: 155.27))
        bezier62Path.addCurve(to: CGPoint(x: 149.27, y: 149.12), controlPoint1: CGPoint(x: 141.52, y: 150.13), controlPoint2: CGPoint(x: 145.27, y: 149.12))
        bezier62Path.addCurve(to: CGPoint(x: 173.1, y: 164.93), controlPoint1: CGPoint(x: 157.5, y: 149.12), controlPoint2: CGPoint(x: 163.66, y: 154.32))
        bezier62Path.addCurve(to: CGPoint(x: 176.93, y: 169.45), controlPoint1: CGPoint(x: 174.4, y: 166.39), controlPoint2: CGPoint(x: 175.22, y: 167.42))
        bezier62Path.addCurve(to: CGPoint(x: 181.33, y: 174.68), controlPoint1: CGPoint(x: 177.43, y: 170.04), controlPoint2: CGPoint(x: 180.44, y: 173.63))
        bezier62Path.addCurve(to: CGPoint(x: 200.26, y: 193.18), controlPoint1: CGPoint(x: 188.54, y: 183.19), controlPoint2: CGPoint(x: 194.64, y: 189.04))
        bezier62Path.addCurve(to: CGPoint(x: 223.23, y: 200.62), controlPoint1: CGPoint(x: 207.44, y: 198.46), controlPoint2: CGPoint(x: 215.13, y: 200.62))
        bezier62Path.addCurve(to: CGPoint(x: 242.49, y: 189.82), controlPoint1: CGPoint(x: 230.55, y: 200.62), controlPoint2: CGPoint(x: 236.36, y: 197.76))
        bezier62Path.addCurve(to: CGPoint(x: 256.56, y: 160.33), controlPoint1: CGPoint(x: 247.29, y: 183.59), controlPoint2: CGPoint(x: 251.61, y: 173.3))
        bezier62Path.addCurve(to: CGPoint(x: 259, y: 153.81), controlPoint1: CGPoint(x: 256.75, y: 159.82), controlPoint2: CGPoint(x: 258.5, y: 155.14))
        bezier62Path.addCurve(to: CGPoint(x: 273.69, y: 125.64), controlPoint1: CGPoint(x: 264.55, y: 139.33), controlPoint2: CGPoint(x: 268.48, y: 132.51))
        bezier62Path.addCurve(to: CGPoint(x: 295.29, y: 114.9), controlPoint1: CGPoint(x: 280.38, y: 116.83), controlPoint2: CGPoint(x: 289.02, y: 114.85))
        bezier62Path.addCurve(to: CGPoint(x: 317.11, y: 128.04), controlPoint1: CGPoint(x: 301.54, y: 114.96), controlPoint2: CGPoint(x: 310.32, y: 117.5))
        bezier62Path.addCurve(to: CGPoint(x: 331.93, y: 162.62), controlPoint1: CGPoint(x: 322.55, y: 136.49), controlPoint2: CGPoint(x: 327.18, y: 146.59))
        bezier62Path.addCurve(to: CGPoint(x: 337.63, y: 182.59), controlPoint1: CGPoint(x: 333.14, y: 166.73), controlPoint2: CGPoint(x: 337, y: 180.43))
        bezier62Path.addCurve(to: CGPoint(x: 359.43, y: 217.78), controlPoint1: CGPoint(x: 344.08, y: 204.73), controlPoint2: CGPoint(x: 350.15, y: 218.25))
        bezier62Path.addCurve(to: CGPoint(x: 374.59, y: 207.5), controlPoint1: CGPoint(x: 370.52, y: 217.21), controlPoint2: CGPoint(x: 373.47, y: 210.13))
        bezier62Path.addLine(to: CGPoint(x: 374.59, y: 198.28))
        bezier62Path.addCurve(to: CGPoint(x: 360.01, y: 212.85), controlPoint1: CGPoint(x: 372.22, y: 206.22), controlPoint2: CGPoint(x: 368.02, y: 212.59))
        bezier62Path.addCurve(to: CGPoint(x: 342.34, y: 181.14), controlPoint1: CGPoint(x: 353.27, y: 213.06), controlPoint2: CGPoint(x: 348.8, y: 203.33))
        bezier62Path.addCurve(to: CGPoint(x: 336.54, y: 160.93), controlPoint1: CGPoint(x: 341.71, y: 178.99), controlPoint2: CGPoint(x: 337.76, y: 165.04))
        bezier62Path.addCurve(to: CGPoint(x: 321.37, y: 125.57), controlPoint1: CGPoint(x: 331.79, y: 144.91), controlPoint2: CGPoint(x: 326.8, y: 134))
        bezier62Path.addCurve(to: CGPoint(x: 295.07, y: 110), controlPoint1: CGPoint(x: 314.6, y: 115.05), controlPoint2: CGPoint(x: 305.24, y: 110))
        bezier62Path.addCurve(to: CGPoint(x: 269.26, y: 123.03), controlPoint1: CGPoint(x: 284.89, y: 110), controlPoint2: CGPoint(x: 275.94, y: 114.23))
        bezier62Path.addCurve(to: CGPoint(x: 254.28, y: 152.49), controlPoint1: CGPoint(x: 264.06, y: 129.88), controlPoint2: CGPoint(x: 259.82, y: 138.01))
        bezier62Path.addCurve(to: CGPoint(x: 251.85, y: 158.84), controlPoint1: CGPoint(x: 253.77, y: 153.81), controlPoint2: CGPoint(x: 252.05, y: 158.34))
        bezier62Path.addCurve(to: CGPoint(x: 240.26, y: 184.46), controlPoint1: CGPoint(x: 246.91, y: 171.82), controlPoint2: CGPoint(x: 244.27, y: 178.7))
        bezier62Path.addCurve(to: CGPoint(x: 222.9, y: 195.65), controlPoint1: CGPoint(x: 235.14, y: 191.81), controlPoint2: CGPoint(x: 230.25, y: 195.65))
        bezier62Path.addCurve(to: CGPoint(x: 200.26, y: 186.68), controlPoint1: CGPoint(x: 214.78, y: 195.65), controlPoint2: CGPoint(x: 207.45, y: 191.97))
        bezier62Path.addCurve(to: CGPoint(x: 182.51, y: 167.98), controlPoint1: CGPoint(x: 194.63, y: 182.53), controlPoint2: CGPoint(x: 189.72, y: 176.49))
        bezier62Path.addCurve(to: CGPoint(x: 178.61, y: 163.67), controlPoint1: CGPoint(x: 181.62, y: 166.93), controlPoint2: CGPoint(x: 179.11, y: 164.26))
        bezier62Path.addCurve(to: CGPoint(x: 174.44, y: 159.01), controlPoint1: CGPoint(x: 176.89, y: 161.64), controlPoint2: CGPoint(x: 175.73, y: 160.46))
        bezier62Path.addCurve(to: CGPoint(x: 148.95, y: 144.21), controlPoint1: CGPoint(x: 165.02, y: 148.42), controlPoint2: CGPoint(x: 157.15, y: 144.21))
        bezier62Path.addCurve(to: CGPoint(x: 136.47, y: 147.24), controlPoint1: CGPoint(x: 144.97, y: 144.21), controlPoint2: CGPoint(x: 140.83, y: 145.18))
        bezier62Path.addCurve(to: CGPoint(x: 110.14, y: 166.07), controlPoint1: CGPoint(x: 129.48, y: 150.55), controlPoint2: CGPoint(x: 125.51, y: 153.28))
        bezier62Path.addCurve(to: CGPoint(x: 90.03, y: 181.19), controlPoint1: CGPoint(x: 101.2, y: 173.51), controlPoint2: CGPoint(x: 96.12, y: 177.66))
        bezier62Path.addCurve(to: CGPoint(x: 67.45, y: 188.41), controlPoint1: CGPoint(x: 82.2, y: 185.73), controlPoint2: CGPoint(x: 74.88, y: 188.34))
        bezier62Path.addCurve(to: CGPoint(x: -0.22, y: 169.86), controlPoint1: CGPoint(x: 52.64, y: 188.54), controlPoint2: CGPoint(x: 31.25, y: 182.08))
        bezier62Path.addLine(to: CGPoint(x: -0.41, y: 175.07))
        bezier62Path.close()
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow2.shadowOffset.width * resizedShadowScale, height: shadow2.shadowOffset.height * resizedShadowScale), blur: shadow2.shadowBlurRadius * resizedShadowScale, color: (shadow2.shadowColor as! UIColor).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        bezier62Path.addClip()
        context.drawLinearGradient(bezierGradient, start: CGPoint(x: -0.41, y: 163.89), end: CGPoint(x: 374.59, y: 163.89), options: [])
        context.endTransparencyLayer()
        context.restoreGState()



        //// Stars Group
        //// Group 22
        context.saveGState()
        context.translateBy(x: 198.35, y: 8.22)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 80 Drawing
        let bezier80Path = UIBezierPath()
        bezier80Path.move(to: CGPoint(x: -9.09, y: 13.06))
        bezier80Path.addCurve(to: CGPoint(x: -34.99, y: 12.62), controlPoint1: CGPoint(x: -17.79, y: 12.85), controlPoint2: CGPoint(x: -34.99, y: 12.62))
        bezier80Path.addCurve(to: CGPoint(x: -9.08, y: 12.03), controlPoint1: CGPoint(x: -34.99, y: 12.62), controlPoint2: CGPoint(x: -17.8, y: 12.38))
        bezier80Path.addCurve(to: CGPoint(x: -0.12, y: 11.2), controlPoint1: CGPoint(x: -0.36, y: 11.67), controlPoint2: CGPoint(x: -2.31, y: 11.18))
        bezier80Path.addCurve(to: CGPoint(x: 9.99, y: 11.97), controlPoint1: CGPoint(x: 2.07, y: 11.23), controlPoint2: CGPoint(x: -0.14, y: 11.67))
        bezier80Path.addCurve(to: CGPoint(x: 40.4, y: 12.38), controlPoint1: CGPoint(x: 20.12, y: 12.26), controlPoint2: CGPoint(x: 40.4, y: 12.38))
        bezier80Path.addCurve(to: CGPoint(x: 9.98, y: 12.93), controlPoint1: CGPoint(x: 40.4, y: 12.38), controlPoint2: CGPoint(x: 20.13, y: 12.66))
        bezier80Path.addCurve(to: CGPoint(x: -0.19, y: 13.45), controlPoint1: CGPoint(x: -0.17, y: 13.2), controlPoint2: CGPoint(x: 1.91, y: 13.5))
        bezier80Path.addCurve(to: CGPoint(x: -9.09, y: 13.06), controlPoint1: CGPoint(x: -2.29, y: 13.41), controlPoint2: CGPoint(x: -0.39, y: 13.27))
        bezier80Path.close()
        context.saveGState()
        bezier80Path.addClip()
        context.drawRadialGradient(gradient2,
            startCenter: CGPoint(x: -0.18, y: 12.43), startRadius: 0.2,
            endCenter: CGPoint(x: 0.77, y: 12.13), endRadius: 61.23,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 81 Drawing
        context.saveGState()
        context.setAlpha(star5Expr)
        context.setBlendMode(.color)

        let bezier81Path = UIBezierPath()
        bezier81Path.move(to: CGPoint(x: -8.39, y: 13.07))
        bezier81Path.addCurve(to: CGPoint(x: -34.29, y: 12.63), controlPoint1: CGPoint(x: -17.09, y: 12.87), controlPoint2: CGPoint(x: -34.29, y: 12.63))
        bezier81Path.addCurve(to: CGPoint(x: -8.38, y: 12.04), controlPoint1: CGPoint(x: -34.29, y: 12.63), controlPoint2: CGPoint(x: -17.1, y: 12.4))
        bezier81Path.addCurve(to: CGPoint(x: 0.58, y: 11.22), controlPoint1: CGPoint(x: 0.34, y: 11.69), controlPoint2: CGPoint(x: -1.6, y: 11.19))
        bezier81Path.addCurve(to: CGPoint(x: 10.69, y: 11.98), controlPoint1: CGPoint(x: 2.77, y: 11.24), controlPoint2: CGPoint(x: 0.56, y: 11.69))
        bezier81Path.addCurve(to: CGPoint(x: 41.1, y: 12.39), controlPoint1: CGPoint(x: 20.82, y: 12.28), controlPoint2: CGPoint(x: 41.1, y: 12.39))
        bezier81Path.addCurve(to: CGPoint(x: 10.68, y: 12.94), controlPoint1: CGPoint(x: 41.1, y: 12.39), controlPoint2: CGPoint(x: 20.83, y: 12.67))
        bezier81Path.addCurve(to: CGPoint(x: 0.51, y: 13.47), controlPoint1: CGPoint(x: 0.53, y: 13.21), controlPoint2: CGPoint(x: 2.61, y: 13.51))
        bezier81Path.addCurve(to: CGPoint(x: -8.39, y: 13.07), controlPoint1: CGPoint(x: -1.59, y: 13.43), controlPoint2: CGPoint(x: 0.31, y: 13.28))
        bezier81Path.close()
        plane_picture_shadow_2.setFill()
        bezier81Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 23
        context.saveGState()
        context.translateBy(x: 68.1, y: 48.29)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 82 Drawing
        let bezier82Path = UIBezierPath()
        bezier82Path.move(to: CGPoint(x: -4.74, y: 1.9))
        bezier82Path.addCurve(to: CGPoint(x: -30.98, y: 1.18), controlPoint1: CGPoint(x: -13.56, y: 1.56), controlPoint2: CGPoint(x: -30.98, y: 1.18))
        bezier82Path.addCurve(to: CGPoint(x: -4.73, y: 0.23), controlPoint1: CGPoint(x: -30.98, y: 1.18), controlPoint2: CGPoint(x: -13.56, y: 0.8))
        bezier82Path.addCurve(to: CGPoint(x: 4.35, y: -1.1), controlPoint1: CGPoint(x: 4.1, y: -0.34), controlPoint2: CGPoint(x: 2.13, y: -1.15))
        bezier82Path.addCurve(to: CGPoint(x: 14.59, y: 0.13), controlPoint1: CGPoint(x: 6.57, y: -1.06), controlPoint2: CGPoint(x: 4.33, y: -0.34))
        bezier82Path.addCurve(to: CGPoint(x: 45.4, y: 0.79), controlPoint1: CGPoint(x: 24.86, y: 0.61), controlPoint2: CGPoint(x: 45.4, y: 0.79))
        bezier82Path.addCurve(to: CGPoint(x: 14.58, y: 1.68), controlPoint1: CGPoint(x: 45.4, y: 0.79), controlPoint2: CGPoint(x: 24.87, y: 1.25))
        bezier82Path.addCurve(to: CGPoint(x: 4.28, y: 2.53), controlPoint1: CGPoint(x: 4.3, y: 2.12), controlPoint2: CGPoint(x: 6.4, y: 2.6))
        bezier82Path.addCurve(to: CGPoint(x: -4.74, y: 1.9), controlPoint1: CGPoint(x: 2.15, y: 2.47), controlPoint2: CGPoint(x: 4.07, y: 2.23))
        bezier82Path.close()
        context.saveGState()
        bezier82Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 4.29, y: 0.81), startRadius: 0.2,
            endCenter: CGPoint(x: 5.25, y: 0.52), endRadius: 62.08,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 83 Drawing
        context.saveGState()
        context.setAlpha(star4Expr)
        context.setBlendMode(.color)

        let bezier83Path = UIBezierPath()
        bezier83Path.move(to: CGPoint(x: -4.8, y: 1.9))
        bezier83Path.addCurve(to: CGPoint(x: -31.04, y: 1.19), controlPoint1: CGPoint(x: -13.62, y: 1.56), controlPoint2: CGPoint(x: -31.04, y: 1.19))
        bezier83Path.addCurve(to: CGPoint(x: -4.79, y: 0.23), controlPoint1: CGPoint(x: -31.04, y: 1.19), controlPoint2: CGPoint(x: -13.62, y: 0.8))
        bezier83Path.addCurve(to: CGPoint(x: 4.29, y: -1.1), controlPoint1: CGPoint(x: 4.04, y: -0.34), controlPoint2: CGPoint(x: 2.07, y: -1.14))
        bezier83Path.addCurve(to: CGPoint(x: 14.53, y: 0.14), controlPoint1: CGPoint(x: 6.5, y: -1.06), controlPoint2: CGPoint(x: 4.27, y: -0.34))
        bezier83Path.addCurve(to: CGPoint(x: 45.34, y: 0.8), controlPoint1: CGPoint(x: 24.79, y: 0.61), controlPoint2: CGPoint(x: 45.34, y: 0.8))
        bezier83Path.addCurve(to: CGPoint(x: 14.52, y: 1.69), controlPoint1: CGPoint(x: 45.34, y: 0.8), controlPoint2: CGPoint(x: 24.8, y: 1.25))
        bezier83Path.addCurve(to: CGPoint(x: 4.22, y: 2.54), controlPoint1: CGPoint(x: 4.24, y: 2.12), controlPoint2: CGPoint(x: 6.34, y: 2.61))
        bezier83Path.addCurve(to: CGPoint(x: -4.8, y: 1.9), controlPoint1: CGPoint(x: 2.09, y: 2.47), controlPoint2: CGPoint(x: 4.01, y: 2.24))
        bezier83Path.close()
        fillColor15.setFill()
        bezier83Path.fill()

        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 24
        context.saveGState()
        context.translateBy(x: 79.49, y: 113.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 25
        //// Bezier 84 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -44.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier84Path = UIBezierPath()
        bezier84Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier84Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier84Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier84Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier84Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier84Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier84Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier84Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier84Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier84Path.close()
        context.saveGState()
        bezier84Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 85 Drawing
        let bezier85Path = UIBezierPath()
        bezier85Path.move(to: CGPoint(x: 5.41, y: -11.15))
        bezier85Path.addCurve(to: CGPoint(x: -18.64, y: -11.87), controlPoint1: CGPoint(x: -2.67, y: -11.49), controlPoint2: CGPoint(x: -18.64, y: -11.87))
        bezier85Path.addCurve(to: CGPoint(x: 5.42, y: -12.82), controlPoint1: CGPoint(x: -18.64, y: -11.87), controlPoint2: CGPoint(x: -2.67, y: -12.25))
        bezier85Path.addCurve(to: CGPoint(x: 13.74, y: -14.15), controlPoint1: CGPoint(x: 13.51, y: -13.39), controlPoint2: CGPoint(x: 11.71, y: -14.2))
        bezier85Path.addCurve(to: CGPoint(x: 23.13, y: -12.91), controlPoint1: CGPoint(x: 15.77, y: -14.11), controlPoint2: CGPoint(x: 13.72, y: -13.39))
        bezier85Path.addCurve(to: CGPoint(x: 51.36, y: -12.25), controlPoint1: CGPoint(x: 32.53, y: -12.44), controlPoint2: CGPoint(x: 51.36, y: -12.25))
        bezier85Path.addCurve(to: CGPoint(x: 23.12, y: -11.37), controlPoint1: CGPoint(x: 51.36, y: -12.25), controlPoint2: CGPoint(x: 32.54, y: -11.8))
        bezier85Path.addCurve(to: CGPoint(x: 13.67, y: -10.51), controlPoint1: CGPoint(x: 13.7, y: -10.93), controlPoint2: CGPoint(x: 15.62, y: -10.44))
        bezier85Path.addCurve(to: CGPoint(x: 5.41, y: -11.15), controlPoint1: CGPoint(x: 11.73, y: -10.58), controlPoint2: CGPoint(x: 13.49, y: -10.81))
        bezier85Path.close()
        context.saveGState()
        bezier85Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -12.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -12.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 26
        //// Bezier 86 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -44.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier86Path = UIBezierPath()
        bezier86Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier86Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier86Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier86Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier86Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier86Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier86Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier86Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier86Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier86Path.close()
        context.saveGState()
        bezier86Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 87 Drawing
        let bezier87Path = UIBezierPath()
        bezier87Path.move(to: CGPoint(x: 5.68, y: -11.31))
        bezier87Path.addCurve(to: CGPoint(x: -18.37, y: -12.03), controlPoint1: CGPoint(x: -2.4, y: -11.65), controlPoint2: CGPoint(x: -18.37, y: -12.03))
        bezier87Path.addCurve(to: CGPoint(x: 5.69, y: -12.98), controlPoint1: CGPoint(x: -18.37, y: -12.03), controlPoint2: CGPoint(x: -2.41, y: -12.41))
        bezier87Path.addCurve(to: CGPoint(x: 14.01, y: -14.31), controlPoint1: CGPoint(x: 13.78, y: -13.55), controlPoint2: CGPoint(x: 11.98, y: -14.35))
        bezier87Path.addCurve(to: CGPoint(x: 23.39, y: -13.07), controlPoint1: CGPoint(x: 16.04, y: -14.27), controlPoint2: CGPoint(x: 13.99, y: -13.55))
        bezier87Path.addCurve(to: CGPoint(x: 51.63, y: -12.41), controlPoint1: CGPoint(x: 32.8, y: -12.6), controlPoint2: CGPoint(x: 51.63, y: -12.41))
        bezier87Path.addCurve(to: CGPoint(x: 23.39, y: -11.52), controlPoint1: CGPoint(x: 51.63, y: -12.41), controlPoint2: CGPoint(x: 32.81, y: -11.96))
        bezier87Path.addCurve(to: CGPoint(x: 13.94, y: -10.67), controlPoint1: CGPoint(x: 13.96, y: -11.09), controlPoint2: CGPoint(x: 15.89, y: -10.6))
        bezier87Path.addCurve(to: CGPoint(x: 5.68, y: -11.31), controlPoint1: CGPoint(x: 11.99, y: -10.74), controlPoint2: CGPoint(x: 13.75, y: -10.97))
        bezier87Path.close()
        context.saveGState()
        bezier87Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -12.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -12.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 27
        context.saveGState()
        context.translateBy(x: 283.49, y: 103.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 28
        //// Bezier 88 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -18.11)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier88Path = UIBezierPath()
        bezier88Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier88Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier88Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier88Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier88Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier88Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier88Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier88Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier88Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier88Path.close()
        context.saveGState()
        bezier88Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 34.81, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 35.76, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 89 Drawing
        let bezier89Path = UIBezierPath()
        bezier89Path.move(to: CGPoint(x: -9.09, y: 17.9))
        bezier89Path.addCurve(to: CGPoint(x: -34.98, y: 17.18), controlPoint1: CGPoint(x: -17.79, y: 17.56), controlPoint2: CGPoint(x: -34.98, y: 17.18))
        bezier89Path.addCurve(to: CGPoint(x: -9.07, y: 16.23), controlPoint1: CGPoint(x: -34.98, y: 17.18), controlPoint2: CGPoint(x: -17.79, y: 16.8))
        bezier89Path.addCurve(to: CGPoint(x: -0.11, y: 14.9), controlPoint1: CGPoint(x: -0.36, y: 15.66), controlPoint2: CGPoint(x: -2.3, y: 14.85))
        bezier89Path.addCurve(to: CGPoint(x: 10, y: 16.13), controlPoint1: CGPoint(x: 2.07, y: 14.94), controlPoint2: CGPoint(x: -0.13, y: 15.66))
        bezier89Path.addCurve(to: CGPoint(x: 40.4, y: 16.79), controlPoint1: CGPoint(x: 20.13, y: 16.61), controlPoint2: CGPoint(x: 40.4, y: 16.79))
        bezier89Path.addCurve(to: CGPoint(x: 9.99, y: 17.68), controlPoint1: CGPoint(x: 40.4, y: 16.79), controlPoint2: CGPoint(x: 20.13, y: 17.25))
        bezier89Path.addCurve(to: CGPoint(x: -0.18, y: 18.53), controlPoint1: CGPoint(x: -0.16, y: 18.12), controlPoint2: CGPoint(x: 1.91, y: 18.6))
        bezier89Path.addCurve(to: CGPoint(x: -9.09, y: 17.9), controlPoint1: CGPoint(x: -2.28, y: 18.47), controlPoint2: CGPoint(x: -0.39, y: 18.23))
        bezier89Path.close()
        context.saveGState()
        bezier89Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: -0.17, y: 16.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 16.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 29
        context.saveGState()
        context.setAlpha(0)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 90 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -18.09)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier90Path = UIBezierPath()
        bezier90Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier90Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier90Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier90Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier90Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier90Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier90Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier90Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier90Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier90Path.close()
        plane_picture_shadow_2.setFill()
        bezier90Path.fill()

        context.restoreGState()


        //// Bezier 91 Drawing
        let bezier91Path = UIBezierPath()
        bezier91Path.move(to: CGPoint(x: -9.09, y: 17.91))
        bezier91Path.addCurve(to: CGPoint(x: -34.99, y: 17.2), controlPoint1: CGPoint(x: -17.79, y: 17.57), controlPoint2: CGPoint(x: -34.99, y: 17.2))
        bezier91Path.addCurve(to: CGPoint(x: -9.08, y: 16.24), controlPoint1: CGPoint(x: -34.99, y: 17.2), controlPoint2: CGPoint(x: -17.79, y: 16.81))
        bezier91Path.addCurve(to: CGPoint(x: -0.12, y: 14.91), controlPoint1: CGPoint(x: -0.36, y: 15.67), controlPoint2: CGPoint(x: -2.3, y: 14.87))
        bezier91Path.addCurve(to: CGPoint(x: 9.99, y: 16.15), controlPoint1: CGPoint(x: 2.07, y: 14.95), controlPoint2: CGPoint(x: -0.14, y: 15.67))
        bezier91Path.addCurve(to: CGPoint(x: 40.4, y: 16.81), controlPoint1: CGPoint(x: 20.12, y: 16.62), controlPoint2: CGPoint(x: 40.4, y: 16.81))
        bezier91Path.addCurve(to: CGPoint(x: 9.98, y: 17.7), controlPoint1: CGPoint(x: 40.4, y: 16.81), controlPoint2: CGPoint(x: 20.13, y: 17.26))
        bezier91Path.addCurve(to: CGPoint(x: -0.19, y: 18.55), controlPoint1: CGPoint(x: -0.16, y: 18.13), controlPoint2: CGPoint(x: 1.91, y: 18.62))
        bezier91Path.addCurve(to: CGPoint(x: -9.09, y: 17.91), controlPoint1: CGPoint(x: -2.29, y: 18.48), controlPoint2: CGPoint(x: -0.39, y: 18.25))
        bezier91Path.close()
        plane_picture_shadow_2.setFill()
        bezier91Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 30
        context.saveGState()
        context.translateBy(x: 335.49, y: 77.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)

        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Group 31
        //// Bezier 92 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -15.11)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier92Path = UIBezierPath()
        bezier92Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier92Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier92Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier92Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier92Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier92Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier92Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier92Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier92Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier92Path.close()
        context.saveGState()
        bezier92Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 34.81, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 35.76, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 93 Drawing
        let bezier93Path = UIBezierPath()
        bezier93Path.move(to: CGPoint(x: -9.09, y: 20.9))
        bezier93Path.addCurve(to: CGPoint(x: -34.98, y: 20.18), controlPoint1: CGPoint(x: -17.79, y: 20.56), controlPoint2: CGPoint(x: -34.98, y: 20.18))
        bezier93Path.addCurve(to: CGPoint(x: -9.07, y: 19.23), controlPoint1: CGPoint(x: -34.98, y: 20.18), controlPoint2: CGPoint(x: -17.79, y: 19.8))
        bezier93Path.addCurve(to: CGPoint(x: -0.11, y: 17.9), controlPoint1: CGPoint(x: -0.36, y: 18.66), controlPoint2: CGPoint(x: -2.3, y: 17.85))
        bezier93Path.addCurve(to: CGPoint(x: 10, y: 19.13), controlPoint1: CGPoint(x: 2.07, y: 17.94), controlPoint2: CGPoint(x: -0.13, y: 18.66))
        bezier93Path.addCurve(to: CGPoint(x: 40.4, y: 19.79), controlPoint1: CGPoint(x: 20.13, y: 19.61), controlPoint2: CGPoint(x: 40.4, y: 19.79))
        bezier93Path.addCurve(to: CGPoint(x: 9.99, y: 20.68), controlPoint1: CGPoint(x: 40.4, y: 19.79), controlPoint2: CGPoint(x: 20.13, y: 20.25))
        bezier93Path.addCurve(to: CGPoint(x: -0.18, y: 21.53), controlPoint1: CGPoint(x: -0.16, y: 21.12), controlPoint2: CGPoint(x: 1.91, y: 21.6))
        bezier93Path.addCurve(to: CGPoint(x: -9.09, y: 20.9), controlPoint1: CGPoint(x: -2.28, y: 21.47), controlPoint2: CGPoint(x: -0.39, y: 21.23))
        bezier93Path.close()
        context.saveGState()
        bezier93Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: -0.17, y: 19.81), startRadius: 0.2,
            endCenter: CGPoint(x: 0.78, y: 19.52), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 32
        context.saveGState()
        context.setAlpha(star3Expr)
        context.setBlendMode(.color)
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Bezier 94 Drawing
        context.saveGState()
        context.translateBy(x: 1.62, y: -15.09)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier94Path = UIBezierPath()
        bezier94Path.move(to: CGPoint(x: 25.9, y: 3))
        bezier94Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 17.2, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier94Path.addCurve(to: CGPoint(x: 25.91, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 17.19, y: 1.9))
        bezier94Path.addCurve(to: CGPoint(x: 34.87, y: 0), controlPoint1: CGPoint(x: 34.63, y: 0.76), controlPoint2: CGPoint(x: 32.68, y: -0.04))
        bezier94Path.addCurve(to: CGPoint(x: 44.98, y: 1.24), controlPoint1: CGPoint(x: 37.06, y: 0.04), controlPoint2: CGPoint(x: 34.85, y: 0.76))
        bezier94Path.addCurve(to: CGPoint(x: 75.39, y: 1.9), controlPoint1: CGPoint(x: 55.11, y: 1.71), controlPoint2: CGPoint(x: 75.39, y: 1.9))
        bezier94Path.addCurve(to: CGPoint(x: 44.97, y: 2.79), controlPoint1: CGPoint(x: 75.39, y: 1.9), controlPoint2: CGPoint(x: 55.12, y: 2.35))
        bezier94Path.addCurve(to: CGPoint(x: 34.8, y: 3.64), controlPoint1: CGPoint(x: 34.82, y: 3.22), controlPoint2: CGPoint(x: 36.9, y: 3.71))
        bezier94Path.addCurve(to: CGPoint(x: 25.9, y: 3), controlPoint1: CGPoint(x: 32.7, y: 3.57), controlPoint2: CGPoint(x: 34.6, y: 3.34))
        bezier94Path.close()
        plane_picture_shadow_2.setFill()
        bezier94Path.fill()

        context.restoreGState()


        //// Bezier 95 Drawing
        let bezier95Path = UIBezierPath()
        bezier95Path.move(to: CGPoint(x: -9.09, y: 20.91))
        bezier95Path.addCurve(to: CGPoint(x: -34.99, y: 20.2), controlPoint1: CGPoint(x: -17.79, y: 20.57), controlPoint2: CGPoint(x: -34.99, y: 20.2))
        bezier95Path.addCurve(to: CGPoint(x: -9.08, y: 19.24), controlPoint1: CGPoint(x: -34.99, y: 20.2), controlPoint2: CGPoint(x: -17.79, y: 19.81))
        bezier95Path.addCurve(to: CGPoint(x: -0.12, y: 17.91), controlPoint1: CGPoint(x: -0.36, y: 18.67), controlPoint2: CGPoint(x: -2.3, y: 17.87))
        bezier95Path.addCurve(to: CGPoint(x: 9.99, y: 19.15), controlPoint1: CGPoint(x: 2.07, y: 17.95), controlPoint2: CGPoint(x: -0.14, y: 18.67))
        bezier95Path.addCurve(to: CGPoint(x: 40.4, y: 19.81), controlPoint1: CGPoint(x: 20.12, y: 19.62), controlPoint2: CGPoint(x: 40.4, y: 19.81))
        bezier95Path.addCurve(to: CGPoint(x: 9.98, y: 20.7), controlPoint1: CGPoint(x: 40.4, y: 19.81), controlPoint2: CGPoint(x: 20.13, y: 20.26))
        bezier95Path.addCurve(to: CGPoint(x: -0.19, y: 21.55), controlPoint1: CGPoint(x: -0.16, y: 21.13), controlPoint2: CGPoint(x: 1.91, y: 21.62))
        bezier95Path.addCurve(to: CGPoint(x: -9.09, y: 20.91), controlPoint1: CGPoint(x: -2.29, y: 21.48), controlPoint2: CGPoint(x: -0.39, y: 21.25))
        bezier95Path.close()
        plane_picture_shadow_2.setFill()
        bezier95Path.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        context.endTransparencyLayer()

        context.restoreGState()


        //// Group 33
        context.saveGState()
        context.translateBy(x: 103.49, y: 17.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.2)



        //// Group 34
        //// Bezier 96 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -43.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier96Path = UIBezierPath()
        bezier96Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier96Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier96Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier96Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier96Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier96Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier96Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier96Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier96Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier96Path.close()
        context.saveGState()
        bezier96Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 97 Drawing
        let bezier97Path = UIBezierPath()
        bezier97Path.move(to: CGPoint(x: 5.41, y: -10.15))
        bezier97Path.addCurve(to: CGPoint(x: -18.64, y: -10.87), controlPoint1: CGPoint(x: -2.67, y: -10.49), controlPoint2: CGPoint(x: -18.64, y: -10.87))
        bezier97Path.addCurve(to: CGPoint(x: 5.42, y: -11.82), controlPoint1: CGPoint(x: -18.64, y: -10.87), controlPoint2: CGPoint(x: -2.67, y: -11.25))
        bezier97Path.addCurve(to: CGPoint(x: 13.74, y: -13.15), controlPoint1: CGPoint(x: 13.51, y: -12.39), controlPoint2: CGPoint(x: 11.71, y: -13.2))
        bezier97Path.addCurve(to: CGPoint(x: 23.13, y: -11.91), controlPoint1: CGPoint(x: 15.77, y: -13.11), controlPoint2: CGPoint(x: 13.72, y: -12.39))
        bezier97Path.addCurve(to: CGPoint(x: 51.36, y: -11.25), controlPoint1: CGPoint(x: 32.53, y: -11.44), controlPoint2: CGPoint(x: 51.36, y: -11.25))
        bezier97Path.addCurve(to: CGPoint(x: 23.12, y: -10.37), controlPoint1: CGPoint(x: 51.36, y: -11.25), controlPoint2: CGPoint(x: 32.54, y: -10.8))
        bezier97Path.addCurve(to: CGPoint(x: 13.67, y: -9.51), controlPoint1: CGPoint(x: 13.7, y: -9.93), controlPoint2: CGPoint(x: 15.62, y: -9.44))
        bezier97Path.addCurve(to: CGPoint(x: 5.41, y: -10.15), controlPoint1: CGPoint(x: 11.73, y: -9.58), controlPoint2: CGPoint(x: 13.49, y: -9.81))
        bezier97Path.close()
        context.saveGState()
        bezier97Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -11.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -11.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 35
        //// Bezier 98 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -43.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier98Path = UIBezierPath()
        bezier98Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier98Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier98Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier98Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier98Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier98Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier98Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier98Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier98Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier98Path.close()
        context.saveGState()
        bezier98Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 99 Drawing
        let bezier99Path = UIBezierPath()
        bezier99Path.move(to: CGPoint(x: 5.68, y: -10.31))
        bezier99Path.addCurve(to: CGPoint(x: -18.37, y: -11.03), controlPoint1: CGPoint(x: -2.4, y: -10.65), controlPoint2: CGPoint(x: -18.37, y: -11.03))
        bezier99Path.addCurve(to: CGPoint(x: 5.69, y: -11.98), controlPoint1: CGPoint(x: -18.37, y: -11.03), controlPoint2: CGPoint(x: -2.41, y: -11.41))
        bezier99Path.addCurve(to: CGPoint(x: 14.01, y: -13.31), controlPoint1: CGPoint(x: 13.78, y: -12.55), controlPoint2: CGPoint(x: 11.98, y: -13.35))
        bezier99Path.addCurve(to: CGPoint(x: 23.39, y: -12.07), controlPoint1: CGPoint(x: 16.04, y: -13.27), controlPoint2: CGPoint(x: 13.99, y: -12.55))
        bezier99Path.addCurve(to: CGPoint(x: 51.63, y: -11.41), controlPoint1: CGPoint(x: 32.8, y: -11.6), controlPoint2: CGPoint(x: 51.63, y: -11.41))
        bezier99Path.addCurve(to: CGPoint(x: 23.39, y: -10.52), controlPoint1: CGPoint(x: 51.63, y: -11.41), controlPoint2: CGPoint(x: 32.81, y: -10.96))
        bezier99Path.addCurve(to: CGPoint(x: 13.94, y: -9.67), controlPoint1: CGPoint(x: 13.96, y: -10.09), controlPoint2: CGPoint(x: 15.89, y: -9.6))
        bezier99Path.addCurve(to: CGPoint(x: 5.68, y: -10.31), controlPoint1: CGPoint(x: 11.99, y: -9.74), controlPoint2: CGPoint(x: 13.75, y: -9.97))
        bezier99Path.close()
        context.saveGState()
        bezier99Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -11.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -11.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 36
        context.saveGState()
        context.translateBy(x: 120.49, y: 42.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.4, y: 0.4)



        //// Group 37
        //// Bezier 100 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -45.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier100Path = UIBezierPath()
        bezier100Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier100Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier100Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier100Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier100Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier100Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier100Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier100Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier100Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier100Path.close()
        context.saveGState()
        bezier100Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 101 Drawing
        let bezier101Path = UIBezierPath()
        bezier101Path.move(to: CGPoint(x: 5.41, y: -12.15))
        bezier101Path.addCurve(to: CGPoint(x: -18.64, y: -12.87), controlPoint1: CGPoint(x: -2.67, y: -12.49), controlPoint2: CGPoint(x: -18.64, y: -12.87))
        bezier101Path.addCurve(to: CGPoint(x: 5.42, y: -13.82), controlPoint1: CGPoint(x: -18.64, y: -12.87), controlPoint2: CGPoint(x: -2.67, y: -13.25))
        bezier101Path.addCurve(to: CGPoint(x: 13.74, y: -15.15), controlPoint1: CGPoint(x: 13.51, y: -14.39), controlPoint2: CGPoint(x: 11.71, y: -15.2))
        bezier101Path.addCurve(to: CGPoint(x: 23.13, y: -13.91), controlPoint1: CGPoint(x: 15.77, y: -15.11), controlPoint2: CGPoint(x: 13.72, y: -14.39))
        bezier101Path.addCurve(to: CGPoint(x: 51.36, y: -13.25), controlPoint1: CGPoint(x: 32.53, y: -13.44), controlPoint2: CGPoint(x: 51.36, y: -13.25))
        bezier101Path.addCurve(to: CGPoint(x: 23.12, y: -12.37), controlPoint1: CGPoint(x: 51.36, y: -13.25), controlPoint2: CGPoint(x: 32.54, y: -12.8))
        bezier101Path.addCurve(to: CGPoint(x: 13.67, y: -11.51), controlPoint1: CGPoint(x: 13.7, y: -11.93), controlPoint2: CGPoint(x: 15.62, y: -11.44))
        bezier101Path.addCurve(to: CGPoint(x: 5.41, y: -12.15), controlPoint1: CGPoint(x: 11.73, y: -11.58), controlPoint2: CGPoint(x: 13.49, y: -11.81))
        bezier101Path.close()
        context.saveGState()
        bezier101Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -13.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -13.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 38
        //// Bezier 102 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -45.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier102Path = UIBezierPath()
        bezier102Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier102Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier102Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier102Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier102Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier102Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier102Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier102Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier102Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier102Path.close()
        context.saveGState()
        bezier102Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 103 Drawing
        let bezier103Path = UIBezierPath()
        bezier103Path.move(to: CGPoint(x: 5.68, y: -12.31))
        bezier103Path.addCurve(to: CGPoint(x: -18.37, y: -13.03), controlPoint1: CGPoint(x: -2.4, y: -12.65), controlPoint2: CGPoint(x: -18.37, y: -13.03))
        bezier103Path.addCurve(to: CGPoint(x: 5.69, y: -13.98), controlPoint1: CGPoint(x: -18.37, y: -13.03), controlPoint2: CGPoint(x: -2.41, y: -13.41))
        bezier103Path.addCurve(to: CGPoint(x: 14.01, y: -15.31), controlPoint1: CGPoint(x: 13.78, y: -14.55), controlPoint2: CGPoint(x: 11.98, y: -15.35))
        bezier103Path.addCurve(to: CGPoint(x: 23.39, y: -14.07), controlPoint1: CGPoint(x: 16.04, y: -15.27), controlPoint2: CGPoint(x: 13.99, y: -14.55))
        bezier103Path.addCurve(to: CGPoint(x: 51.63, y: -13.41), controlPoint1: CGPoint(x: 32.8, y: -13.6), controlPoint2: CGPoint(x: 51.63, y: -13.41))
        bezier103Path.addCurve(to: CGPoint(x: 23.39, y: -12.52), controlPoint1: CGPoint(x: 51.63, y: -13.41), controlPoint2: CGPoint(x: 32.81, y: -12.96))
        bezier103Path.addCurve(to: CGPoint(x: 13.94, y: -11.67), controlPoint1: CGPoint(x: 13.96, y: -12.09), controlPoint2: CGPoint(x: 15.89, y: -11.6))
        bezier103Path.addCurve(to: CGPoint(x: 5.68, y: -12.31), controlPoint1: CGPoint(x: 11.99, y: -11.74), controlPoint2: CGPoint(x: 13.75, y: -11.97))
        bezier103Path.close()
        context.saveGState()
        bezier103Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -13.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -13.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 39
        context.saveGState()
        context.translateBy(x: 144.49, y: 30.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 40
        //// Bezier 104 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -40.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier104Path = UIBezierPath()
        bezier104Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier104Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier104Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier104Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier104Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier104Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier104Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier104Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier104Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier104Path.close()
        context.saveGState()
        bezier104Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 105 Drawing
        let bezier105Path = UIBezierPath()
        bezier105Path.move(to: CGPoint(x: 5.41, y: -7.15))
        bezier105Path.addCurve(to: CGPoint(x: -18.64, y: -7.87), controlPoint1: CGPoint(x: -2.67, y: -7.49), controlPoint2: CGPoint(x: -18.64, y: -7.87))
        bezier105Path.addCurve(to: CGPoint(x: 5.42, y: -8.82), controlPoint1: CGPoint(x: -18.64, y: -7.87), controlPoint2: CGPoint(x: -2.67, y: -8.25))
        bezier105Path.addCurve(to: CGPoint(x: 13.74, y: -10.15), controlPoint1: CGPoint(x: 13.51, y: -9.39), controlPoint2: CGPoint(x: 11.71, y: -10.2))
        bezier105Path.addCurve(to: CGPoint(x: 23.13, y: -8.91), controlPoint1: CGPoint(x: 15.77, y: -10.11), controlPoint2: CGPoint(x: 13.72, y: -9.39))
        bezier105Path.addCurve(to: CGPoint(x: 51.36, y: -8.25), controlPoint1: CGPoint(x: 32.53, y: -8.44), controlPoint2: CGPoint(x: 51.36, y: -8.25))
        bezier105Path.addCurve(to: CGPoint(x: 23.12, y: -7.37), controlPoint1: CGPoint(x: 51.36, y: -8.25), controlPoint2: CGPoint(x: 32.54, y: -7.8))
        bezier105Path.addCurve(to: CGPoint(x: 13.67, y: -6.51), controlPoint1: CGPoint(x: 13.7, y: -6.93), controlPoint2: CGPoint(x: 15.62, y: -6.44))
        bezier105Path.addCurve(to: CGPoint(x: 5.41, y: -7.15), controlPoint1: CGPoint(x: 11.73, y: -6.58), controlPoint2: CGPoint(x: 13.49, y: -6.81))
        bezier105Path.close()
        context.saveGState()
        bezier105Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -8.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -8.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 41
        //// Bezier 106 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -40.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier106Path = UIBezierPath()
        bezier106Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier106Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier106Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier106Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier106Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier106Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier106Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier106Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier106Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier106Path.close()
        context.saveGState()
        bezier106Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 107 Drawing
        let bezier107Path = UIBezierPath()
        bezier107Path.move(to: CGPoint(x: 5.68, y: -7.31))
        bezier107Path.addCurve(to: CGPoint(x: -18.37, y: -8.03), controlPoint1: CGPoint(x: -2.4, y: -7.65), controlPoint2: CGPoint(x: -18.37, y: -8.03))
        bezier107Path.addCurve(to: CGPoint(x: 5.69, y: -8.98), controlPoint1: CGPoint(x: -18.37, y: -8.03), controlPoint2: CGPoint(x: -2.41, y: -8.41))
        bezier107Path.addCurve(to: CGPoint(x: 14.01, y: -10.31), controlPoint1: CGPoint(x: 13.78, y: -9.55), controlPoint2: CGPoint(x: 11.98, y: -10.35))
        bezier107Path.addCurve(to: CGPoint(x: 23.39, y: -9.07), controlPoint1: CGPoint(x: 16.04, y: -10.27), controlPoint2: CGPoint(x: 13.99, y: -9.55))
        bezier107Path.addCurve(to: CGPoint(x: 51.63, y: -8.41), controlPoint1: CGPoint(x: 32.8, y: -8.6), controlPoint2: CGPoint(x: 51.63, y: -8.41))
        bezier107Path.addCurve(to: CGPoint(x: 23.39, y: -7.52), controlPoint1: CGPoint(x: 51.63, y: -8.41), controlPoint2: CGPoint(x: 32.81, y: -7.96))
        bezier107Path.addCurve(to: CGPoint(x: 13.94, y: -6.67), controlPoint1: CGPoint(x: 13.96, y: -7.09), controlPoint2: CGPoint(x: 15.89, y: -6.6))
        bezier107Path.addCurve(to: CGPoint(x: 5.68, y: -7.31), controlPoint1: CGPoint(x: 11.99, y: -6.74), controlPoint2: CGPoint(x: 13.75, y: -6.97))
        bezier107Path.close()
        context.saveGState()
        bezier107Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -8.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -8.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 42
        context.saveGState()
        context.translateBy(x: 154.49, y: 40.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 43
        //// Bezier 108 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -40.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier108Path = UIBezierPath()
        bezier108Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier108Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier108Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier108Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier108Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier108Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier108Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier108Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier108Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier108Path.close()
        context.saveGState()
        bezier108Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 109 Drawing
        let bezier109Path = UIBezierPath()
        bezier109Path.move(to: CGPoint(x: 5.41, y: -7.15))
        bezier109Path.addCurve(to: CGPoint(x: -18.64, y: -7.87), controlPoint1: CGPoint(x: -2.67, y: -7.49), controlPoint2: CGPoint(x: -18.64, y: -7.87))
        bezier109Path.addCurve(to: CGPoint(x: 5.42, y: -8.82), controlPoint1: CGPoint(x: -18.64, y: -7.87), controlPoint2: CGPoint(x: -2.67, y: -8.25))
        bezier109Path.addCurve(to: CGPoint(x: 13.74, y: -10.15), controlPoint1: CGPoint(x: 13.51, y: -9.39), controlPoint2: CGPoint(x: 11.71, y: -10.2))
        bezier109Path.addCurve(to: CGPoint(x: 23.13, y: -8.91), controlPoint1: CGPoint(x: 15.77, y: -10.11), controlPoint2: CGPoint(x: 13.72, y: -9.39))
        bezier109Path.addCurve(to: CGPoint(x: 51.36, y: -8.25), controlPoint1: CGPoint(x: 32.53, y: -8.44), controlPoint2: CGPoint(x: 51.36, y: -8.25))
        bezier109Path.addCurve(to: CGPoint(x: 23.12, y: -7.37), controlPoint1: CGPoint(x: 51.36, y: -8.25), controlPoint2: CGPoint(x: 32.54, y: -7.8))
        bezier109Path.addCurve(to: CGPoint(x: 13.67, y: -6.51), controlPoint1: CGPoint(x: 13.7, y: -6.93), controlPoint2: CGPoint(x: 15.62, y: -6.44))
        bezier109Path.addCurve(to: CGPoint(x: 5.41, y: -7.15), controlPoint1: CGPoint(x: 11.73, y: -6.58), controlPoint2: CGPoint(x: 13.49, y: -6.81))
        bezier109Path.close()
        context.saveGState()
        bezier109Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -8.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -8.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 44
        //// Bezier 110 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -40.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier110Path = UIBezierPath()
        bezier110Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier110Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier110Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier110Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier110Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier110Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier110Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier110Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier110Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier110Path.close()
        context.saveGState()
        bezier110Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 111 Drawing
        let bezier111Path = UIBezierPath()
        bezier111Path.move(to: CGPoint(x: 5.68, y: -7.31))
        bezier111Path.addCurve(to: CGPoint(x: -18.37, y: -8.03), controlPoint1: CGPoint(x: -2.4, y: -7.65), controlPoint2: CGPoint(x: -18.37, y: -8.03))
        bezier111Path.addCurve(to: CGPoint(x: 5.69, y: -8.98), controlPoint1: CGPoint(x: -18.37, y: -8.03), controlPoint2: CGPoint(x: -2.41, y: -8.41))
        bezier111Path.addCurve(to: CGPoint(x: 14.01, y: -10.31), controlPoint1: CGPoint(x: 13.78, y: -9.55), controlPoint2: CGPoint(x: 11.98, y: -10.35))
        bezier111Path.addCurve(to: CGPoint(x: 23.39, y: -9.07), controlPoint1: CGPoint(x: 16.04, y: -10.27), controlPoint2: CGPoint(x: 13.99, y: -9.55))
        bezier111Path.addCurve(to: CGPoint(x: 51.63, y: -8.41), controlPoint1: CGPoint(x: 32.8, y: -8.6), controlPoint2: CGPoint(x: 51.63, y: -8.41))
        bezier111Path.addCurve(to: CGPoint(x: 23.39, y: -7.52), controlPoint1: CGPoint(x: 51.63, y: -8.41), controlPoint2: CGPoint(x: 32.81, y: -7.96))
        bezier111Path.addCurve(to: CGPoint(x: 13.94, y: -6.67), controlPoint1: CGPoint(x: 13.96, y: -7.09), controlPoint2: CGPoint(x: 15.89, y: -6.6))
        bezier111Path.addCurve(to: CGPoint(x: 5.68, y: -7.31), controlPoint1: CGPoint(x: 11.99, y: -6.74), controlPoint2: CGPoint(x: 13.75, y: -6.97))
        bezier111Path.close()
        context.saveGState()
        bezier111Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -8.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -8.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 45
        context.saveGState()
        context.translateBy(x: 74.49, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 46
        //// Bezier 112 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -44.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier112Path = UIBezierPath()
        bezier112Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier112Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier112Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier112Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier112Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier112Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier112Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier112Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier112Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier112Path.close()
        context.saveGState()
        bezier112Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 113 Drawing
        let bezier113Path = UIBezierPath()
        bezier113Path.move(to: CGPoint(x: 5.41, y: -11.15))
        bezier113Path.addCurve(to: CGPoint(x: -18.64, y: -11.87), controlPoint1: CGPoint(x: -2.67, y: -11.49), controlPoint2: CGPoint(x: -18.64, y: -11.87))
        bezier113Path.addCurve(to: CGPoint(x: 5.42, y: -12.82), controlPoint1: CGPoint(x: -18.64, y: -11.87), controlPoint2: CGPoint(x: -2.67, y: -12.25))
        bezier113Path.addCurve(to: CGPoint(x: 13.74, y: -14.15), controlPoint1: CGPoint(x: 13.51, y: -13.39), controlPoint2: CGPoint(x: 11.71, y: -14.2))
        bezier113Path.addCurve(to: CGPoint(x: 23.13, y: -12.91), controlPoint1: CGPoint(x: 15.77, y: -14.11), controlPoint2: CGPoint(x: 13.72, y: -13.39))
        bezier113Path.addCurve(to: CGPoint(x: 51.36, y: -12.25), controlPoint1: CGPoint(x: 32.53, y: -12.44), controlPoint2: CGPoint(x: 51.36, y: -12.25))
        bezier113Path.addCurve(to: CGPoint(x: 23.12, y: -11.37), controlPoint1: CGPoint(x: 51.36, y: -12.25), controlPoint2: CGPoint(x: 32.54, y: -11.8))
        bezier113Path.addCurve(to: CGPoint(x: 13.67, y: -10.51), controlPoint1: CGPoint(x: 13.7, y: -10.93), controlPoint2: CGPoint(x: 15.62, y: -10.44))
        bezier113Path.addCurve(to: CGPoint(x: 5.41, y: -11.15), controlPoint1: CGPoint(x: 11.73, y: -10.58), controlPoint2: CGPoint(x: 13.49, y: -10.81))
        bezier113Path.close()
        context.saveGState()
        bezier113Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -12.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -12.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 47
        //// Bezier 114 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -44.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier114Path = UIBezierPath()
        bezier114Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier114Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier114Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier114Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier114Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier114Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier114Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier114Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier114Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier114Path.close()
        context.saveGState()
        bezier114Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 115 Drawing
        let bezier115Path = UIBezierPath()
        bezier115Path.move(to: CGPoint(x: 5.68, y: -11.31))
        bezier115Path.addCurve(to: CGPoint(x: -18.37, y: -12.03), controlPoint1: CGPoint(x: -2.4, y: -11.65), controlPoint2: CGPoint(x: -18.37, y: -12.03))
        bezier115Path.addCurve(to: CGPoint(x: 5.69, y: -12.98), controlPoint1: CGPoint(x: -18.37, y: -12.03), controlPoint2: CGPoint(x: -2.41, y: -12.41))
        bezier115Path.addCurve(to: CGPoint(x: 14.01, y: -14.31), controlPoint1: CGPoint(x: 13.78, y: -13.55), controlPoint2: CGPoint(x: 11.98, y: -14.35))
        bezier115Path.addCurve(to: CGPoint(x: 23.39, y: -13.07), controlPoint1: CGPoint(x: 16.04, y: -14.27), controlPoint2: CGPoint(x: 13.99, y: -13.55))
        bezier115Path.addCurve(to: CGPoint(x: 51.63, y: -12.41), controlPoint1: CGPoint(x: 32.8, y: -12.6), controlPoint2: CGPoint(x: 51.63, y: -12.41))
        bezier115Path.addCurve(to: CGPoint(x: 23.39, y: -11.52), controlPoint1: CGPoint(x: 51.63, y: -12.41), controlPoint2: CGPoint(x: 32.81, y: -11.96))
        bezier115Path.addCurve(to: CGPoint(x: 13.94, y: -10.67), controlPoint1: CGPoint(x: 13.96, y: -11.09), controlPoint2: CGPoint(x: 15.89, y: -10.6))
        bezier115Path.addCurve(to: CGPoint(x: 5.68, y: -11.31), controlPoint1: CGPoint(x: 11.99, y: -10.74), controlPoint2: CGPoint(x: 13.75, y: -10.97))
        bezier115Path.close()
        context.saveGState()
        bezier115Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -12.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -12.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 48
        context.saveGState()
        context.translateBy(x: 84.49, y: 28.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 49
        //// Bezier 116 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -44.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier116Path = UIBezierPath()
        bezier116Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier116Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier116Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier116Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier116Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier116Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier116Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier116Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier116Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier116Path.close()
        context.saveGState()
        bezier116Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 117 Drawing
        let bezier117Path = UIBezierPath()
        bezier117Path.move(to: CGPoint(x: 5.41, y: -11.15))
        bezier117Path.addCurve(to: CGPoint(x: -18.64, y: -11.87), controlPoint1: CGPoint(x: -2.67, y: -11.49), controlPoint2: CGPoint(x: -18.64, y: -11.87))
        bezier117Path.addCurve(to: CGPoint(x: 5.42, y: -12.82), controlPoint1: CGPoint(x: -18.64, y: -11.87), controlPoint2: CGPoint(x: -2.67, y: -12.25))
        bezier117Path.addCurve(to: CGPoint(x: 13.74, y: -14.15), controlPoint1: CGPoint(x: 13.51, y: -13.39), controlPoint2: CGPoint(x: 11.71, y: -14.2))
        bezier117Path.addCurve(to: CGPoint(x: 23.13, y: -12.91), controlPoint1: CGPoint(x: 15.77, y: -14.11), controlPoint2: CGPoint(x: 13.72, y: -13.39))
        bezier117Path.addCurve(to: CGPoint(x: 51.36, y: -12.25), controlPoint1: CGPoint(x: 32.53, y: -12.44), controlPoint2: CGPoint(x: 51.36, y: -12.25))
        bezier117Path.addCurve(to: CGPoint(x: 23.12, y: -11.37), controlPoint1: CGPoint(x: 51.36, y: -12.25), controlPoint2: CGPoint(x: 32.54, y: -11.8))
        bezier117Path.addCurve(to: CGPoint(x: 13.67, y: -10.51), controlPoint1: CGPoint(x: 13.7, y: -10.93), controlPoint2: CGPoint(x: 15.62, y: -10.44))
        bezier117Path.addCurve(to: CGPoint(x: 5.41, y: -11.15), controlPoint1: CGPoint(x: 11.73, y: -10.58), controlPoint2: CGPoint(x: 13.49, y: -10.81))
        bezier117Path.close()
        context.saveGState()
        bezier117Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -12.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -12.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 50
        //// Bezier 118 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -44.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier118Path = UIBezierPath()
        bezier118Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier118Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier118Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier118Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier118Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier118Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier118Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier118Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier118Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier118Path.close()
        context.saveGState()
        bezier118Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 119 Drawing
        let bezier119Path = UIBezierPath()
        bezier119Path.move(to: CGPoint(x: 5.68, y: -11.31))
        bezier119Path.addCurve(to: CGPoint(x: -18.37, y: -12.03), controlPoint1: CGPoint(x: -2.4, y: -11.65), controlPoint2: CGPoint(x: -18.37, y: -12.03))
        bezier119Path.addCurve(to: CGPoint(x: 5.69, y: -12.98), controlPoint1: CGPoint(x: -18.37, y: -12.03), controlPoint2: CGPoint(x: -2.41, y: -12.41))
        bezier119Path.addCurve(to: CGPoint(x: 14.01, y: -14.31), controlPoint1: CGPoint(x: 13.78, y: -13.55), controlPoint2: CGPoint(x: 11.98, y: -14.35))
        bezier119Path.addCurve(to: CGPoint(x: 23.39, y: -13.07), controlPoint1: CGPoint(x: 16.04, y: -14.27), controlPoint2: CGPoint(x: 13.99, y: -13.55))
        bezier119Path.addCurve(to: CGPoint(x: 51.63, y: -12.41), controlPoint1: CGPoint(x: 32.8, y: -12.6), controlPoint2: CGPoint(x: 51.63, y: -12.41))
        bezier119Path.addCurve(to: CGPoint(x: 23.39, y: -11.52), controlPoint1: CGPoint(x: 51.63, y: -12.41), controlPoint2: CGPoint(x: 32.81, y: -11.96))
        bezier119Path.addCurve(to: CGPoint(x: 13.94, y: -10.67), controlPoint1: CGPoint(x: 13.96, y: -11.09), controlPoint2: CGPoint(x: 15.89, y: -10.6))
        bezier119Path.addCurve(to: CGPoint(x: 5.68, y: -11.31), controlPoint1: CGPoint(x: 11.99, y: -10.74), controlPoint2: CGPoint(x: 13.75, y: -10.97))
        bezier119Path.close()
        context.saveGState()
        bezier119Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -12.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -12.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 51
        context.saveGState()
        context.translateBy(x: 129.49, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 52
        //// Bezier 120 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -41.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier120Path = UIBezierPath()
        bezier120Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier120Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier120Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier120Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier120Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier120Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier120Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier120Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier120Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier120Path.close()
        context.saveGState()
        bezier120Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 121 Drawing
        let bezier121Path = UIBezierPath()
        bezier121Path.move(to: CGPoint(x: 5.41, y: -8.15))
        bezier121Path.addCurve(to: CGPoint(x: -18.64, y: -8.87), controlPoint1: CGPoint(x: -2.67, y: -8.49), controlPoint2: CGPoint(x: -18.64, y: -8.87))
        bezier121Path.addCurve(to: CGPoint(x: 5.42, y: -9.82), controlPoint1: CGPoint(x: -18.64, y: -8.87), controlPoint2: CGPoint(x: -2.67, y: -9.25))
        bezier121Path.addCurve(to: CGPoint(x: 13.74, y: -11.15), controlPoint1: CGPoint(x: 13.51, y: -10.39), controlPoint2: CGPoint(x: 11.71, y: -11.2))
        bezier121Path.addCurve(to: CGPoint(x: 23.13, y: -9.91), controlPoint1: CGPoint(x: 15.77, y: -11.11), controlPoint2: CGPoint(x: 13.72, y: -10.39))
        bezier121Path.addCurve(to: CGPoint(x: 51.36, y: -9.25), controlPoint1: CGPoint(x: 32.53, y: -9.44), controlPoint2: CGPoint(x: 51.36, y: -9.25))
        bezier121Path.addCurve(to: CGPoint(x: 23.12, y: -8.37), controlPoint1: CGPoint(x: 51.36, y: -9.25), controlPoint2: CGPoint(x: 32.54, y: -8.8))
        bezier121Path.addCurve(to: CGPoint(x: 13.67, y: -7.51), controlPoint1: CGPoint(x: 13.7, y: -7.93), controlPoint2: CGPoint(x: 15.62, y: -7.44))
        bezier121Path.addCurve(to: CGPoint(x: 5.41, y: -8.15), controlPoint1: CGPoint(x: 11.73, y: -7.58), controlPoint2: CGPoint(x: 13.49, y: -7.81))
        bezier121Path.close()
        context.saveGState()
        bezier121Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -9.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -9.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 53
        //// Bezier 122 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -41.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier122Path = UIBezierPath()
        bezier122Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier122Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier122Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier122Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier122Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier122Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier122Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier122Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier122Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier122Path.close()
        context.saveGState()
        bezier122Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 123 Drawing
        let bezier123Path = UIBezierPath()
        bezier123Path.move(to: CGPoint(x: 5.68, y: -8.31))
        bezier123Path.addCurve(to: CGPoint(x: -18.37, y: -9.03), controlPoint1: CGPoint(x: -2.4, y: -8.65), controlPoint2: CGPoint(x: -18.37, y: -9.03))
        bezier123Path.addCurve(to: CGPoint(x: 5.69, y: -9.98), controlPoint1: CGPoint(x: -18.37, y: -9.03), controlPoint2: CGPoint(x: -2.41, y: -9.41))
        bezier123Path.addCurve(to: CGPoint(x: 14.01, y: -11.31), controlPoint1: CGPoint(x: 13.78, y: -10.55), controlPoint2: CGPoint(x: 11.98, y: -11.35))
        bezier123Path.addCurve(to: CGPoint(x: 23.39, y: -10.07), controlPoint1: CGPoint(x: 16.04, y: -11.27), controlPoint2: CGPoint(x: 13.99, y: -10.55))
        bezier123Path.addCurve(to: CGPoint(x: 51.63, y: -9.41), controlPoint1: CGPoint(x: 32.8, y: -9.6), controlPoint2: CGPoint(x: 51.63, y: -9.41))
        bezier123Path.addCurve(to: CGPoint(x: 23.39, y: -8.52), controlPoint1: CGPoint(x: 51.63, y: -9.41), controlPoint2: CGPoint(x: 32.81, y: -8.96))
        bezier123Path.addCurve(to: CGPoint(x: 13.94, y: -7.67), controlPoint1: CGPoint(x: 13.96, y: -8.09), controlPoint2: CGPoint(x: 15.89, y: -7.6))
        bezier123Path.addCurve(to: CGPoint(x: 5.68, y: -8.31), controlPoint1: CGPoint(x: 11.99, y: -7.74), controlPoint2: CGPoint(x: 13.75, y: -7.97))
        bezier123Path.close()
        context.saveGState()
        bezier123Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -9.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -9.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 54
        context.saveGState()
        context.translateBy(x: 176.49, y: 17.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 55
        //// Bezier 124 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -38.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier124Path = UIBezierPath()
        bezier124Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier124Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier124Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier124Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier124Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier124Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier124Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier124Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier124Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier124Path.close()
        context.saveGState()
        bezier124Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 125 Drawing
        let bezier125Path = UIBezierPath()
        bezier125Path.move(to: CGPoint(x: 5.41, y: -5.15))
        bezier125Path.addCurve(to: CGPoint(x: -18.64, y: -5.87), controlPoint1: CGPoint(x: -2.67, y: -5.49), controlPoint2: CGPoint(x: -18.64, y: -5.87))
        bezier125Path.addCurve(to: CGPoint(x: 5.42, y: -6.82), controlPoint1: CGPoint(x: -18.64, y: -5.87), controlPoint2: CGPoint(x: -2.67, y: -6.25))
        bezier125Path.addCurve(to: CGPoint(x: 13.74, y: -8.15), controlPoint1: CGPoint(x: 13.51, y: -7.39), controlPoint2: CGPoint(x: 11.71, y: -8.2))
        bezier125Path.addCurve(to: CGPoint(x: 23.13, y: -6.91), controlPoint1: CGPoint(x: 15.77, y: -8.11), controlPoint2: CGPoint(x: 13.72, y: -7.39))
        bezier125Path.addCurve(to: CGPoint(x: 51.36, y: -6.25), controlPoint1: CGPoint(x: 32.53, y: -6.44), controlPoint2: CGPoint(x: 51.36, y: -6.25))
        bezier125Path.addCurve(to: CGPoint(x: 23.12, y: -5.37), controlPoint1: CGPoint(x: 51.36, y: -6.25), controlPoint2: CGPoint(x: 32.54, y: -5.8))
        bezier125Path.addCurve(to: CGPoint(x: 13.67, y: -4.51), controlPoint1: CGPoint(x: 13.7, y: -4.93), controlPoint2: CGPoint(x: 15.62, y: -4.44))
        bezier125Path.addCurve(to: CGPoint(x: 5.41, y: -5.15), controlPoint1: CGPoint(x: 11.73, y: -4.58), controlPoint2: CGPoint(x: 13.49, y: -4.81))
        bezier125Path.close()
        context.saveGState()
        bezier125Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -6.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -6.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 56
        //// Bezier 126 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -38.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier126Path = UIBezierPath()
        bezier126Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier126Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier126Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier126Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier126Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier126Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier126Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier126Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier126Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier126Path.close()
        context.saveGState()
        bezier126Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 127 Drawing
        let bezier127Path = UIBezierPath()
        bezier127Path.move(to: CGPoint(x: 5.68, y: -5.31))
        bezier127Path.addCurve(to: CGPoint(x: -18.37, y: -6.03), controlPoint1: CGPoint(x: -2.4, y: -5.65), controlPoint2: CGPoint(x: -18.37, y: -6.03))
        bezier127Path.addCurve(to: CGPoint(x: 5.69, y: -6.98), controlPoint1: CGPoint(x: -18.37, y: -6.03), controlPoint2: CGPoint(x: -2.41, y: -6.41))
        bezier127Path.addCurve(to: CGPoint(x: 14.01, y: -8.31), controlPoint1: CGPoint(x: 13.78, y: -7.55), controlPoint2: CGPoint(x: 11.98, y: -8.35))
        bezier127Path.addCurve(to: CGPoint(x: 23.39, y: -7.07), controlPoint1: CGPoint(x: 16.04, y: -8.27), controlPoint2: CGPoint(x: 13.99, y: -7.55))
        bezier127Path.addCurve(to: CGPoint(x: 51.63, y: -6.41), controlPoint1: CGPoint(x: 32.8, y: -6.6), controlPoint2: CGPoint(x: 51.63, y: -6.41))
        bezier127Path.addCurve(to: CGPoint(x: 23.39, y: -5.52), controlPoint1: CGPoint(x: 51.63, y: -6.41), controlPoint2: CGPoint(x: 32.81, y: -5.96))
        bezier127Path.addCurve(to: CGPoint(x: 13.94, y: -4.67), controlPoint1: CGPoint(x: 13.96, y: -5.09), controlPoint2: CGPoint(x: 15.89, y: -4.6))
        bezier127Path.addCurve(to: CGPoint(x: 5.68, y: -5.31), controlPoint1: CGPoint(x: 11.99, y: -4.74), controlPoint2: CGPoint(x: 13.75, y: -4.97))
        bezier127Path.close()
        context.saveGState()
        bezier127Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -6.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -6.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 57
        context.saveGState()
        context.translateBy(x: 186.49, y: 44.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 58
        //// Bezier 128 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -38.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier128Path = UIBezierPath()
        bezier128Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier128Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier128Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier128Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier128Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier128Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier128Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier128Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier128Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier128Path.close()
        context.saveGState()
        bezier128Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 129 Drawing
        let bezier129Path = UIBezierPath()
        bezier129Path.move(to: CGPoint(x: 5.41, y: -5.15))
        bezier129Path.addCurve(to: CGPoint(x: -18.64, y: -5.87), controlPoint1: CGPoint(x: -2.67, y: -5.49), controlPoint2: CGPoint(x: -18.64, y: -5.87))
        bezier129Path.addCurve(to: CGPoint(x: 5.42, y: -6.82), controlPoint1: CGPoint(x: -18.64, y: -5.87), controlPoint2: CGPoint(x: -2.67, y: -6.25))
        bezier129Path.addCurve(to: CGPoint(x: 13.74, y: -8.15), controlPoint1: CGPoint(x: 13.51, y: -7.39), controlPoint2: CGPoint(x: 11.71, y: -8.2))
        bezier129Path.addCurve(to: CGPoint(x: 23.13, y: -6.91), controlPoint1: CGPoint(x: 15.77, y: -8.11), controlPoint2: CGPoint(x: 13.72, y: -7.39))
        bezier129Path.addCurve(to: CGPoint(x: 51.36, y: -6.25), controlPoint1: CGPoint(x: 32.53, y: -6.44), controlPoint2: CGPoint(x: 51.36, y: -6.25))
        bezier129Path.addCurve(to: CGPoint(x: 23.12, y: -5.37), controlPoint1: CGPoint(x: 51.36, y: -6.25), controlPoint2: CGPoint(x: 32.54, y: -5.8))
        bezier129Path.addCurve(to: CGPoint(x: 13.67, y: -4.51), controlPoint1: CGPoint(x: 13.7, y: -4.93), controlPoint2: CGPoint(x: 15.62, y: -4.44))
        bezier129Path.addCurve(to: CGPoint(x: 5.41, y: -5.15), controlPoint1: CGPoint(x: 11.73, y: -4.58), controlPoint2: CGPoint(x: 13.49, y: -4.81))
        bezier129Path.close()
        context.saveGState()
        bezier129Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -6.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -6.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 59
        //// Bezier 130 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -38.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier130Path = UIBezierPath()
        bezier130Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier130Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier130Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier130Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier130Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier130Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier130Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier130Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier130Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier130Path.close()
        context.saveGState()
        bezier130Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 131 Drawing
        let bezier131Path = UIBezierPath()
        bezier131Path.move(to: CGPoint(x: 5.68, y: -5.31))
        bezier131Path.addCurve(to: CGPoint(x: -18.37, y: -6.03), controlPoint1: CGPoint(x: -2.4, y: -5.65), controlPoint2: CGPoint(x: -18.37, y: -6.03))
        bezier131Path.addCurve(to: CGPoint(x: 5.69, y: -6.98), controlPoint1: CGPoint(x: -18.37, y: -6.03), controlPoint2: CGPoint(x: -2.41, y: -6.41))
        bezier131Path.addCurve(to: CGPoint(x: 14.01, y: -8.31), controlPoint1: CGPoint(x: 13.78, y: -7.55), controlPoint2: CGPoint(x: 11.98, y: -8.35))
        bezier131Path.addCurve(to: CGPoint(x: 23.39, y: -7.07), controlPoint1: CGPoint(x: 16.04, y: -8.27), controlPoint2: CGPoint(x: 13.99, y: -7.55))
        bezier131Path.addCurve(to: CGPoint(x: 51.63, y: -6.41), controlPoint1: CGPoint(x: 32.8, y: -6.6), controlPoint2: CGPoint(x: 51.63, y: -6.41))
        bezier131Path.addCurve(to: CGPoint(x: 23.39, y: -5.52), controlPoint1: CGPoint(x: 51.63, y: -6.41), controlPoint2: CGPoint(x: 32.81, y: -5.96))
        bezier131Path.addCurve(to: CGPoint(x: 13.94, y: -4.67), controlPoint1: CGPoint(x: 13.96, y: -5.09), controlPoint2: CGPoint(x: 15.89, y: -4.6))
        bezier131Path.addCurve(to: CGPoint(x: 5.68, y: -5.31), controlPoint1: CGPoint(x: 11.99, y: -4.74), controlPoint2: CGPoint(x: 13.75, y: -4.97))
        bezier131Path.close()
        context.saveGState()
        bezier131Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -6.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -6.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 60
        context.saveGState()
        context.translateBy(x: 218.49, y: 32.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.3)



        //// Group 61
        //// Bezier 132 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -40.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier132Path = UIBezierPath()
        bezier132Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier132Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier132Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier132Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier132Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier132Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier132Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier132Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier132Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier132Path.close()
        context.saveGState()
        bezier132Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 133 Drawing
        let bezier133Path = UIBezierPath()
        bezier133Path.move(to: CGPoint(x: 5.41, y: -7.15))
        bezier133Path.addCurve(to: CGPoint(x: -18.64, y: -7.87), controlPoint1: CGPoint(x: -2.67, y: -7.49), controlPoint2: CGPoint(x: -18.64, y: -7.87))
        bezier133Path.addCurve(to: CGPoint(x: 5.42, y: -8.82), controlPoint1: CGPoint(x: -18.64, y: -7.87), controlPoint2: CGPoint(x: -2.67, y: -8.25))
        bezier133Path.addCurve(to: CGPoint(x: 13.74, y: -10.15), controlPoint1: CGPoint(x: 13.51, y: -9.39), controlPoint2: CGPoint(x: 11.71, y: -10.2))
        bezier133Path.addCurve(to: CGPoint(x: 23.13, y: -8.91), controlPoint1: CGPoint(x: 15.77, y: -10.11), controlPoint2: CGPoint(x: 13.72, y: -9.39))
        bezier133Path.addCurve(to: CGPoint(x: 51.36, y: -8.25), controlPoint1: CGPoint(x: 32.53, y: -8.44), controlPoint2: CGPoint(x: 51.36, y: -8.25))
        bezier133Path.addCurve(to: CGPoint(x: 23.12, y: -7.37), controlPoint1: CGPoint(x: 51.36, y: -8.25), controlPoint2: CGPoint(x: 32.54, y: -7.8))
        bezier133Path.addCurve(to: CGPoint(x: 13.67, y: -6.51), controlPoint1: CGPoint(x: 13.7, y: -6.93), controlPoint2: CGPoint(x: 15.62, y: -6.44))
        bezier133Path.addCurve(to: CGPoint(x: 5.41, y: -7.15), controlPoint1: CGPoint(x: 11.73, y: -6.58), controlPoint2: CGPoint(x: 13.49, y: -6.81))
        bezier133Path.close()
        context.saveGState()
        bezier133Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -8.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -8.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 62
        //// Bezier 134 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -40.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier134Path = UIBezierPath()
        bezier134Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier134Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier134Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier134Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier134Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier134Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier134Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier134Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier134Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier134Path.close()
        context.saveGState()
        bezier134Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 135 Drawing
        let bezier135Path = UIBezierPath()
        bezier135Path.move(to: CGPoint(x: 5.68, y: -7.31))
        bezier135Path.addCurve(to: CGPoint(x: -18.37, y: -8.03), controlPoint1: CGPoint(x: -2.4, y: -7.65), controlPoint2: CGPoint(x: -18.37, y: -8.03))
        bezier135Path.addCurve(to: CGPoint(x: 5.69, y: -8.98), controlPoint1: CGPoint(x: -18.37, y: -8.03), controlPoint2: CGPoint(x: -2.41, y: -8.41))
        bezier135Path.addCurve(to: CGPoint(x: 14.01, y: -10.31), controlPoint1: CGPoint(x: 13.78, y: -9.55), controlPoint2: CGPoint(x: 11.98, y: -10.35))
        bezier135Path.addCurve(to: CGPoint(x: 23.39, y: -9.07), controlPoint1: CGPoint(x: 16.04, y: -10.27), controlPoint2: CGPoint(x: 13.99, y: -9.55))
        bezier135Path.addCurve(to: CGPoint(x: 51.63, y: -8.41), controlPoint1: CGPoint(x: 32.8, y: -8.6), controlPoint2: CGPoint(x: 51.63, y: -8.41))
        bezier135Path.addCurve(to: CGPoint(x: 23.39, y: -7.52), controlPoint1: CGPoint(x: 51.63, y: -8.41), controlPoint2: CGPoint(x: 32.81, y: -7.96))
        bezier135Path.addCurve(to: CGPoint(x: 13.94, y: -6.67), controlPoint1: CGPoint(x: 13.96, y: -7.09), controlPoint2: CGPoint(x: 15.89, y: -6.6))
        bezier135Path.addCurve(to: CGPoint(x: 5.68, y: -7.31), controlPoint1: CGPoint(x: 11.99, y: -6.74), controlPoint2: CGPoint(x: 13.75, y: -6.97))
        bezier135Path.close()
        context.saveGState()
        bezier135Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -8.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -8.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 63
        context.saveGState()
        context.translateBy(x: 246.49, y: 14.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 64
        //// Bezier 136 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -20.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier136Path = UIBezierPath()
        bezier136Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier136Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier136Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier136Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier136Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier136Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier136Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier136Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier136Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier136Path.close()
        context.saveGState()
        bezier136Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 137 Drawing
        let bezier137Path = UIBezierPath()
        bezier137Path.move(to: CGPoint(x: 5.41, y: 12.85))
        bezier137Path.addCurve(to: CGPoint(x: -18.64, y: 12.13), controlPoint1: CGPoint(x: -2.67, y: 12.51), controlPoint2: CGPoint(x: -18.64, y: 12.13))
        bezier137Path.addCurve(to: CGPoint(x: 5.42, y: 11.18), controlPoint1: CGPoint(x: -18.64, y: 12.13), controlPoint2: CGPoint(x: -2.67, y: 11.75))
        bezier137Path.addCurve(to: CGPoint(x: 13.74, y: 9.85), controlPoint1: CGPoint(x: 13.51, y: 10.61), controlPoint2: CGPoint(x: 11.71, y: 9.8))
        bezier137Path.addCurve(to: CGPoint(x: 23.13, y: 11.09), controlPoint1: CGPoint(x: 15.77, y: 9.89), controlPoint2: CGPoint(x: 13.72, y: 10.61))
        bezier137Path.addCurve(to: CGPoint(x: 51.36, y: 11.75), controlPoint1: CGPoint(x: 32.53, y: 11.56), controlPoint2: CGPoint(x: 51.36, y: 11.75))
        bezier137Path.addCurve(to: CGPoint(x: 23.12, y: 12.63), controlPoint1: CGPoint(x: 51.36, y: 11.75), controlPoint2: CGPoint(x: 32.54, y: 12.2))
        bezier137Path.addCurve(to: CGPoint(x: 13.67, y: 13.49), controlPoint1: CGPoint(x: 13.7, y: 13.07), controlPoint2: CGPoint(x: 15.62, y: 13.56))
        bezier137Path.addCurve(to: CGPoint(x: 5.41, y: 12.85), controlPoint1: CGPoint(x: 11.73, y: 13.42), controlPoint2: CGPoint(x: 13.49, y: 13.19))
        bezier137Path.close()
        context.saveGState()
        bezier137Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 11.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 11.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 65
        //// Bezier 138 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -20.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier138Path = UIBezierPath()
        bezier138Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier138Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier138Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier138Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier138Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier138Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier138Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier138Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier138Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier138Path.close()
        context.saveGState()
        bezier138Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 139 Drawing
        let bezier139Path = UIBezierPath()
        bezier139Path.move(to: CGPoint(x: 5.68, y: 12.69))
        bezier139Path.addCurve(to: CGPoint(x: -18.37, y: 11.97), controlPoint1: CGPoint(x: -2.4, y: 12.35), controlPoint2: CGPoint(x: -18.37, y: 11.97))
        bezier139Path.addCurve(to: CGPoint(x: 5.69, y: 11.02), controlPoint1: CGPoint(x: -18.37, y: 11.97), controlPoint2: CGPoint(x: -2.41, y: 11.59))
        bezier139Path.addCurve(to: CGPoint(x: 14.01, y: 9.69), controlPoint1: CGPoint(x: 13.78, y: 10.45), controlPoint2: CGPoint(x: 11.98, y: 9.65))
        bezier139Path.addCurve(to: CGPoint(x: 23.39, y: 10.93), controlPoint1: CGPoint(x: 16.04, y: 9.73), controlPoint2: CGPoint(x: 13.99, y: 10.45))
        bezier139Path.addCurve(to: CGPoint(x: 51.63, y: 11.59), controlPoint1: CGPoint(x: 32.8, y: 11.4), controlPoint2: CGPoint(x: 51.63, y: 11.59))
        bezier139Path.addCurve(to: CGPoint(x: 23.39, y: 12.48), controlPoint1: CGPoint(x: 51.63, y: 11.59), controlPoint2: CGPoint(x: 32.81, y: 12.04))
        bezier139Path.addCurve(to: CGPoint(x: 13.94, y: 13.33), controlPoint1: CGPoint(x: 13.96, y: 12.91), controlPoint2: CGPoint(x: 15.89, y: 13.4))
        bezier139Path.addCurve(to: CGPoint(x: 5.68, y: 12.69), controlPoint1: CGPoint(x: 11.99, y: 13.26), controlPoint2: CGPoint(x: 13.75, y: 13.03))
        bezier139Path.close()
        context.saveGState()
        bezier139Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 11.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 11.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 66
        context.saveGState()
        context.translateBy(x: 264.49, y: 30.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 67
        //// Bezier 140 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -18.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier140Path = UIBezierPath()
        bezier140Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier140Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier140Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier140Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier140Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier140Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier140Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier140Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier140Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier140Path.close()
        context.saveGState()
        bezier140Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 141 Drawing
        let bezier141Path = UIBezierPath()
        bezier141Path.move(to: CGPoint(x: 5.41, y: 14.85))
        bezier141Path.addCurve(to: CGPoint(x: -18.64, y: 14.13), controlPoint1: CGPoint(x: -2.67, y: 14.51), controlPoint2: CGPoint(x: -18.64, y: 14.13))
        bezier141Path.addCurve(to: CGPoint(x: 5.42, y: 13.18), controlPoint1: CGPoint(x: -18.64, y: 14.13), controlPoint2: CGPoint(x: -2.67, y: 13.75))
        bezier141Path.addCurve(to: CGPoint(x: 13.74, y: 11.85), controlPoint1: CGPoint(x: 13.51, y: 12.61), controlPoint2: CGPoint(x: 11.71, y: 11.8))
        bezier141Path.addCurve(to: CGPoint(x: 23.13, y: 13.09), controlPoint1: CGPoint(x: 15.77, y: 11.89), controlPoint2: CGPoint(x: 13.72, y: 12.61))
        bezier141Path.addCurve(to: CGPoint(x: 51.36, y: 13.75), controlPoint1: CGPoint(x: 32.53, y: 13.56), controlPoint2: CGPoint(x: 51.36, y: 13.75))
        bezier141Path.addCurve(to: CGPoint(x: 23.12, y: 14.63), controlPoint1: CGPoint(x: 51.36, y: 13.75), controlPoint2: CGPoint(x: 32.54, y: 14.2))
        bezier141Path.addCurve(to: CGPoint(x: 13.67, y: 15.49), controlPoint1: CGPoint(x: 13.7, y: 15.07), controlPoint2: CGPoint(x: 15.62, y: 15.56))
        bezier141Path.addCurve(to: CGPoint(x: 5.41, y: 14.85), controlPoint1: CGPoint(x: 11.73, y: 15.42), controlPoint2: CGPoint(x: 13.49, y: 15.19))
        bezier141Path.close()
        context.saveGState()
        bezier141Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 13.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 13.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 68
        //// Bezier 142 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -18.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier142Path = UIBezierPath()
        bezier142Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier142Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier142Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier142Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier142Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier142Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier142Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier142Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier142Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier142Path.close()
        context.saveGState()
        bezier142Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 143 Drawing
        let bezier143Path = UIBezierPath()
        bezier143Path.move(to: CGPoint(x: 5.68, y: 14.69))
        bezier143Path.addCurve(to: CGPoint(x: -18.37, y: 13.97), controlPoint1: CGPoint(x: -2.4, y: 14.35), controlPoint2: CGPoint(x: -18.37, y: 13.97))
        bezier143Path.addCurve(to: CGPoint(x: 5.69, y: 13.02), controlPoint1: CGPoint(x: -18.37, y: 13.97), controlPoint2: CGPoint(x: -2.41, y: 13.59))
        bezier143Path.addCurve(to: CGPoint(x: 14.01, y: 11.69), controlPoint1: CGPoint(x: 13.78, y: 12.45), controlPoint2: CGPoint(x: 11.98, y: 11.65))
        bezier143Path.addCurve(to: CGPoint(x: 23.39, y: 12.93), controlPoint1: CGPoint(x: 16.04, y: 11.73), controlPoint2: CGPoint(x: 13.99, y: 12.45))
        bezier143Path.addCurve(to: CGPoint(x: 51.63, y: 13.59), controlPoint1: CGPoint(x: 32.8, y: 13.4), controlPoint2: CGPoint(x: 51.63, y: 13.59))
        bezier143Path.addCurve(to: CGPoint(x: 23.39, y: 14.48), controlPoint1: CGPoint(x: 51.63, y: 13.59), controlPoint2: CGPoint(x: 32.81, y: 14.04))
        bezier143Path.addCurve(to: CGPoint(x: 13.94, y: 15.33), controlPoint1: CGPoint(x: 13.96, y: 14.91), controlPoint2: CGPoint(x: 15.89, y: 15.4))
        bezier143Path.addCurve(to: CGPoint(x: 5.68, y: 14.69), controlPoint1: CGPoint(x: 11.99, y: 15.26), controlPoint2: CGPoint(x: 13.75, y: 15.03))
        bezier143Path.close()
        context.saveGState()
        bezier143Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 13.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 13.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 69
        context.saveGState()
        context.translateBy(x: 254.49, y: 36.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.3, y: 0.2)



        //// Group 70
        //// Bezier 144 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -34.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier144Path = UIBezierPath()
        bezier144Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier144Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier144Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier144Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier144Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier144Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier144Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier144Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier144Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier144Path.close()
        context.saveGState()
        bezier144Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 145 Drawing
        let bezier145Path = UIBezierPath()
        bezier145Path.move(to: CGPoint(x: 5.41, y: -1.15))
        bezier145Path.addCurve(to: CGPoint(x: -18.64, y: -1.87), controlPoint1: CGPoint(x: -2.67, y: -1.49), controlPoint2: CGPoint(x: -18.64, y: -1.87))
        bezier145Path.addCurve(to: CGPoint(x: 5.42, y: -2.82), controlPoint1: CGPoint(x: -18.64, y: -1.87), controlPoint2: CGPoint(x: -2.67, y: -2.25))
        bezier145Path.addCurve(to: CGPoint(x: 13.74, y: -4.15), controlPoint1: CGPoint(x: 13.51, y: -3.39), controlPoint2: CGPoint(x: 11.71, y: -4.2))
        bezier145Path.addCurve(to: CGPoint(x: 23.13, y: -2.91), controlPoint1: CGPoint(x: 15.77, y: -4.11), controlPoint2: CGPoint(x: 13.72, y: -3.39))
        bezier145Path.addCurve(to: CGPoint(x: 51.36, y: -2.25), controlPoint1: CGPoint(x: 32.53, y: -2.44), controlPoint2: CGPoint(x: 51.36, y: -2.25))
        bezier145Path.addCurve(to: CGPoint(x: 23.12, y: -1.37), controlPoint1: CGPoint(x: 51.36, y: -2.25), controlPoint2: CGPoint(x: 32.54, y: -1.8))
        bezier145Path.addCurve(to: CGPoint(x: 13.67, y: -0.51), controlPoint1: CGPoint(x: 13.7, y: -0.93), controlPoint2: CGPoint(x: 15.62, y: -0.44))
        bezier145Path.addCurve(to: CGPoint(x: 5.41, y: -1.15), controlPoint1: CGPoint(x: 11.73, y: -0.58), controlPoint2: CGPoint(x: 13.49, y: -0.81))
        bezier145Path.close()
        context.saveGState()
        bezier145Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -2.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -2.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 71
        //// Bezier 146 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -34.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier146Path = UIBezierPath()
        bezier146Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier146Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier146Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier146Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier146Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier146Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier146Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier146Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier146Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier146Path.close()
        context.saveGState()
        bezier146Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 147 Drawing
        let bezier147Path = UIBezierPath()
        bezier147Path.move(to: CGPoint(x: 5.68, y: -1.31))
        bezier147Path.addCurve(to: CGPoint(x: -18.37, y: -2.03), controlPoint1: CGPoint(x: -2.4, y: -1.65), controlPoint2: CGPoint(x: -18.37, y: -2.03))
        bezier147Path.addCurve(to: CGPoint(x: 5.69, y: -2.98), controlPoint1: CGPoint(x: -18.37, y: -2.03), controlPoint2: CGPoint(x: -2.41, y: -2.41))
        bezier147Path.addCurve(to: CGPoint(x: 14.01, y: -4.31), controlPoint1: CGPoint(x: 13.78, y: -3.55), controlPoint2: CGPoint(x: 11.98, y: -4.35))
        bezier147Path.addCurve(to: CGPoint(x: 23.39, y: -3.07), controlPoint1: CGPoint(x: 16.04, y: -4.27), controlPoint2: CGPoint(x: 13.99, y: -3.55))
        bezier147Path.addCurve(to: CGPoint(x: 51.63, y: -2.41), controlPoint1: CGPoint(x: 32.8, y: -2.6), controlPoint2: CGPoint(x: 51.63, y: -2.41))
        bezier147Path.addCurve(to: CGPoint(x: 23.39, y: -1.52), controlPoint1: CGPoint(x: 51.63, y: -2.41), controlPoint2: CGPoint(x: 32.81, y: -1.96))
        bezier147Path.addCurve(to: CGPoint(x: 13.94, y: -0.67), controlPoint1: CGPoint(x: 13.96, y: -1.09), controlPoint2: CGPoint(x: 15.89, y: -0.6))
        bezier147Path.addCurve(to: CGPoint(x: 5.68, y: -1.31), controlPoint1: CGPoint(x: 11.99, y: -0.74), controlPoint2: CGPoint(x: 13.75, y: -0.97))
        bezier147Path.close()
        context.saveGState()
        bezier147Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -2.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -2.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 72
        context.saveGState()
        context.translateBy(x: 298.49, y: 46.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 73
        //// Bezier 148 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -31.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier148Path = UIBezierPath()
        bezier148Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier148Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier148Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier148Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier148Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier148Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier148Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier148Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier148Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier148Path.close()
        context.saveGState()
        bezier148Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 149 Drawing
        let bezier149Path = UIBezierPath()
        bezier149Path.move(to: CGPoint(x: 5.41, y: 1.85))
        bezier149Path.addCurve(to: CGPoint(x: -18.64, y: 1.13), controlPoint1: CGPoint(x: -2.67, y: 1.51), controlPoint2: CGPoint(x: -18.64, y: 1.13))
        bezier149Path.addCurve(to: CGPoint(x: 5.42, y: 0.18), controlPoint1: CGPoint(x: -18.64, y: 1.13), controlPoint2: CGPoint(x: -2.67, y: 0.75))
        bezier149Path.addCurve(to: CGPoint(x: 13.74, y: -1.15), controlPoint1: CGPoint(x: 13.51, y: -0.39), controlPoint2: CGPoint(x: 11.71, y: -1.2))
        bezier149Path.addCurve(to: CGPoint(x: 23.13, y: 0.09), controlPoint1: CGPoint(x: 15.77, y: -1.11), controlPoint2: CGPoint(x: 13.72, y: -0.39))
        bezier149Path.addCurve(to: CGPoint(x: 51.36, y: 0.75), controlPoint1: CGPoint(x: 32.53, y: 0.56), controlPoint2: CGPoint(x: 51.36, y: 0.75))
        bezier149Path.addCurve(to: CGPoint(x: 23.12, y: 1.63), controlPoint1: CGPoint(x: 51.36, y: 0.75), controlPoint2: CGPoint(x: 32.54, y: 1.2))
        bezier149Path.addCurve(to: CGPoint(x: 13.67, y: 2.49), controlPoint1: CGPoint(x: 13.7, y: 2.07), controlPoint2: CGPoint(x: 15.62, y: 2.56))
        bezier149Path.addCurve(to: CGPoint(x: 5.41, y: 1.85), controlPoint1: CGPoint(x: 11.73, y: 2.42), controlPoint2: CGPoint(x: 13.49, y: 2.19))
        bezier149Path.close()
        context.saveGState()
        bezier149Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 0.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 0.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 74
        //// Bezier 150 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -31.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier150Path = UIBezierPath()
        bezier150Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier150Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier150Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier150Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier150Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier150Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier150Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier150Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier150Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier150Path.close()
        context.saveGState()
        bezier150Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 151 Drawing
        let bezier151Path = UIBezierPath()
        bezier151Path.move(to: CGPoint(x: 5.68, y: 1.69))
        bezier151Path.addCurve(to: CGPoint(x: -18.37, y: 0.97), controlPoint1: CGPoint(x: -2.4, y: 1.35), controlPoint2: CGPoint(x: -18.37, y: 0.97))
        bezier151Path.addCurve(to: CGPoint(x: 5.69, y: 0.02), controlPoint1: CGPoint(x: -18.37, y: 0.97), controlPoint2: CGPoint(x: -2.41, y: 0.59))
        bezier151Path.addCurve(to: CGPoint(x: 14.01, y: -1.31), controlPoint1: CGPoint(x: 13.78, y: -0.55), controlPoint2: CGPoint(x: 11.98, y: -1.35))
        bezier151Path.addCurve(to: CGPoint(x: 23.39, y: -0.07), controlPoint1: CGPoint(x: 16.04, y: -1.27), controlPoint2: CGPoint(x: 13.99, y: -0.55))
        bezier151Path.addCurve(to: CGPoint(x: 51.63, y: 0.59), controlPoint1: CGPoint(x: 32.8, y: 0.4), controlPoint2: CGPoint(x: 51.63, y: 0.59))
        bezier151Path.addCurve(to: CGPoint(x: 23.39, y: 1.48), controlPoint1: CGPoint(x: 51.63, y: 0.59), controlPoint2: CGPoint(x: 32.81, y: 1.04))
        bezier151Path.addCurve(to: CGPoint(x: 13.94, y: 2.33), controlPoint1: CGPoint(x: 13.96, y: 1.91), controlPoint2: CGPoint(x: 15.89, y: 2.4))
        bezier151Path.addCurve(to: CGPoint(x: 5.68, y: 1.69), controlPoint1: CGPoint(x: 11.99, y: 2.26), controlPoint2: CGPoint(x: 13.75, y: 2.03))
        bezier151Path.close()
        context.saveGState()
        bezier151Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 0.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 0.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 75
        context.saveGState()
        context.translateBy(x: 308.49, y: 12.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 76
        //// Bezier 152 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -31.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier152Path = UIBezierPath()
        bezier152Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier152Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier152Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier152Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier152Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier152Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier152Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier152Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier152Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier152Path.close()
        context.saveGState()
        bezier152Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 153 Drawing
        let bezier153Path = UIBezierPath()
        bezier153Path.move(to: CGPoint(x: 5.41, y: 1.85))
        bezier153Path.addCurve(to: CGPoint(x: -18.64, y: 1.13), controlPoint1: CGPoint(x: -2.67, y: 1.51), controlPoint2: CGPoint(x: -18.64, y: 1.13))
        bezier153Path.addCurve(to: CGPoint(x: 5.42, y: 0.18), controlPoint1: CGPoint(x: -18.64, y: 1.13), controlPoint2: CGPoint(x: -2.67, y: 0.75))
        bezier153Path.addCurve(to: CGPoint(x: 13.74, y: -1.15), controlPoint1: CGPoint(x: 13.51, y: -0.39), controlPoint2: CGPoint(x: 11.71, y: -1.2))
        bezier153Path.addCurve(to: CGPoint(x: 23.13, y: 0.09), controlPoint1: CGPoint(x: 15.77, y: -1.11), controlPoint2: CGPoint(x: 13.72, y: -0.39))
        bezier153Path.addCurve(to: CGPoint(x: 51.36, y: 0.75), controlPoint1: CGPoint(x: 32.53, y: 0.56), controlPoint2: CGPoint(x: 51.36, y: 0.75))
        bezier153Path.addCurve(to: CGPoint(x: 23.12, y: 1.63), controlPoint1: CGPoint(x: 51.36, y: 0.75), controlPoint2: CGPoint(x: 32.54, y: 1.2))
        bezier153Path.addCurve(to: CGPoint(x: 13.67, y: 2.49), controlPoint1: CGPoint(x: 13.7, y: 2.07), controlPoint2: CGPoint(x: 15.62, y: 2.56))
        bezier153Path.addCurve(to: CGPoint(x: 5.41, y: 1.85), controlPoint1: CGPoint(x: 11.73, y: 2.42), controlPoint2: CGPoint(x: 13.49, y: 2.19))
        bezier153Path.close()
        context.saveGState()
        bezier153Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 0.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 0.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 77
        //// Bezier 154 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -31.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier154Path = UIBezierPath()
        bezier154Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier154Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier154Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier154Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier154Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier154Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier154Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier154Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier154Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier154Path.close()
        context.saveGState()
        bezier154Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 155 Drawing
        let bezier155Path = UIBezierPath()
        bezier155Path.move(to: CGPoint(x: 5.68, y: 1.69))
        bezier155Path.addCurve(to: CGPoint(x: -18.37, y: 0.97), controlPoint1: CGPoint(x: -2.4, y: 1.35), controlPoint2: CGPoint(x: -18.37, y: 0.97))
        bezier155Path.addCurve(to: CGPoint(x: 5.69, y: 0.02), controlPoint1: CGPoint(x: -18.37, y: 0.97), controlPoint2: CGPoint(x: -2.41, y: 0.59))
        bezier155Path.addCurve(to: CGPoint(x: 14.01, y: -1.31), controlPoint1: CGPoint(x: 13.78, y: -0.55), controlPoint2: CGPoint(x: 11.98, y: -1.35))
        bezier155Path.addCurve(to: CGPoint(x: 23.39, y: -0.07), controlPoint1: CGPoint(x: 16.04, y: -1.27), controlPoint2: CGPoint(x: 13.99, y: -0.55))
        bezier155Path.addCurve(to: CGPoint(x: 51.63, y: 0.59), controlPoint1: CGPoint(x: 32.8, y: 0.4), controlPoint2: CGPoint(x: 51.63, y: 0.59))
        bezier155Path.addCurve(to: CGPoint(x: 23.39, y: 1.48), controlPoint1: CGPoint(x: 51.63, y: 0.59), controlPoint2: CGPoint(x: 32.81, y: 1.04))
        bezier155Path.addCurve(to: CGPoint(x: 13.94, y: 2.33), controlPoint1: CGPoint(x: 13.96, y: 1.91), controlPoint2: CGPoint(x: 15.89, y: 2.4))
        bezier155Path.addCurve(to: CGPoint(x: 5.68, y: 1.69), controlPoint1: CGPoint(x: 11.99, y: 2.26), controlPoint2: CGPoint(x: 13.75, y: 2.03))
        bezier155Path.close()
        context.saveGState()
        bezier155Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 0.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 0.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 78
        context.saveGState()
        context.translateBy(x: 329.49, y: 22.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 79
        //// Bezier 156 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -29.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier156Path = UIBezierPath()
        bezier156Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier156Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier156Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier156Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier156Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier156Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier156Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier156Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier156Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier156Path.close()
        context.saveGState()
        bezier156Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 157 Drawing
        let bezier157Path = UIBezierPath()
        bezier157Path.move(to: CGPoint(x: 5.41, y: 3.85))
        bezier157Path.addCurve(to: CGPoint(x: -18.64, y: 3.13), controlPoint1: CGPoint(x: -2.67, y: 3.51), controlPoint2: CGPoint(x: -18.64, y: 3.13))
        bezier157Path.addCurve(to: CGPoint(x: 5.42, y: 2.18), controlPoint1: CGPoint(x: -18.64, y: 3.13), controlPoint2: CGPoint(x: -2.67, y: 2.75))
        bezier157Path.addCurve(to: CGPoint(x: 13.74, y: 0.85), controlPoint1: CGPoint(x: 13.51, y: 1.61), controlPoint2: CGPoint(x: 11.71, y: 0.8))
        bezier157Path.addCurve(to: CGPoint(x: 23.13, y: 2.09), controlPoint1: CGPoint(x: 15.77, y: 0.89), controlPoint2: CGPoint(x: 13.72, y: 1.61))
        bezier157Path.addCurve(to: CGPoint(x: 51.36, y: 2.75), controlPoint1: CGPoint(x: 32.53, y: 2.56), controlPoint2: CGPoint(x: 51.36, y: 2.75))
        bezier157Path.addCurve(to: CGPoint(x: 23.12, y: 3.63), controlPoint1: CGPoint(x: 51.36, y: 2.75), controlPoint2: CGPoint(x: 32.54, y: 3.2))
        bezier157Path.addCurve(to: CGPoint(x: 13.67, y: 4.49), controlPoint1: CGPoint(x: 13.7, y: 4.07), controlPoint2: CGPoint(x: 15.62, y: 4.56))
        bezier157Path.addCurve(to: CGPoint(x: 5.41, y: 3.85), controlPoint1: CGPoint(x: 11.73, y: 4.42), controlPoint2: CGPoint(x: 13.49, y: 4.19))
        bezier157Path.close()
        context.saveGState()
        bezier157Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 2.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 2.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 80
        //// Bezier 158 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -29.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier158Path = UIBezierPath()
        bezier158Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier158Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier158Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier158Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier158Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier158Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier158Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier158Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier158Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier158Path.close()
        context.saveGState()
        bezier158Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 159 Drawing
        let bezier159Path = UIBezierPath()
        bezier159Path.move(to: CGPoint(x: 5.68, y: 3.69))
        bezier159Path.addCurve(to: CGPoint(x: -18.37, y: 2.97), controlPoint1: CGPoint(x: -2.4, y: 3.35), controlPoint2: CGPoint(x: -18.37, y: 2.97))
        bezier159Path.addCurve(to: CGPoint(x: 5.69, y: 2.02), controlPoint1: CGPoint(x: -18.37, y: 2.97), controlPoint2: CGPoint(x: -2.41, y: 2.59))
        bezier159Path.addCurve(to: CGPoint(x: 14.01, y: 0.69), controlPoint1: CGPoint(x: 13.78, y: 1.45), controlPoint2: CGPoint(x: 11.98, y: 0.65))
        bezier159Path.addCurve(to: CGPoint(x: 23.39, y: 1.93), controlPoint1: CGPoint(x: 16.04, y: 0.73), controlPoint2: CGPoint(x: 13.99, y: 1.45))
        bezier159Path.addCurve(to: CGPoint(x: 51.63, y: 2.59), controlPoint1: CGPoint(x: 32.8, y: 2.4), controlPoint2: CGPoint(x: 51.63, y: 2.59))
        bezier159Path.addCurve(to: CGPoint(x: 23.39, y: 3.48), controlPoint1: CGPoint(x: 51.63, y: 2.59), controlPoint2: CGPoint(x: 32.81, y: 3.04))
        bezier159Path.addCurve(to: CGPoint(x: 13.94, y: 4.33), controlPoint1: CGPoint(x: 13.96, y: 3.91), controlPoint2: CGPoint(x: 15.89, y: 4.4))
        bezier159Path.addCurve(to: CGPoint(x: 5.68, y: 3.69), controlPoint1: CGPoint(x: 11.99, y: 4.26), controlPoint2: CGPoint(x: 13.75, y: 4.03))
        bezier159Path.close()
        context.saveGState()
        bezier159Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 2.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 2.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 81
        context.saveGState()
        context.translateBy(x: 340.49, y: 39.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 82
        //// Bezier 160 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -9.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier160Path = UIBezierPath()
        bezier160Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier160Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier160Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier160Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier160Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier160Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier160Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier160Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier160Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier160Path.close()
        context.saveGState()
        bezier160Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 161 Drawing
        let bezier161Path = UIBezierPath()
        bezier161Path.move(to: CGPoint(x: 5.41, y: 23.85))
        bezier161Path.addCurve(to: CGPoint(x: -18.64, y: 23.13), controlPoint1: CGPoint(x: -2.67, y: 23.51), controlPoint2: CGPoint(x: -18.64, y: 23.13))
        bezier161Path.addCurve(to: CGPoint(x: 5.42, y: 22.18), controlPoint1: CGPoint(x: -18.64, y: 23.13), controlPoint2: CGPoint(x: -2.67, y: 22.75))
        bezier161Path.addCurve(to: CGPoint(x: 13.74, y: 20.85), controlPoint1: CGPoint(x: 13.51, y: 21.61), controlPoint2: CGPoint(x: 11.71, y: 20.8))
        bezier161Path.addCurve(to: CGPoint(x: 23.13, y: 22.09), controlPoint1: CGPoint(x: 15.77, y: 20.89), controlPoint2: CGPoint(x: 13.72, y: 21.61))
        bezier161Path.addCurve(to: CGPoint(x: 51.36, y: 22.75), controlPoint1: CGPoint(x: 32.53, y: 22.56), controlPoint2: CGPoint(x: 51.36, y: 22.75))
        bezier161Path.addCurve(to: CGPoint(x: 23.12, y: 23.63), controlPoint1: CGPoint(x: 51.36, y: 22.75), controlPoint2: CGPoint(x: 32.54, y: 23.2))
        bezier161Path.addCurve(to: CGPoint(x: 13.67, y: 24.49), controlPoint1: CGPoint(x: 13.7, y: 24.07), controlPoint2: CGPoint(x: 15.62, y: 24.56))
        bezier161Path.addCurve(to: CGPoint(x: 5.41, y: 23.85), controlPoint1: CGPoint(x: 11.73, y: 24.42), controlPoint2: CGPoint(x: 13.49, y: 24.19))
        bezier161Path.close()
        context.saveGState()
        bezier161Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 22.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 22.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 83
        //// Bezier 162 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -9.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier162Path = UIBezierPath()
        bezier162Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier162Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier162Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier162Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier162Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier162Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier162Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier162Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier162Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier162Path.close()
        context.saveGState()
        bezier162Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 163 Drawing
        let bezier163Path = UIBezierPath()
        bezier163Path.move(to: CGPoint(x: 5.68, y: 23.69))
        bezier163Path.addCurve(to: CGPoint(x: -18.37, y: 22.97), controlPoint1: CGPoint(x: -2.4, y: 23.35), controlPoint2: CGPoint(x: -18.37, y: 22.97))
        bezier163Path.addCurve(to: CGPoint(x: 5.69, y: 22.02), controlPoint1: CGPoint(x: -18.37, y: 22.97), controlPoint2: CGPoint(x: -2.41, y: 22.59))
        bezier163Path.addCurve(to: CGPoint(x: 14.01, y: 20.69), controlPoint1: CGPoint(x: 13.78, y: 21.45), controlPoint2: CGPoint(x: 11.98, y: 20.65))
        bezier163Path.addCurve(to: CGPoint(x: 23.39, y: 21.93), controlPoint1: CGPoint(x: 16.04, y: 20.73), controlPoint2: CGPoint(x: 13.99, y: 21.45))
        bezier163Path.addCurve(to: CGPoint(x: 51.63, y: 22.59), controlPoint1: CGPoint(x: 32.8, y: 22.4), controlPoint2: CGPoint(x: 51.63, y: 22.59))
        bezier163Path.addCurve(to: CGPoint(x: 23.39, y: 23.48), controlPoint1: CGPoint(x: 51.63, y: 22.59), controlPoint2: CGPoint(x: 32.81, y: 23.04))
        bezier163Path.addCurve(to: CGPoint(x: 13.94, y: 24.33), controlPoint1: CGPoint(x: 13.96, y: 23.91), controlPoint2: CGPoint(x: 15.89, y: 24.4))
        bezier163Path.addCurve(to: CGPoint(x: 5.68, y: 23.69), controlPoint1: CGPoint(x: 11.99, y: 24.26), controlPoint2: CGPoint(x: 13.75, y: 24.03))
        bezier163Path.close()
        context.saveGState()
        bezier163Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 22.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 22.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 84
        context.saveGState()
        context.translateBy(x: 358.49, y: 48.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 85
        //// Bezier 164 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -28.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier164Path = UIBezierPath()
        bezier164Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier164Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier164Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier164Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier164Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier164Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier164Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier164Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier164Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier164Path.close()
        context.saveGState()
        bezier164Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 165 Drawing
        let bezier165Path = UIBezierPath()
        bezier165Path.move(to: CGPoint(x: 5.41, y: 4.85))
        bezier165Path.addCurve(to: CGPoint(x: -18.64, y: 4.13), controlPoint1: CGPoint(x: -2.67, y: 4.51), controlPoint2: CGPoint(x: -18.64, y: 4.13))
        bezier165Path.addCurve(to: CGPoint(x: 5.42, y: 3.18), controlPoint1: CGPoint(x: -18.64, y: 4.13), controlPoint2: CGPoint(x: -2.67, y: 3.75))
        bezier165Path.addCurve(to: CGPoint(x: 13.74, y: 1.85), controlPoint1: CGPoint(x: 13.51, y: 2.61), controlPoint2: CGPoint(x: 11.71, y: 1.8))
        bezier165Path.addCurve(to: CGPoint(x: 23.13, y: 3.09), controlPoint1: CGPoint(x: 15.77, y: 1.89), controlPoint2: CGPoint(x: 13.72, y: 2.61))
        bezier165Path.addCurve(to: CGPoint(x: 51.36, y: 3.75), controlPoint1: CGPoint(x: 32.53, y: 3.56), controlPoint2: CGPoint(x: 51.36, y: 3.75))
        bezier165Path.addCurve(to: CGPoint(x: 23.12, y: 4.63), controlPoint1: CGPoint(x: 51.36, y: 3.75), controlPoint2: CGPoint(x: 32.54, y: 4.2))
        bezier165Path.addCurve(to: CGPoint(x: 13.67, y: 5.49), controlPoint1: CGPoint(x: 13.7, y: 5.07), controlPoint2: CGPoint(x: 15.62, y: 5.56))
        bezier165Path.addCurve(to: CGPoint(x: 5.41, y: 4.85), controlPoint1: CGPoint(x: 11.73, y: 5.42), controlPoint2: CGPoint(x: 13.49, y: 5.19))
        bezier165Path.close()
        context.saveGState()
        bezier165Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 3.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 3.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 86
        //// Bezier 166 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -28.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier166Path = UIBezierPath()
        bezier166Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier166Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier166Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier166Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier166Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier166Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier166Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier166Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier166Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier166Path.close()
        context.saveGState()
        bezier166Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 167 Drawing
        let bezier167Path = UIBezierPath()
        bezier167Path.move(to: CGPoint(x: 5.68, y: 4.69))
        bezier167Path.addCurve(to: CGPoint(x: -18.37, y: 3.97), controlPoint1: CGPoint(x: -2.4, y: 4.35), controlPoint2: CGPoint(x: -18.37, y: 3.97))
        bezier167Path.addCurve(to: CGPoint(x: 5.69, y: 3.02), controlPoint1: CGPoint(x: -18.37, y: 3.97), controlPoint2: CGPoint(x: -2.41, y: 3.59))
        bezier167Path.addCurve(to: CGPoint(x: 14.01, y: 1.69), controlPoint1: CGPoint(x: 13.78, y: 2.45), controlPoint2: CGPoint(x: 11.98, y: 1.65))
        bezier167Path.addCurve(to: CGPoint(x: 23.39, y: 2.93), controlPoint1: CGPoint(x: 16.04, y: 1.73), controlPoint2: CGPoint(x: 13.99, y: 2.45))
        bezier167Path.addCurve(to: CGPoint(x: 51.63, y: 3.59), controlPoint1: CGPoint(x: 32.8, y: 3.4), controlPoint2: CGPoint(x: 51.63, y: 3.59))
        bezier167Path.addCurve(to: CGPoint(x: 23.39, y: 4.48), controlPoint1: CGPoint(x: 51.63, y: 3.59), controlPoint2: CGPoint(x: 32.81, y: 4.04))
        bezier167Path.addCurve(to: CGPoint(x: 13.94, y: 5.33), controlPoint1: CGPoint(x: 13.96, y: 4.91), controlPoint2: CGPoint(x: 15.89, y: 5.4))
        bezier167Path.addCurve(to: CGPoint(x: 5.68, y: 4.69), controlPoint1: CGPoint(x: 11.99, y: 5.26), controlPoint2: CGPoint(x: 13.75, y: 5.03))
        bezier167Path.close()
        context.saveGState()
        bezier167Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 3.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 3.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 87
        context.saveGState()
        context.translateBy(x: 368.49, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 88
        //// Bezier 168 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -6.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier168Path = UIBezierPath()
        bezier168Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier168Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier168Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier168Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier168Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier168Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier168Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier168Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier168Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier168Path.close()
        context.saveGState()
        bezier168Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 169 Drawing
        let bezier169Path = UIBezierPath()
        bezier169Path.move(to: CGPoint(x: 5.41, y: 26.85))
        bezier169Path.addCurve(to: CGPoint(x: -18.64, y: 26.13), controlPoint1: CGPoint(x: -2.67, y: 26.51), controlPoint2: CGPoint(x: -18.64, y: 26.13))
        bezier169Path.addCurve(to: CGPoint(x: 5.42, y: 25.18), controlPoint1: CGPoint(x: -18.64, y: 26.13), controlPoint2: CGPoint(x: -2.67, y: 25.75))
        bezier169Path.addCurve(to: CGPoint(x: 13.74, y: 23.85), controlPoint1: CGPoint(x: 13.51, y: 24.61), controlPoint2: CGPoint(x: 11.71, y: 23.8))
        bezier169Path.addCurve(to: CGPoint(x: 23.13, y: 25.09), controlPoint1: CGPoint(x: 15.77, y: 23.89), controlPoint2: CGPoint(x: 13.72, y: 24.61))
        bezier169Path.addCurve(to: CGPoint(x: 51.36, y: 25.75), controlPoint1: CGPoint(x: 32.53, y: 25.56), controlPoint2: CGPoint(x: 51.36, y: 25.75))
        bezier169Path.addCurve(to: CGPoint(x: 23.12, y: 26.63), controlPoint1: CGPoint(x: 51.36, y: 25.75), controlPoint2: CGPoint(x: 32.54, y: 26.2))
        bezier169Path.addCurve(to: CGPoint(x: 13.67, y: 27.49), controlPoint1: CGPoint(x: 13.7, y: 27.07), controlPoint2: CGPoint(x: 15.62, y: 27.56))
        bezier169Path.addCurve(to: CGPoint(x: 5.41, y: 26.85), controlPoint1: CGPoint(x: 11.73, y: 27.42), controlPoint2: CGPoint(x: 13.49, y: 27.19))
        bezier169Path.close()
        context.saveGState()
        bezier169Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 25.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 25.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 89
        //// Bezier 170 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -6.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier170Path = UIBezierPath()
        bezier170Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier170Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier170Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier170Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier170Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier170Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier170Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier170Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier170Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier170Path.close()
        context.saveGState()
        bezier170Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 171 Drawing
        let bezier171Path = UIBezierPath()
        bezier171Path.move(to: CGPoint(x: 5.68, y: 26.69))
        bezier171Path.addCurve(to: CGPoint(x: -18.37, y: 25.97), controlPoint1: CGPoint(x: -2.4, y: 26.35), controlPoint2: CGPoint(x: -18.37, y: 25.97))
        bezier171Path.addCurve(to: CGPoint(x: 5.69, y: 25.02), controlPoint1: CGPoint(x: -18.37, y: 25.97), controlPoint2: CGPoint(x: -2.41, y: 25.59))
        bezier171Path.addCurve(to: CGPoint(x: 14.01, y: 23.69), controlPoint1: CGPoint(x: 13.78, y: 24.45), controlPoint2: CGPoint(x: 11.98, y: 23.65))
        bezier171Path.addCurve(to: CGPoint(x: 23.39, y: 24.93), controlPoint1: CGPoint(x: 16.04, y: 23.73), controlPoint2: CGPoint(x: 13.99, y: 24.45))
        bezier171Path.addCurve(to: CGPoint(x: 51.63, y: 25.59), controlPoint1: CGPoint(x: 32.8, y: 25.4), controlPoint2: CGPoint(x: 51.63, y: 25.59))
        bezier171Path.addCurve(to: CGPoint(x: 23.39, y: 26.48), controlPoint1: CGPoint(x: 51.63, y: 25.59), controlPoint2: CGPoint(x: 32.81, y: 26.04))
        bezier171Path.addCurve(to: CGPoint(x: 13.94, y: 27.33), controlPoint1: CGPoint(x: 13.96, y: 26.91), controlPoint2: CGPoint(x: 15.89, y: 27.4))
        bezier171Path.addCurve(to: CGPoint(x: 5.68, y: 26.69), controlPoint1: CGPoint(x: 11.99, y: 27.26), controlPoint2: CGPoint(x: 13.75, y: 27.03))
        bezier171Path.close()
        context.saveGState()
        bezier171Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 25.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 25.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 90
        context.saveGState()
        context.translateBy(x: 347.49, y: 10.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 91
        //// Bezier 172 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -28.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier172Path = UIBezierPath()
        bezier172Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier172Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier172Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier172Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier172Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier172Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier172Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier172Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier172Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier172Path.close()
        context.saveGState()
        bezier172Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 173 Drawing
        let bezier173Path = UIBezierPath()
        bezier173Path.move(to: CGPoint(x: 5.41, y: 4.85))
        bezier173Path.addCurve(to: CGPoint(x: -18.64, y: 4.13), controlPoint1: CGPoint(x: -2.67, y: 4.51), controlPoint2: CGPoint(x: -18.64, y: 4.13))
        bezier173Path.addCurve(to: CGPoint(x: 5.42, y: 3.18), controlPoint1: CGPoint(x: -18.64, y: 4.13), controlPoint2: CGPoint(x: -2.67, y: 3.75))
        bezier173Path.addCurve(to: CGPoint(x: 13.74, y: 1.85), controlPoint1: CGPoint(x: 13.51, y: 2.61), controlPoint2: CGPoint(x: 11.71, y: 1.8))
        bezier173Path.addCurve(to: CGPoint(x: 23.13, y: 3.09), controlPoint1: CGPoint(x: 15.77, y: 1.89), controlPoint2: CGPoint(x: 13.72, y: 2.61))
        bezier173Path.addCurve(to: CGPoint(x: 51.36, y: 3.75), controlPoint1: CGPoint(x: 32.53, y: 3.56), controlPoint2: CGPoint(x: 51.36, y: 3.75))
        bezier173Path.addCurve(to: CGPoint(x: 23.12, y: 4.63), controlPoint1: CGPoint(x: 51.36, y: 3.75), controlPoint2: CGPoint(x: 32.54, y: 4.2))
        bezier173Path.addCurve(to: CGPoint(x: 13.67, y: 5.49), controlPoint1: CGPoint(x: 13.7, y: 5.07), controlPoint2: CGPoint(x: 15.62, y: 5.56))
        bezier173Path.addCurve(to: CGPoint(x: 5.41, y: 4.85), controlPoint1: CGPoint(x: 11.73, y: 5.42), controlPoint2: CGPoint(x: 13.49, y: 5.19))
        bezier173Path.close()
        context.saveGState()
        bezier173Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: 3.81), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: 3.47), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 92
        //// Bezier 174 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -28.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier174Path = UIBezierPath()
        bezier174Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier174Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier174Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier174Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier174Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier174Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier174Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier174Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier174Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier174Path.close()
        context.saveGState()
        bezier174Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 175 Drawing
        let bezier175Path = UIBezierPath()
        bezier175Path.move(to: CGPoint(x: 5.68, y: 4.69))
        bezier175Path.addCurve(to: CGPoint(x: -18.37, y: 3.97), controlPoint1: CGPoint(x: -2.4, y: 4.35), controlPoint2: CGPoint(x: -18.37, y: 3.97))
        bezier175Path.addCurve(to: CGPoint(x: 5.69, y: 3.02), controlPoint1: CGPoint(x: -18.37, y: 3.97), controlPoint2: CGPoint(x: -2.41, y: 3.59))
        bezier175Path.addCurve(to: CGPoint(x: 14.01, y: 1.69), controlPoint1: CGPoint(x: 13.78, y: 2.45), controlPoint2: CGPoint(x: 11.98, y: 1.65))
        bezier175Path.addCurve(to: CGPoint(x: 23.39, y: 2.93), controlPoint1: CGPoint(x: 16.04, y: 1.73), controlPoint2: CGPoint(x: 13.99, y: 2.45))
        bezier175Path.addCurve(to: CGPoint(x: 51.63, y: 3.59), controlPoint1: CGPoint(x: 32.8, y: 3.4), controlPoint2: CGPoint(x: 51.63, y: 3.59))
        bezier175Path.addCurve(to: CGPoint(x: 23.39, y: 4.48), controlPoint1: CGPoint(x: 51.63, y: 3.59), controlPoint2: CGPoint(x: 32.81, y: 4.04))
        bezier175Path.addCurve(to: CGPoint(x: 13.94, y: 5.33), controlPoint1: CGPoint(x: 13.96, y: 4.91), controlPoint2: CGPoint(x: 15.89, y: 5.4))
        bezier175Path.addCurve(to: CGPoint(x: 5.68, y: 4.69), controlPoint1: CGPoint(x: 11.99, y: 5.26), controlPoint2: CGPoint(x: 13.75, y: 5.03))
        bezier175Path.close()
        context.saveGState()
        bezier175Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: 3.65), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: 3.31), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 93
        context.saveGState()
        context.translateBy(x: 46.49, y: 20.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.33, y: 0.33)



        //// Group 94
        //// Bezier 176 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -47.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier176Path = UIBezierPath()
        bezier176Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier176Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier176Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier176Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier176Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier176Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier176Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier176Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier176Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier176Path.close()
        context.saveGState()
        bezier176Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 177 Drawing
        let bezier177Path = UIBezierPath()
        bezier177Path.move(to: CGPoint(x: 5.41, y: -14.15))
        bezier177Path.addCurve(to: CGPoint(x: -18.64, y: -14.87), controlPoint1: CGPoint(x: -2.67, y: -14.49), controlPoint2: CGPoint(x: -18.64, y: -14.87))
        bezier177Path.addCurve(to: CGPoint(x: 5.42, y: -15.82), controlPoint1: CGPoint(x: -18.64, y: -14.87), controlPoint2: CGPoint(x: -2.67, y: -15.25))
        bezier177Path.addCurve(to: CGPoint(x: 13.74, y: -17.15), controlPoint1: CGPoint(x: 13.51, y: -16.39), controlPoint2: CGPoint(x: 11.71, y: -17.2))
        bezier177Path.addCurve(to: CGPoint(x: 23.13, y: -15.91), controlPoint1: CGPoint(x: 15.77, y: -17.11), controlPoint2: CGPoint(x: 13.72, y: -16.39))
        bezier177Path.addCurve(to: CGPoint(x: 51.36, y: -15.25), controlPoint1: CGPoint(x: 32.53, y: -15.44), controlPoint2: CGPoint(x: 51.36, y: -15.25))
        bezier177Path.addCurve(to: CGPoint(x: 23.12, y: -14.37), controlPoint1: CGPoint(x: 51.36, y: -15.25), controlPoint2: CGPoint(x: 32.54, y: -14.8))
        bezier177Path.addCurve(to: CGPoint(x: 13.67, y: -13.51), controlPoint1: CGPoint(x: 13.7, y: -13.93), controlPoint2: CGPoint(x: 15.62, y: -13.44))
        bezier177Path.addCurve(to: CGPoint(x: 5.41, y: -14.15), controlPoint1: CGPoint(x: 11.73, y: -13.58), controlPoint2: CGPoint(x: 13.49, y: -13.81))
        bezier177Path.close()
        context.saveGState()
        bezier177Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -15.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -15.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 95
        //// Bezier 178 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -47.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier178Path = UIBezierPath()
        bezier178Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier178Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier178Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier178Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier178Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier178Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier178Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier178Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier178Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier178Path.close()
        context.saveGState()
        bezier178Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 179 Drawing
        let bezier179Path = UIBezierPath()
        bezier179Path.move(to: CGPoint(x: 5.68, y: -14.31))
        bezier179Path.addCurve(to: CGPoint(x: -18.37, y: -15.03), controlPoint1: CGPoint(x: -2.4, y: -14.65), controlPoint2: CGPoint(x: -18.37, y: -15.03))
        bezier179Path.addCurve(to: CGPoint(x: 5.69, y: -15.98), controlPoint1: CGPoint(x: -18.37, y: -15.03), controlPoint2: CGPoint(x: -2.41, y: -15.41))
        bezier179Path.addCurve(to: CGPoint(x: 14.01, y: -17.31), controlPoint1: CGPoint(x: 13.78, y: -16.55), controlPoint2: CGPoint(x: 11.98, y: -17.35))
        bezier179Path.addCurve(to: CGPoint(x: 23.39, y: -16.07), controlPoint1: CGPoint(x: 16.04, y: -17.27), controlPoint2: CGPoint(x: 13.99, y: -16.55))
        bezier179Path.addCurve(to: CGPoint(x: 51.63, y: -15.41), controlPoint1: CGPoint(x: 32.8, y: -15.6), controlPoint2: CGPoint(x: 51.63, y: -15.41))
        bezier179Path.addCurve(to: CGPoint(x: 23.39, y: -14.52), controlPoint1: CGPoint(x: 51.63, y: -15.41), controlPoint2: CGPoint(x: 32.81, y: -14.96))
        bezier179Path.addCurve(to: CGPoint(x: 13.94, y: -13.67), controlPoint1: CGPoint(x: 13.96, y: -14.09), controlPoint2: CGPoint(x: 15.89, y: -13.6))
        bezier179Path.addCurve(to: CGPoint(x: 5.68, y: -14.31), controlPoint1: CGPoint(x: 11.99, y: -13.74), controlPoint2: CGPoint(x: 13.75, y: -13.97))
        bezier179Path.close()
        context.saveGState()
        bezier179Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -15.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -15.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 96
        context.saveGState()
        context.translateBy(x: 29.49, y: 40.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 97
        //// Bezier 180 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -47.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier180Path = UIBezierPath()
        bezier180Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier180Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier180Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier180Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier180Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier180Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier180Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier180Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier180Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier180Path.close()
        context.saveGState()
        bezier180Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 181 Drawing
        let bezier181Path = UIBezierPath()
        bezier181Path.move(to: CGPoint(x: 5.41, y: -14.15))
        bezier181Path.addCurve(to: CGPoint(x: -18.64, y: -14.87), controlPoint1: CGPoint(x: -2.67, y: -14.49), controlPoint2: CGPoint(x: -18.64, y: -14.87))
        bezier181Path.addCurve(to: CGPoint(x: 5.42, y: -15.82), controlPoint1: CGPoint(x: -18.64, y: -14.87), controlPoint2: CGPoint(x: -2.67, y: -15.25))
        bezier181Path.addCurve(to: CGPoint(x: 13.74, y: -17.15), controlPoint1: CGPoint(x: 13.51, y: -16.39), controlPoint2: CGPoint(x: 11.71, y: -17.2))
        bezier181Path.addCurve(to: CGPoint(x: 23.13, y: -15.91), controlPoint1: CGPoint(x: 15.77, y: -17.11), controlPoint2: CGPoint(x: 13.72, y: -16.39))
        bezier181Path.addCurve(to: CGPoint(x: 51.36, y: -15.25), controlPoint1: CGPoint(x: 32.53, y: -15.44), controlPoint2: CGPoint(x: 51.36, y: -15.25))
        bezier181Path.addCurve(to: CGPoint(x: 23.12, y: -14.37), controlPoint1: CGPoint(x: 51.36, y: -15.25), controlPoint2: CGPoint(x: 32.54, y: -14.8))
        bezier181Path.addCurve(to: CGPoint(x: 13.67, y: -13.51), controlPoint1: CGPoint(x: 13.7, y: -13.93), controlPoint2: CGPoint(x: 15.62, y: -13.44))
        bezier181Path.addCurve(to: CGPoint(x: 5.41, y: -14.15), controlPoint1: CGPoint(x: 11.73, y: -13.58), controlPoint2: CGPoint(x: 13.49, y: -13.81))
        bezier181Path.close()
        context.saveGState()
        bezier181Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -15.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -15.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 98
        //// Bezier 182 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -47.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier182Path = UIBezierPath()
        bezier182Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier182Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier182Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier182Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier182Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier182Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier182Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier182Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier182Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier182Path.close()
        context.saveGState()
        bezier182Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 183 Drawing
        let bezier183Path = UIBezierPath()
        bezier183Path.move(to: CGPoint(x: 5.68, y: -14.31))
        bezier183Path.addCurve(to: CGPoint(x: -18.37, y: -15.03), controlPoint1: CGPoint(x: -2.4, y: -14.65), controlPoint2: CGPoint(x: -18.37, y: -15.03))
        bezier183Path.addCurve(to: CGPoint(x: 5.69, y: -15.98), controlPoint1: CGPoint(x: -18.37, y: -15.03), controlPoint2: CGPoint(x: -2.41, y: -15.41))
        bezier183Path.addCurve(to: CGPoint(x: 14.01, y: -17.31), controlPoint1: CGPoint(x: 13.78, y: -16.55), controlPoint2: CGPoint(x: 11.98, y: -17.35))
        bezier183Path.addCurve(to: CGPoint(x: 23.39, y: -16.07), controlPoint1: CGPoint(x: 16.04, y: -17.27), controlPoint2: CGPoint(x: 13.99, y: -16.55))
        bezier183Path.addCurve(to: CGPoint(x: 51.63, y: -15.41), controlPoint1: CGPoint(x: 32.8, y: -15.6), controlPoint2: CGPoint(x: 51.63, y: -15.41))
        bezier183Path.addCurve(to: CGPoint(x: 23.39, y: -14.52), controlPoint1: CGPoint(x: 51.63, y: -15.41), controlPoint2: CGPoint(x: 32.81, y: -14.96))
        bezier183Path.addCurve(to: CGPoint(x: 13.94, y: -13.67), controlPoint1: CGPoint(x: 13.96, y: -14.09), controlPoint2: CGPoint(x: 15.89, y: -13.6))
        bezier183Path.addCurve(to: CGPoint(x: 5.68, y: -14.31), controlPoint1: CGPoint(x: 11.99, y: -13.74), controlPoint2: CGPoint(x: 13.75, y: -13.97))
        bezier183Path.close()
        context.saveGState()
        bezier183Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -15.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -15.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 99
        context.saveGState()
        context.translateBy(x: 24.49, y: 11.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 100
        //// Bezier 184 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -47.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier184Path = UIBezierPath()
        bezier184Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier184Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier184Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier184Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier184Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier184Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier184Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier184Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier184Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier184Path.close()
        context.saveGState()
        bezier184Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 185 Drawing
        let bezier185Path = UIBezierPath()
        bezier185Path.move(to: CGPoint(x: 5.41, y: -14.15))
        bezier185Path.addCurve(to: CGPoint(x: -18.64, y: -14.87), controlPoint1: CGPoint(x: -2.67, y: -14.49), controlPoint2: CGPoint(x: -18.64, y: -14.87))
        bezier185Path.addCurve(to: CGPoint(x: 5.42, y: -15.82), controlPoint1: CGPoint(x: -18.64, y: -14.87), controlPoint2: CGPoint(x: -2.67, y: -15.25))
        bezier185Path.addCurve(to: CGPoint(x: 13.74, y: -17.15), controlPoint1: CGPoint(x: 13.51, y: -16.39), controlPoint2: CGPoint(x: 11.71, y: -17.2))
        bezier185Path.addCurve(to: CGPoint(x: 23.13, y: -15.91), controlPoint1: CGPoint(x: 15.77, y: -17.11), controlPoint2: CGPoint(x: 13.72, y: -16.39))
        bezier185Path.addCurve(to: CGPoint(x: 51.36, y: -15.25), controlPoint1: CGPoint(x: 32.53, y: -15.44), controlPoint2: CGPoint(x: 51.36, y: -15.25))
        bezier185Path.addCurve(to: CGPoint(x: 23.12, y: -14.37), controlPoint1: CGPoint(x: 51.36, y: -15.25), controlPoint2: CGPoint(x: 32.54, y: -14.8))
        bezier185Path.addCurve(to: CGPoint(x: 13.67, y: -13.51), controlPoint1: CGPoint(x: 13.7, y: -13.93), controlPoint2: CGPoint(x: 15.62, y: -13.44))
        bezier185Path.addCurve(to: CGPoint(x: 5.41, y: -14.15), controlPoint1: CGPoint(x: 11.73, y: -13.58), controlPoint2: CGPoint(x: 13.49, y: -13.81))
        bezier185Path.close()
        context.saveGState()
        bezier185Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -15.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -15.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 101
        //// Bezier 186 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -47.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier186Path = UIBezierPath()
        bezier186Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier186Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier186Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier186Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier186Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier186Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier186Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier186Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier186Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier186Path.close()
        context.saveGState()
        bezier186Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 187 Drawing
        let bezier187Path = UIBezierPath()
        bezier187Path.move(to: CGPoint(x: 5.68, y: -14.31))
        bezier187Path.addCurve(to: CGPoint(x: -18.37, y: -15.03), controlPoint1: CGPoint(x: -2.4, y: -14.65), controlPoint2: CGPoint(x: -18.37, y: -15.03))
        bezier187Path.addCurve(to: CGPoint(x: 5.69, y: -15.98), controlPoint1: CGPoint(x: -18.37, y: -15.03), controlPoint2: CGPoint(x: -2.41, y: -15.41))
        bezier187Path.addCurve(to: CGPoint(x: 14.01, y: -17.31), controlPoint1: CGPoint(x: 13.78, y: -16.55), controlPoint2: CGPoint(x: 11.98, y: -17.35))
        bezier187Path.addCurve(to: CGPoint(x: 23.39, y: -16.07), controlPoint1: CGPoint(x: 16.04, y: -17.27), controlPoint2: CGPoint(x: 13.99, y: -16.55))
        bezier187Path.addCurve(to: CGPoint(x: 51.63, y: -15.41), controlPoint1: CGPoint(x: 32.8, y: -15.6), controlPoint2: CGPoint(x: 51.63, y: -15.41))
        bezier187Path.addCurve(to: CGPoint(x: 23.39, y: -14.52), controlPoint1: CGPoint(x: 51.63, y: -15.41), controlPoint2: CGPoint(x: 32.81, y: -14.96))
        bezier187Path.addCurve(to: CGPoint(x: 13.94, y: -13.67), controlPoint1: CGPoint(x: 13.96, y: -14.09), controlPoint2: CGPoint(x: 15.89, y: -13.6))
        bezier187Path.addCurve(to: CGPoint(x: 5.68, y: -14.31), controlPoint1: CGPoint(x: 11.99, y: -13.74), controlPoint2: CGPoint(x: 13.75, y: -13.97))
        bezier187Path.close()
        context.saveGState()
        bezier187Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -15.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -15.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 102
        context.saveGState()
        context.translateBy(x: 60.49, y: 34.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 103
        //// Bezier 188 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -45.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier188Path = UIBezierPath()
        bezier188Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier188Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier188Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier188Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier188Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier188Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier188Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier188Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier188Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier188Path.close()
        context.saveGState()
        bezier188Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 189 Drawing
        let bezier189Path = UIBezierPath()
        bezier189Path.move(to: CGPoint(x: 5.41, y: -12.15))
        bezier189Path.addCurve(to: CGPoint(x: -18.64, y: -12.87), controlPoint1: CGPoint(x: -2.67, y: -12.49), controlPoint2: CGPoint(x: -18.64, y: -12.87))
        bezier189Path.addCurve(to: CGPoint(x: 5.42, y: -13.82), controlPoint1: CGPoint(x: -18.64, y: -12.87), controlPoint2: CGPoint(x: -2.67, y: -13.25))
        bezier189Path.addCurve(to: CGPoint(x: 13.74, y: -15.15), controlPoint1: CGPoint(x: 13.51, y: -14.39), controlPoint2: CGPoint(x: 11.71, y: -15.2))
        bezier189Path.addCurve(to: CGPoint(x: 23.13, y: -13.91), controlPoint1: CGPoint(x: 15.77, y: -15.11), controlPoint2: CGPoint(x: 13.72, y: -14.39))
        bezier189Path.addCurve(to: CGPoint(x: 51.36, y: -13.25), controlPoint1: CGPoint(x: 32.53, y: -13.44), controlPoint2: CGPoint(x: 51.36, y: -13.25))
        bezier189Path.addCurve(to: CGPoint(x: 23.12, y: -12.37), controlPoint1: CGPoint(x: 51.36, y: -13.25), controlPoint2: CGPoint(x: 32.54, y: -12.8))
        bezier189Path.addCurve(to: CGPoint(x: 13.67, y: -11.51), controlPoint1: CGPoint(x: 13.7, y: -11.93), controlPoint2: CGPoint(x: 15.62, y: -11.44))
        bezier189Path.addCurve(to: CGPoint(x: 5.41, y: -12.15), controlPoint1: CGPoint(x: 11.73, y: -11.58), controlPoint2: CGPoint(x: 13.49, y: -11.81))
        bezier189Path.close()
        context.saveGState()
        bezier189Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -13.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -13.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 104
        //// Bezier 190 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -45.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier190Path = UIBezierPath()
        bezier190Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier190Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier190Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier190Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier190Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier190Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier190Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier190Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier190Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier190Path.close()
        context.saveGState()
        bezier190Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 191 Drawing
        let bezier191Path = UIBezierPath()
        bezier191Path.move(to: CGPoint(x: 5.68, y: -12.31))
        bezier191Path.addCurve(to: CGPoint(x: -18.37, y: -13.03), controlPoint1: CGPoint(x: -2.4, y: -12.65), controlPoint2: CGPoint(x: -18.37, y: -13.03))
        bezier191Path.addCurve(to: CGPoint(x: 5.69, y: -13.98), controlPoint1: CGPoint(x: -18.37, y: -13.03), controlPoint2: CGPoint(x: -2.41, y: -13.41))
        bezier191Path.addCurve(to: CGPoint(x: 14.01, y: -15.31), controlPoint1: CGPoint(x: 13.78, y: -14.55), controlPoint2: CGPoint(x: 11.98, y: -15.35))
        bezier191Path.addCurve(to: CGPoint(x: 23.39, y: -14.07), controlPoint1: CGPoint(x: 16.04, y: -15.27), controlPoint2: CGPoint(x: 13.99, y: -14.55))
        bezier191Path.addCurve(to: CGPoint(x: 51.63, y: -13.41), controlPoint1: CGPoint(x: 32.8, y: -13.6), controlPoint2: CGPoint(x: 51.63, y: -13.41))
        bezier191Path.addCurve(to: CGPoint(x: 23.39, y: -12.52), controlPoint1: CGPoint(x: 51.63, y: -13.41), controlPoint2: CGPoint(x: 32.81, y: -12.96))
        bezier191Path.addCurve(to: CGPoint(x: 13.94, y: -11.67), controlPoint1: CGPoint(x: 13.96, y: -12.09), controlPoint2: CGPoint(x: 15.89, y: -11.6))
        bezier191Path.addCurve(to: CGPoint(x: 5.68, y: -12.31), controlPoint1: CGPoint(x: 11.99, y: -11.74), controlPoint2: CGPoint(x: 13.75, y: -11.97))
        bezier191Path.close()
        context.saveGState()
        bezier191Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -13.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -13.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 105
        context.saveGState()
        context.translateBy(x: 131.49, y: 89.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 106
        //// Bezier 192 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -41.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier192Path = UIBezierPath()
        bezier192Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier192Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier192Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier192Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier192Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier192Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier192Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier192Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier192Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier192Path.close()
        context.saveGState()
        bezier192Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 193 Drawing
        let bezier193Path = UIBezierPath()
        bezier193Path.move(to: CGPoint(x: 5.41, y: -8.15))
        bezier193Path.addCurve(to: CGPoint(x: -18.64, y: -8.87), controlPoint1: CGPoint(x: -2.67, y: -8.49), controlPoint2: CGPoint(x: -18.64, y: -8.87))
        bezier193Path.addCurve(to: CGPoint(x: 5.42, y: -9.82), controlPoint1: CGPoint(x: -18.64, y: -8.87), controlPoint2: CGPoint(x: -2.67, y: -9.25))
        bezier193Path.addCurve(to: CGPoint(x: 13.74, y: -11.15), controlPoint1: CGPoint(x: 13.51, y: -10.39), controlPoint2: CGPoint(x: 11.71, y: -11.2))
        bezier193Path.addCurve(to: CGPoint(x: 23.13, y: -9.91), controlPoint1: CGPoint(x: 15.77, y: -11.11), controlPoint2: CGPoint(x: 13.72, y: -10.39))
        bezier193Path.addCurve(to: CGPoint(x: 51.36, y: -9.25), controlPoint1: CGPoint(x: 32.53, y: -9.44), controlPoint2: CGPoint(x: 51.36, y: -9.25))
        bezier193Path.addCurve(to: CGPoint(x: 23.12, y: -8.37), controlPoint1: CGPoint(x: 51.36, y: -9.25), controlPoint2: CGPoint(x: 32.54, y: -8.8))
        bezier193Path.addCurve(to: CGPoint(x: 13.67, y: -7.51), controlPoint1: CGPoint(x: 13.7, y: -7.93), controlPoint2: CGPoint(x: 15.62, y: -7.44))
        bezier193Path.addCurve(to: CGPoint(x: 5.41, y: -8.15), controlPoint1: CGPoint(x: 11.73, y: -7.58), controlPoint2: CGPoint(x: 13.49, y: -7.81))
        bezier193Path.close()
        context.saveGState()
        bezier193Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -9.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -9.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 107
        //// Bezier 194 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -41.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier194Path = UIBezierPath()
        bezier194Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier194Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier194Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier194Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier194Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier194Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier194Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier194Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier194Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier194Path.close()
        context.saveGState()
        bezier194Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 195 Drawing
        let bezier195Path = UIBezierPath()
        bezier195Path.move(to: CGPoint(x: 5.68, y: -8.31))
        bezier195Path.addCurve(to: CGPoint(x: -18.37, y: -9.03), controlPoint1: CGPoint(x: -2.4, y: -8.65), controlPoint2: CGPoint(x: -18.37, y: -9.03))
        bezier195Path.addCurve(to: CGPoint(x: 5.69, y: -9.98), controlPoint1: CGPoint(x: -18.37, y: -9.03), controlPoint2: CGPoint(x: -2.41, y: -9.41))
        bezier195Path.addCurve(to: CGPoint(x: 14.01, y: -11.31), controlPoint1: CGPoint(x: 13.78, y: -10.55), controlPoint2: CGPoint(x: 11.98, y: -11.35))
        bezier195Path.addCurve(to: CGPoint(x: 23.39, y: -10.07), controlPoint1: CGPoint(x: 16.04, y: -11.27), controlPoint2: CGPoint(x: 13.99, y: -10.55))
        bezier195Path.addCurve(to: CGPoint(x: 51.63, y: -9.41), controlPoint1: CGPoint(x: 32.8, y: -9.6), controlPoint2: CGPoint(x: 51.63, y: -9.41))
        bezier195Path.addCurve(to: CGPoint(x: 23.39, y: -8.52), controlPoint1: CGPoint(x: 51.63, y: -9.41), controlPoint2: CGPoint(x: 32.81, y: -8.96))
        bezier195Path.addCurve(to: CGPoint(x: 13.94, y: -7.67), controlPoint1: CGPoint(x: 13.96, y: -8.09), controlPoint2: CGPoint(x: 15.89, y: -7.6))
        bezier195Path.addCurve(to: CGPoint(x: 5.68, y: -8.31), controlPoint1: CGPoint(x: 11.99, y: -7.74), controlPoint2: CGPoint(x: 13.75, y: -7.97))
        bezier195Path.close()
        context.saveGState()
        bezier195Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -9.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -9.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 108
        context.saveGState()
        context.translateBy(x: 197.49, y: 99.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.4)



        //// Group 109
        //// Bezier 196 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -43.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier196Path = UIBezierPath()
        bezier196Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier196Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier196Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier196Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier196Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier196Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier196Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier196Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier196Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier196Path.close()
        context.saveGState()
        bezier196Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 197 Drawing
        let bezier197Path = UIBezierPath()
        bezier197Path.move(to: CGPoint(x: 5.41, y: -10.15))
        bezier197Path.addCurve(to: CGPoint(x: -18.64, y: -10.87), controlPoint1: CGPoint(x: -2.67, y: -10.49), controlPoint2: CGPoint(x: -18.64, y: -10.87))
        bezier197Path.addCurve(to: CGPoint(x: 5.42, y: -11.82), controlPoint1: CGPoint(x: -18.64, y: -10.87), controlPoint2: CGPoint(x: -2.67, y: -11.25))
        bezier197Path.addCurve(to: CGPoint(x: 13.74, y: -13.15), controlPoint1: CGPoint(x: 13.51, y: -12.39), controlPoint2: CGPoint(x: 11.71, y: -13.2))
        bezier197Path.addCurve(to: CGPoint(x: 23.13, y: -11.91), controlPoint1: CGPoint(x: 15.77, y: -13.11), controlPoint2: CGPoint(x: 13.72, y: -12.39))
        bezier197Path.addCurve(to: CGPoint(x: 51.36, y: -11.25), controlPoint1: CGPoint(x: 32.53, y: -11.44), controlPoint2: CGPoint(x: 51.36, y: -11.25))
        bezier197Path.addCurve(to: CGPoint(x: 23.12, y: -10.37), controlPoint1: CGPoint(x: 51.36, y: -11.25), controlPoint2: CGPoint(x: 32.54, y: -10.8))
        bezier197Path.addCurve(to: CGPoint(x: 13.67, y: -9.51), controlPoint1: CGPoint(x: 13.7, y: -9.93), controlPoint2: CGPoint(x: 15.62, y: -9.44))
        bezier197Path.addCurve(to: CGPoint(x: 5.41, y: -10.15), controlPoint1: CGPoint(x: 11.73, y: -9.58), controlPoint2: CGPoint(x: 13.49, y: -9.81))
        bezier197Path.close()
        context.saveGState()
        bezier197Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -11.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -11.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 110
        //// Bezier 198 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -43.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier198Path = UIBezierPath()
        bezier198Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier198Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier198Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier198Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier198Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier198Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier198Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier198Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier198Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier198Path.close()
        context.saveGState()
        bezier198Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 199 Drawing
        let bezier199Path = UIBezierPath()
        bezier199Path.move(to: CGPoint(x: 5.68, y: -10.31))
        bezier199Path.addCurve(to: CGPoint(x: -18.37, y: -11.03), controlPoint1: CGPoint(x: -2.4, y: -10.65), controlPoint2: CGPoint(x: -18.37, y: -11.03))
        bezier199Path.addCurve(to: CGPoint(x: 5.69, y: -11.98), controlPoint1: CGPoint(x: -18.37, y: -11.03), controlPoint2: CGPoint(x: -2.41, y: -11.41))
        bezier199Path.addCurve(to: CGPoint(x: 14.01, y: -13.31), controlPoint1: CGPoint(x: 13.78, y: -12.55), controlPoint2: CGPoint(x: 11.98, y: -13.35))
        bezier199Path.addCurve(to: CGPoint(x: 23.39, y: -12.07), controlPoint1: CGPoint(x: 16.04, y: -13.27), controlPoint2: CGPoint(x: 13.99, y: -12.55))
        bezier199Path.addCurve(to: CGPoint(x: 51.63, y: -11.41), controlPoint1: CGPoint(x: 32.8, y: -11.6), controlPoint2: CGPoint(x: 51.63, y: -11.41))
        bezier199Path.addCurve(to: CGPoint(x: 23.39, y: -10.52), controlPoint1: CGPoint(x: 51.63, y: -11.41), controlPoint2: CGPoint(x: 32.81, y: -10.96))
        bezier199Path.addCurve(to: CGPoint(x: 13.94, y: -9.67), controlPoint1: CGPoint(x: 13.96, y: -10.09), controlPoint2: CGPoint(x: 15.89, y: -9.6))
        bezier199Path.addCurve(to: CGPoint(x: 5.68, y: -10.31), controlPoint1: CGPoint(x: 11.99, y: -9.74), controlPoint2: CGPoint(x: 13.75, y: -9.97))
        bezier199Path.close()
        context.saveGState()
        bezier199Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -11.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -11.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 111
        context.saveGState()
        context.translateBy(x: 236.49, y: 74.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 112
        //// Bezier 200 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -35.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier200Path = UIBezierPath()
        bezier200Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier200Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier200Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier200Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier200Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier200Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier200Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier200Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier200Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier200Path.close()
        context.saveGState()
        bezier200Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 201 Drawing
        let bezier201Path = UIBezierPath()
        bezier201Path.move(to: CGPoint(x: 5.41, y: -2.15))
        bezier201Path.addCurve(to: CGPoint(x: -18.64, y: -2.87), controlPoint1: CGPoint(x: -2.67, y: -2.49), controlPoint2: CGPoint(x: -18.64, y: -2.87))
        bezier201Path.addCurve(to: CGPoint(x: 5.42, y: -3.82), controlPoint1: CGPoint(x: -18.64, y: -2.87), controlPoint2: CGPoint(x: -2.67, y: -3.25))
        bezier201Path.addCurve(to: CGPoint(x: 13.74, y: -5.15), controlPoint1: CGPoint(x: 13.51, y: -4.39), controlPoint2: CGPoint(x: 11.71, y: -5.2))
        bezier201Path.addCurve(to: CGPoint(x: 23.13, y: -3.91), controlPoint1: CGPoint(x: 15.77, y: -5.11), controlPoint2: CGPoint(x: 13.72, y: -4.39))
        bezier201Path.addCurve(to: CGPoint(x: 51.36, y: -3.25), controlPoint1: CGPoint(x: 32.53, y: -3.44), controlPoint2: CGPoint(x: 51.36, y: -3.25))
        bezier201Path.addCurve(to: CGPoint(x: 23.12, y: -2.37), controlPoint1: CGPoint(x: 51.36, y: -3.25), controlPoint2: CGPoint(x: 32.54, y: -2.8))
        bezier201Path.addCurve(to: CGPoint(x: 13.67, y: -1.51), controlPoint1: CGPoint(x: 13.7, y: -1.93), controlPoint2: CGPoint(x: 15.62, y: -1.44))
        bezier201Path.addCurve(to: CGPoint(x: 5.41, y: -2.15), controlPoint1: CGPoint(x: 11.73, y: -1.58), controlPoint2: CGPoint(x: 13.49, y: -1.81))
        bezier201Path.close()
        context.saveGState()
        bezier201Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -3.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -3.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 113
        //// Bezier 202 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -35.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier202Path = UIBezierPath()
        bezier202Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier202Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier202Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier202Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier202Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier202Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier202Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier202Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier202Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier202Path.close()
        context.saveGState()
        bezier202Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 203 Drawing
        let bezier203Path = UIBezierPath()
        bezier203Path.move(to: CGPoint(x: 5.68, y: -2.31))
        bezier203Path.addCurve(to: CGPoint(x: -18.37, y: -3.03), controlPoint1: CGPoint(x: -2.4, y: -2.65), controlPoint2: CGPoint(x: -18.37, y: -3.03))
        bezier203Path.addCurve(to: CGPoint(x: 5.69, y: -3.98), controlPoint1: CGPoint(x: -18.37, y: -3.03), controlPoint2: CGPoint(x: -2.41, y: -3.41))
        bezier203Path.addCurve(to: CGPoint(x: 14.01, y: -5.31), controlPoint1: CGPoint(x: 13.78, y: -4.55), controlPoint2: CGPoint(x: 11.98, y: -5.35))
        bezier203Path.addCurve(to: CGPoint(x: 23.39, y: -4.07), controlPoint1: CGPoint(x: 16.04, y: -5.27), controlPoint2: CGPoint(x: 13.99, y: -4.55))
        bezier203Path.addCurve(to: CGPoint(x: 51.63, y: -3.41), controlPoint1: CGPoint(x: 32.8, y: -3.6), controlPoint2: CGPoint(x: 51.63, y: -3.41))
        bezier203Path.addCurve(to: CGPoint(x: 23.39, y: -2.52), controlPoint1: CGPoint(x: 51.63, y: -3.41), controlPoint2: CGPoint(x: 32.81, y: -2.96))
        bezier203Path.addCurve(to: CGPoint(x: 13.94, y: -1.67), controlPoint1: CGPoint(x: 13.96, y: -2.09), controlPoint2: CGPoint(x: 15.89, y: -1.6))
        bezier203Path.addCurve(to: CGPoint(x: 5.68, y: -2.31), controlPoint1: CGPoint(x: 11.99, y: -1.74), controlPoint2: CGPoint(x: 13.75, y: -1.97))
        bezier203Path.close()
        context.saveGState()
        bezier203Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -3.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -3.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 114
        context.saveGState()
        context.translateBy(x: 169.49, y: 74.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 115
        //// Bezier 204 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -39.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier204Path = UIBezierPath()
        bezier204Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier204Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier204Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier204Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier204Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier204Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier204Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier204Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier204Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier204Path.close()
        context.saveGState()
        bezier204Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 205 Drawing
        let bezier205Path = UIBezierPath()
        bezier205Path.move(to: CGPoint(x: 5.41, y: -6.15))
        bezier205Path.addCurve(to: CGPoint(x: -18.64, y: -6.87), controlPoint1: CGPoint(x: -2.67, y: -6.49), controlPoint2: CGPoint(x: -18.64, y: -6.87))
        bezier205Path.addCurve(to: CGPoint(x: 5.42, y: -7.82), controlPoint1: CGPoint(x: -18.64, y: -6.87), controlPoint2: CGPoint(x: -2.67, y: -7.25))
        bezier205Path.addCurve(to: CGPoint(x: 13.74, y: -9.15), controlPoint1: CGPoint(x: 13.51, y: -8.39), controlPoint2: CGPoint(x: 11.71, y: -9.2))
        bezier205Path.addCurve(to: CGPoint(x: 23.13, y: -7.91), controlPoint1: CGPoint(x: 15.77, y: -9.11), controlPoint2: CGPoint(x: 13.72, y: -8.39))
        bezier205Path.addCurve(to: CGPoint(x: 51.36, y: -7.25), controlPoint1: CGPoint(x: 32.53, y: -7.44), controlPoint2: CGPoint(x: 51.36, y: -7.25))
        bezier205Path.addCurve(to: CGPoint(x: 23.12, y: -6.37), controlPoint1: CGPoint(x: 51.36, y: -7.25), controlPoint2: CGPoint(x: 32.54, y: -6.8))
        bezier205Path.addCurve(to: CGPoint(x: 13.67, y: -5.51), controlPoint1: CGPoint(x: 13.7, y: -5.93), controlPoint2: CGPoint(x: 15.62, y: -5.44))
        bezier205Path.addCurve(to: CGPoint(x: 5.41, y: -6.15), controlPoint1: CGPoint(x: 11.73, y: -5.58), controlPoint2: CGPoint(x: 13.49, y: -5.81))
        bezier205Path.close()
        context.saveGState()
        bezier205Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -7.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -7.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 116
        //// Bezier 206 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -39.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier206Path = UIBezierPath()
        bezier206Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier206Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier206Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier206Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier206Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier206Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier206Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier206Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier206Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier206Path.close()
        context.saveGState()
        bezier206Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 207 Drawing
        let bezier207Path = UIBezierPath()
        bezier207Path.move(to: CGPoint(x: 5.68, y: -6.31))
        bezier207Path.addCurve(to: CGPoint(x: -18.37, y: -7.03), controlPoint1: CGPoint(x: -2.4, y: -6.65), controlPoint2: CGPoint(x: -18.37, y: -7.03))
        bezier207Path.addCurve(to: CGPoint(x: 5.69, y: -7.98), controlPoint1: CGPoint(x: -18.37, y: -7.03), controlPoint2: CGPoint(x: -2.41, y: -7.41))
        bezier207Path.addCurve(to: CGPoint(x: 14.01, y: -9.31), controlPoint1: CGPoint(x: 13.78, y: -8.55), controlPoint2: CGPoint(x: 11.98, y: -9.35))
        bezier207Path.addCurve(to: CGPoint(x: 23.39, y: -8.07), controlPoint1: CGPoint(x: 16.04, y: -9.27), controlPoint2: CGPoint(x: 13.99, y: -8.55))
        bezier207Path.addCurve(to: CGPoint(x: 51.63, y: -7.41), controlPoint1: CGPoint(x: 32.8, y: -7.6), controlPoint2: CGPoint(x: 51.63, y: -7.41))
        bezier207Path.addCurve(to: CGPoint(x: 23.39, y: -6.52), controlPoint1: CGPoint(x: 51.63, y: -7.41), controlPoint2: CGPoint(x: 32.81, y: -6.96))
        bezier207Path.addCurve(to: CGPoint(x: 13.94, y: -5.67), controlPoint1: CGPoint(x: 13.96, y: -6.09), controlPoint2: CGPoint(x: 15.89, y: -5.6))
        bezier207Path.addCurve(to: CGPoint(x: 5.68, y: -6.31), controlPoint1: CGPoint(x: 11.99, y: -5.74), controlPoint2: CGPoint(x: 13.75, y: -5.97))
        bezier207Path.close()
        context.saveGState()
        bezier207Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -7.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -7.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 117
        context.saveGState()
        context.translateBy(x: 57.49, y: 84.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.3)



        //// Group 118
        //// Bezier 208 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -47.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier208Path = UIBezierPath()
        bezier208Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier208Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier208Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier208Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier208Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier208Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier208Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier208Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier208Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier208Path.close()
        context.saveGState()
        bezier208Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 209 Drawing
        let bezier209Path = UIBezierPath()
        bezier209Path.move(to: CGPoint(x: 5.41, y: -14.15))
        bezier209Path.addCurve(to: CGPoint(x: -18.64, y: -14.87), controlPoint1: CGPoint(x: -2.67, y: -14.49), controlPoint2: CGPoint(x: -18.64, y: -14.87))
        bezier209Path.addCurve(to: CGPoint(x: 5.42, y: -15.82), controlPoint1: CGPoint(x: -18.64, y: -14.87), controlPoint2: CGPoint(x: -2.67, y: -15.25))
        bezier209Path.addCurve(to: CGPoint(x: 13.74, y: -17.15), controlPoint1: CGPoint(x: 13.51, y: -16.39), controlPoint2: CGPoint(x: 11.71, y: -17.2))
        bezier209Path.addCurve(to: CGPoint(x: 23.13, y: -15.91), controlPoint1: CGPoint(x: 15.77, y: -17.11), controlPoint2: CGPoint(x: 13.72, y: -16.39))
        bezier209Path.addCurve(to: CGPoint(x: 51.36, y: -15.25), controlPoint1: CGPoint(x: 32.53, y: -15.44), controlPoint2: CGPoint(x: 51.36, y: -15.25))
        bezier209Path.addCurve(to: CGPoint(x: 23.12, y: -14.37), controlPoint1: CGPoint(x: 51.36, y: -15.25), controlPoint2: CGPoint(x: 32.54, y: -14.8))
        bezier209Path.addCurve(to: CGPoint(x: 13.67, y: -13.51), controlPoint1: CGPoint(x: 13.7, y: -13.93), controlPoint2: CGPoint(x: 15.62, y: -13.44))
        bezier209Path.addCurve(to: CGPoint(x: 5.41, y: -14.15), controlPoint1: CGPoint(x: 11.73, y: -13.58), controlPoint2: CGPoint(x: 13.49, y: -13.81))
        bezier209Path.close()
        context.saveGState()
        bezier209Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -15.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -15.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 119
        //// Bezier 210 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -47.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier210Path = UIBezierPath()
        bezier210Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier210Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier210Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier210Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier210Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier210Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier210Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier210Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier210Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier210Path.close()
        context.saveGState()
        bezier210Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 211 Drawing
        let bezier211Path = UIBezierPath()
        bezier211Path.move(to: CGPoint(x: 5.68, y: -14.31))
        bezier211Path.addCurve(to: CGPoint(x: -18.37, y: -15.03), controlPoint1: CGPoint(x: -2.4, y: -14.65), controlPoint2: CGPoint(x: -18.37, y: -15.03))
        bezier211Path.addCurve(to: CGPoint(x: 5.69, y: -15.98), controlPoint1: CGPoint(x: -18.37, y: -15.03), controlPoint2: CGPoint(x: -2.41, y: -15.41))
        bezier211Path.addCurve(to: CGPoint(x: 14.01, y: -17.31), controlPoint1: CGPoint(x: 13.78, y: -16.55), controlPoint2: CGPoint(x: 11.98, y: -17.35))
        bezier211Path.addCurve(to: CGPoint(x: 23.39, y: -16.07), controlPoint1: CGPoint(x: 16.04, y: -17.27), controlPoint2: CGPoint(x: 13.99, y: -16.55))
        bezier211Path.addCurve(to: CGPoint(x: 51.63, y: -15.41), controlPoint1: CGPoint(x: 32.8, y: -15.6), controlPoint2: CGPoint(x: 51.63, y: -15.41))
        bezier211Path.addCurve(to: CGPoint(x: 23.39, y: -14.52), controlPoint1: CGPoint(x: 51.63, y: -15.41), controlPoint2: CGPoint(x: 32.81, y: -14.96))
        bezier211Path.addCurve(to: CGPoint(x: 13.94, y: -13.67), controlPoint1: CGPoint(x: 13.96, y: -14.09), controlPoint2: CGPoint(x: 15.89, y: -13.6))
        bezier211Path.addCurve(to: CGPoint(x: 5.68, y: -14.31), controlPoint1: CGPoint(x: 11.99, y: -13.74), controlPoint2: CGPoint(x: 13.75, y: -13.97))
        bezier211Path.close()
        context.saveGState()
        bezier211Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -15.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -15.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 120
        context.saveGState()
        context.translateBy(x: 16.49, y: 94.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.34, y: 0.34)



        //// Group 121
        //// Bezier 212 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -48.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier212Path = UIBezierPath()
        bezier212Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier212Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier212Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier212Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier212Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier212Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier212Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier212Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier212Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier212Path.close()
        context.saveGState()
        bezier212Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 213 Drawing
        let bezier213Path = UIBezierPath()
        bezier213Path.move(to: CGPoint(x: 5.41, y: -15.15))
        bezier213Path.addCurve(to: CGPoint(x: -18.64, y: -15.87), controlPoint1: CGPoint(x: -2.67, y: -15.49), controlPoint2: CGPoint(x: -18.64, y: -15.87))
        bezier213Path.addCurve(to: CGPoint(x: 5.42, y: -16.82), controlPoint1: CGPoint(x: -18.64, y: -15.87), controlPoint2: CGPoint(x: -2.67, y: -16.25))
        bezier213Path.addCurve(to: CGPoint(x: 13.74, y: -18.15), controlPoint1: CGPoint(x: 13.51, y: -17.39), controlPoint2: CGPoint(x: 11.71, y: -18.2))
        bezier213Path.addCurve(to: CGPoint(x: 23.13, y: -16.91), controlPoint1: CGPoint(x: 15.77, y: -18.11), controlPoint2: CGPoint(x: 13.72, y: -17.39))
        bezier213Path.addCurve(to: CGPoint(x: 51.36, y: -16.25), controlPoint1: CGPoint(x: 32.53, y: -16.44), controlPoint2: CGPoint(x: 51.36, y: -16.25))
        bezier213Path.addCurve(to: CGPoint(x: 23.12, y: -15.37), controlPoint1: CGPoint(x: 51.36, y: -16.25), controlPoint2: CGPoint(x: 32.54, y: -15.8))
        bezier213Path.addCurve(to: CGPoint(x: 13.67, y: -14.51), controlPoint1: CGPoint(x: 13.7, y: -14.93), controlPoint2: CGPoint(x: 15.62, y: -14.44))
        bezier213Path.addCurve(to: CGPoint(x: 5.41, y: -15.15), controlPoint1: CGPoint(x: 11.73, y: -14.58), controlPoint2: CGPoint(x: 13.49, y: -14.81))
        bezier213Path.close()
        context.saveGState()
        bezier213Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -16.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -16.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 122
        //// Bezier 214 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -48.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier214Path = UIBezierPath()
        bezier214Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier214Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier214Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier214Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier214Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier214Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier214Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier214Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier214Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier214Path.close()
        context.saveGState()
        bezier214Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 215 Drawing
        let bezier215Path = UIBezierPath()
        bezier215Path.move(to: CGPoint(x: 5.68, y: -15.31))
        bezier215Path.addCurve(to: CGPoint(x: -18.37, y: -16.03), controlPoint1: CGPoint(x: -2.4, y: -15.65), controlPoint2: CGPoint(x: -18.37, y: -16.03))
        bezier215Path.addCurve(to: CGPoint(x: 5.69, y: -16.98), controlPoint1: CGPoint(x: -18.37, y: -16.03), controlPoint2: CGPoint(x: -2.41, y: -16.41))
        bezier215Path.addCurve(to: CGPoint(x: 14.01, y: -18.31), controlPoint1: CGPoint(x: 13.78, y: -17.55), controlPoint2: CGPoint(x: 11.98, y: -18.35))
        bezier215Path.addCurve(to: CGPoint(x: 23.39, y: -17.07), controlPoint1: CGPoint(x: 16.04, y: -18.27), controlPoint2: CGPoint(x: 13.99, y: -17.55))
        bezier215Path.addCurve(to: CGPoint(x: 51.63, y: -16.41), controlPoint1: CGPoint(x: 32.8, y: -16.6), controlPoint2: CGPoint(x: 51.63, y: -16.41))
        bezier215Path.addCurve(to: CGPoint(x: 23.39, y: -15.52), controlPoint1: CGPoint(x: 51.63, y: -16.41), controlPoint2: CGPoint(x: 32.81, y: -15.96))
        bezier215Path.addCurve(to: CGPoint(x: 13.94, y: -14.67), controlPoint1: CGPoint(x: 13.96, y: -15.09), controlPoint2: CGPoint(x: 15.89, y: -14.6))
        bezier215Path.addCurve(to: CGPoint(x: 5.68, y: -15.31), controlPoint1: CGPoint(x: 11.99, y: -14.74), controlPoint2: CGPoint(x: 13.75, y: -14.97))
        bezier215Path.close()
        context.saveGState()
        bezier215Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -16.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -16.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 123
        context.saveGState()
        context.translateBy(x: 26.49, y: 153.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 124
        //// Bezier 216 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -47.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier216Path = UIBezierPath()
        bezier216Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier216Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier216Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier216Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier216Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier216Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier216Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier216Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier216Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier216Path.close()
        context.saveGState()
        bezier216Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 217 Drawing
        let bezier217Path = UIBezierPath()
        bezier217Path.move(to: CGPoint(x: 5.41, y: -14.15))
        bezier217Path.addCurve(to: CGPoint(x: -18.64, y: -14.87), controlPoint1: CGPoint(x: -2.67, y: -14.49), controlPoint2: CGPoint(x: -18.64, y: -14.87))
        bezier217Path.addCurve(to: CGPoint(x: 5.42, y: -15.82), controlPoint1: CGPoint(x: -18.64, y: -14.87), controlPoint2: CGPoint(x: -2.67, y: -15.25))
        bezier217Path.addCurve(to: CGPoint(x: 13.74, y: -17.15), controlPoint1: CGPoint(x: 13.51, y: -16.39), controlPoint2: CGPoint(x: 11.71, y: -17.2))
        bezier217Path.addCurve(to: CGPoint(x: 23.13, y: -15.91), controlPoint1: CGPoint(x: 15.77, y: -17.11), controlPoint2: CGPoint(x: 13.72, y: -16.39))
        bezier217Path.addCurve(to: CGPoint(x: 51.36, y: -15.25), controlPoint1: CGPoint(x: 32.53, y: -15.44), controlPoint2: CGPoint(x: 51.36, y: -15.25))
        bezier217Path.addCurve(to: CGPoint(x: 23.12, y: -14.37), controlPoint1: CGPoint(x: 51.36, y: -15.25), controlPoint2: CGPoint(x: 32.54, y: -14.8))
        bezier217Path.addCurve(to: CGPoint(x: 13.67, y: -13.51), controlPoint1: CGPoint(x: 13.7, y: -13.93), controlPoint2: CGPoint(x: 15.62, y: -13.44))
        bezier217Path.addCurve(to: CGPoint(x: 5.41, y: -14.15), controlPoint1: CGPoint(x: 11.73, y: -13.58), controlPoint2: CGPoint(x: 13.49, y: -13.81))
        bezier217Path.close()
        context.saveGState()
        bezier217Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -15.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -15.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 125
        //// Bezier 218 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -47.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier218Path = UIBezierPath()
        bezier218Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier218Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier218Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier218Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier218Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier218Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier218Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier218Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier218Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier218Path.close()
        context.saveGState()
        bezier218Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 219 Drawing
        let bezier219Path = UIBezierPath()
        bezier219Path.move(to: CGPoint(x: 5.68, y: -14.31))
        bezier219Path.addCurve(to: CGPoint(x: -18.37, y: -15.03), controlPoint1: CGPoint(x: -2.4, y: -14.65), controlPoint2: CGPoint(x: -18.37, y: -15.03))
        bezier219Path.addCurve(to: CGPoint(x: 5.69, y: -15.98), controlPoint1: CGPoint(x: -18.37, y: -15.03), controlPoint2: CGPoint(x: -2.41, y: -15.41))
        bezier219Path.addCurve(to: CGPoint(x: 14.01, y: -17.31), controlPoint1: CGPoint(x: 13.78, y: -16.55), controlPoint2: CGPoint(x: 11.98, y: -17.35))
        bezier219Path.addCurve(to: CGPoint(x: 23.39, y: -16.07), controlPoint1: CGPoint(x: 16.04, y: -17.27), controlPoint2: CGPoint(x: 13.99, y: -16.55))
        bezier219Path.addCurve(to: CGPoint(x: 51.63, y: -15.41), controlPoint1: CGPoint(x: 32.8, y: -15.6), controlPoint2: CGPoint(x: 51.63, y: -15.41))
        bezier219Path.addCurve(to: CGPoint(x: 23.39, y: -14.52), controlPoint1: CGPoint(x: 51.63, y: -15.41), controlPoint2: CGPoint(x: 32.81, y: -14.96))
        bezier219Path.addCurve(to: CGPoint(x: 13.94, y: -13.67), controlPoint1: CGPoint(x: 13.96, y: -14.09), controlPoint2: CGPoint(x: 15.89, y: -13.6))
        bezier219Path.addCurve(to: CGPoint(x: 5.68, y: -14.31), controlPoint1: CGPoint(x: 11.99, y: -13.74), controlPoint2: CGPoint(x: 13.75, y: -13.97))
        bezier219Path.close()
        context.saveGState()
        bezier219Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -15.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -15.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 126
        context.saveGState()
        context.translateBy(x: 110.49, y: 160.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Group 127
        //// Bezier 220 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -36.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier220Path = UIBezierPath()
        bezier220Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier220Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier220Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier220Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier220Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier220Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier220Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier220Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier220Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier220Path.close()
        context.saveGState()
        bezier220Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 221 Drawing
        let bezier221Path = UIBezierPath()
        bezier221Path.move(to: CGPoint(x: 5.41, y: -3.15))
        bezier221Path.addCurve(to: CGPoint(x: -18.64, y: -3.87), controlPoint1: CGPoint(x: -2.67, y: -3.49), controlPoint2: CGPoint(x: -18.64, y: -3.87))
        bezier221Path.addCurve(to: CGPoint(x: 5.42, y: -4.82), controlPoint1: CGPoint(x: -18.64, y: -3.87), controlPoint2: CGPoint(x: -2.67, y: -4.25))
        bezier221Path.addCurve(to: CGPoint(x: 13.74, y: -6.15), controlPoint1: CGPoint(x: 13.51, y: -5.39), controlPoint2: CGPoint(x: 11.71, y: -6.2))
        bezier221Path.addCurve(to: CGPoint(x: 23.13, y: -4.91), controlPoint1: CGPoint(x: 15.77, y: -6.11), controlPoint2: CGPoint(x: 13.72, y: -5.39))
        bezier221Path.addCurve(to: CGPoint(x: 51.36, y: -4.25), controlPoint1: CGPoint(x: 32.53, y: -4.44), controlPoint2: CGPoint(x: 51.36, y: -4.25))
        bezier221Path.addCurve(to: CGPoint(x: 23.12, y: -3.37), controlPoint1: CGPoint(x: 51.36, y: -4.25), controlPoint2: CGPoint(x: 32.54, y: -3.8))
        bezier221Path.addCurve(to: CGPoint(x: 13.67, y: -2.51), controlPoint1: CGPoint(x: 13.7, y: -2.93), controlPoint2: CGPoint(x: 15.62, y: -2.44))
        bezier221Path.addCurve(to: CGPoint(x: 5.41, y: -3.15), controlPoint1: CGPoint(x: 11.73, y: -2.58), controlPoint2: CGPoint(x: 13.49, y: -2.81))
        bezier221Path.close()
        context.saveGState()
        bezier221Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -4.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -4.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 128
        //// Bezier 222 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -36.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier222Path = UIBezierPath()
        bezier222Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier222Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier222Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier222Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier222Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier222Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier222Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier222Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier222Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier222Path.close()
        context.saveGState()
        bezier222Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 223 Drawing
        let bezier223Path = UIBezierPath()
        bezier223Path.move(to: CGPoint(x: 5.68, y: -3.31))
        bezier223Path.addCurve(to: CGPoint(x: -18.37, y: -4.03), controlPoint1: CGPoint(x: -2.4, y: -3.65), controlPoint2: CGPoint(x: -18.37, y: -4.03))
        bezier223Path.addCurve(to: CGPoint(x: 5.69, y: -4.98), controlPoint1: CGPoint(x: -18.37, y: -4.03), controlPoint2: CGPoint(x: -2.41, y: -4.41))
        bezier223Path.addCurve(to: CGPoint(x: 14.01, y: -6.31), controlPoint1: CGPoint(x: 13.78, y: -5.55), controlPoint2: CGPoint(x: 11.98, y: -6.35))
        bezier223Path.addCurve(to: CGPoint(x: 23.39, y: -5.07), controlPoint1: CGPoint(x: 16.04, y: -6.27), controlPoint2: CGPoint(x: 13.99, y: -5.55))
        bezier223Path.addCurve(to: CGPoint(x: 51.63, y: -4.41), controlPoint1: CGPoint(x: 32.8, y: -4.6), controlPoint2: CGPoint(x: 51.63, y: -4.41))
        bezier223Path.addCurve(to: CGPoint(x: 23.39, y: -3.52), controlPoint1: CGPoint(x: 51.63, y: -4.41), controlPoint2: CGPoint(x: 32.81, y: -3.96))
        bezier223Path.addCurve(to: CGPoint(x: 13.94, y: -2.67), controlPoint1: CGPoint(x: 13.96, y: -3.09), controlPoint2: CGPoint(x: 15.89, y: -2.6))
        bezier223Path.addCurve(to: CGPoint(x: 5.68, y: -3.31), controlPoint1: CGPoint(x: 11.99, y: -2.74), controlPoint2: CGPoint(x: 13.75, y: -2.97))
        bezier223Path.close()
        context.saveGState()
        bezier223Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -4.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -4.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 129
        context.saveGState()
        context.translateBy(x: 163.49, y: 138.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.2, y: 0.2)



        //// Group 130
        //// Bezier 224 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -39.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier224Path = UIBezierPath()
        bezier224Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier224Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier224Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier224Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier224Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier224Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier224Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier224Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier224Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier224Path.close()
        context.saveGState()
        bezier224Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 225 Drawing
        let bezier225Path = UIBezierPath()
        bezier225Path.move(to: CGPoint(x: 5.41, y: -6.15))
        bezier225Path.addCurve(to: CGPoint(x: -18.64, y: -6.87), controlPoint1: CGPoint(x: -2.67, y: -6.49), controlPoint2: CGPoint(x: -18.64, y: -6.87))
        bezier225Path.addCurve(to: CGPoint(x: 5.42, y: -7.82), controlPoint1: CGPoint(x: -18.64, y: -6.87), controlPoint2: CGPoint(x: -2.67, y: -7.25))
        bezier225Path.addCurve(to: CGPoint(x: 13.74, y: -9.15), controlPoint1: CGPoint(x: 13.51, y: -8.39), controlPoint2: CGPoint(x: 11.71, y: -9.2))
        bezier225Path.addCurve(to: CGPoint(x: 23.13, y: -7.91), controlPoint1: CGPoint(x: 15.77, y: -9.11), controlPoint2: CGPoint(x: 13.72, y: -8.39))
        bezier225Path.addCurve(to: CGPoint(x: 51.36, y: -7.25), controlPoint1: CGPoint(x: 32.53, y: -7.44), controlPoint2: CGPoint(x: 51.36, y: -7.25))
        bezier225Path.addCurve(to: CGPoint(x: 23.12, y: -6.37), controlPoint1: CGPoint(x: 51.36, y: -7.25), controlPoint2: CGPoint(x: 32.54, y: -6.8))
        bezier225Path.addCurve(to: CGPoint(x: 13.67, y: -5.51), controlPoint1: CGPoint(x: 13.7, y: -5.93), controlPoint2: CGPoint(x: 15.62, y: -5.44))
        bezier225Path.addCurve(to: CGPoint(x: 5.41, y: -6.15), controlPoint1: CGPoint(x: 11.73, y: -5.58), controlPoint2: CGPoint(x: 13.49, y: -5.81))
        bezier225Path.close()
        context.saveGState()
        bezier225Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -7.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -7.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 131
        //// Bezier 226 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -39.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier226Path = UIBezierPath()
        bezier226Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier226Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier226Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier226Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier226Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier226Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier226Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier226Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier226Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier226Path.close()
        context.saveGState()
        bezier226Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 227 Drawing
        let bezier227Path = UIBezierPath()
        bezier227Path.move(to: CGPoint(x: 5.68, y: -6.31))
        bezier227Path.addCurve(to: CGPoint(x: -18.37, y: -7.03), controlPoint1: CGPoint(x: -2.4, y: -6.65), controlPoint2: CGPoint(x: -18.37, y: -7.03))
        bezier227Path.addCurve(to: CGPoint(x: 5.69, y: -7.98), controlPoint1: CGPoint(x: -18.37, y: -7.03), controlPoint2: CGPoint(x: -2.41, y: -7.41))
        bezier227Path.addCurve(to: CGPoint(x: 14.01, y: -9.31), controlPoint1: CGPoint(x: 13.78, y: -8.55), controlPoint2: CGPoint(x: 11.98, y: -9.35))
        bezier227Path.addCurve(to: CGPoint(x: 23.39, y: -8.07), controlPoint1: CGPoint(x: 16.04, y: -9.27), controlPoint2: CGPoint(x: 13.99, y: -8.55))
        bezier227Path.addCurve(to: CGPoint(x: 51.63, y: -7.41), controlPoint1: CGPoint(x: 32.8, y: -7.6), controlPoint2: CGPoint(x: 51.63, y: -7.41))
        bezier227Path.addCurve(to: CGPoint(x: 23.39, y: -6.52), controlPoint1: CGPoint(x: 51.63, y: -7.41), controlPoint2: CGPoint(x: 32.81, y: -6.96))
        bezier227Path.addCurve(to: CGPoint(x: 13.94, y: -5.67), controlPoint1: CGPoint(x: 13.96, y: -6.09), controlPoint2: CGPoint(x: 15.89, y: -5.6))
        bezier227Path.addCurve(to: CGPoint(x: 5.68, y: -6.31), controlPoint1: CGPoint(x: 11.99, y: -5.74), controlPoint2: CGPoint(x: 13.75, y: -5.97))
        bezier227Path.close()
        context.saveGState()
        bezier227Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -7.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -7.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 132
        context.saveGState()
        context.translateBy(x: 251.49, y: 152.41)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Group 133
        //// Bezier 228 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -35.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier228Path = UIBezierPath()
        bezier228Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier228Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier228Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier228Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier228Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier228Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier228Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier228Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier228Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier228Path.close()
        context.saveGState()
        bezier228Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 229 Drawing
        let bezier229Path = UIBezierPath()
        bezier229Path.move(to: CGPoint(x: 5.41, y: -2.15))
        bezier229Path.addCurve(to: CGPoint(x: -18.64, y: -2.87), controlPoint1: CGPoint(x: -2.67, y: -2.49), controlPoint2: CGPoint(x: -18.64, y: -2.87))
        bezier229Path.addCurve(to: CGPoint(x: 5.42, y: -3.82), controlPoint1: CGPoint(x: -18.64, y: -2.87), controlPoint2: CGPoint(x: -2.67, y: -3.25))
        bezier229Path.addCurve(to: CGPoint(x: 13.74, y: -5.15), controlPoint1: CGPoint(x: 13.51, y: -4.39), controlPoint2: CGPoint(x: 11.71, y: -5.2))
        bezier229Path.addCurve(to: CGPoint(x: 23.13, y: -3.91), controlPoint1: CGPoint(x: 15.77, y: -5.11), controlPoint2: CGPoint(x: 13.72, y: -4.39))
        bezier229Path.addCurve(to: CGPoint(x: 51.36, y: -3.25), controlPoint1: CGPoint(x: 32.53, y: -3.44), controlPoint2: CGPoint(x: 51.36, y: -3.25))
        bezier229Path.addCurve(to: CGPoint(x: 23.12, y: -2.37), controlPoint1: CGPoint(x: 51.36, y: -3.25), controlPoint2: CGPoint(x: 32.54, y: -2.8))
        bezier229Path.addCurve(to: CGPoint(x: 13.67, y: -1.51), controlPoint1: CGPoint(x: 13.7, y: -1.93), controlPoint2: CGPoint(x: 15.62, y: -1.44))
        bezier229Path.addCurve(to: CGPoint(x: 5.41, y: -2.15), controlPoint1: CGPoint(x: 11.73, y: -1.58), controlPoint2: CGPoint(x: 13.49, y: -1.81))
        bezier229Path.close()
        context.saveGState()
        bezier229Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -3.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -3.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 134
        //// Bezier 230 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -35.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier230Path = UIBezierPath()
        bezier230Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier230Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier230Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier230Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier230Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier230Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier230Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier230Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier230Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier230Path.close()
        context.saveGState()
        bezier230Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 231 Drawing
        let bezier231Path = UIBezierPath()
        bezier231Path.move(to: CGPoint(x: 5.68, y: -2.31))
        bezier231Path.addCurve(to: CGPoint(x: -18.37, y: -3.03), controlPoint1: CGPoint(x: -2.4, y: -2.65), controlPoint2: CGPoint(x: -18.37, y: -3.03))
        bezier231Path.addCurve(to: CGPoint(x: 5.69, y: -3.98), controlPoint1: CGPoint(x: -18.37, y: -3.03), controlPoint2: CGPoint(x: -2.41, y: -3.41))
        bezier231Path.addCurve(to: CGPoint(x: 14.01, y: -5.31), controlPoint1: CGPoint(x: 13.78, y: -4.55), controlPoint2: CGPoint(x: 11.98, y: -5.35))
        bezier231Path.addCurve(to: CGPoint(x: 23.39, y: -4.07), controlPoint1: CGPoint(x: 16.04, y: -5.27), controlPoint2: CGPoint(x: 13.99, y: -4.55))
        bezier231Path.addCurve(to: CGPoint(x: 51.63, y: -3.41), controlPoint1: CGPoint(x: 32.8, y: -3.6), controlPoint2: CGPoint(x: 51.63, y: -3.41))
        bezier231Path.addCurve(to: CGPoint(x: 23.39, y: -2.52), controlPoint1: CGPoint(x: 51.63, y: -3.41), controlPoint2: CGPoint(x: 32.81, y: -2.96))
        bezier231Path.addCurve(to: CGPoint(x: 13.94, y: -1.67), controlPoint1: CGPoint(x: 13.96, y: -2.09), controlPoint2: CGPoint(x: 15.89, y: -1.6))
        bezier231Path.addCurve(to: CGPoint(x: 5.68, y: -2.31), controlPoint1: CGPoint(x: 11.99, y: -1.74), controlPoint2: CGPoint(x: 13.75, y: -1.97))
        bezier231Path.close()
        context.saveGState()
        bezier231Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -3.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -3.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()


        //// Group 141
        context.saveGState()
        context.translateBy(x: 224.55, y: 190.34)
        context.rotate(by: -90 * CGFloat.pi/180)
        context.scaleBy(x: 0.22, y: 0.22)



        //// Group 142
        //// Bezier 240 Drawing
        context.saveGState()
        context.translateBy(x: 16.26, y: -37.36)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier240Path = UIBezierPath()
        bezier240Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier240Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier240Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier240Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier240Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier240Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier240Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier240Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier240Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier240Path.close()
        context.saveGState()
        bezier240Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 241 Drawing
        let bezier241Path = UIBezierPath()
        bezier241Path.move(to: CGPoint(x: 5.41, y: -4.15))
        bezier241Path.addCurve(to: CGPoint(x: -18.64, y: -4.87), controlPoint1: CGPoint(x: -2.67, y: -4.49), controlPoint2: CGPoint(x: -18.64, y: -4.87))
        bezier241Path.addCurve(to: CGPoint(x: 5.42, y: -5.82), controlPoint1: CGPoint(x: -18.64, y: -4.87), controlPoint2: CGPoint(x: -2.67, y: -5.25))
        bezier241Path.addCurve(to: CGPoint(x: 13.74, y: -7.15), controlPoint1: CGPoint(x: 13.51, y: -6.39), controlPoint2: CGPoint(x: 11.71, y: -7.2))
        bezier241Path.addCurve(to: CGPoint(x: 23.13, y: -5.91), controlPoint1: CGPoint(x: 15.77, y: -7.11), controlPoint2: CGPoint(x: 13.72, y: -6.39))
        bezier241Path.addCurve(to: CGPoint(x: 51.36, y: -5.25), controlPoint1: CGPoint(x: 32.53, y: -5.44), controlPoint2: CGPoint(x: 51.36, y: -5.25))
        bezier241Path.addCurve(to: CGPoint(x: 23.12, y: -4.37), controlPoint1: CGPoint(x: 51.36, y: -5.25), controlPoint2: CGPoint(x: 32.54, y: -4.8))
        bezier241Path.addCurve(to: CGPoint(x: 13.67, y: -3.51), controlPoint1: CGPoint(x: 13.7, y: -3.93), controlPoint2: CGPoint(x: 15.62, y: -3.44))
        bezier241Path.addCurve(to: CGPoint(x: 5.41, y: -4.15), controlPoint1: CGPoint(x: 11.73, y: -3.58), controlPoint2: CGPoint(x: 13.49, y: -3.81))
        bezier241Path.close()
        context.saveGState()
        bezier241Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.52, y: -5.19), startRadius: 0.2,
            endCenter: CGPoint(x: 14.43, y: -5.53), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()




        //// Group 143
        //// Bezier 242 Drawing
        context.saveGState()
        context.translateBy(x: 16.53, y: -37.51)
        context.rotate(by: 90 * CGFloat.pi/180)

        let bezier242Path = UIBezierPath()
        bezier242Path.move(to: CGPoint(x: 24.05, y: 3))
        bezier242Path.addCurve(to: CGPoint(x: 0, y: 2.29), controlPoint1: CGPoint(x: 15.97, y: 2.66), controlPoint2: CGPoint(x: 0, y: 2.29))
        bezier242Path.addCurve(to: CGPoint(x: 24.06, y: 1.33), controlPoint1: CGPoint(x: 0, y: 2.29), controlPoint2: CGPoint(x: 15.96, y: 1.9))
        bezier242Path.addCurve(to: CGPoint(x: 32.38, y: 0), controlPoint1: CGPoint(x: 32.15, y: 0.76), controlPoint2: CGPoint(x: 30.35, y: -0.04))
        bezier242Path.addCurve(to: CGPoint(x: 41.77, y: 1.24), controlPoint1: CGPoint(x: 34.41, y: 0.04), controlPoint2: CGPoint(x: 32.36, y: 0.76))
        bezier242Path.addCurve(to: CGPoint(x: 70, y: 1.9), controlPoint1: CGPoint(x: 51.17, y: 1.71), controlPoint2: CGPoint(x: 70, y: 1.9))
        bezier242Path.addCurve(to: CGPoint(x: 41.76, y: 2.79), controlPoint1: CGPoint(x: 70, y: 1.9), controlPoint2: CGPoint(x: 51.18, y: 2.35))
        bezier242Path.addCurve(to: CGPoint(x: 32.31, y: 3.64), controlPoint1: CGPoint(x: 32.33, y: 3.22), controlPoint2: CGPoint(x: 34.26, y: 3.71))
        bezier242Path.addCurve(to: CGPoint(x: 24.05, y: 3), controlPoint1: CGPoint(x: 30.36, y: 3.57), controlPoint2: CGPoint(x: 32.12, y: 3.34))
        bezier242Path.close()
        context.saveGState()
        bezier242Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 32.12, y: 1.92), startRadius: 0.2,
            endCenter: CGPoint(x: 33.07, y: 1.63), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()

        context.restoreGState()


        //// Bezier 243 Drawing
        let bezier243Path = UIBezierPath()
        bezier243Path.move(to: CGPoint(x: 5.68, y: -4.31))
        bezier243Path.addCurve(to: CGPoint(x: -18.37, y: -5.03), controlPoint1: CGPoint(x: -2.4, y: -4.65), controlPoint2: CGPoint(x: -18.37, y: -5.03))
        bezier243Path.addCurve(to: CGPoint(x: 5.69, y: -5.98), controlPoint1: CGPoint(x: -18.37, y: -5.03), controlPoint2: CGPoint(x: -2.41, y: -5.41))
        bezier243Path.addCurve(to: CGPoint(x: 14.01, y: -7.31), controlPoint1: CGPoint(x: 13.78, y: -6.55), controlPoint2: CGPoint(x: 11.98, y: -7.35))
        bezier243Path.addCurve(to: CGPoint(x: 23.39, y: -6.07), controlPoint1: CGPoint(x: 16.04, y: -7.27), controlPoint2: CGPoint(x: 13.99, y: -6.55))
        bezier243Path.addCurve(to: CGPoint(x: 51.63, y: -5.41), controlPoint1: CGPoint(x: 32.8, y: -5.6), controlPoint2: CGPoint(x: 51.63, y: -5.41))
        bezier243Path.addCurve(to: CGPoint(x: 23.39, y: -4.52), controlPoint1: CGPoint(x: 51.63, y: -5.41), controlPoint2: CGPoint(x: 32.81, y: -4.96))
        bezier243Path.addCurve(to: CGPoint(x: 13.94, y: -3.67), controlPoint1: CGPoint(x: 13.96, y: -4.09), controlPoint2: CGPoint(x: 15.89, y: -3.6))
        bezier243Path.addCurve(to: CGPoint(x: 5.68, y: -4.31), controlPoint1: CGPoint(x: 11.99, y: -3.74), controlPoint2: CGPoint(x: 13.75, y: -3.97))
        bezier243Path.close()
        context.saveGState()
        bezier243Path.addClip()
        context.drawRadialGradient(starGradient,
            startCenter: CGPoint(x: 14.79, y: -5.35), startRadius: 0.2,
            endCenter: CGPoint(x: 14.7, y: -5.69), endRadius: 61.27,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()





        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawYellowButton(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 41, height: 41), resizing: ResizingBehavior = .aspectFit, fraction: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 41, height: 41), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 41, y: resizedFrame.height / 41)


        //// Color Declarations
        let markPGradientColor = UIColor(red: 1.000, green: 0.594, blue: 0.000, alpha: 1.000)
        let markPGradientColor3 = UIColor(red: 0.345, green: 0.213, blue: 0.019, alpha: 1.000)

        //// Variable Declarations
        let circle1: CGFloat = abs(sin((fraction - 0.224) * 10 / CGFloat.pi * 180 * CGFloat.pi/180))
        let circle2: CGFloat = abs(sin((fraction - 0.224) * 10 / CGFloat.pi * 180 * CGFloat.pi/180))

        //// Oval 4 Drawing
        context.saveGState()
        context.translateBy(x: 20.34, y: 20.51)
        context.scaleBy(x: circle2, y: circle2)

        let oval4Path = UIBezierPath(ovalIn: CGRect(x: -20.09, y: -19.73, width: 40.1, height: 40))
        markPGradientColor3.setFill()
        oval4Path.fill()

        context.restoreGState()


        //// Oval 5 Drawing
        let oval5Path = UIBezierPath(ovalIn: CGRect(x: 3.99, y: 4.49, width: 32.8, height: 32.7))
        CommonKit.markPGradientColor5.setFill()
        oval5Path.fill()


        //// Oval 6 Drawing
        context.saveGState()
        context.translateBy(x: 20.35, y: 20.98)
        context.scaleBy(x: circle1, y: circle1)

        let oval6Path = UIBezierPath(ovalIn: CGRect(x: -12.77, y: -12.87, width: 25.5, height: 25.5))
        markPGradientColor.setFill()
        oval6Path.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawHoloCircledButtonView(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 64, height: 64), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 64, height: 64), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 64, y: resizedFrame.height / 64)


        //// Color Declarations
        let hintRecangleColor = UIColor(red: 0.176, green: 0.333, blue: 0.698, alpha: 1.000)

        //// Button Oval Drawing
        context.saveGState()
        context.setAlpha(0.8)

        let buttonOvalPath = UIBezierPath(ovalIn: CGRect(x: 1.91, y: 2, width: 60, height: 60))
        hintRecangleColor.setFill()
        buttonOvalPath.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawNextScreen_58(frame: CGRect = CGRect(x: 0, y: 0, width: 375, height: 812), nextScreenMove: CGFloat = 1, nextScreenOpacity: CGFloat = 0, nextScreenTitle: String = "Round 1") {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let color4 = UIColor(red: 0.000, green: 0.096, blue: 0.517, alpha: 1.000)
        let nextRoundGradientColor = UIColor(red: 0.083, green: 0.184, blue: 0.678, alpha: 1.000)
        let nextRoundGradientColor2 = UIColor(red: 0.000, green: 0.001, blue: 0.087, alpha: 1.000)
        let color2 = UIColor(red: 0.000, green: 0.314, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let nextRoundGradient = CGGradient(colorsSpace: nil, colors: [nextRoundGradientColor.cgColor, nextRoundGradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Variable Declarations
        let nextRoundLeftShow = nextScreenMove <= 1 ? CGPoint(x: -212 + 212 * nextScreenMove, y: -1) : CGPoint(x: -212, y: -1)
        let nextRoundRight = CGPoint(x: 416 * (1 - nextScreenMove) + 147 * nextScreenMove, y: -1)
        let nextRoundRect1: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 1.0 / 24.0 ? 1 - 24 * nextScreenOpacity : 0)
        let nextRoundRect14: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 14.0 / 24.0 ? 1 - 24.0 / 14.0 * nextScreenOpacity : 0)
        let nextRoundRect11: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 11.0 / 24.0 ? 1 - 24.0 / 11.0 * nextScreenOpacity : 0)
        let nextRoundRect4: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 4.0 / 24.0 ? 1 - 24.0 / 4.0 * nextScreenOpacity : 0)
        let nextRoundRect18: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 18.0 / 24.0 ? 1 - 24.0 / 18.0 * nextScreenOpacity : 0)
        let nextRoundRect5: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 5.0 / 24.0 ? 1 - 24.0 / 5.0 * nextScreenOpacity : 0)
        let nextRoundRect10: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 10.0 / 24.0 ? 1 - 24.0 / 10.0 * nextScreenOpacity : 0)
        let nextRoundRect12: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 12.0 / 24.0 ? 1 - 24.0 / 12.0 * nextScreenOpacity : 0)
        let nextRoundRect8: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 8.0 / 24.0 ? 1 - 24.0 / 8.0 * nextScreenOpacity : 0)
        let nextRoundRect13: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 13.0 / 24.0 ? 1 - 24.0 / 13.0 * nextScreenOpacity : 0)
        let nextRoundRect6: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 6.0 / 24.0 ? 1 - 24.0 / 6.0 * nextScreenOpacity : 0)
        let nextRoundRect17: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 17.0 / 24.0 ? 1 - 24.0 / 17.0 * nextScreenOpacity : 0)
        let nextRoundRect15: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 15.0 / 24.0 ? 1 - 24.0 / 15.0 * nextScreenOpacity : 0)


        //// Subframes
        let group: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * -0.00267 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00038 + 0.19) + 0.31, width: fastFloor(frame.width * 1.00256 - 0.46) - fastFloor(frame.width * -0.00267 + 0.5) + 0.96, height: fastFloor(frame.height * 0.99981 - 0.34) - fastFloor(frame.height * 0.00038 + 0.19) + 0.54)


        //// Group
        //// Rectangle 4 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle4Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.85704 - 0.02) + 0.52, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.99998 - 0.02) - fastFloor(group.height * 0.85704 - 0.02)), cornerRadius: 10)
        color4.setFill()
        rectangle4Path.fill()
        UIColor.white.setStroke()
        rectangle4Path.lineWidth = 3
        rectangle4Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 5 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect5)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle5Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33425 + 0.5), y: group.minY + fastFloor(group.height * 0.85705 - 0.03) + 0.53, width: fastFloor(group.width * 0.66585 + 0.5) - fastFloor(group.width * 0.33425 + 0.5), height: fastFloor(group.height * 0.99999 - 0.03) - fastFloor(group.height * 0.85705 - 0.03)), cornerRadius: 10)
        color4.setFill()
        rectangle5Path.fill()
        UIColor.white.setStroke()
        rectangle5Path.lineWidth = 3
        rectangle5Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 6 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle6Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66551 - 0.37) + 0.87, y: group.minY + fastFloor(group.height * 0.85706 - 0.04) + 0.54, width: fastFloor(group.width * 0.99976 - 0.37) - fastFloor(group.width * 0.66551 - 0.37), height: fastFloor(group.height * 1.00000 - 0.04) - fastFloor(group.height * 0.85706 - 0.04)), cornerRadius: 10)
        color4.setFill()
        rectangle6Path.fill()
        UIColor.white.setStroke()
        rectangle6Path.lineWidth = 3
        rectangle6Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 7 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle7Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.71422 - 0.11) + 0.61, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.85716 - 0.11) - fastFloor(group.height * 0.71422 - 0.11)), cornerRadius: 10)
        color4.setFill()
        rectangle7Path.fill()
        UIColor.white.setStroke()
        rectangle7Path.lineWidth = 3
        rectangle7Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 8 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle8Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33445 + 0.43) + 0.07, y: group.minY + fastFloor(group.height * 0.71415 - 0.06) + 0.56, width: fastFloor(group.width * 0.66605 + 0.43) - fastFloor(group.width * 0.33445 + 0.43), height: fastFloor(group.height * 0.85709 - 0.06) - fastFloor(group.height * 0.71415 - 0.06)), cornerRadius: 10)
        color4.setFill()
        rectangle8Path.fill()
        UIColor.white.setStroke()
        rectangle8Path.lineWidth = 3
        rectangle8Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 9 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle9Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66551 - 0.37) + 0.87, y: group.minY + fastFloor(group.height * 0.71417 - 0.08) + 0.58, width: fastFloor(group.width * 0.99976 - 0.37) - fastFloor(group.width * 0.66551 - 0.37), height: fastFloor(group.height * 0.85711 - 0.08) - fastFloor(group.height * 0.71417 - 0.08)), cornerRadius: 10)
        color4.setFill()
        rectangle9Path.fill()
        UIColor.white.setStroke()
        rectangle9Path.lineWidth = 3
        rectangle9Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 10 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle10Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.57127 - 0.11) + 0.61, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.71421 - 0.11) - fastFloor(group.height * 0.57127 - 0.11)), cornerRadius: 10)
        color4.setFill()
        rectangle10Path.fill()
        UIColor.white.setStroke()
        rectangle10Path.lineWidth = 3
        rectangle10Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 11 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle11Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33425 + 0.5), y: group.minY + fastFloor(group.height * 0.57139 - 0.21) + 0.71, width: fastFloor(group.width * 0.66585 + 0.5) - fastFloor(group.width * 0.33425 + 0.5), height: fastFloor(group.height * 0.71433 - 0.21) - fastFloor(group.height * 0.57139 - 0.21)), cornerRadius: 10)
        color4.setFill()
        rectangle11Path.fill()
        UIColor.white.setStroke()
        rectangle11Path.lineWidth = 3
        rectangle11Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 12 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle12Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66564 - 0.42) + 0.92, y: group.minY + fastFloor(group.height * 0.57134 - 0.16) + 0.66, width: fastFloor(group.width * 0.99989 - 0.42) - fastFloor(group.width * 0.66564 - 0.42), height: fastFloor(group.height * 0.71428 - 0.16) - fastFloor(group.height * 0.57134 - 0.16)), cornerRadius: 10)
        color4.setFill()
        rectangle12Path.fill()
        UIColor.white.setStroke()
        rectangle12Path.lineWidth = 3
        rectangle12Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 13 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle13Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.42861 - 0.33) + 0.83, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.57154 - 0.33) - fastFloor(group.height * 0.42861 - 0.33)), cornerRadius: 10)
        color4.setFill()
        rectangle13Path.fill()
        UIColor.white.setStroke()
        rectangle13Path.lineWidth = 3
        rectangle13Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 14 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle14Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33413 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * 0.42861 - 0.33) + 0.83, width: fastFloor(group.width * 0.66573 - 0.46) - fastFloor(group.width * 0.33413 - 0.46), height: fastFloor(group.height * 0.57155 - 0.33) - fastFloor(group.height * 0.42861 - 0.33)), cornerRadius: 10)
        color4.setFill()
        rectangle14Path.fill()
        UIColor.white.setStroke()
        rectangle14Path.lineWidth = 3
        rectangle14Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 15 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect15)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle15Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66565 - 0.42) + 0.92, y: group.minY + fastFloor(group.height * 0.42835 - 0.12) + 0.62, width: fastFloor(group.width * 0.99990 - 0.42) - fastFloor(group.width * 0.66565 - 0.42), height: fastFloor(group.height * 0.57129 - 0.12) - fastFloor(group.height * 0.42835 - 0.12)), cornerRadius: 10)
        color4.setFill()
        rectangle15Path.fill()
        UIColor.white.setStroke()
        rectangle15Path.lineWidth = 3
        rectangle15Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 16 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle16Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.28568 - 0.34) + 0.84, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.42862 - 0.34) - fastFloor(group.height * 0.28568 - 0.34)), cornerRadius: 10)
        color4.setFill()
        rectangle16Path.fill()
        UIColor.white.setStroke()
        rectangle16Path.lineWidth = 3
        rectangle16Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 17 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect17)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle17Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33425 + 0.5), y: group.minY + fastFloor(group.height * 0.28568 - 0.34) + 0.84, width: fastFloor(group.width * 0.66585 + 0.5) - fastFloor(group.width * 0.33425 + 0.5), height: fastFloor(group.height * 0.42862 - 0.34) - fastFloor(group.height * 0.28568 - 0.34)), cornerRadius: 10)
        color4.setFill()
        rectangle17Path.fill()
        UIColor.white.setStroke()
        rectangle17Path.lineWidth = 3
        rectangle17Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 18 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle18Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66575 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * 0.28549 - 0.18) + 0.68, width: fastFloor(group.width * 1.00000 - 0.46) - fastFloor(group.width * 0.66575 - 0.46), height: fastFloor(group.height * 0.42843 - 0.18) - fastFloor(group.height * 0.28549 - 0.18)), cornerRadius: 10)
        color4.setFill()
        rectangle18Path.fill()
        UIColor.white.setStroke()
        rectangle18Path.lineWidth = 3
        rectangle18Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 19 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle19Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.14280 - 0.39) + 0.89, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.28574 - 0.39) - fastFloor(group.height * 0.14280 - 0.39)), cornerRadius: 10)
        color4.setFill()
        rectangle19Path.fill()
        UIColor.white.setStroke()
        rectangle19Path.lineWidth = 3
        rectangle19Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 20 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle20Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33425 + 0.5), y: group.minY + fastFloor(group.height * 0.14280 - 0.38) + 0.88, width: fastFloor(group.width * 0.66585 + 0.5) - fastFloor(group.width * 0.33425 + 0.5), height: fastFloor(group.height * 0.28573 - 0.38) - fastFloor(group.height * 0.14280 - 0.38)), cornerRadius: 10)
        color4.setFill()
        rectangle20Path.fill()
        UIColor.white.setStroke()
        rectangle20Path.lineWidth = 3
        rectangle20Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 21 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle21Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66575 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * 0.14271 - 0.31) + 0.81, width: fastFloor(group.width * 1.00000 - 0.46) - fastFloor(group.width * 0.66575 - 0.46), height: fastFloor(group.height * 0.28565 - 0.31) - fastFloor(group.height * 0.14271 - 0.31)), cornerRadius: 10)
        color4.setFill()
        rectangle21Path.fill()
        UIColor.white.setStroke()
        rectangle21Path.lineWidth = 3
        rectangle21Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectanglePath = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.00009 + 0.43) + 0.07, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.14303 + 0.43) - fastFloor(group.height * 0.00009 + 0.43)), cornerRadius: 10)
        color4.setFill()
        rectanglePath.fill()
        UIColor.white.setStroke()
        rectanglePath.lineWidth = 3
        rectanglePath.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 2 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle2Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33425 + 0.5), y: group.minY + fastFloor(group.height * 0.00009 + 0.43) + 0.07, width: fastFloor(group.width * 0.66585 + 0.5) - fastFloor(group.width * 0.33425 + 0.5), height: fastFloor(group.height * 0.14303 + 0.43) - fastFloor(group.height * 0.00009 + 0.43)), cornerRadius: 10)
        color4.setFill()
        rectangle2Path.fill()
        UIColor.white.setStroke()
        rectangle2Path.lineWidth = 3
        rectangle2Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 3 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle3Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66575 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * 0.00000 + 0.5), width: fastFloor(group.width * 1.00000 - 0.46) - fastFloor(group.width * 0.66575 - 0.46), height: fastFloor(group.height * 0.14294 + 0.5) - fastFloor(group.height * 0.00000 + 0.5)), cornerRadius: 10)
        color4.setFill()
        rectangle3Path.fill()
        UIColor.white.setStroke()
        rectangle3Path.lineWidth = 3
        rectangle3Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Text Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)

        let textRect = CGRect(x: group.minX + fastFloor(group.width * 0.01016 - 0.33) + 0.83, y: group.minY + fastFloor(group.height * 0.45549 - 0.15) + 0.65, width: fastFloor(group.width * 0.99306 + 0.16) - fastFloor(group.width * 0.01016 - 0.33) - 0.48, height: fastFloor(group.height * 0.54792 - 0.15) - fastFloor(group.height * 0.45549 - 0.15) + 0.01)
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .center
        let textFontAttributes = [
            .font: UIFont(name: "Play-Bold", size: 56)!,
            .foregroundColor: UIColor.white,
            .paragraphStyle: textStyle,
        ] as [NSAttributedString.Key: Any]

        let textTextHeight: CGFloat = nextScreenTitle.boundingRect(with: CGSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: textRect)
        nextScreenTitle.draw(in: CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        context.restoreGState()

        context.restoreGState()




        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: (nextRoundLeftShow.x - 8.00463905172), y: nextRoundLeftShow.y)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 2, y: 0))
        bezierPath.addLine(to: CGPoint(x: 214.72, y: 0))
        bezierPath.addLine(to: CGPoint(x: 154.71, y: 0))
        bezierPath.addLine(to: CGPoint(x: 154.71, y: 89.03))
        bezierPath.addLine(to: CGPoint(x: 214.72, y: 89.03))
        bezierPath.addLine(to: CGPoint(x: 214.72, y: 179.88))
        bezierPath.addLine(to: CGPoint(x: 154.71, y: 179.88))
        bezierPath.addLine(to: CGPoint(x: 154.71, y: 270.73))
        bezierPath.addLine(to: CGPoint(x: 214.71, y: 270.73))
        bezierPath.addLine(to: CGPoint(x: 214.72, y: 361.58))
        bezierPath.addLine(to: CGPoint(x: 154.72, y: 361.58))
        bezierPath.addLine(to: CGPoint(x: 154.72, y: 452.42))
        bezierPath.addLine(to: CGPoint(x: 215.66, y: 452.42))
        bezierPath.addLine(to: CGPoint(x: 215.45, y: 543.27))
        bezierPath.addLine(to: CGPoint(x: 154.71, y: 543.27))
        bezierPath.addLine(to: CGPoint(x: 154.71, y: 634.12))
        bezierPath.addLine(to: CGPoint(x: 215.22, y: 634.12))
        bezierPath.addLine(to: CGPoint(x: 214.95, y: 724.97))
        bezierPath.addLine(to: CGPoint(x: 154.71, y: 724.97))
        bezierPath.addLine(to: CGPoint(x: 154.71, y: 814))
        bezierPath.addLine(to: CGPoint(x: 214.72, y: 814))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 814), controlPoint1: CGPoint(x: 214.72, y: 814), controlPoint2: CGPoint(x: 0.08, y: 814))
        bezierPath.addCurve(to: CGPoint(x: 2, y: 0), controlPoint1: CGPoint(x: -0.08, y: 814), controlPoint2: CGPoint(x: 2, y: 0))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        let bezierBounds = bezierPath.cgPath.boundingBoxOfPath
        context.drawLinearGradient(nextRoundGradient,
            start: CGPoint(x: bezierBounds.midX, y: bezierBounds.minY),
            end: CGPoint(x: bezierBounds.midX, y: bezierBounds.maxY),
            options: [])
        context.restoreGState()
        color2.setStroke()
        bezierPath.lineWidth = 3
        bezierPath.stroke()

        context.restoreGState()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: nextRoundRight.x, y: nextRoundRight.y)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 267, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 89.03))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 89.03))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 179.88))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 179.88))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 270.73))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 270.73))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 361.58))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 361.58))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 452.42))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 452.42))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 543.27))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 543.27))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 634.12))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 634.12))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 724.97))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 724.97))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 814))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 814))
        bezier2Path.addCurve(to: CGPoint(x: 267, y: 814), controlPoint1: CGPoint(x: 60, y: 814), controlPoint2: CGPoint(x: 266.92, y: 814))
        bezier2Path.addCurve(to: CGPoint(x: 267, y: 0), controlPoint1: CGPoint(x: 267.08, y: 814), controlPoint2: CGPoint(x: 267, y: 0))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        let bezier2Bounds = bezier2Path.cgPath.boundingBoxOfPath
        context.drawLinearGradient(nextRoundGradient,
            start: CGPoint(x: bezier2Bounds.midX, y: bezier2Bounds.minY),
            end: CGPoint(x: bezier2Bounds.midX, y: bezier2Bounds.maxY),
            options: [])
        context.restoreGState()
        color2.setStroke()
        bezier2Path.lineWidth = 3
        bezier2Path.stroke()

        context.restoreGState()
    }

    @objc dynamic public class func drawNextScreen_55(frame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 736), nextScreenMove: CGFloat = 1, nextScreenOpacity: CGFloat = 0, nextScreenTitle: String = "Round 1") {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let color4 = UIColor(red: 0.000, green: 0.096, blue: 0.517, alpha: 1.000)
        let nextRoundGradientColor = UIColor(red: 0.083, green: 0.184, blue: 0.678, alpha: 1.000)
        let nextRoundGradientColor2 = UIColor(red: 0.000, green: 0.001, blue: 0.087, alpha: 1.000)
        let color2 = UIColor(red: 0.000, green: 0.314, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let nextRoundGradient = CGGradient(colorsSpace: nil, colors: [nextRoundGradientColor.cgColor, nextRoundGradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Variable Declarations
        let nextRoundLeftShow = nextScreenMove <= 1 ? CGPoint(x: -212 + 212 * nextScreenMove, y: -1) : CGPoint(x: -212, y: -1)
        let nextRoundRight = CGPoint(x: 416 * (1 - nextScreenMove) + 147 * nextScreenMove, y: -1)
        let nextRoundRect1: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 1.0 / 24.0 ? 1 - 24 * nextScreenOpacity : 0)
        let nextRoundRect14: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 14.0 / 24.0 ? 1 - 24.0 / 14.0 * nextScreenOpacity : 0)
        let nextRoundRect11: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 11.0 / 24.0 ? 1 - 24.0 / 11.0 * nextScreenOpacity : 0)
        let nextRoundRect4: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 4.0 / 24.0 ? 1 - 24.0 / 4.0 * nextScreenOpacity : 0)
        let nextRoundRect18: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 18.0 / 24.0 ? 1 - 24.0 / 18.0 * nextScreenOpacity : 0)
        let nextRoundRect5: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 5.0 / 24.0 ? 1 - 24.0 / 5.0 * nextScreenOpacity : 0)
        let nextRoundRect10: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 10.0 / 24.0 ? 1 - 24.0 / 10.0 * nextScreenOpacity : 0)
        let nextRoundRect12: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 12.0 / 24.0 ? 1 - 24.0 / 12.0 * nextScreenOpacity : 0)
        let nextRoundRect8: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 8.0 / 24.0 ? 1 - 24.0 / 8.0 * nextScreenOpacity : 0)
        let nextRoundRect13: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 13.0 / 24.0 ? 1 - 24.0 / 13.0 * nextScreenOpacity : 0)
        let nextRoundRect6: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 6.0 / 24.0 ? 1 - 24.0 / 6.0 * nextScreenOpacity : 0)
        let nextRoundRect17: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 17.0 / 24.0 ? 1 - 24.0 / 17.0 * nextScreenOpacity : 0)
        let nextRoundRect15: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 15.0 / 24.0 ? 1 - 24.0 / 15.0 * nextScreenOpacity : 0)


        //// Subframes
        let group: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * -0.00242 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00042 + 0.19) + 0.31, width: fastFloor(frame.width * 1.00232 - 0.46) - fastFloor(frame.width * -0.00242 + 0.5) + 0.96, height: fastFloor(frame.height * 0.99979 - 0.34) - fastFloor(frame.height * 0.00042 + 0.19) + 0.54)


        //// Group
        //// Rectangle 4 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle4Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.85722 - 0.02) + 0.52, width: fastFloor(group.width * 0.33417 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.99997 - 0.02) - fastFloor(group.height * 0.85722 - 0.02)), cornerRadius: 10)
        color4.setFill()
        rectangle4Path.fill()
        UIColor.white.setStroke()
        rectangle4Path.lineWidth = 3
        rectangle4Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 5 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect5)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle5Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33417 + 0.5), y: group.minY + fastFloor(group.height * 0.85723 - 0.03) + 0.53, width: fastFloor(group.width * 0.66593 + 0.5) - fastFloor(group.width * 0.33417 + 0.5), height: fastFloor(group.height * 0.99999 - 0.03) - fastFloor(group.height * 0.85723 - 0.03)), cornerRadius: 10)
        color4.setFill()
        rectangle5Path.fill()
        UIColor.white.setStroke()
        rectangle5Path.lineWidth = 3
        rectangle5Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 6 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle6Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66562 - 0.37) + 0.87, y: group.minY + fastFloor(group.height * 0.85725 - 0.04) + 0.54, width: fastFloor(group.width * 0.99978 - 0.37) - fastFloor(group.width * 0.66562 - 0.37), height: fastFloor(group.height * 1.00000 - 0.04) - fastFloor(group.height * 0.85725 - 0.04)), cornerRadius: 10)
        color4.setFill()
        rectangle6Path.fill()
        UIColor.white.setStroke()
        rectangle6Path.lineWidth = 3
        rectangle6Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 7 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle7Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.71324 - 0.11) + 0.61, width: fastFloor(group.width * 0.33417 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.85735 - 0.11) - fastFloor(group.height * 0.71324 - 0.11)), cornerRadius: 10)
        color4.setFill()
        rectangle7Path.fill()
        UIColor.white.setStroke()
        rectangle7Path.lineWidth = 3
        rectangle7Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 8 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle8Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33434 + 0.43) + 0.07, y: group.minY + fastFloor(group.height * 0.71317 - 0.06) + 0.56, width: fastFloor(group.width * 0.66611 + 0.43) - fastFloor(group.width * 0.33434 + 0.43), height: fastFloor(group.height * 0.85728 - 0.06) - fastFloor(group.height * 0.71317 - 0.06)), cornerRadius: 10)
        color4.setFill()
        rectangle8Path.fill()
        UIColor.white.setStroke()
        rectangle8Path.lineWidth = 3
        rectangle8Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 9 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle9Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66562 - 0.37) + 0.87, y: group.minY + fastFloor(group.height * 0.71319 - 0.08) + 0.58, width: fastFloor(group.width * 0.99978 - 0.37) - fastFloor(group.width * 0.66562 - 0.37), height: fastFloor(group.height * 0.85730 - 0.08) - fastFloor(group.height * 0.71319 - 0.08)), cornerRadius: 10)
        color4.setFill()
        rectangle9Path.fill()
        UIColor.white.setStroke()
        rectangle9Path.lineWidth = 3
        rectangle9Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 10 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle10Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.57048 - 0.11) + 0.61, width: fastFloor(group.width * 0.33417 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.71323 - 0.11) - fastFloor(group.height * 0.57048 - 0.11)), cornerRadius: 10)
        color4.setFill()
        rectangle10Path.fill()
        UIColor.white.setStroke()
        rectangle10Path.lineWidth = 3
        rectangle10Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 11 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle11Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33417 + 0.5), y: group.minY + fastFloor(group.height * 0.57061 - 0.21) + 0.71, width: fastFloor(group.width * 0.66593 + 0.5) - fastFloor(group.width * 0.33417 + 0.5), height: fastFloor(group.height * 0.71336 - 0.21) - fastFloor(group.height * 0.57061 - 0.21)), cornerRadius: 10)
        color4.setFill()
        rectangle11Path.fill()
        UIColor.white.setStroke()
        rectangle11Path.lineWidth = 3
        rectangle11Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 12 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle12Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66574 - 0.42) + 0.92, y: group.minY + fastFloor(group.height * 0.57056 - 0.16) + 0.66, width: fastFloor(group.width * 0.99990 - 0.42) - fastFloor(group.width * 0.66574 - 0.42), height: fastFloor(group.height * 0.71331 - 0.16) - fastFloor(group.height * 0.57056 - 0.16)), cornerRadius: 10)
        color4.setFill()
        rectangle12Path.fill()
        UIColor.white.setStroke()
        rectangle12Path.lineWidth = 3
        rectangle12Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 13 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle13Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.42939 - 0.33) + 0.83, width: fastFloor(group.width * 0.33417 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.57078 - 0.33) - fastFloor(group.height * 0.42939 - 0.33)), cornerRadius: 10)
        color4.setFill()
        rectangle13Path.fill()
        UIColor.white.setStroke()
        rectangle13Path.lineWidth = 3
        rectangle13Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 14 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle14Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33406 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * 0.42939 - 0.33) + 0.83, width: fastFloor(group.width * 0.66582 - 0.46) - fastFloor(group.width * 0.33406 - 0.46), height: fastFloor(group.height * 0.57079 - 0.33) - fastFloor(group.height * 0.42939 - 0.33)), cornerRadius: 10)
        color4.setFill()
        rectangle14Path.fill()
        UIColor.white.setStroke()
        rectangle14Path.lineWidth = 3
        rectangle14Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 15 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect15)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle15Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66574 - 0.42) + 0.92, y: group.minY + fastFloor(group.height * 0.42911 - 0.12) + 0.62, width: fastFloor(group.width * 0.99991 - 0.42) - fastFloor(group.width * 0.66574 - 0.42), height: fastFloor(group.height * 0.57050 - 0.12) - fastFloor(group.height * 0.42911 - 0.12)), cornerRadius: 10)
        color4.setFill()
        rectangle15Path.fill()
        UIColor.white.setStroke()
        rectangle15Path.lineWidth = 3
        rectangle15Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 16 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle16Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.28665 - 0.34) + 0.84, width: fastFloor(group.width * 0.33417 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.42940 - 0.34) - fastFloor(group.height * 0.28665 - 0.34)), cornerRadius: 10)
        color4.setFill()
        rectangle16Path.fill()
        UIColor.white.setStroke()
        rectangle16Path.lineWidth = 3
        rectangle16Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 17 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect17)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle17Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33417 + 0.5), y: group.minY + fastFloor(group.height * 0.28665 - 0.34) + 0.84, width: fastFloor(group.width * 0.66593 + 0.5) - fastFloor(group.width * 0.33417 + 0.5), height: fastFloor(group.height * 0.42941 - 0.34) - fastFloor(group.height * 0.28665 - 0.34)), cornerRadius: 10)
        color4.setFill()
        rectangle17Path.fill()
        UIColor.white.setStroke()
        rectangle17Path.lineWidth = 3
        rectangle17Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 18 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle18Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66583 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * 0.28643 - 0.18) + 0.68, width: fastFloor(group.width * 1.00000 - 0.46) - fastFloor(group.width * 0.66583 - 0.46), height: fastFloor(group.height * 0.42919 - 0.18) - fastFloor(group.height * 0.28643 - 0.18)), cornerRadius: 10)
        color4.setFill()
        rectangle18Path.fill()
        UIColor.white.setStroke()
        rectangle18Path.lineWidth = 3
        rectangle18Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 19 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle19Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.14260 - 0.39) + 0.89, width: fastFloor(group.width * 0.33417 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.28671 - 0.39) - fastFloor(group.height * 0.14260 - 0.39)), cornerRadius: 10)
        color4.setFill()
        rectangle19Path.fill()
        UIColor.white.setStroke()
        rectangle19Path.lineWidth = 3
        rectangle19Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 20 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle20Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33417 + 0.5), y: group.minY + fastFloor(group.height * 0.14259 - 0.38) + 0.88, width: fastFloor(group.width * 0.66593 + 0.5) - fastFloor(group.width * 0.33417 + 0.5), height: fastFloor(group.height * 0.28671 - 0.38) - fastFloor(group.height * 0.14259 - 0.38)), cornerRadius: 10)
        color4.setFill()
        rectangle20Path.fill()
        UIColor.white.setStroke()
        rectangle20Path.lineWidth = 3
        rectangle20Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 21 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle21Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66583 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * 0.14250 - 0.31) + 0.81, width: fastFloor(group.width * 1.00000 - 0.46) - fastFloor(group.width * 0.66583 - 0.46), height: fastFloor(group.height * 0.28661 - 0.31) - fastFloor(group.height * 0.14250 - 0.31)), cornerRadius: 10)
        color4.setFill()
        rectangle21Path.fill()
        UIColor.white.setStroke()
        rectangle21Path.lineWidth = 3
        rectangle21Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectanglePath = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.00010 + 0.43) + 0.07, width: fastFloor(group.width * 0.33417 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.14285 + 0.43) - fastFloor(group.height * 0.00010 + 0.43)), cornerRadius: 10)
        color4.setFill()
        rectanglePath.fill()
        UIColor.white.setStroke()
        rectanglePath.lineWidth = 3
        rectanglePath.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 2 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle2Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33417 + 0.5), y: group.minY + fastFloor(group.height * 0.00010 + 0.43) + 0.07, width: fastFloor(group.width * 0.66593 + 0.5) - fastFloor(group.width * 0.33417 + 0.5), height: fastFloor(group.height * 0.14285 + 0.43) - fastFloor(group.height * 0.00010 + 0.43)), cornerRadius: 10)
        color4.setFill()
        rectangle2Path.fill()
        UIColor.white.setStroke()
        rectangle2Path.lineWidth = 3
        rectangle2Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 3 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle3Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66583 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * -0.00000 - 0.5) + 1, width: fastFloor(group.width * 1.00000 - 0.46) - fastFloor(group.width * 0.66583 - 0.46), height: fastFloor(group.height * 0.14275 - 0.5) - fastFloor(group.height * -0.00000 - 0.5)), cornerRadius: 10)
        color4.setFill()
        rectangle3Path.fill()
        UIColor.white.setStroke()
        rectangle3Path.lineWidth = 3
        rectangle3Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Text 2 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)

        let text2Rect = CGRect(x: group.minX + fastFloor(group.width * 0.04513 - 0.27) + 0.77, y: group.minY + fastFloor(group.height * 0.44952 - 0.14) + 0.64, width: fastFloor(group.width * 0.93588 + 0.21) - fastFloor(group.width * 0.04513 - 0.27) - 0.48, height: fastFloor(group.height * 0.55150 - 0.15) - fastFloor(group.height * 0.44952 - 0.14) + 0.01)
        let text2Style = NSMutableParagraphStyle()
        text2Style.alignment = .center
        let text2FontAttributes = [
            .font: UIFont(name: "Play-Bold", size: 56)!,
            .foregroundColor: UIColor.white,
            .paragraphStyle: text2Style,
        ] as [NSAttributedString.Key: Any]

        let text2TextHeight: CGFloat = nextScreenTitle.boundingRect(with: CGSize(width: text2Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text2FontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: text2Rect)
        nextScreenTitle.draw(in: CGRect(x: text2Rect.minX, y: text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, width: text2Rect.width, height: text2TextHeight), withAttributes: text2FontAttributes)
        context.restoreGState()

        context.restoreGState()




        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: (nextRoundLeftShow.x - 4.00232630741), y: nextRoundLeftShow.y)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 2, y: 0))
        bezierPath.addLine(to: CGPoint(x: 210.72, y: 0))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 0))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 80.94))
        bezierPath.addLine(to: CGPoint(x: 210.72, y: 80.94))
        bezierPath.addLine(to: CGPoint(x: 210.72, y: 163.53))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 163.53))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 246.12))
        bezierPath.addLine(to: CGPoint(x: 210.71, y: 246.12))
        bezierPath.addLine(to: CGPoint(x: 210.72, y: 328.71))
        bezierPath.addLine(to: CGPoint(x: 150.72, y: 328.71))
        bezierPath.addLine(to: CGPoint(x: 150.72, y: 411.29))
        bezierPath.addLine(to: CGPoint(x: 211.66, y: 411.29))
        bezierPath.addLine(to: CGPoint(x: 211.45, y: 493.88))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 493.88))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 576.47))
        bezierPath.addLine(to: CGPoint(x: 211.22, y: 576.47))
        bezierPath.addLine(to: CGPoint(x: 210.95, y: 659.06))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 659.06))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 740))
        bezierPath.addLine(to: CGPoint(x: 210.72, y: 740))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 740), controlPoint1: CGPoint(x: 210.72, y: 740), controlPoint2: CGPoint(x: 0.08, y: 740))
        bezierPath.addCurve(to: CGPoint(x: 2, y: 0), controlPoint1: CGPoint(x: -0.08, y: 740), controlPoint2: CGPoint(x: 2, y: 0))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        let bezierBounds = bezierPath.cgPath.boundingBoxOfPath
        context.drawLinearGradient(nextRoundGradient,
            start: CGPoint(x: bezierBounds.midX, y: bezierBounds.minY),
            end: CGPoint(x: bezierBounds.midX, y: bezierBounds.maxY),
            options: [])
        context.restoreGState()
        color2.setStroke()
        bezierPath.lineWidth = 3
        bezierPath.stroke()

        context.restoreGState()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: nextRoundRight.x, y: nextRoundRight.y)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 267, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 80.94))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 80.94))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 163.53))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 163.53))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 246.12))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 246.12))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 328.71))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 328.71))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 411.29))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 411.29))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 493.88))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 493.88))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 576.47))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 576.47))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 659.06))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 659.06))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 740))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 740))
        bezier2Path.addCurve(to: CGPoint(x: 267, y: 740), controlPoint1: CGPoint(x: 60, y: 740), controlPoint2: CGPoint(x: 266.92, y: 740))
        bezier2Path.addCurve(to: CGPoint(x: 267, y: 0), controlPoint1: CGPoint(x: 267.08, y: 740), controlPoint2: CGPoint(x: 267, y: 0))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        let bezier2Bounds = bezier2Path.cgPath.boundingBoxOfPath
        context.drawLinearGradient(nextRoundGradient,
            start: CGPoint(x: bezier2Bounds.midX, y: bezier2Bounds.minY),
            end: CGPoint(x: bezier2Bounds.midX, y: bezier2Bounds.maxY),
            options: [])
        context.restoreGState()
        color2.setStroke()
        bezier2Path.lineWidth = 3
        bezier2Path.stroke()

        context.restoreGState()
    }

    @objc dynamic public class func drawNextScreen_47(frame: CGRect = CGRect(x: 0, y: 0, width: 375, height: 667), nextScreenMove: CGFloat = 1, nextScreenOpacity: CGFloat = 0, nextScreenTitle: String = "Round 1") {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let color4 = UIColor(red: 0.000, green: 0.096, blue: 0.517, alpha: 1.000)
        let nextRoundGradientColor = UIColor(red: 0.083, green: 0.184, blue: 0.678, alpha: 1.000)
        let nextRoundGradientColor2 = UIColor(red: 0.000, green: 0.001, blue: 0.087, alpha: 1.000)
        let color2 = UIColor(red: 0.000, green: 0.314, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let nextRoundGradient = CGGradient(colorsSpace: nil, colors: [nextRoundGradientColor.cgColor, nextRoundGradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Variable Declarations
        let nextRoundLeftShow = nextScreenMove <= 1 ? CGPoint(x: -212 + 212 * nextScreenMove, y: -1) : CGPoint(x: -212, y: -1)
        let nextRoundRight = CGPoint(x: 416 * (1 - nextScreenMove) + 147 * nextScreenMove, y: -1)
        let nextRoundRect1: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 1.0 / 24.0 ? 1 - 24 * nextScreenOpacity : 0)
        let nextRoundRect14: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 14.0 / 24.0 ? 1 - 24.0 / 14.0 * nextScreenOpacity : 0)
        let nextRoundRect11: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 11.0 / 24.0 ? 1 - 24.0 / 11.0 * nextScreenOpacity : 0)
        let nextRoundRect4: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 4.0 / 24.0 ? 1 - 24.0 / 4.0 * nextScreenOpacity : 0)
        let nextRoundRect18: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 18.0 / 24.0 ? 1 - 24.0 / 18.0 * nextScreenOpacity : 0)
        let nextRoundRect5: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 5.0 / 24.0 ? 1 - 24.0 / 5.0 * nextScreenOpacity : 0)
        let nextRoundRect10: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 10.0 / 24.0 ? 1 - 24.0 / 10.0 * nextScreenOpacity : 0)
        let nextRoundRect12: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 12.0 / 24.0 ? 1 - 24.0 / 12.0 * nextScreenOpacity : 0)
        let nextRoundRect8: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 8.0 / 24.0 ? 1 - 24.0 / 8.0 * nextScreenOpacity : 0)
        let nextRoundRect13: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 13.0 / 24.0 ? 1 - 24.0 / 13.0 * nextScreenOpacity : 0)
        let nextRoundRect6: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 6.0 / 24.0 ? 1 - 24.0 / 6.0 * nextScreenOpacity : 0)
        let nextRoundRect17: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 17.0 / 24.0 ? 1 - 24.0 / 17.0 * nextScreenOpacity : 0)
        let nextRoundRect15: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 15.0 / 24.0 ? 1 - 24.0 / 15.0 * nextScreenOpacity : 0)


        //// Subframes
        let group: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * -0.00267 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00046 + 0.19) + 0.31, width: fastFloor(frame.width * 1.00256 - 0.46) - fastFloor(frame.width * -0.00267 + 0.5) + 0.96, height: fastFloor(frame.height * 0.99976 - 0.34) - fastFloor(frame.height * 0.00046 + 0.19) + 0.54)


        //// Group
        //// Rectangle 4 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle4Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.85744 - 0.02) + 0.52, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.99997 - 0.02) - fastFloor(group.height * 0.85744 - 0.02)), cornerRadius: 10)
        color4.setFill()
        rectangle4Path.fill()
        UIColor.white.setStroke()
        rectangle4Path.lineWidth = 3
        rectangle4Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 5 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect5)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle5Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33425 + 0.5), y: group.minY + fastFloor(group.height * 0.85746 - 0.03) + 0.53, width: fastFloor(group.width * 0.66585 + 0.5) - fastFloor(group.width * 0.33425 + 0.5), height: fastFloor(group.height * 0.99998 - 0.03) - fastFloor(group.height * 0.85746 - 0.03)), cornerRadius: 10)
        color4.setFill()
        rectangle5Path.fill()
        UIColor.white.setStroke()
        rectangle5Path.lineWidth = 3
        rectangle5Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 6 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle6Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66551 - 0.37) + 0.87, y: group.minY + fastFloor(group.height * 0.85747 - 0.04) + 0.54, width: fastFloor(group.width * 0.99976 - 0.37) - fastFloor(group.width * 0.66551 - 0.37), height: fastFloor(group.height * 1.00000 - 0.04) - fastFloor(group.height * 0.85747 - 0.04)), cornerRadius: 10)
        color4.setFill()
        rectangle6Path.fill()
        UIColor.white.setStroke()
        rectangle6Path.lineWidth = 3
        rectangle6Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 7 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle7Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.71356 - 0.11) + 0.61, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.85759 - 0.11) - fastFloor(group.height * 0.71356 - 0.11)), cornerRadius: 10)
        color4.setFill()
        rectangle7Path.fill()
        UIColor.white.setStroke()
        rectangle7Path.lineWidth = 3
        rectangle7Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 8 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle8Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33445 + 0.43) + 0.07, y: group.minY + fastFloor(group.height * 0.71348 - 0.06) + 0.56, width: fastFloor(group.width * 0.66605 + 0.43) - fastFloor(group.width * 0.33445 + 0.43), height: fastFloor(group.height * 0.85751 - 0.06) - fastFloor(group.height * 0.71348 - 0.06)), cornerRadius: 10)
        color4.setFill()
        rectangle8Path.fill()
        UIColor.white.setStroke()
        rectangle8Path.lineWidth = 3
        rectangle8Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 9 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle9Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66551 - 0.37) + 0.87, y: group.minY + fastFloor(group.height * 0.71351 - 0.08) + 0.58, width: fastFloor(group.width * 0.99976 - 0.37) - fastFloor(group.width * 0.66551 - 0.37), height: fastFloor(group.height * 0.85753 - 0.08) - fastFloor(group.height * 0.71351 - 0.08)), cornerRadius: 10)
        color4.setFill()
        rectangle9Path.fill()
        UIColor.white.setStroke()
        rectangle9Path.lineWidth = 3
        rectangle9Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 10 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle10Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.57103 - 0.11) + 0.61, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.71355 - 0.11) - fastFloor(group.height * 0.57103 - 0.11)), cornerRadius: 10)
        color4.setFill()
        rectangle10Path.fill()
        UIColor.white.setStroke()
        rectangle10Path.lineWidth = 3
        rectangle10Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 11 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle11Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33425 + 0.5), y: group.minY + fastFloor(group.height * 0.57117 - 0.21) + 0.71, width: fastFloor(group.width * 0.66585 + 0.5) - fastFloor(group.width * 0.33425 + 0.5), height: fastFloor(group.height * 0.71370 - 0.21) - fastFloor(group.height * 0.57117 - 0.21)), cornerRadius: 10)
        color4.setFill()
        rectangle11Path.fill()
        UIColor.white.setStroke()
        rectangle11Path.lineWidth = 3
        rectangle11Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 12 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle12Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66564 - 0.42) + 0.92, y: group.minY + fastFloor(group.height * 0.57111 - 0.16) + 0.66, width: fastFloor(group.width * 0.99989 - 0.42) - fastFloor(group.width * 0.66564 - 0.42), height: fastFloor(group.height * 0.71364 - 0.16) - fastFloor(group.height * 0.57111 - 0.16)), cornerRadius: 10)
        color4.setFill()
        rectangle12Path.fill()
        UIColor.white.setStroke()
        rectangle12Path.lineWidth = 3
        rectangle12Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 13 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle13Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.42883 - 0.33) + 0.83, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.57136 - 0.33) - fastFloor(group.height * 0.42883 - 0.33)), cornerRadius: 10)
        color4.setFill()
        rectangle13Path.fill()
        UIColor.white.setStroke()
        rectangle13Path.lineWidth = 3
        rectangle13Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 14 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle14Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33413 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * 0.42883 - 0.33) + 0.83, width: fastFloor(group.width * 0.66573 - 0.46) - fastFloor(group.width * 0.33413 - 0.46), height: fastFloor(group.height * 0.57136 - 0.33) - fastFloor(group.height * 0.42883 - 0.33)), cornerRadius: 10)
        color4.setFill()
        rectangle14Path.fill()
        UIColor.white.setStroke()
        rectangle14Path.lineWidth = 3
        rectangle14Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 15 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect15)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle15Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66565 - 0.42) + 0.92, y: group.minY + fastFloor(group.height * 0.42852 - 0.12) + 0.62, width: fastFloor(group.width * 0.99990 - 0.42) - fastFloor(group.width * 0.66565 - 0.42), height: fastFloor(group.height * 0.57105 - 0.12) - fastFloor(group.height * 0.42852 - 0.12)), cornerRadius: 10)
        color4.setFill()
        rectangle15Path.fill()
        UIColor.white.setStroke()
        rectangle15Path.lineWidth = 3
        rectangle15Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 16 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle16Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.28632 - 0.34) + 0.84, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.42885 - 0.34) - fastFloor(group.height * 0.28632 - 0.34)), cornerRadius: 10)
        color4.setFill()
        rectangle16Path.fill()
        UIColor.white.setStroke()
        rectangle16Path.lineWidth = 3
        rectangle16Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 17 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect17)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle17Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33425 + 0.5), y: group.minY + fastFloor(group.height * 0.28632 - 0.34) + 0.84, width: fastFloor(group.width * 0.66585 + 0.5) - fastFloor(group.width * 0.33425 + 0.5), height: fastFloor(group.height * 0.42885 - 0.34) - fastFloor(group.height * 0.28632 - 0.34)), cornerRadius: 10)
        color4.setFill()
        rectangle17Path.fill()
        UIColor.white.setStroke()
        rectangle17Path.lineWidth = 3
        rectangle17Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 18 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle18Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66575 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * 0.28608 - 0.18) + 0.68, width: fastFloor(group.width * 1.00000 - 0.46) - fastFloor(group.width * 0.66575 - 0.46), height: fastFloor(group.height * 0.42861 - 0.18) - fastFloor(group.height * 0.28608 - 0.18)), cornerRadius: 10)
        color4.setFill()
        rectangle18Path.fill()
        UIColor.white.setStroke()
        rectangle18Path.lineWidth = 3
        rectangle18Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 19 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle19Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.14236 - 0.39) + 0.89, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.28639 - 0.39) - fastFloor(group.height * 0.14236 - 0.39)), cornerRadius: 10)
        color4.setFill()
        rectangle19Path.fill()
        UIColor.white.setStroke()
        rectangle19Path.lineWidth = 3
        rectangle19Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 20 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle20Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33425 + 0.5), y: group.minY + fastFloor(group.height * 0.14235 - 0.38) + 0.88, width: fastFloor(group.width * 0.66585 + 0.5) - fastFloor(group.width * 0.33425 + 0.5), height: fastFloor(group.height * 0.28638 - 0.38) - fastFloor(group.height * 0.14235 - 0.38)), cornerRadius: 10)
        color4.setFill()
        rectangle20Path.fill()
        UIColor.white.setStroke()
        rectangle20Path.lineWidth = 3
        rectangle20Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 21 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle21Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66575 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * 0.14225 - 0.31) + 0.81, width: fastFloor(group.width * 1.00000 - 0.46) - fastFloor(group.width * 0.66575 - 0.46), height: fastFloor(group.height * 0.28627 - 0.31) - fastFloor(group.height * 0.14225 - 0.31)), cornerRadius: 10)
        color4.setFill()
        rectangle21Path.fill()
        UIColor.white.setStroke()
        rectangle21Path.lineWidth = 3
        rectangle21Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectanglePath = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.00000 + 0.5), y: group.minY + fastFloor(group.height * 0.00011 + 0.43) + 0.07, width: fastFloor(group.width * 0.33425 + 0.5) - fastFloor(group.width * 0.00000 + 0.5), height: fastFloor(group.height * 0.14264 + 0.43) - fastFloor(group.height * 0.00011 + 0.43)), cornerRadius: 10)
        color4.setFill()
        rectanglePath.fill()
        UIColor.white.setStroke()
        rectanglePath.lineWidth = 3
        rectanglePath.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 2 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle2Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.33425 + 0.5), y: group.minY + fastFloor(group.height * 0.00011 + 0.43) + 0.07, width: fastFloor(group.width * 0.66585 + 0.5) - fastFloor(group.width * 0.33425 + 0.5), height: fastFloor(group.height * 0.14263 + 0.43) - fastFloor(group.height * 0.00011 + 0.43)), cornerRadius: 10)
        color4.setFill()
        rectangle2Path.fill()
        UIColor.white.setStroke()
        rectangle2Path.lineWidth = 3
        rectangle2Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 3 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle3Path = UIBezierPath(roundedRect: CGRect(x: group.minX + fastFloor(group.width * 0.66575 - 0.46) + 0.96, y: group.minY + fastFloor(group.height * 0.00000 + 0.5), width: fastFloor(group.width * 1.00000 - 0.46) - fastFloor(group.width * 0.66575 - 0.46), height: fastFloor(group.height * 0.14253 + 0.5) - fastFloor(group.height * 0.00000 + 0.5)), cornerRadius: 10)
        color4.setFill()
        rectangle3Path.fill()
        UIColor.white.setStroke()
        rectangle3Path.lineWidth = 3
        rectangle3Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Text Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)

        let textRect = CGRect(x: group.minX + fastFloor(group.width * 0.01061 + 0.5), y: group.minY + fastFloor(group.height * 0.44352 - 0.12) + 0.62, width: fastFloor(group.width * 0.99352 - 0.02) - fastFloor(group.width * 0.01061 + 0.5) + 0.52, height: fastFloor(group.height * 0.55606 - 0.13) - fastFloor(group.height * 0.44352 - 0.12) + 0.01)
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .center
        let textFontAttributes = [
            .font: UIFont(name: "Play-Bold", size: 56)!,
            .foregroundColor: UIColor.white,
            .paragraphStyle: textStyle,
        ] as [NSAttributedString.Key: Any]

        let textTextHeight: CGFloat = nextScreenTitle.boundingRect(with: CGSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: textRect)
        nextScreenTitle.draw(in: CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        context.restoreGState()

        context.restoreGState()




        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: (nextRoundLeftShow.x - 4.00231274431), y: nextRoundLeftShow.y)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 0, y: 0))
        bezierPath.addLine(to: CGPoint(x: 210.72, y: 0))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 0))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 73.5))
        bezierPath.addLine(to: CGPoint(x: 210.72, y: 73.5))
        bezierPath.addLine(to: CGPoint(x: 210.72, y: 148.5))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 148.5))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 223.5))
        bezierPath.addLine(to: CGPoint(x: 210.71, y: 223.5))
        bezierPath.addLine(to: CGPoint(x: 210.72, y: 298.5))
        bezierPath.addLine(to: CGPoint(x: 150.72, y: 298.5))
        bezierPath.addLine(to: CGPoint(x: 150.72, y: 373.5))
        bezierPath.addLine(to: CGPoint(x: 211.66, y: 373.5))
        bezierPath.addLine(to: CGPoint(x: 211.45, y: 448.5))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 448.5))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 523.5))
        bezierPath.addLine(to: CGPoint(x: 211.22, y: 523.5))
        bezierPath.addLine(to: CGPoint(x: 210.95, y: 598.5))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 598.5))
        bezierPath.addLine(to: CGPoint(x: 150.71, y: 672))
        bezierPath.addLine(to: CGPoint(x: 210.72, y: 672))
        bezierPath.addCurve(to: CGPoint(x: 2, y: 672), controlPoint1: CGPoint(x: 210.72, y: 672), controlPoint2: CGPoint(x: 2.08, y: 672))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 0), controlPoint1: CGPoint(x: 1.92, y: 672), controlPoint2: CGPoint(x: 0, y: 0))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        let bezierBounds = bezierPath.cgPath.boundingBoxOfPath
        context.drawLinearGradient(nextRoundGradient,
            start: CGPoint(x: bezierBounds.midX, y: bezierBounds.minY),
            end: CGPoint(x: bezierBounds.midX, y: bezierBounds.maxY),
            options: [])
        context.restoreGState()
        color2.setStroke()
        bezierPath.lineWidth = 3
        bezierPath.stroke()

        context.restoreGState()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: (nextRoundRight.x - 0.64453125), y: (nextRoundRight.y + 0.859375))

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 267, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 73.5))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 73.5))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 148.5))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 148.5))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 223.5))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 223.5))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 298.5))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 298.5))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 373.5))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 373.5))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 448.5))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 448.5))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 523.5))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 523.5))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 598.5))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 598.5))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 672))
        bezier2Path.addLine(to: CGPoint(x: 60, y: 672))
        bezier2Path.addCurve(to: CGPoint(x: 267, y: 672), controlPoint1: CGPoint(x: 60, y: 672), controlPoint2: CGPoint(x: 266.92, y: 672))
        bezier2Path.addCurve(to: CGPoint(x: 267, y: 0), controlPoint1: CGPoint(x: 267.08, y: 672), controlPoint2: CGPoint(x: 267, y: 0))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        let bezier2Bounds = bezier2Path.cgPath.boundingBoxOfPath
        context.drawLinearGradient(nextRoundGradient,
            start: CGPoint(x: bezier2Bounds.midX, y: bezier2Bounds.minY),
            end: CGPoint(x: bezier2Bounds.midX, y: bezier2Bounds.maxY),
            options: [])
        context.restoreGState()
        color2.setStroke()
        bezier2Path.lineWidth = 3
        bezier2Path.stroke()

        context.restoreGState()
    }

    @objc dynamic public class func drawNextScreen_65(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 896), resizing: ResizingBehavior = .aspectFit, nextScreenMove: CGFloat = 1, nextScreenOpacity: CGFloat = 0, nextScreenTitle: String = "Round 1") {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 896), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 896)


        //// Color Declarations
        let color4 = UIColor(red: 0.000, green: 0.096, blue: 0.517, alpha: 1.000)
        let nextRoundGradientColor = UIColor(red: 0.083, green: 0.184, blue: 0.678, alpha: 1.000)
        let nextRoundGradientColor2 = UIColor(red: 0.000, green: 0.001, blue: 0.087, alpha: 1.000)
        let color2 = UIColor(red: 0.000, green: 0.314, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let nextRoundGradient = CGGradient(colorsSpace: nil, colors: [nextRoundGradientColor.cgColor, nextRoundGradientColor2.cgColor] as CFArray, locations: [0, 1])!

        //// Variable Declarations
        let nextRoundLeftShow = nextScreenMove <= 1 ? CGPoint(x: -212 + 212 * nextScreenMove, y: -1) : CGPoint(x: -212, y: -1)
        let nextRoundRight = CGPoint(x: 416 * (1 - nextScreenMove) + 147 * nextScreenMove, y: -1)
        let nextRoundRect1: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 1.0 / 24.0 ? 1 - 24 * nextScreenOpacity : 0)
        let nextRoundRect14: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 14.0 / 24.0 ? 1 - 24.0 / 14.0 * nextScreenOpacity : 0)
        let nextRoundRect11: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 11.0 / 24.0 ? 1 - 24.0 / 11.0 * nextScreenOpacity : 0)
        let nextRoundRect4: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 4.0 / 24.0 ? 1 - 24.0 / 4.0 * nextScreenOpacity : 0)
        let nextRoundRect16: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 16.0 / 24.0 ? 1 - 24.0 / 16.0 * nextScreenOpacity : 0)
        let nextRoundRect18: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 18.0 / 24.0 ? 1 - 24.0 / 18.0 * nextScreenOpacity : 0)
        let nextRoundRect5: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 5.0 / 24.0 ? 1 - 24.0 / 5.0 * nextScreenOpacity : 0)
        let nextRoundRect10: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 10.0 / 24.0 ? 1 - 24.0 / 10.0 * nextScreenOpacity : 0)
        let nextRoundRect12: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 12.0 / 24.0 ? 1 - 24.0 / 12.0 * nextScreenOpacity : 0)
        let nextRoundRect8: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 8.0 / 24.0 ? 1 - 24.0 / 8.0 * nextScreenOpacity : 0)
        let nextRoundRect13: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 13.0 / 24.0 ? 1 - 24.0 / 13.0 * nextScreenOpacity : 0)
        let nextRoundRect6: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 6.0 / 24.0 ? 1 - 24.0 / 6.0 * nextScreenOpacity : 0)
        let nextRoundRect15: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 15.0 / 24.0 ? 1 - 24.0 / 15.0 * nextScreenOpacity : 0)

        //// Group
        //// Rectangle 4 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle4Path = UIBezierPath(roundedRect: CGRect(x: -1, y: 767.82, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle4Path.fill()
        UIColor.white.setStroke()
        rectangle4Path.lineWidth = 3
        rectangle4Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 5 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect5)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle5Path = UIBezierPath(roundedRect: CGRect(x: 138, y: 767.83, width: 138, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle5Path.fill()
        UIColor.white.setStroke()
        rectangle5Path.lineWidth = 3
        rectangle5Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 6 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle6Path = UIBezierPath(roundedRect: CGRect(x: 275.87, y: 767.84, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle6Path.fill()
        UIColor.white.setStroke()
        rectangle6Path.lineWidth = 3
        rectangle6Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 7 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle7Path = UIBezierPath(roundedRect: CGRect(x: -1, y: 639.92, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle7Path.fill()
        UIColor.white.setStroke()
        rectangle7Path.lineWidth = 3
        rectangle7Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 8 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle8Path = UIBezierPath(roundedRect: CGRect(x: 138.07, y: 639.87, width: 138, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle8Path.fill()
        UIColor.white.setStroke()
        rectangle8Path.lineWidth = 3
        rectangle8Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 9 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle9Path = UIBezierPath(roundedRect: CGRect(x: 275.87, y: 639.88, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle9Path.fill()
        UIColor.white.setStroke()
        rectangle9Path.lineWidth = 3
        rectangle9Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 10 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle10Path = UIBezierPath(roundedRect: CGRect(x: -1, y: 511.92, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle10Path.fill()
        UIColor.white.setStroke()
        rectangle10Path.lineWidth = 3
        rectangle10Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 11 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle11Path = UIBezierPath(roundedRect: CGRect(x: 138, y: 512.01, width: 138, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle11Path.fill()
        UIColor.white.setStroke()
        rectangle11Path.lineWidth = 3
        rectangle11Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 12 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle12Path = UIBezierPath(roundedRect: CGRect(x: 275.92, y: 511.97, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle12Path.fill()
        UIColor.white.setStroke()
        rectangle12Path.lineWidth = 3
        rectangle12Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 13 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle13Path = UIBezierPath(roundedRect: CGRect(x: -1, y: 384.14, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle13Path.fill()
        UIColor.white.setStroke()
        rectangle13Path.lineWidth = 3
        rectangle13Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 14 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle14Path = UIBezierPath(roundedRect: CGRect(x: 137.96, y: 384.14, width: 138, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle14Path.fill()
        UIColor.white.setStroke()
        rectangle14Path.lineWidth = 3
        rectangle14Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 15 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect15)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle15Path = UIBezierPath(roundedRect: CGRect(x: 275.92, y: 383.93, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle15Path.fill()
        UIColor.white.setStroke()
        rectangle15Path.lineWidth = 3
        rectangle15Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 16 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle16Path = UIBezierPath(roundedRect: CGRect(x: -1, y: 256.15, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle16Path.fill()
        UIColor.white.setStroke()
        rectangle16Path.lineWidth = 3
        rectangle16Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 17 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle17Path = UIBezierPath(roundedRect: CGRect(x: 138, y: 256.15, width: 138, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle17Path.fill()
        UIColor.white.setStroke()
        rectangle17Path.lineWidth = 3
        rectangle17Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 18 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle18Path = UIBezierPath(roundedRect: CGRect(x: 275.96, y: 255.99, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle18Path.fill()
        UIColor.white.setStroke()
        rectangle18Path.lineWidth = 3
        rectangle18Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 19 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle19Path = UIBezierPath(roundedRect: CGRect(x: -1, y: 128.19, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle19Path.fill()
        UIColor.white.setStroke()
        rectangle19Path.lineWidth = 3
        rectangle19Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 20 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle20Path = UIBezierPath(roundedRect: CGRect(x: 138, y: 128.19, width: 138, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle20Path.fill()
        UIColor.white.setStroke()
        rectangle20Path.lineWidth = 3
        rectangle20Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 21 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle21Path = UIBezierPath(roundedRect: CGRect(x: 275.96, y: 128.12, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle21Path.fill()
        UIColor.white.setStroke()
        rectangle21Path.lineWidth = 3
        rectangle21Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectanglePath = UIBezierPath(roundedRect: CGRect(x: -1, y: 0.38, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectanglePath.fill()
        UIColor.white.setStroke()
        rectanglePath.lineWidth = 3
        rectanglePath.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 2 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle2Path = UIBezierPath(roundedRect: CGRect(x: 138, y: 0.38, width: 138, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle2Path.fill()
        UIColor.white.setStroke()
        rectangle2Path.lineWidth = 3
        rectangle2Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 3 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle3Path = UIBezierPath(roundedRect: CGRect(x: 275.96, y: 0.31, width: 139, height: 128), cornerRadius: 10)
        color4.setFill()
        rectangle3Path.fill()
        UIColor.white.setStroke()
        rectangle3Path.lineWidth = 3
        rectangle3Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Text Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)

        let textRect = CGRect(x: 2.09, y: 410, width: 412.82, height: 75.01)
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .center
        let textFontAttributes = [
            .font: UIFont(name: "Play-Bold", size: 56)!,
            .foregroundColor: UIColor.white,
            .paragraphStyle: textStyle,
        ] as [NSAttributedString.Key: Any]

        let textTextHeight: CGFloat = nextScreenTitle.boundingRect(with: CGSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: textRect)
        nextScreenTitle.draw(in: CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        context.restoreGState()

        context.restoreGState()




        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: (nextRoundLeftShow.x - 6.97332102798), y: nextRoundLeftShow.y)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 2, y: 0))
        bezierPath.addLine(to: CGPoint(x: 213.77, y: 0))
        bezierPath.addLine(to: CGPoint(x: 153.77, y: 0))
        bezierPath.addLine(to: CGPoint(x: 153.77, y: 98.44))
        bezierPath.addLine(to: CGPoint(x: 213.77, y: 98.44))
        bezierPath.addLine(to: CGPoint(x: 213.77, y: 198.88))
        bezierPath.addLine(to: CGPoint(x: 153.77, y: 198.88))
        bezierPath.addLine(to: CGPoint(x: 153.77, y: 299.33))
        bezierPath.addLine(to: CGPoint(x: 213.77, y: 299.33))
        bezierPath.addLine(to: CGPoint(x: 213.77, y: 399.78))
        bezierPath.addLine(to: CGPoint(x: 153.77, y: 399.78))
        bezierPath.addLine(to: CGPoint(x: 153.77, y: 500.22))
        bezierPath.addLine(to: CGPoint(x: 214.71, y: 500.22))
        bezierPath.addLine(to: CGPoint(x: 214.5, y: 600.67))
        bezierPath.addLine(to: CGPoint(x: 153.77, y: 600.67))
        bezierPath.addLine(to: CGPoint(x: 153.77, y: 701.12))
        bezierPath.addLine(to: CGPoint(x: 214.27, y: 701.12))
        bezierPath.addLine(to: CGPoint(x: 214.01, y: 801.56))
        bezierPath.addLine(to: CGPoint(x: 153.77, y: 801.56))
        bezierPath.addLine(to: CGPoint(x: 153.77, y: 900))
        bezierPath.addLine(to: CGPoint(x: 213.77, y: 900))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 900), controlPoint1: CGPoint(x: 213.77, y: 900), controlPoint2: CGPoint(x: 0.08, y: 900))
        bezierPath.addCurve(to: CGPoint(x: 2, y: 0), controlPoint1: CGPoint(x: -0.08, y: 900), controlPoint2: CGPoint(x: 2, y: 0))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        let bezierBounds = bezierPath.cgPath.boundingBoxOfPath
        context.drawLinearGradient(nextRoundGradient,
            start: CGPoint(x: bezierBounds.midX, y: bezierBounds.minY),
            end: CGPoint(x: bezierBounds.midX, y: bezierBounds.maxY),
            options: [])
        context.restoreGState()
        color2.setStroke()
        bezierPath.lineWidth = 3
        bezierPath.stroke()

        context.restoreGState()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: nextRoundRight.x, y: nextRoundRight.y)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 270.87, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 60.87, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 0))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 98.44))
        bezier2Path.addLine(to: CGPoint(x: 60.87, y: 98.44))
        bezier2Path.addLine(to: CGPoint(x: 60.87, y: 198.88))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 198.88))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 299.33))
        bezier2Path.addLine(to: CGPoint(x: 60.87, y: 299.33))
        bezier2Path.addLine(to: CGPoint(x: 60.87, y: 399.78))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 399.78))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 500.22))
        bezier2Path.addLine(to: CGPoint(x: 60.87, y: 500.22))
        bezier2Path.addLine(to: CGPoint(x: 60.87, y: 600.67))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 600.67))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 701.12))
        bezier2Path.addLine(to: CGPoint(x: 60.87, y: 701.12))
        bezier2Path.addLine(to: CGPoint(x: 60.87, y: 801.56))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 801.56))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 900))
        bezier2Path.addLine(to: CGPoint(x: 60.87, y: 900))
        bezier2Path.addCurve(to: CGPoint(x: 270.87, y: 900), controlPoint1: CGPoint(x: 60.87, y: 900), controlPoint2: CGPoint(x: 270.78, y: 900))
        bezier2Path.addCurve(to: CGPoint(x: 270.87, y: 0), controlPoint1: CGPoint(x: 270.95, y: 900), controlPoint2: CGPoint(x: 270.87, y: 0))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        let bezier2Bounds = bezier2Path.cgPath.boundingBoxOfPath
        context.drawLinearGradient(nextRoundGradient,
            start: CGPoint(x: bezier2Bounds.midX, y: bezier2Bounds.minY),
            end: CGPoint(x: bezier2Bounds.midX, y: bezier2Bounds.maxY),
            options: [])
        context.restoreGState()
        color2.setStroke()
        bezier2Path.lineWidth = 3
        bezier2Path.stroke()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawLogo(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 40, height: 38), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 40, height: 38), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 40, y: resizedFrame.height / 38)


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 20, y: 0))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 19.76), controlPoint1: CGPoint(x: 8.96, y: 0), controlPoint2: CGPoint(x: 0, y: 8.85))
        bezierPath.addCurve(to: CGPoint(x: 1.02, y: 26), controlPoint1: CGPoint(x: 0, y: 21.94), controlPoint2: CGPoint(x: 0.36, y: 24.04))
        bezierPath.addLine(to: CGPoint(x: 7, y: 26))
        bezierPath.addLine(to: CGPoint(x: 7, y: 9.38))
        bezierPath.addLine(to: CGPoint(x: 20, y: 22.22))
        bezierPath.addLine(to: CGPoint(x: 33, y: 9.38))
        bezierPath.addLine(to: CGPoint(x: 33, y: 26))
        bezierPath.addLine(to: CGPoint(x: 38.98, y: 26))
        bezierPath.addCurve(to: CGPoint(x: 40, y: 19.76), controlPoint1: CGPoint(x: 39.64, y: 24.04), controlPoint2: CGPoint(x: 40, y: 21.94))
        bezierPath.addCurve(to: CGPoint(x: 20, y: 0), controlPoint1: CGPoint(x: 40, y: 8.85), controlPoint2: CGPoint(x: 31.04, y: 0))
        bezierPath.close()
        bezierPath.usesEvenOddFillRule = true
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(CommonKit.paint0_linear,
            start: CGPoint(x: 45.31, y: 13.61),
            end: CGPoint(x: 19.5, y: -7.35),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 16.85, y: 22.9))
        bezier2Path.addLine(to: CGPoint(x: 10.88, y: 17))
        bezier2Path.addLine(to: CGPoint(x: 10.88, y: 28.01))
        bezier2Path.addLine(to: CGPoint(x: 2, y: 28.01))
        bezier2Path.addCurve(to: CGPoint(x: 20, y: 38), controlPoint1: CGPoint(x: 5.7, y: 34), controlPoint2: CGPoint(x: 12.38, y: 38))
        bezier2Path.addCurve(to: CGPoint(x: 38, y: 28.01), controlPoint1: CGPoint(x: 27.62, y: 38), controlPoint2: CGPoint(x: 34.3, y: 34))
        bezier2Path.addLine(to: CGPoint(x: 29.12, y: 28.01))
        bezier2Path.addLine(to: CGPoint(x: 29.12, y: 17))
        bezier2Path.addLine(to: CGPoint(x: 23.15, y: 22.9))
        bezier2Path.addLine(to: CGPoint(x: 20, y: 26.01))
        bezier2Path.addLine(to: CGPoint(x: 16.85, y: 22.9))
        bezier2Path.close()
        bezier2Path.usesEvenOddFillRule = true
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(CommonKit.paint0_linear,
            start: CGPoint(x: 42.78, y: 27.99),
            end: CGPoint(x: 21.59, y: 8.81),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawDisappearedButton(frame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 50), nextScreenOpacity: CGFloat = 0, buttonText: String = "Hello, World!") {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let commonControlColor = UIColor(red: 0.140, green: 0.080, blue: 0.560, alpha: 1.000)
        let color6 = UIColor(red: 0.000, green: 0.609, blue: 1.000, alpha: 1.000)

        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.black
        shadow.shadowOffset = CGSize(width: 0, height: 1)
        shadow.shadowBlurRadius = 2

        //// Variable Declarations
        let nextRoundRect1: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 1.0 / 24.0 ? 1 - 24 * nextScreenOpacity : 0)
        let nextRoundRect14: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 14.0 / 24.0 ? 1 - 24.0 / 14.0 * nextScreenOpacity : 0)
        let nextRoundRect11: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 11.0 / 24.0 ? 1 - 24.0 / 11.0 * nextScreenOpacity : 0)
        let nextRoundRect4: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 4.0 / 24.0 ? 1 - 24.0 / 4.0 * nextScreenOpacity : 0)
        let nextRoundRect16: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 16.0 / 24.0 ? 1 - 24.0 / 16.0 * nextScreenOpacity : 0)
        let nextRoundRect18: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 18.0 / 24.0 ? 1 - 24.0 / 18.0 * nextScreenOpacity : 0)
        let nextRoundRect5: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 5.0 / 24.0 ? 1 - 24.0 / 5.0 * nextScreenOpacity : 0)
        let nextRoundRect10: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 10.0 / 24.0 ? 1 - 24.0 / 10.0 * nextScreenOpacity : 0)
        let nextRoundRect12: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 12.0 / 24.0 ? 1 - 24.0 / 12.0 * nextScreenOpacity : 0)
        let nextRoundRect8: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 8.0 / 24.0 ? 1 - 24.0 / 8.0 * nextScreenOpacity : 0)
        let nextRoundRect13: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 13.0 / 24.0 ? 1 - 24.0 / 13.0 * nextScreenOpacity : 0)
        let nextRoundRect6: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 6.0 / 24.0 ? 1 - 24.0 / 6.0 * nextScreenOpacity : 0)
        let nextRoundRect15: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 15.0 / 24.0 ? 1 - 24.0 / 15.0 * nextScreenOpacity : 0)
        let buttonOpacity: CGFloat = nextScreenOpacity
        let buttonTextSize: CGFloat = nextScreenOpacity * 18 + (1 - nextScreenOpacity) * 36

        //// Rectangle 121 Drawing
        context.saveGState()
        context.setAlpha(buttonOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle121Path = UIBezierPath(roundedRect: CGRect(x: frame.minX + fastFloor(frame.width * 0.00833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.99167 + 0.5) - fastFloor(frame.width * 0.00833 + 0.5), height: fastFloor(frame.height * 0.96000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)), cornerRadius: 4)
        context.saveGState()
        context.setShadow(offset: shadow.shadowOffset, blur: shadow.shadowBlurRadius, color: (shadow.shadowColor as! UIColor).cgColor)
        commonControlColor.setFill()
        rectangle121Path.fill()
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 3 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle3Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.08333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00021 + 0.49) + 0.01, width: fastFloor(frame.width * 0.12500 + 0.5) - fastFloor(frame.width * 0.08333 + 0.5), height: fastFloor(frame.height * 0.20021 + 0.49) - fastFloor(frame.height * 0.00021 + 0.49)))
        color6.setFill()
        rectangle3Path.fill()
        UIColor.white.setStroke()
        rectangle3Path.lineWidth = 0
        rectangle3Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectanglePath = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.12500 + 0.5), y: frame.minY + fastFloor(frame.height * -0.00024 - 0.49) + 0.99, width: fastFloor(frame.width * 0.16667 + 0.5) - fastFloor(frame.width * 0.12500 + 0.5), height: fastFloor(frame.height * 0.19976 - 0.49) - fastFloor(frame.height * -0.00024 - 0.49)))
        color6.setFill()
        rectanglePath.fill()
        UIColor.white.setStroke()
        rectanglePath.lineWidth = 0
        rectanglePath.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 19 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle19Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.16667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.20833 + 0.5) - fastFloor(frame.width * 0.16667 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle19Path.fill()
        UIColor.white.setStroke()
        rectangle19Path.lineWidth = 0
        rectangle19Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 20 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle20Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.20833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.25000 + 0.5) - fastFloor(frame.width * 0.20833 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle20Path.fill()
        UIColor.white.setStroke()
        rectangle20Path.lineWidth = 0
        rectangle20Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 21 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle21Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.25000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.29167 + 0.5) - fastFloor(frame.width * 0.25000 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle21Path.fill()
        UIColor.white.setStroke()
        rectangle21Path.lineWidth = 0
        rectangle21Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 18 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle18Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.29167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.33333 + 0.5) - fastFloor(frame.width * 0.29167 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle18Path.fill()
        UIColor.white.setStroke()
        rectangle18Path.lineWidth = 0
        rectangle18Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 16 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle16Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.33333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.37500 + 0.5) - fastFloor(frame.width * 0.33333 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle16Path.fill()
        UIColor.white.setStroke()
        rectangle16Path.lineWidth = 0
        rectangle16Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 17 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle17Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.37500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.41667 + 0.5) - fastFloor(frame.width * 0.37500 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle17Path.fill()
        UIColor.white.setStroke()
        rectangle17Path.lineWidth = 0
        rectangle17Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 15 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect15)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle15Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.41667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.45833 + 0.5) - fastFloor(frame.width * 0.41667 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle15Path.fill()
        UIColor.white.setStroke()
        rectangle15Path.lineWidth = 0
        rectangle15Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 14 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle14Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.04167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.08333 + 0.5) - fastFloor(frame.width * 0.04167 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle14Path.fill()
        UIColor.white.setStroke()
        rectangle14Path.lineWidth = 0
        rectangle14Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 13 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle13Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.04167 + 0.5) - fastFloor(frame.width * 0.00000 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle13Path.fill()
        UIColor.white.setStroke()
        rectangle13Path.lineWidth = 0
        rectangle13Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 12 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle12Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.04167 + 0.5) - fastFloor(frame.width * 0.00000 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle12Path.fill()
        UIColor.white.setStroke()
        rectangle12Path.lineWidth = 0
        rectangle12Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 9 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle9Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.04167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.08333 + 0.5) - fastFloor(frame.width * 0.04167 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle9Path.fill()
        UIColor.white.setStroke()
        rectangle9Path.lineWidth = 0
        rectangle9Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 11 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle11Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.08333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.12500 + 0.5) - fastFloor(frame.width * 0.08333 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle11Path.fill()
        UIColor.white.setStroke()
        rectangle11Path.lineWidth = 0
        rectangle11Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 8 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle8Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.25000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.29167 + 0.5) - fastFloor(frame.width * 0.25000 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle8Path.fill()
        UIColor.white.setStroke()
        rectangle8Path.lineWidth = 0
        rectangle8Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 10 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle10Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.29167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.33333 + 0.5) - fastFloor(frame.width * 0.29167 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle10Path.fill()
        UIColor.white.setStroke()
        rectangle10Path.lineWidth = 0
        rectangle10Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 2 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle2Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.16667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.20833 + 0.5) - fastFloor(frame.width * 0.16667 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle2Path.fill()
        UIColor.white.setStroke()
        rectangle2Path.lineWidth = 0
        rectangle2Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 4 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle4Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.20833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.25000 + 0.5) - fastFloor(frame.width * 0.20833 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle4Path.fill()
        UIColor.white.setStroke()
        rectangle4Path.lineWidth = 0
        rectangle4Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 6 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle6Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.12500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.16667 + 0.5) - fastFloor(frame.width * 0.12500 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle6Path.fill()
        UIColor.white.setStroke()
        rectangle6Path.lineWidth = 0
        rectangle6Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 7 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle7Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.37500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.41667 + 0.5) - fastFloor(frame.width * 0.37500 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle7Path.fill()
        UIColor.white.setStroke()
        rectangle7Path.lineWidth = 0
        rectangle7Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 5 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect5)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle5Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.33333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.37500 + 0.5) - fastFloor(frame.width * 0.33333 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle5Path.fill()
        UIColor.white.setStroke()
        rectangle5Path.lineWidth = 0
        rectangle5Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 22 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle22Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.41667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.45833 + 0.5) - fastFloor(frame.width * 0.41667 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle22Path.fill()
        UIColor.white.setStroke()
        rectangle22Path.lineWidth = 0
        rectangle22Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 23 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle23Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.45832 - 0.5) + 1, y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.49999 - 0.5) - fastFloor(frame.width * 0.45832 - 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle23Path.fill()
        UIColor.white.setStroke()
        rectangle23Path.lineWidth = 0
        rectangle23Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 24 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle24Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.45833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.50000 + 0.5) - fastFloor(frame.width * 0.45833 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle24Path.fill()
        UIColor.white.setStroke()
        rectangle24Path.lineWidth = 0
        rectangle24Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 25 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle25Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.08333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.12500 + 0.5) - fastFloor(frame.width * 0.08333 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle25Path.fill()
        UIColor.white.setStroke()
        rectangle25Path.lineWidth = 0
        rectangle25Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 26 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle26Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.12500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.16667 + 0.5) - fastFloor(frame.width * 0.12500 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle26Path.fill()
        UIColor.white.setStroke()
        rectangle26Path.lineWidth = 0
        rectangle26Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 27 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle27Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.16667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.20833 + 0.5) - fastFloor(frame.width * 0.16667 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle27Path.fill()
        UIColor.white.setStroke()
        rectangle27Path.lineWidth = 0
        rectangle27Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 28 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle28Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.20833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.25000 + 0.5) - fastFloor(frame.width * 0.20833 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle28Path.fill()
        UIColor.white.setStroke()
        rectangle28Path.lineWidth = 0
        rectangle28Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 29 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle29Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.25000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.29167 + 0.5) - fastFloor(frame.width * 0.25000 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle29Path.fill()
        UIColor.white.setStroke()
        rectangle29Path.lineWidth = 0
        rectangle29Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 30 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle30Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.29167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.33333 + 0.5) - fastFloor(frame.width * 0.29167 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle30Path.fill()
        UIColor.white.setStroke()
        rectangle30Path.lineWidth = 0
        rectangle30Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 31 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle31Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.33333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.37500 + 0.5) - fastFloor(frame.width * 0.33333 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle31Path.fill()
        UIColor.white.setStroke()
        rectangle31Path.lineWidth = 0
        rectangle31Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 32 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle32Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.37500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.41667 + 0.5) - fastFloor(frame.width * 0.37500 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle32Path.fill()
        UIColor.white.setStroke()
        rectangle32Path.lineWidth = 0
        rectangle32Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 33 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect15)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle33Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.41667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.45833 + 0.5) - fastFloor(frame.width * 0.41667 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle33Path.fill()
        UIColor.white.setStroke()
        rectangle33Path.lineWidth = 0
        rectangle33Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 34 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle34Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.04167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.08333 + 0.5) - fastFloor(frame.width * 0.04167 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle34Path.fill()
        UIColor.white.setStroke()
        rectangle34Path.lineWidth = 0
        rectangle34Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 35 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle35Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.04167 + 0.5) - fastFloor(frame.width * 0.00000 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle35Path.fill()
        UIColor.white.setStroke()
        rectangle35Path.lineWidth = 0
        rectangle35Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 36 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle36Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.04167 + 0.5) - fastFloor(frame.width * 0.00000 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle36Path.fill()
        UIColor.white.setStroke()
        rectangle36Path.lineWidth = 0
        rectangle36Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 37 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle37Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.04167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.08333 + 0.5) - fastFloor(frame.width * 0.04167 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle37Path.fill()
        UIColor.white.setStroke()
        rectangle37Path.lineWidth = 0
        rectangle37Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 38 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle38Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.08333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.12500 + 0.5) - fastFloor(frame.width * 0.08333 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle38Path.fill()
        UIColor.white.setStroke()
        rectangle38Path.lineWidth = 0
        rectangle38Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 39 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle39Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.25000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.29167 + 0.5) - fastFloor(frame.width * 0.25000 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle39Path.fill()
        UIColor.white.setStroke()
        rectangle39Path.lineWidth = 0
        rectangle39Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 40 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle40Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.29167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.33333 + 0.5) - fastFloor(frame.width * 0.29167 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle40Path.fill()
        UIColor.white.setStroke()
        rectangle40Path.lineWidth = 0
        rectangle40Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 41 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle41Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.16667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.20833 + 0.5) - fastFloor(frame.width * 0.16667 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle41Path.fill()
        UIColor.white.setStroke()
        rectangle41Path.lineWidth = 0
        rectangle41Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 42 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle42Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.20833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.25000 + 0.5) - fastFloor(frame.width * 0.20833 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle42Path.fill()
        UIColor.white.setStroke()
        rectangle42Path.lineWidth = 0
        rectangle42Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 43 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle43Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.12500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.16667 + 0.5) - fastFloor(frame.width * 0.12500 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle43Path.fill()
        UIColor.white.setStroke()
        rectangle43Path.lineWidth = 0
        rectangle43Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 44 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle44Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.37500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.41667 + 0.5) - fastFloor(frame.width * 0.37500 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle44Path.fill()
        UIColor.white.setStroke()
        rectangle44Path.lineWidth = 0
        rectangle44Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 45 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect5)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle45Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.33333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.37500 + 0.5) - fastFloor(frame.width * 0.33333 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle45Path.fill()
        UIColor.white.setStroke()
        rectangle45Path.lineWidth = 0
        rectangle45Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 46 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle46Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.41667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.45833 + 0.5) - fastFloor(frame.width * 0.41667 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle46Path.fill()
        UIColor.white.setStroke()
        rectangle46Path.lineWidth = 0
        rectangle46Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 47 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle47Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.45833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.50000 + 0.5) - fastFloor(frame.width * 0.45833 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle47Path.fill()
        UIColor.white.setStroke()
        rectangle47Path.lineWidth = 0
        rectangle47Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 48 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle48Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.45833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.50000 + 0.5) - fastFloor(frame.width * 0.45833 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle48Path.fill()
        UIColor.white.setStroke()
        rectangle48Path.lineWidth = 0
        rectangle48Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 49 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle49Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.58333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00021 + 0.49) + 0.01, width: fastFloor(frame.width * 0.62500 + 0.5) - fastFloor(frame.width * 0.58333 + 0.5), height: fastFloor(frame.height * 0.20021 + 0.49) - fastFloor(frame.height * 0.00021 + 0.49)))
        color6.setFill()
        rectangle49Path.fill()
        UIColor.white.setStroke()
        rectangle49Path.lineWidth = 0
        rectangle49Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 50 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle50Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.62500 + 0.5), y: frame.minY + fastFloor(frame.height * -0.00024 - 0.49) + 0.99, width: fastFloor(frame.width * 0.66667 + 0.5) - fastFloor(frame.width * 0.62500 + 0.5), height: fastFloor(frame.height * 0.19976 - 0.49) - fastFloor(frame.height * -0.00024 - 0.49)))
        color6.setFill()
        rectangle50Path.fill()
        UIColor.white.setStroke()
        rectangle50Path.lineWidth = 0
        rectangle50Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 51 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle51Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.66667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.70833 + 0.5) - fastFloor(frame.width * 0.66667 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle51Path.fill()
        UIColor.white.setStroke()
        rectangle51Path.lineWidth = 0
        rectangle51Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 52 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle52Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.70833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.75000 + 0.5) - fastFloor(frame.width * 0.70833 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle52Path.fill()
        UIColor.white.setStroke()
        rectangle52Path.lineWidth = 0
        rectangle52Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 53 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle53Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.75000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.79167 + 0.5) - fastFloor(frame.width * 0.75000 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle53Path.fill()
        UIColor.white.setStroke()
        rectangle53Path.lineWidth = 0
        rectangle53Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 54 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle54Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.79167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.83333 + 0.5) - fastFloor(frame.width * 0.79167 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle54Path.fill()
        UIColor.white.setStroke()
        rectangle54Path.lineWidth = 0
        rectangle54Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 55 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle55Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.83333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.87500 + 0.5) - fastFloor(frame.width * 0.83333 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle55Path.fill()
        UIColor.white.setStroke()
        rectangle55Path.lineWidth = 0
        rectangle55Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 56 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle56Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.87500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.91667 + 0.5) - fastFloor(frame.width * 0.87500 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle56Path.fill()
        UIColor.white.setStroke()
        rectangle56Path.lineWidth = 0
        rectangle56Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 57 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect15)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle57Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.91667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.95833 + 0.5) - fastFloor(frame.width * 0.91667 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle57Path.fill()
        UIColor.white.setStroke()
        rectangle57Path.lineWidth = 0
        rectangle57Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 58 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle58Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.54167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.58333 + 0.5) - fastFloor(frame.width * 0.54167 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle58Path.fill()
        UIColor.white.setStroke()
        rectangle58Path.lineWidth = 0
        rectangle58Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 59 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle59Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.50000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.54167 + 0.5) - fastFloor(frame.width * 0.50000 + 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle59Path.fill()
        UIColor.white.setStroke()
        rectangle59Path.lineWidth = 0
        rectangle59Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 60 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle60Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.50000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.54167 + 0.5) - fastFloor(frame.width * 0.50000 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle60Path.fill()
        UIColor.white.setStroke()
        rectangle60Path.lineWidth = 0
        rectangle60Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 61 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle61Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.54167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.58333 + 0.5) - fastFloor(frame.width * 0.54167 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle61Path.fill()
        UIColor.white.setStroke()
        rectangle61Path.lineWidth = 0
        rectangle61Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 62 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle62Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.58333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.62500 + 0.5) - fastFloor(frame.width * 0.58333 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle62Path.fill()
        UIColor.white.setStroke()
        rectangle62Path.lineWidth = 0
        rectangle62Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 63 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle63Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.75000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.79167 + 0.5) - fastFloor(frame.width * 0.75000 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle63Path.fill()
        UIColor.white.setStroke()
        rectangle63Path.lineWidth = 0
        rectangle63Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 64 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle64Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.79167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.83333 + 0.5) - fastFloor(frame.width * 0.79167 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle64Path.fill()
        UIColor.white.setStroke()
        rectangle64Path.lineWidth = 0
        rectangle64Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 65 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle65Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.66667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.70833 + 0.5) - fastFloor(frame.width * 0.66667 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle65Path.fill()
        UIColor.white.setStroke()
        rectangle65Path.lineWidth = 0
        rectangle65Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 66 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle66Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.70833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.75000 + 0.5) - fastFloor(frame.width * 0.70833 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle66Path.fill()
        UIColor.white.setStroke()
        rectangle66Path.lineWidth = 0
        rectangle66Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 67 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle67Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.62500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.66667 + 0.5) - fastFloor(frame.width * 0.62500 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle67Path.fill()
        UIColor.white.setStroke()
        rectangle67Path.lineWidth = 0
        rectangle67Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 68 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle68Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.87500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.91667 + 0.5) - fastFloor(frame.width * 0.87500 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle68Path.fill()
        UIColor.white.setStroke()
        rectangle68Path.lineWidth = 0
        rectangle68Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 69 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect5)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle69Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.83333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.87500 + 0.5) - fastFloor(frame.width * 0.83333 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle69Path.fill()
        UIColor.white.setStroke()
        rectangle69Path.lineWidth = 0
        rectangle69Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 70 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle70Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.91667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 0.95833 + 0.5) - fastFloor(frame.width * 0.91667 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle70Path.fill()
        UIColor.white.setStroke()
        rectangle70Path.lineWidth = 0
        rectangle70Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 71 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle71Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.95832 - 0.5) + 1, y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.99999 - 0.5) - fastFloor(frame.width * 0.95832 - 0.5), height: fastFloor(frame.height * 0.20000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5)))
        color6.setFill()
        rectangle71Path.fill()
        UIColor.white.setStroke()
        rectangle71Path.lineWidth = 0
        rectangle71Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 72 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle72Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.95833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.20000 + 0.5), width: fastFloor(frame.width * 1.00000 + 0.5) - fastFloor(frame.width * 0.95833 + 0.5), height: fastFloor(frame.height * 0.40000 + 0.5) - fastFloor(frame.height * 0.20000 + 0.5)))
        color6.setFill()
        rectangle72Path.fill()
        UIColor.white.setStroke()
        rectangle72Path.lineWidth = 0
        rectangle72Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 73 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle73Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.58333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.62500 + 0.5) - fastFloor(frame.width * 0.58333 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle73Path.fill()
        UIColor.white.setStroke()
        rectangle73Path.lineWidth = 0
        rectangle73Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 74 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle74Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.62500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.66667 + 0.5) - fastFloor(frame.width * 0.62500 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle74Path.fill()
        UIColor.white.setStroke()
        rectangle74Path.lineWidth = 0
        rectangle74Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 75 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle75Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.66667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.70833 + 0.5) - fastFloor(frame.width * 0.66667 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle75Path.fill()
        UIColor.white.setStroke()
        rectangle75Path.lineWidth = 0
        rectangle75Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 76 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle76Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.70833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.75000 + 0.5) - fastFloor(frame.width * 0.70833 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle76Path.fill()
        UIColor.white.setStroke()
        rectangle76Path.lineWidth = 0
        rectangle76Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 77 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle77Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.75000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.79167 + 0.5) - fastFloor(frame.width * 0.75000 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle77Path.fill()
        UIColor.white.setStroke()
        rectangle77Path.lineWidth = 0
        rectangle77Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 78 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle78Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.79167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.83333 + 0.5) - fastFloor(frame.width * 0.79167 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle78Path.fill()
        UIColor.white.setStroke()
        rectangle78Path.lineWidth = 0
        rectangle78Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 79 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle79Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.83333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.87500 + 0.5) - fastFloor(frame.width * 0.83333 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle79Path.fill()
        UIColor.white.setStroke()
        rectangle79Path.lineWidth = 0
        rectangle79Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 80 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle80Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.87500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.91667 + 0.5) - fastFloor(frame.width * 0.87500 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle80Path.fill()
        UIColor.white.setStroke()
        rectangle80Path.lineWidth = 0
        rectangle80Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 81 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect15)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle81Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.91667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.95833 + 0.5) - fastFloor(frame.width * 0.91667 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle81Path.fill()
        UIColor.white.setStroke()
        rectangle81Path.lineWidth = 0
        rectangle81Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 82 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle82Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.54167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.58333 + 0.5) - fastFloor(frame.width * 0.54167 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle82Path.fill()
        UIColor.white.setStroke()
        rectangle82Path.lineWidth = 0
        rectangle82Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 83 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle83Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.50000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 0.54167 + 0.5) - fastFloor(frame.width * 0.50000 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle83Path.fill()
        UIColor.white.setStroke()
        rectangle83Path.lineWidth = 0
        rectangle83Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 84 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle84Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.50000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.54167 + 0.5) - fastFloor(frame.width * 0.50000 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle84Path.fill()
        UIColor.white.setStroke()
        rectangle84Path.lineWidth = 0
        rectangle84Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 85 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle85Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.54167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.58333 + 0.5) - fastFloor(frame.width * 0.54167 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle85Path.fill()
        UIColor.white.setStroke()
        rectangle85Path.lineWidth = 0
        rectangle85Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 86 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle86Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.58333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.62500 + 0.5) - fastFloor(frame.width * 0.58333 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle86Path.fill()
        UIColor.white.setStroke()
        rectangle86Path.lineWidth = 0
        rectangle86Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 87 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle87Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.75000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.79167 + 0.5) - fastFloor(frame.width * 0.75000 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle87Path.fill()
        UIColor.white.setStroke()
        rectangle87Path.lineWidth = 0
        rectangle87Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 88 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle88Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.79167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.83333 + 0.5) - fastFloor(frame.width * 0.79167 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle88Path.fill()
        UIColor.white.setStroke()
        rectangle88Path.lineWidth = 0
        rectangle88Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 89 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle89Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.66667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.70833 + 0.5) - fastFloor(frame.width * 0.66667 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle89Path.fill()
        UIColor.white.setStroke()
        rectangle89Path.lineWidth = 0
        rectangle89Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 90 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle90Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.70833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.75000 + 0.5) - fastFloor(frame.width * 0.70833 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle90Path.fill()
        UIColor.white.setStroke()
        rectangle90Path.lineWidth = 0
        rectangle90Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 91 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle91Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.62500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.66667 + 0.5) - fastFloor(frame.width * 0.62500 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle91Path.fill()
        UIColor.white.setStroke()
        rectangle91Path.lineWidth = 0
        rectangle91Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 92 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle92Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.87500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.91667 + 0.5) - fastFloor(frame.width * 0.87500 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle92Path.fill()
        UIColor.white.setStroke()
        rectangle92Path.lineWidth = 0
        rectangle92Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 93 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect5)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle93Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.83333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.87500 + 0.5) - fastFloor(frame.width * 0.83333 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle93Path.fill()
        UIColor.white.setStroke()
        rectangle93Path.lineWidth = 0
        rectangle93Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 94 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle94Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.91667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 0.95833 + 0.5) - fastFloor(frame.width * 0.91667 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle94Path.fill()
        UIColor.white.setStroke()
        rectangle94Path.lineWidth = 0
        rectangle94Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 95 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle95Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.95833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.40000 + 0.5), width: fastFloor(frame.width * 1.00000 + 0.5) - fastFloor(frame.width * 0.95833 + 0.5), height: fastFloor(frame.height * 0.60000 + 0.5) - fastFloor(frame.height * 0.40000 + 0.5)))
        color6.setFill()
        rectangle95Path.fill()
        UIColor.white.setStroke()
        rectangle95Path.lineWidth = 0
        rectangle95Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 96 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle96Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.95833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.60000 + 0.5), width: fastFloor(frame.width * 1.00000 + 0.5) - fastFloor(frame.width * 0.95833 + 0.5), height: fastFloor(frame.height * 0.80000 + 0.5) - fastFloor(frame.height * 0.60000 + 0.5)))
        color6.setFill()
        rectangle96Path.fill()
        UIColor.white.setStroke()
        rectangle96Path.lineWidth = 0
        rectangle96Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 97 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle97Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.12500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.16667 + 0.5) - fastFloor(frame.width * 0.12500 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle97Path.fill()
        UIColor.white.setStroke()
        rectangle97Path.lineWidth = 0
        rectangle97Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 98 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle98Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.20833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.25000 + 0.5) - fastFloor(frame.width * 0.20833 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle98Path.fill()
        UIColor.white.setStroke()
        rectangle98Path.lineWidth = 0
        rectangle98Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 99 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle99Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.16667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.20833 + 0.5) - fastFloor(frame.width * 0.16667 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle99Path.fill()
        UIColor.white.setStroke()
        rectangle99Path.lineWidth = 0
        rectangle99Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 100 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle100Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.04167 + 0.5) - fastFloor(frame.width * 0.00000 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle100Path.fill()
        UIColor.white.setStroke()
        rectangle100Path.lineWidth = 0
        rectangle100Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 101 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle101Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.04167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.08333 + 0.5) - fastFloor(frame.width * 0.04167 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle101Path.fill()
        UIColor.white.setStroke()
        rectangle101Path.lineWidth = 0
        rectangle101Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 102 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle102Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.25000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.29167 + 0.5) - fastFloor(frame.width * 0.25000 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle102Path.fill()
        UIColor.white.setStroke()
        rectangle102Path.lineWidth = 0
        rectangle102Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 103 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle103Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.29167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.33333 + 0.5) - fastFloor(frame.width * 0.29167 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle103Path.fill()
        UIColor.white.setStroke()
        rectangle103Path.lineWidth = 0
        rectangle103Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 104 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle104Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.33333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.37500 + 0.5) - fastFloor(frame.width * 0.33333 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle104Path.fill()
        UIColor.white.setStroke()
        rectangle104Path.lineWidth = 0
        rectangle104Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 105 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle105Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.08333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.12500 + 0.5) - fastFloor(frame.width * 0.08333 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle105Path.fill()
        UIColor.white.setStroke()
        rectangle105Path.lineWidth = 0
        rectangle105Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 106 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle106Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.50000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 - 0.5) + 1, width: fastFloor(frame.width * 0.54167 + 0.5) - fastFloor(frame.width * 0.50000 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 - 0.5) - 1))
        color6.setFill()
        rectangle106Path.fill()
        UIColor.white.setStroke()
        rectangle106Path.lineWidth = 0
        rectangle106Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 107 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle107Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.41667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.45833 + 0.5) - fastFloor(frame.width * 0.41667 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle107Path.fill()
        UIColor.white.setStroke()
        rectangle107Path.lineWidth = 0
        rectangle107Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 108 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle108Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.45833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 - 0.5) + 1, width: fastFloor(frame.width * 0.50000 + 0.5) - fastFloor(frame.width * 0.45833 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 - 0.5) - 1))
        color6.setFill()
        rectangle108Path.fill()
        UIColor.white.setStroke()
        rectangle108Path.lineWidth = 0
        rectangle108Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 109 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle109Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.54167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 - 0.5) + 1, width: fastFloor(frame.width * 0.58333 + 0.5) - fastFloor(frame.width * 0.54167 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 - 0.5) - 1))
        color6.setFill()
        rectangle109Path.fill()
        UIColor.white.setStroke()
        rectangle109Path.lineWidth = 0
        rectangle109Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 110 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle110Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.37500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.41667 + 0.5) - fastFloor(frame.width * 0.37500 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle110Path.fill()
        UIColor.white.setStroke()
        rectangle110Path.lineWidth = 0
        rectangle110Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 111 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle111Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.70833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.75000 + 0.5) - fastFloor(frame.width * 0.70833 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle111Path.fill()
        UIColor.white.setStroke()
        rectangle111Path.lineWidth = 0
        rectangle111Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 112 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle112Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.83333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.87500 + 0.5) - fastFloor(frame.width * 0.83333 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle112Path.fill()
        UIColor.white.setStroke()
        rectangle112Path.lineWidth = 0
        rectangle112Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 113 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle113Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.87500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.91667 + 0.5) - fastFloor(frame.width * 0.87500 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle113Path.fill()
        UIColor.white.setStroke()
        rectangle113Path.lineWidth = 0
        rectangle113Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 114 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle114Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.62500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.66667 + 0.5) - fastFloor(frame.width * 0.62500 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle114Path.fill()
        UIColor.white.setStroke()
        rectangle114Path.lineWidth = 0
        rectangle114Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 115 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle115Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.91667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 - 0.5) + 1, width: fastFloor(frame.width * 0.95833 + 0.5) - fastFloor(frame.width * 0.91667 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 - 0.5) - 1))
        color6.setFill()
        rectangle115Path.fill()
        UIColor.white.setStroke()
        rectangle115Path.lineWidth = 0
        rectangle115Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 116 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle116Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.75000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 0.79167 + 0.5) - fastFloor(frame.width * 0.75000 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle116Path.fill()
        UIColor.white.setStroke()
        rectangle116Path.lineWidth = 0
        rectangle116Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 117 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle117Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.66667 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 - 0.5) + 1, width: fastFloor(frame.width * 0.70833 + 0.5) - fastFloor(frame.width * 0.66667 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 - 0.5) - 1))
        color6.setFill()
        rectangle117Path.fill()
        UIColor.white.setStroke()
        rectangle117Path.lineWidth = 0
        rectangle117Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 118 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle118Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.58333 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 - 0.5) + 1, width: fastFloor(frame.width * 0.62500 + 0.5) - fastFloor(frame.width * 0.58333 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 - 0.5) - 1))
        color6.setFill()
        rectangle118Path.fill()
        UIColor.white.setStroke()
        rectangle118Path.lineWidth = 0
        rectangle118Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 119 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle119Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.79167 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 - 0.5) + 1, width: fastFloor(frame.width * 0.83333 + 0.5) - fastFloor(frame.width * 0.79167 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 - 0.5) - 1))
        color6.setFill()
        rectangle119Path.fill()
        UIColor.white.setStroke()
        rectangle119Path.lineWidth = 0
        rectangle119Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 120 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle120Path = UIBezierPath(rect: CGRect(x: frame.minX + fastFloor(frame.width * 0.95833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.80000 + 0.5), width: fastFloor(frame.width * 1.00000 + 0.5) - fastFloor(frame.width * 0.95833 + 0.5), height: fastFloor(frame.height * 1.00000 + 0.5) - fastFloor(frame.height * 0.80000 + 0.5)))
        color6.setFill()
        rectangle120Path.fill()
        UIColor.white.setStroke()
        rectangle120Path.lineWidth = 0
        rectangle120Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Text Drawing
        context.saveGState()
        context.setAlpha(buttonOpacity)

        let textRect = CGRect(x: frame.minX + fastFloor(frame.width * 0.00833 + 0.5), y: frame.minY + fastFloor(frame.height * 0.00000 + 0.5), width: fastFloor(frame.width * 0.99167 + 0.5) - fastFloor(frame.width * 0.00833 + 0.5), height: fastFloor(frame.height * 0.96000 + 0.5) - fastFloor(frame.height * 0.00000 + 0.5))
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .center
        let textFontAttributes = [
            .font: UIFont(name: "Play-Bold", size: buttonTextSize)!,
            .foregroundColor: UIColor.white,
            .paragraphStyle: textStyle,
        ] as [NSAttributedString.Key: Any]

        let textTextHeight: CGFloat = buttonText.boundingRect(with: CGSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: textRect)
        buttonText.draw(in: CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        context.restoreGState()

        context.restoreGState()
    }

    @objc dynamic public class func drawBackButton(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 52, height: 50), resizing: ResizingBehavior = .aspectFit, nextScreenOpacity: CGFloat = 0) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 52, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 52, y: resizedFrame.height / 50)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 52, resizedFrame.height / 50)


        //// Color Declarations
        let commonControlColor = UIColor(red: 0.140, green: 0.080, blue: 0.560, alpha: 1.000)
        let color6 = UIColor(red: 0.000, green: 0.609, blue: 1.000, alpha: 1.000)

        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.black
        shadow.shadowOffset = CGSize(width: 0, height: 1)
        shadow.shadowBlurRadius = 2

        //// Variable Declarations
        let nextRoundRect1: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 1.0 / 24.0 ? 1 - 24 * nextScreenOpacity : 0)
        let nextRoundRect14: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 14.0 / 24.0 ? 1 - 24.0 / 14.0 * nextScreenOpacity : 0)
        let nextRoundRect11: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 11.0 / 24.0 ? 1 - 24.0 / 11.0 * nextScreenOpacity : 0)
        let nextRoundRect4: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 4.0 / 24.0 ? 1 - 24.0 / 4.0 * nextScreenOpacity : 0)
        let nextRoundRect16: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 16.0 / 24.0 ? 1 - 24.0 / 16.0 * nextScreenOpacity : 0)
        let nextRoundRect18: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 18.0 / 24.0 ? 1 - 24.0 / 18.0 * nextScreenOpacity : 0)
        let nextRoundRect5: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 5.0 / 24.0 ? 1 - 24.0 / 5.0 * nextScreenOpacity : 0)
        let nextRoundRect10: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 10.0 / 24.0 ? 1 - 24.0 / 10.0 * nextScreenOpacity : 0)
        let nextRoundRect12: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 12.0 / 24.0 ? 1 - 24.0 / 12.0 * nextScreenOpacity : 0)
        let nextRoundRect8: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 8.0 / 24.0 ? 1 - 24.0 / 8.0 * nextScreenOpacity : 0)
        let nextRoundRect13: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 13.0 / 24.0 ? 1 - 24.0 / 13.0 * nextScreenOpacity : 0)
        let nextRoundRect6: CGFloat = nextScreenOpacity == 0 ? 0 : (nextScreenOpacity < 6.0 / 24.0 ? 1 - 24.0 / 6.0 * nextScreenOpacity : 0)
        let buttonOpacity: CGFloat = nextScreenOpacity

        //// Rectangle 113 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle113Path = UIBezierPath(rect: CGRect(x: 184, y: 40, width: 10, height: 10))
        color6.setFill()
        rectangle113Path.fill()
        UIColor.white.setStroke()
        rectangle113Path.lineWidth = 0
        rectangle113Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 114 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle114Path = UIBezierPath(rect: CGRect(x: 124, y: 40, width: 10, height: 10))
        color6.setFill()
        rectangle114Path.fill()
        UIColor.white.setStroke()
        rectangle114Path.lineWidth = 0
        rectangle114Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 121 Drawing
        context.saveGState()
        context.setAlpha(buttonOpacity)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle121Path = UIBezierPath(roundedRect: CGRect(x: 2, y: 0, width: 48, height: 48), cornerRadius: 24)
        context.saveGState()
        context.setShadow(offset: CGSize(width: shadow.shadowOffset.width * resizedShadowScale, height: shadow.shadowOffset.height * resizedShadowScale), blur: shadow.shadowBlurRadius * resizedShadowScale, color: (shadow.shadowColor as! UIColor).cgColor)
        commonControlColor.setFill()
        rectangle121Path.fill()
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 3 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle3Path = UIBezierPath(rect: CGRect(x: 2, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle3Path.fill()
        UIColor.white.setStroke()
        rectangle3Path.lineWidth = 0
        rectangle3Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectanglePath = UIBezierPath(rect: CGRect(x: 2, y: 0, width: 5, height: 5))
        color6.setFill()
        rectanglePath.fill()
        UIColor.white.setStroke()
        rectanglePath.lineWidth = 0
        rectanglePath.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 19 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle19Path = UIBezierPath(rect: CGRect(x: 14, y: 0, width: 5, height: 5))
        color6.setFill()
        rectangle19Path.fill()
        UIColor.white.setStroke()
        rectangle19Path.lineWidth = 0
        rectangle19Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 20 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle20Path = UIBezierPath(rect: CGRect(x: 12, y: 0, width: 5, height: 5))
        color6.setFill()
        rectangle20Path.fill()
        UIColor.white.setStroke()
        rectangle20Path.lineWidth = 0
        rectangle20Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 21 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle21Path = UIBezierPath(rect: CGRect(x: 17, y: 0, width: 5, height: 5))
        color6.setFill()
        rectangle21Path.fill()
        UIColor.white.setStroke()
        rectangle21Path.lineWidth = 0
        rectangle21Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 18 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle18Path = UIBezierPath(rect: CGRect(x: 32, y: 0, width: 5, height: 5))
        color6.setFill()
        rectangle18Path.fill()
        UIColor.white.setStroke()
        rectangle18Path.lineWidth = 0
        rectangle18Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 16 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle16Path = UIBezierPath(rect: CGRect(x: 37, y: 0, width: 5, height: 5))
        color6.setFill()
        rectangle16Path.fill()
        UIColor.white.setStroke()
        rectangle16Path.lineWidth = 0
        rectangle16Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 17 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle17Path = UIBezierPath(rect: CGRect(x: 7, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle17Path.fill()
        UIColor.white.setStroke()
        rectangle17Path.lineWidth = 0
        rectangle17Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 14 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle14Path = UIBezierPath(rect: CGRect(x: 22, y: 20, width: 5, height: 5))
        color6.setFill()
        rectangle14Path.fill()
        UIColor.white.setStroke()
        rectangle14Path.lineWidth = 0
        rectangle14Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 13 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle13Path = UIBezierPath(rect: CGRect(x: 7, y: 0, width: 5, height: 5))
        color6.setFill()
        rectangle13Path.fill()
        UIColor.white.setStroke()
        rectangle13Path.lineWidth = 0
        rectangle13Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 12 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle12Path = UIBezierPath(rect: CGRect(x: 27, y: 15, width: 5, height: 5))
        color6.setFill()
        rectangle12Path.fill()
        UIColor.white.setStroke()
        rectangle12Path.lineWidth = 0
        rectangle12Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 9 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle9Path = UIBezierPath(rect: CGRect(x: 12, y: 20, width: 5, height: 5))
        color6.setFill()
        rectangle9Path.fill()
        UIColor.white.setStroke()
        rectangle9Path.lineWidth = 0
        rectangle9Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 11 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle11Path = UIBezierPath(rect: CGRect(x: 12, y: 5, width: 5, height: 5))
        color6.setFill()
        rectangle11Path.fill()
        UIColor.white.setStroke()
        rectangle11Path.lineWidth = 0
        rectangle11Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 8 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle8Path = UIBezierPath(rect: CGRect(x: 27, y: 0, width: 5, height: 5))
        color6.setFill()
        rectangle8Path.fill()
        UIColor.white.setStroke()
        rectangle8Path.lineWidth = 0
        rectangle8Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 10 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle10Path = UIBezierPath(rect: CGRect(x: 42, y: 0, width: 5, height: 5))
        color6.setFill()
        rectangle10Path.fill()
        UIColor.white.setStroke()
        rectangle10Path.lineWidth = 0
        rectangle10Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 2 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle2Path = UIBezierPath(rect: CGRect(x: 14, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle2Path.fill()
        UIColor.white.setStroke()
        rectangle2Path.lineWidth = 0
        rectangle2Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 4 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle4Path = UIBezierPath(rect: CGRect(x: 24, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle4Path.fill()
        UIColor.white.setStroke()
        rectangle4Path.lineWidth = 0
        rectangle4Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 6 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle6Path = UIBezierPath(rect: CGRect(x: 22, y: 0, width: 5, height: 5))
        color6.setFill()
        rectangle6Path.fill()
        UIColor.white.setStroke()
        rectangle6Path.lineWidth = 0
        rectangle6Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 7 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle7Path = UIBezierPath(rect: CGRect(x: 64, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle7Path.fill()
        UIColor.white.setStroke()
        rectangle7Path.lineWidth = 0
        rectangle7Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 5 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect5)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle5Path = UIBezierPath(rect: CGRect(x: 47, y: 0, width: 5, height: 5))
        color6.setFill()
        rectangle5Path.fill()
        UIColor.white.setStroke()
        rectangle5Path.lineWidth = 0
        rectangle5Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 25 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle25Path = UIBezierPath(rect: CGRect(x: 7, y: 5, width: 5, height: 5))
        color6.setFill()
        rectangle25Path.fill()
        UIColor.white.setStroke()
        rectangle25Path.lineWidth = 0
        rectangle25Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 26 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle26Path = UIBezierPath(rect: CGRect(x: 2, y: 15, width: 5, height: 5))
        color6.setFill()
        rectangle26Path.fill()
        UIColor.white.setStroke()
        rectangle26Path.lineWidth = 0
        rectangle26Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 27 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle27Path = UIBezierPath(rect: CGRect(x: 14, y: 20, width: 5, height: 5))
        color6.setFill()
        rectangle27Path.fill()
        UIColor.white.setStroke()
        rectangle27Path.lineWidth = 0
        rectangle27Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 28 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle28Path = UIBezierPath(rect: CGRect(x: 22, y: 5, width: 5, height: 5))
        color6.setFill()
        rectangle28Path.fill()
        UIColor.white.setStroke()
        rectangle28Path.lineWidth = 0
        rectangle28Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 29 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle29Path = UIBezierPath(rect: CGRect(x: 47, y: 5, width: 5, height: 5))
        color6.setFill()
        rectangle29Path.fill()
        UIColor.white.setStroke()
        rectangle29Path.lineWidth = 0
        rectangle29Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 30 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle30Path = UIBezierPath(rect: CGRect(x: 27, y: 5, width: 5, height: 5))
        color6.setFill()
        rectangle30Path.fill()
        UIColor.white.setStroke()
        rectangle30Path.lineWidth = 0
        rectangle30Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 31 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle31Path = UIBezierPath(rect: CGRect(x: 2, y: 5, width: 5, height: 5))
        color6.setFill()
        rectangle31Path.fill()
        UIColor.white.setStroke()
        rectangle31Path.lineWidth = 0
        rectangle31Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 32 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle32Path = UIBezierPath(rect: CGRect(x: 42, y: 5, width: 5, height: 5))
        color6.setFill()
        rectangle32Path.fill()
        UIColor.white.setStroke()
        rectangle32Path.lineWidth = 0
        rectangle32Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 34 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle34Path = UIBezierPath(rect: CGRect(x: 27, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle34Path.fill()
        UIColor.white.setStroke()
        rectangle34Path.lineWidth = 0
        rectangle34Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 35 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle35Path = UIBezierPath(rect: CGRect(x: 27, y: 20, width: 5, height: 5))
        color6.setFill()
        rectangle35Path.fill()
        UIColor.white.setStroke()
        rectangle35Path.lineWidth = 0
        rectangle35Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 36 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle36Path = UIBezierPath(rect: CGRect(x: 32, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle36Path.fill()
        UIColor.white.setStroke()
        rectangle36Path.lineWidth = 0
        rectangle36Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 37 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle37Path = UIBezierPath(rect: CGRect(x: 22, y: 15, width: 5, height: 5))
        color6.setFill()
        rectangle37Path.fill()
        UIColor.white.setStroke()
        rectangle37Path.lineWidth = 0
        rectangle37Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 38 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle38Path = UIBezierPath(rect: CGRect(x: 7, y: 20, width: 5, height: 5))
        color6.setFill()
        rectangle38Path.fill()
        UIColor.white.setStroke()
        rectangle38Path.lineWidth = 0
        rectangle38Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 39 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle39Path = UIBezierPath(rect: CGRect(x: 17, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle39Path.fill()
        UIColor.white.setStroke()
        rectangle39Path.lineWidth = 0
        rectangle39Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 40 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle40Path = UIBezierPath(rect: CGRect(x: 22, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle40Path.fill()
        UIColor.white.setStroke()
        rectangle40Path.lineWidth = 0
        rectangle40Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 41 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle41Path = UIBezierPath(rect: CGRect(x: 14, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle41Path.fill()
        UIColor.white.setStroke()
        rectangle41Path.lineWidth = 0
        rectangle41Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 42 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle42Path = UIBezierPath(rect: CGRect(x: 24, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle42Path.fill()
        UIColor.white.setStroke()
        rectangle42Path.lineWidth = 0
        rectangle42Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 43 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle43Path = UIBezierPath(rect: CGRect(x: 7, y: 15, width: 5, height: 5))
        color6.setFill()
        rectangle43Path.fill()
        UIColor.white.setStroke()
        rectangle43Path.lineWidth = 0
        rectangle43Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 44 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle44Path = UIBezierPath(rect: CGRect(x: 64, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle44Path.fill()
        UIColor.white.setStroke()
        rectangle44Path.lineWidth = 0
        rectangle44Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 45 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect5)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle45Path = UIBezierPath(rect: CGRect(x: 17, y: 5, width: 5, height: 5))
        color6.setFill()
        rectangle45Path.fill()
        UIColor.white.setStroke()
        rectangle45Path.lineWidth = 0
        rectangle45Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 68 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle68Path = UIBezierPath(rect: CGRect(x: 184, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle68Path.fill()
        UIColor.white.setStroke()
        rectangle68Path.lineWidth = 0
        rectangle68Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 70 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle70Path = UIBezierPath(rect: CGRect(x: 194, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle70Path.fill()
        UIColor.white.setStroke()
        rectangle70Path.lineWidth = 0
        rectangle70Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 92 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle92Path = UIBezierPath(rect: CGRect(x: 184, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle92Path.fill()
        UIColor.white.setStroke()
        rectangle92Path.lineWidth = 0
        rectangle92Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 94 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect1)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle94Path = UIBezierPath(rect: CGRect(x: 194, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle94Path.fill()
        UIColor.white.setStroke()
        rectangle94Path.lineWidth = 0
        rectangle94Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 97 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle97Path = UIBezierPath(rect: CGRect(x: 12, y: 15, width: 5, height: 5))
        color6.setFill()
        rectangle97Path.fill()
        UIColor.white.setStroke()
        rectangle97Path.lineWidth = 0
        rectangle97Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 98 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle98Path = UIBezierPath(rect: CGRect(x: 24, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle98Path.fill()
        UIColor.white.setStroke()
        rectangle98Path.lineWidth = 0
        rectangle98Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 99 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle99Path = UIBezierPath(rect: CGRect(x: 2, y: 20, width: 5, height: 5))
        color6.setFill()
        rectangle99Path.fill()
        UIColor.white.setStroke()
        rectangle99Path.lineWidth = 0
        rectangle99Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 100 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle100Path = UIBezierPath(rect: CGRect(x: 32, y: 15, width: 5, height: 5))
        color6.setFill()
        rectangle100Path.fill()
        UIColor.white.setStroke()
        rectangle100Path.lineWidth = 0
        rectangle100Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 101 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle101Path = UIBezierPath(rect: CGRect(x: 17, y: 20, width: 5, height: 5))
        color6.setFill()
        rectangle101Path.fill()
        UIColor.white.setStroke()
        rectangle101Path.lineWidth = 0
        rectangle101Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 102 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect4)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle102Path = UIBezierPath(rect: CGRect(x: 34, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle102Path.fill()
        UIColor.white.setStroke()
        rectangle102Path.lineWidth = 0
        rectangle102Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 103 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle103Path = UIBezierPath(rect: CGRect(x: 32, y: 5, width: 5, height: 5))
        color6.setFill()
        rectangle103Path.fill()
        UIColor.white.setStroke()
        rectangle103Path.lineWidth = 0
        rectangle103Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 104 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle104Path = UIBezierPath(rect: CGRect(x: 37, y: 5, width: 5, height: 5))
        color6.setFill()
        rectangle104Path.fill()
        UIColor.white.setStroke()
        rectangle104Path.lineWidth = 0
        rectangle104Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 105 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle105Path = UIBezierPath(rect: CGRect(x: 17, y: 15, width: 5, height: 5))
        color6.setFill()
        rectangle105Path.fill()
        UIColor.white.setStroke()
        rectangle105Path.lineWidth = 0
        rectangle105Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 110 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle110Path = UIBezierPath(rect: CGRect(x: 12, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle110Path.fill()
        UIColor.white.setStroke()
        rectangle110Path.lineWidth = 0
        rectangle110Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 15 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle15Path = UIBezierPath(rect: CGRect(x: 47, y: 20, width: 5, height: 5))
        color6.setFill()
        rectangle15Path.fill()
        UIColor.white.setStroke()
        rectangle15Path.lineWidth = 0
        rectangle15Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 23 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle23Path = UIBezierPath(rect: CGRect(x: 32, y: 20, width: 5, height: 5))
        color6.setFill()
        rectangle23Path.fill()
        UIColor.white.setStroke()
        rectangle23Path.lineWidth = 0
        rectangle23Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 24 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle24Path = UIBezierPath(rect: CGRect(x: 37, y: 20, width: 5, height: 5))
        color6.setFill()
        rectangle24Path.fill()
        UIColor.white.setStroke()
        rectangle24Path.lineWidth = 0
        rectangle24Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 33 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle33Path = UIBezierPath(rect: CGRect(x: 42, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle33Path.fill()
        UIColor.white.setStroke()
        rectangle33Path.lineWidth = 0
        rectangle33Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 46 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle46Path = UIBezierPath(rect: CGRect(x: 37, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle46Path.fill()
        UIColor.white.setStroke()
        rectangle46Path.lineWidth = 0
        rectangle46Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 47 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle47Path = UIBezierPath(rect: CGRect(x: 37, y: 15, width: 5, height: 5))
        color6.setFill()
        rectangle47Path.fill()
        UIColor.white.setStroke()
        rectangle47Path.lineWidth = 0
        rectangle47Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 48 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle48Path = UIBezierPath(rect: CGRect(x: 42, y: 15, width: 5, height: 5))
        color6.setFill()
        rectangle48Path.fill()
        UIColor.white.setStroke()
        rectangle48Path.lineWidth = 0
        rectangle48Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 49 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle49Path = UIBezierPath(rect: CGRect(x: 42, y: 20, width: 5, height: 5))
        color6.setFill()
        rectangle49Path.fill()
        UIColor.white.setStroke()
        rectangle49Path.lineWidth = 0
        rectangle49Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 50 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle50Path = UIBezierPath(rect: CGRect(x: 47, y: 10, width: 5, height: 5))
        color6.setFill()
        rectangle50Path.fill()
        UIColor.white.setStroke()
        rectangle50Path.lineWidth = 0
        rectangle50Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 51 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle51Path = UIBezierPath(rect: CGRect(x: 47, y: 15, width: 5, height: 5))
        color6.setFill()
        rectangle51Path.fill()
        UIColor.white.setStroke()
        rectangle51Path.lineWidth = 0
        rectangle51Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 22 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle22Path = UIBezierPath(rect: CGRect(x: 2, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle22Path.fill()
        UIColor.white.setStroke()
        rectangle22Path.lineWidth = 0
        rectangle22Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 52 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle52Path = UIBezierPath(rect: CGRect(x: 22, y: 25, width: 5, height: 5))
        color6.setFill()
        rectangle52Path.fill()
        UIColor.white.setStroke()
        rectangle52Path.lineWidth = 0
        rectangle52Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 53 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle53Path = UIBezierPath(rect: CGRect(x: 37, y: 25, width: 5, height: 5))
        color6.setFill()
        rectangle53Path.fill()
        UIColor.white.setStroke()
        rectangle53Path.lineWidth = 0
        rectangle53Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 54 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle54Path = UIBezierPath(rect: CGRect(x: 47, y: 25, width: 5, height: 5))
        color6.setFill()
        rectangle54Path.fill()
        UIColor.white.setStroke()
        rectangle54Path.lineWidth = 0
        rectangle54Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 55 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle55Path = UIBezierPath(rect: CGRect(x: 42, y: 25, width: 5, height: 5))
        color6.setFill()
        rectangle55Path.fill()
        UIColor.white.setStroke()
        rectangle55Path.lineWidth = 0
        rectangle55Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 56 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle56Path = UIBezierPath(rect: CGRect(x: 32, y: 25, width: 5, height: 5))
        color6.setFill()
        rectangle56Path.fill()
        UIColor.white.setStroke()
        rectangle56Path.lineWidth = 0
        rectangle56Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 57 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle57Path = UIBezierPath(rect: CGRect(x: 7, y: 25, width: 5, height: 5))
        color6.setFill()
        rectangle57Path.fill()
        UIColor.white.setStroke()
        rectangle57Path.lineWidth = 0
        rectangle57Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 58 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle58Path = UIBezierPath(rect: CGRect(x: 12, y: 25, width: 5, height: 5))
        color6.setFill()
        rectangle58Path.fill()
        UIColor.white.setStroke()
        rectangle58Path.lineWidth = 0
        rectangle58Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 59 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle59Path = UIBezierPath(rect: CGRect(x: 2, y: 25, width: 5, height: 5))
        color6.setFill()
        rectangle59Path.fill()
        UIColor.white.setStroke()
        rectangle59Path.lineWidth = 0
        rectangle59Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 60 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle60Path = UIBezierPath(rect: CGRect(x: 7, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle60Path.fill()
        UIColor.white.setStroke()
        rectangle60Path.lineWidth = 0
        rectangle60Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 61 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle61Path = UIBezierPath(rect: CGRect(x: 17, y: 25, width: 5, height: 5))
        color6.setFill()
        rectangle61Path.fill()
        UIColor.white.setStroke()
        rectangle61Path.lineWidth = 0
        rectangle61Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 62 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle62Path = UIBezierPath(rect: CGRect(x: 27, y: 25, width: 5, height: 5))
        color6.setFill()
        rectangle62Path.fill()
        UIColor.white.setStroke()
        rectangle62Path.lineWidth = 0
        rectangle62Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 63 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle63Path = UIBezierPath(rect: CGRect(x: 32, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle63Path.fill()
        UIColor.white.setStroke()
        rectangle63Path.lineWidth = 0
        rectangle63Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 64 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle64Path = UIBezierPath(rect: CGRect(x: 17, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle64Path.fill()
        UIColor.white.setStroke()
        rectangle64Path.lineWidth = 0
        rectangle64Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 65 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle65Path = UIBezierPath(rect: CGRect(x: 22, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle65Path.fill()
        UIColor.white.setStroke()
        rectangle65Path.lineWidth = 0
        rectangle65Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 66 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle66Path = UIBezierPath(rect: CGRect(x: 12, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle66Path.fill()
        UIColor.white.setStroke()
        rectangle66Path.lineWidth = 0
        rectangle66Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 67 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle67Path = UIBezierPath(rect: CGRect(x: 27, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle67Path.fill()
        UIColor.white.setStroke()
        rectangle67Path.lineWidth = 0
        rectangle67Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 69 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle69Path = UIBezierPath(rect: CGRect(x: 42, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle69Path.fill()
        UIColor.white.setStroke()
        rectangle69Path.lineWidth = 0
        rectangle69Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 71 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle71Path = UIBezierPath(rect: CGRect(x: 47, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle71Path.fill()
        UIColor.white.setStroke()
        rectangle71Path.lineWidth = 0
        rectangle71Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 72 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle72Path = UIBezierPath(rect: CGRect(x: 37, y: 30, width: 5, height: 5))
        color6.setFill()
        rectangle72Path.fill()
        UIColor.white.setStroke()
        rectangle72Path.lineWidth = 0
        rectangle72Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 73 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle73Path = UIBezierPath(rect: CGRect(x: 22, y: 35, width: 5, height: 5))
        color6.setFill()
        rectangle73Path.fill()
        UIColor.white.setStroke()
        rectangle73Path.lineWidth = 0
        rectangle73Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 74 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle74Path = UIBezierPath(rect: CGRect(x: 12, y: 35, width: 5, height: 5))
        color6.setFill()
        rectangle74Path.fill()
        UIColor.white.setStroke()
        rectangle74Path.lineWidth = 0
        rectangle74Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 75 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle75Path = UIBezierPath(rect: CGRect(x: 27, y: 35, width: 5, height: 5))
        color6.setFill()
        rectangle75Path.fill()
        UIColor.white.setStroke()
        rectangle75Path.lineWidth = 0
        rectangle75Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 76 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect14)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle76Path = UIBezierPath(rect: CGRect(x: 7, y: 35, width: 5, height: 5))
        color6.setFill()
        rectangle76Path.fill()
        UIColor.white.setStroke()
        rectangle76Path.lineWidth = 0
        rectangle76Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 77 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle77Path = UIBezierPath(rect: CGRect(x: 2, y: 35, width: 5, height: 5))
        color6.setFill()
        rectangle77Path.fill()
        UIColor.white.setStroke()
        rectangle77Path.lineWidth = 0
        rectangle77Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 78 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle78Path = UIBezierPath(rect: CGRect(x: 17, y: 35, width: 5, height: 5))
        color6.setFill()
        rectangle78Path.fill()
        UIColor.white.setStroke()
        rectangle78Path.lineWidth = 0
        rectangle78Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 79 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle79Path = UIBezierPath(rect: CGRect(x: 47, y: 35, width: 5, height: 5))
        color6.setFill()
        rectangle79Path.fill()
        UIColor.white.setStroke()
        rectangle79Path.lineWidth = 0
        rectangle79Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 80 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle80Path = UIBezierPath(rect: CGRect(x: 32, y: 35, width: 5, height: 5))
        color6.setFill()
        rectangle80Path.fill()
        UIColor.white.setStroke()
        rectangle80Path.lineWidth = 0
        rectangle80Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 81 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle81Path = UIBezierPath(rect: CGRect(x: 37, y: 35, width: 5, height: 5))
        color6.setFill()
        rectangle81Path.fill()
        UIColor.white.setStroke()
        rectangle81Path.lineWidth = 0
        rectangle81Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 82 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle82Path = UIBezierPath(rect: CGRect(x: 42, y: 35, width: 5, height: 5))
        color6.setFill()
        rectangle82Path.fill()
        UIColor.white.setStroke()
        rectangle82Path.lineWidth = 0
        rectangle82Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 83 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle83Path = UIBezierPath(rect: CGRect(x: 2, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle83Path.fill()
        UIColor.white.setStroke()
        rectangle83Path.lineWidth = 0
        rectangle83Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 84 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle84Path = UIBezierPath(rect: CGRect(x: 12, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle84Path.fill()
        UIColor.white.setStroke()
        rectangle84Path.lineWidth = 0
        rectangle84Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 85 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle85Path = UIBezierPath(rect: CGRect(x: 17, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle85Path.fill()
        UIColor.white.setStroke()
        rectangle85Path.lineWidth = 0
        rectangle85Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 86 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle86Path = UIBezierPath(rect: CGRect(x: 32, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle86Path.fill()
        UIColor.white.setStroke()
        rectangle86Path.lineWidth = 0
        rectangle86Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 87 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle87Path = UIBezierPath(rect: CGRect(x: 37, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle87Path.fill()
        UIColor.white.setStroke()
        rectangle87Path.lineWidth = 0
        rectangle87Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 88 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle88Path = UIBezierPath(rect: CGRect(x: 7, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle88Path.fill()
        UIColor.white.setStroke()
        rectangle88Path.lineWidth = 0
        rectangle88Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 89 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect8)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle89Path = UIBezierPath(rect: CGRect(x: 27, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle89Path.fill()
        UIColor.white.setStroke()
        rectangle89Path.lineWidth = 0
        rectangle89Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 90 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect10)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle90Path = UIBezierPath(rect: CGRect(x: 42, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle90Path.fill()
        UIColor.white.setStroke()
        rectangle90Path.lineWidth = 0
        rectangle90Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 91 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle91Path = UIBezierPath(rect: CGRect(x: 22, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle91Path.fill()
        UIColor.white.setStroke()
        rectangle91Path.lineWidth = 0
        rectangle91Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 93 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect5)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle93Path = UIBezierPath(rect: CGRect(x: 47, y: 40, width: 5, height: 5))
        color6.setFill()
        rectangle93Path.fill()
        UIColor.white.setStroke()
        rectangle93Path.lineWidth = 0
        rectangle93Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 95 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect12)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle95Path = UIBezierPath(rect: CGRect(x: 27, y: 45, width: 5, height: 5))
        color6.setFill()
        rectangle95Path.fill()
        UIColor.white.setStroke()
        rectangle95Path.lineWidth = 0
        rectangle95Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 96 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle96Path = UIBezierPath(rect: CGRect(x: 2, y: 45, width: 5, height: 5))
        color6.setFill()
        rectangle96Path.fill()
        UIColor.white.setStroke()
        rectangle96Path.lineWidth = 0
        rectangle96Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 106 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle106Path = UIBezierPath(rect: CGRect(x: 22, y: 45, width: 5, height: 5))
        color6.setFill()
        rectangle106Path.fill()
        UIColor.white.setStroke()
        rectangle106Path.lineWidth = 0
        rectangle106Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 107 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle107Path = UIBezierPath(rect: CGRect(x: 7, y: 45, width: 5, height: 5))
        color6.setFill()
        rectangle107Path.fill()
        UIColor.white.setStroke()
        rectangle107Path.lineWidth = 0
        rectangle107Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 108 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle108Path = UIBezierPath(rect: CGRect(x: 12, y: 45, width: 5, height: 5))
        color6.setFill()
        rectangle108Path.fill()
        UIColor.white.setStroke()
        rectangle108Path.lineWidth = 0
        rectangle108Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 109 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect16)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle109Path = UIBezierPath(rect: CGRect(x: 32, y: 45, width: 5, height: 5))
        color6.setFill()
        rectangle109Path.fill()
        UIColor.white.setStroke()
        rectangle109Path.lineWidth = 0
        rectangle109Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 111 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect11)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle111Path = UIBezierPath(rect: CGRect(x: 17, y: 45, width: 5, height: 5))
        color6.setFill()
        rectangle111Path.fill()
        UIColor.white.setStroke()
        rectangle111Path.lineWidth = 0
        rectangle111Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 112 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect6)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle112Path = UIBezierPath(rect: CGRect(x: 37, y: 45, width: 5, height: 5))
        color6.setFill()
        rectangle112Path.fill()
        UIColor.white.setStroke()
        rectangle112Path.lineWidth = 0
        rectangle112Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 115 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect13)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle115Path = UIBezierPath(rect: CGRect(x: 42, y: 45, width: 5, height: 5))
        color6.setFill()
        rectangle115Path.fill()
        UIColor.white.setStroke()
        rectangle115Path.lineWidth = 0
        rectangle115Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Rectangle 116 Drawing
        context.saveGState()
        context.setAlpha(nextRoundRect18)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let rectangle116Path = UIBezierPath(rect: CGRect(x: 47, y: 45, width: 5, height: 5))
        color6.setFill()
        rectangle116Path.fill()
        UIColor.white.setStroke()
        rectangle116Path.lineWidth = 0
        rectangle116Path.stroke()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Text Drawing
        context.saveGState()
        context.setAlpha(buttonOpacity)

        let textRect = CGRect(x: 2, y: 1, width: 48, height: 47)
        let textTextContent = "â¥¢"
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .center
        let textFontAttributes = [
            .font: UIFont(name: "Play-Bold", size: 36)!,
            .foregroundColor: UIColor.white,
            .paragraphStyle: textStyle,
        ] as [NSAttributedString.Key: Any]

        let textTextHeight: CGFloat = textTextContent.boundingRect(with: CGSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes, context: nil).height
        context.saveGState()
        context.clip(to: textRect)
        textTextContent.draw(in: CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawThickDollarPack2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 40), resizing: ResizingBehavior = .aspectFit, dollarMove: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 40), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 40)



        //// Image Declarations
        let dollar = UIImage(named: "dollar.png")!

        //// Variable Declarations
        let dollarMoveExpr1 = dollarMove <= 0.1 ? CGPoint(x: (1 - dollarMove * 10) * 65 + dollarMove * 10, y: (1 - dollarMove * 10) * 0 + dollarMove * 10 * 20) : CGPoint(x: 1, y: 20)
        let dollarMoveExpr2 = dollarMove <= 0.1 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.1 && dollarMove <= 0.2 ? CGPoint(x: (1 - (dollarMove - 0.1) * 10) * 65 + (dollarMove - 0.1) * 10, y: (1 - (dollarMove - 0.1) * 10) * 0 + (dollarMove - 0.1) * 10 * 18) : CGPoint(x: 1, y: 18))
        let dollarMoveExpr3 = dollarMove <= 0.2 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.2 && dollarMove <= 0.3 ? CGPoint(x: (1 - (dollarMove - 0.2) * 10) * 65 + (dollarMove - 0.2) * 10, y: (1 - (dollarMove - 0.2) * 10) * 0 + (dollarMove - 0.2) * 10 * 16) : CGPoint(x: 1, y: 16))
        let dollarMoveExpr4 = dollarMove <= 0.3 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.3 && dollarMove <= 0.4 ? CGPoint(x: (1 - (dollarMove - 0.3) * 10) * 65 + (dollarMove - 0.3) * 10, y: (1 - (dollarMove - 0.3) * 10) * 0 + (dollarMove - 0.3) * 10 * 14) : CGPoint(x: 1, y: 14))
        let dollarMoveExpr5 = dollarMove <= 0.4 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.4 && dollarMove <= 0.5 ? CGPoint(x: (1 - (dollarMove - 0.4) * 10) * 65 + (dollarMove - 0.4) * 10, y: (1 - (dollarMove - 0.4) * 10) * 0 + (dollarMove - 0.4) * 10 * 12) : CGPoint(x: 1, y: 12))
        let dollarMoveExpr6 = dollarMove <= 0.5 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.5 && dollarMove <= 0.6 ? CGPoint(x: (1 - (dollarMove - 0.5) * 10) * 65 + (dollarMove - 0.5) * 10, y: (1 - (dollarMove - 0.5) * 10) * 0 + (dollarMove - 0.5) * 10 * 10) : CGPoint(x: 1, y: 10))
        let dollarMoveExpr7 = dollarMove <= 0.6 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.6 && dollarMove <= 0.7 ? CGPoint(x: (1 - (dollarMove - 0.6) * 10) * 65 + (dollarMove - 0.6) * 10, y: (1 - (dollarMove - 0.6) * 10) * 0 + (dollarMove - 0.6) * 10 * 8) : CGPoint(x: 1, y: 8))
        let dollarMoveExpr8 = dollarMove <= 0.7 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.7 && dollarMove <= 0.8 ? CGPoint(x: (1 - (dollarMove - 0.7) * 10) * 65 + (dollarMove - 0.7) * 10, y: (1 - (dollarMove - 0.7) * 10) * 0 + (dollarMove - 0.7) * 10 * 6) : CGPoint(x: 1, y: 6))
        let dollarMoveExpr9 = dollarMove <= 0.8 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.8 && dollarMove <= 0.9 ? CGPoint(x: (1 - (dollarMove - 0.8) * 10) * 65 + (dollarMove - 0.9) * 10, y: (1 - (dollarMove - 0.8) * 10) * 0 + (dollarMove - 0.9) * 10 * 2) : CGPoint(x: 1, y: 4))
        let dollarScaleExpr1: CGFloat = dollarMove <= 0.1 ? (1 - dollarMove * 10) * 0.17 + dollarMove * 10 * 0.15 : 0.15
        let dollarScaleExpr2: CGFloat = dollarMove <= 0.1 ? 0 : (dollarMove > 0.1 && dollarMove <= 0.2 ? (1 - (dollarMove - 0.1) * 10) * 0.17 + (dollarMove - 0.1) * 10 * 0.15 : 0.15)
        let dollarScaleExpr3: CGFloat = dollarMove <= 0.2 ? 0 : (dollarMove > 0.2 && dollarMove <= 0.3 ? (1 - (dollarMove - 0.2) * 10) * 0.17 + (dollarMove - 0.2) * 10 * 0.15 : 0.15)
        let dollarScaleExpr4: CGFloat = dollarMove <= 0.3 ? 0 : (dollarMove > 0.3 && dollarMove <= 0.4 ? (1 - (dollarMove - 0.3) * 10) * 0.17 + (dollarMove - 0.3) * 10 * 0.15 : 0.15)
        let dollarScaleExpr5: CGFloat = dollarMove <= 0.4 ? 0 : (dollarMove > 0.4 && dollarMove <= 0.5 ? (1 - (dollarMove - 0.4) * 10) * 0.17 + (dollarMove - 0.4) * 10 * 0.15 : 0.15)
        let dollarScaleExpr6: CGFloat = dollarMove <= 0.5 ? 0 : (dollarMove > 0.5 && dollarMove <= 0.6 ? (1 - (dollarMove - 0.5) * 10) * 0.17 + (dollarMove - 0.5) * 10 * 0.15 : 0.15)
        let dollarScaleExpr7: CGFloat = dollarMove <= 0.6 ? 0 : (dollarMove > 0.6 && dollarMove <= 0.7 ? (1 - (dollarMove - 0.6) * 10) * 0.17 + (dollarMove - 0.6) * 10 * 0.15 : 0.15)
        let dollarScaleExpr8: CGFloat = dollarMove <= 0.7 ? 0 : (dollarMove > 0.7 && dollarMove <= 0.8 ? (1 - (dollarMove - 0.7) * 10) * 0.17 + (dollarMove - 0.7) * 10 * 0.15 : 0.15)
        let dollarScaleExpr9: CGFloat = dollarMove <= 0.8 ? 0 : (dollarMove > 0.8 && dollarMove <= 0.9 ? (1 - (dollarMove - 0.8) * 10) * 0.17 + (dollarMove - 0.8) * 10 * 0.15 : 0.15)

        //// d1 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr1.x, y: dollarMoveExpr1.y)
        context.scaleBy(x: dollarScaleExpr1, y: dollarScaleExpr1)

        let d1Rect = CGRect(x: 0, y: 0, width: 198, height: 131)
        let d1Path = UIBezierPath(rect: d1Rect)
        context.saveGState()
        d1Path.addClip()
        context.translateBy(x: floor(d1Rect.minX + 0.5), y: floor(d1Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -dollar.size.height)
        context.draw(dollar.cgImage!, in: CGRect(x: 0, y: 0, width: dollar.size.width, height: dollar.size.height))
        context.restoreGState()

        context.restoreGState()


        //// d2 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr2.x, y: dollarMoveExpr2.y)
        context.scaleBy(x: dollarScaleExpr2, y: dollarScaleExpr2)

        let d2Rect = CGRect(x: 0, y: 0, width: 198, height: 131)
        let d2Path = UIBezierPath(rect: d2Rect)
        context.saveGState()
        d2Path.addClip()
        context.translateBy(x: floor(d2Rect.minX + 0.5), y: floor(d2Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -dollar.size.height)
        context.draw(dollar.cgImage!, in: CGRect(x: 0, y: 0, width: dollar.size.width, height: dollar.size.height))
        context.restoreGState()

        context.restoreGState()


        //// d3 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr3.x, y: dollarMoveExpr3.y)
        context.scaleBy(x: dollarScaleExpr3, y: dollarScaleExpr3)

        let d3Rect = CGRect(x: 0, y: 0, width: 198, height: 131)
        let d3Path = UIBezierPath(rect: d3Rect)
        context.saveGState()
        d3Path.addClip()
        context.translateBy(x: floor(d3Rect.minX + 0.5), y: floor(d3Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -dollar.size.height)
        context.draw(dollar.cgImage!, in: CGRect(x: 0, y: 0, width: dollar.size.width, height: dollar.size.height))
        context.restoreGState()

        context.restoreGState()


        //// d4 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr4.x, y: dollarMoveExpr4.y)
        context.scaleBy(x: dollarScaleExpr4, y: dollarScaleExpr4)

        let d4Rect = CGRect(x: 0, y: 0, width: 198, height: 131)
        let d4Path = UIBezierPath(rect: d4Rect)
        context.saveGState()
        d4Path.addClip()
        context.translateBy(x: floor(d4Rect.minX + 0.5), y: floor(d4Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -dollar.size.height)
        context.draw(dollar.cgImage!, in: CGRect(x: 0, y: 0, width: dollar.size.width, height: dollar.size.height))
        context.restoreGState()

        context.restoreGState()


        //// d5 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr5.x, y: dollarMoveExpr5.y)
        context.scaleBy(x: dollarScaleExpr5, y: dollarScaleExpr5)

        let d5Rect = CGRect(x: 0, y: 0, width: 198, height: 131)
        let d5Path = UIBezierPath(rect: d5Rect)
        context.saveGState()
        d5Path.addClip()
        context.translateBy(x: floor(d5Rect.minX + 0.5), y: floor(d5Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -dollar.size.height)
        context.draw(dollar.cgImage!, in: CGRect(x: 0, y: 0, width: dollar.size.width, height: dollar.size.height))
        context.restoreGState()

        context.restoreGState()


        //// d6 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr6.x, y: dollarMoveExpr6.y)
        context.scaleBy(x: dollarScaleExpr6, y: dollarScaleExpr6)

        let d6Rect = CGRect(x: 0, y: 0, width: 198, height: 131)
        let d6Path = UIBezierPath(rect: d6Rect)
        context.saveGState()
        d6Path.addClip()
        context.translateBy(x: floor(d6Rect.minX + 0.5), y: floor(d6Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -dollar.size.height)
        context.draw(dollar.cgImage!, in: CGRect(x: 0, y: 0, width: dollar.size.width, height: dollar.size.height))
        context.restoreGState()

        context.restoreGState()


        //// d7 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr7.x, y: dollarMoveExpr7.y)
        context.scaleBy(x: dollarScaleExpr7, y: dollarScaleExpr7)

        let d7Rect = CGRect(x: 0, y: 0, width: 198, height: 131)
        let d7Path = UIBezierPath(rect: d7Rect)
        context.saveGState()
        d7Path.addClip()
        context.translateBy(x: floor(d7Rect.minX + 0.5), y: floor(d7Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -dollar.size.height)
        context.draw(dollar.cgImage!, in: CGRect(x: 0, y: 0, width: dollar.size.width, height: dollar.size.height))
        context.restoreGState()

        context.restoreGState()


        //// d8 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr8.x, y: dollarMoveExpr8.y)
        context.scaleBy(x: dollarScaleExpr8, y: dollarScaleExpr8)

        let d8Rect = CGRect(x: 0, y: 0, width: 198, height: 131)
        let d8Path = UIBezierPath(rect: d8Rect)
        context.saveGState()
        d8Path.addClip()
        context.translateBy(x: floor(d8Rect.minX + 0.5), y: floor(d8Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -dollar.size.height)
        context.draw(dollar.cgImage!, in: CGRect(x: 0, y: 0, width: dollar.size.width, height: dollar.size.height))
        context.restoreGState()

        context.restoreGState()


        //// d9 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr9.x, y: dollarMoveExpr9.y)
        context.scaleBy(x: dollarScaleExpr9, y: dollarScaleExpr9)

        let d9Rect = CGRect(x: 0, y: 0, width: 198, height: 131)
        let d9Path = UIBezierPath(rect: d9Rect)
        context.saveGState()
        d9Path.addClip()
        context.translateBy(x: floor(d9Rect.minX + 0.5), y: floor(d9Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -dollar.size.height)
        context.draw(dollar.cgImage!, in: CGRect(x: 0, y: 0, width: dollar.size.width, height: dollar.size.height))
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawThickRupeePack(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 40), resizing: ResizingBehavior = .aspectFit, dollarMove: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 40), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 40)



        //// Image Declarations
        let rupees = UIImage(named: "rupees.png")!

        //// Variable Declarations
        let dollarMoveExpr1 = dollarMove <= 0.1 ? CGPoint(x: (1 - dollarMove * 10) * 65 + dollarMove * 10, y: (1 - dollarMove * 10) * 0 + dollarMove * 10 * 20) : CGPoint(x: 1, y: 20)
        let dollarMoveExpr2 = dollarMove <= 0.1 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.1 && dollarMove <= 0.2 ? CGPoint(x: (1 - (dollarMove - 0.1) * 10) * 65 + (dollarMove - 0.1) * 10, y: (1 - (dollarMove - 0.1) * 10) * 0 + (dollarMove - 0.1) * 10 * 18) : CGPoint(x: 1, y: 18))
        let dollarMoveExpr3 = dollarMove <= 0.2 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.2 && dollarMove <= 0.3 ? CGPoint(x: (1 - (dollarMove - 0.2) * 10) * 65 + (dollarMove - 0.2) * 10, y: (1 - (dollarMove - 0.2) * 10) * 0 + (dollarMove - 0.2) * 10 * 16) : CGPoint(x: 1, y: 16))
        let dollarMoveExpr4 = dollarMove <= 0.3 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.3 && dollarMove <= 0.4 ? CGPoint(x: (1 - (dollarMove - 0.3) * 10) * 65 + (dollarMove - 0.3) * 10, y: (1 - (dollarMove - 0.3) * 10) * 0 + (dollarMove - 0.3) * 10 * 14) : CGPoint(x: 1, y: 14))
        let dollarMoveExpr5 = dollarMove <= 0.4 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.4 && dollarMove <= 0.5 ? CGPoint(x: (1 - (dollarMove - 0.4) * 10) * 65 + (dollarMove - 0.4) * 10, y: (1 - (dollarMove - 0.4) * 10) * 0 + (dollarMove - 0.4) * 10 * 12) : CGPoint(x: 1, y: 12))
        let dollarMoveExpr6 = dollarMove <= 0.5 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.5 && dollarMove <= 0.6 ? CGPoint(x: (1 - (dollarMove - 0.5) * 10) * 65 + (dollarMove - 0.5) * 10, y: (1 - (dollarMove - 0.5) * 10) * 0 + (dollarMove - 0.5) * 10 * 10) : CGPoint(x: 1, y: 10))
        let dollarMoveExpr7 = dollarMove <= 0.6 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.6 && dollarMove <= 0.7 ? CGPoint(x: (1 - (dollarMove - 0.6) * 10) * 65 + (dollarMove - 0.6) * 10, y: (1 - (dollarMove - 0.6) * 10) * 0 + (dollarMove - 0.6) * 10 * 8) : CGPoint(x: 1, y: 8))
        let dollarMoveExpr8 = dollarMove <= 0.7 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.7 && dollarMove <= 0.8 ? CGPoint(x: (1 - (dollarMove - 0.7) * 10) * 65 + (dollarMove - 0.7) * 10, y: (1 - (dollarMove - 0.7) * 10) * 0 + (dollarMove - 0.7) * 10 * 6) : CGPoint(x: 1, y: 6))
        let dollarMoveExpr9 = dollarMove <= 0.8 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.8 && dollarMove <= 0.9 ? CGPoint(x: (1 - (dollarMove - 0.8) * 10) * 65 + (dollarMove - 0.9) * 10, y: (1 - (dollarMove - 0.8) * 10) * 0 + (dollarMove - 0.9) * 10 * 2) : CGPoint(x: 1, y: 4))
        let dollarScaleExpr1: CGFloat = dollarMove <= 0.1 ? (1 - dollarMove * 10) * 0.17 + dollarMove * 10 * 0.15 : 0.15
        let dollarScaleExpr2: CGFloat = dollarMove <= 0.1 ? 0 : (dollarMove > 0.1 && dollarMove <= 0.2 ? (1 - (dollarMove - 0.1) * 10) * 0.17 + (dollarMove - 0.1) * 10 * 0.15 : 0.15)
        let dollarScaleExpr3: CGFloat = dollarMove <= 0.2 ? 0 : (dollarMove > 0.2 && dollarMove <= 0.3 ? (1 - (dollarMove - 0.2) * 10) * 0.17 + (dollarMove - 0.2) * 10 * 0.15 : 0.15)
        let dollarScaleExpr4: CGFloat = dollarMove <= 0.3 ? 0 : (dollarMove > 0.3 && dollarMove <= 0.4 ? (1 - (dollarMove - 0.3) * 10) * 0.17 + (dollarMove - 0.3) * 10 * 0.15 : 0.15)
        let dollarScaleExpr5: CGFloat = dollarMove <= 0.4 ? 0 : (dollarMove > 0.4 && dollarMove <= 0.5 ? (1 - (dollarMove - 0.4) * 10) * 0.17 + (dollarMove - 0.4) * 10 * 0.15 : 0.15)
        let dollarScaleExpr6: CGFloat = dollarMove <= 0.5 ? 0 : (dollarMove > 0.5 && dollarMove <= 0.6 ? (1 - (dollarMove - 0.5) * 10) * 0.17 + (dollarMove - 0.5) * 10 * 0.15 : 0.15)
        let dollarScaleExpr7: CGFloat = dollarMove <= 0.6 ? 0 : (dollarMove > 0.6 && dollarMove <= 0.7 ? (1 - (dollarMove - 0.6) * 10) * 0.17 + (dollarMove - 0.6) * 10 * 0.15 : 0.15)
        let dollarScaleExpr8: CGFloat = dollarMove <= 0.7 ? 0 : (dollarMove > 0.7 && dollarMove <= 0.8 ? (1 - (dollarMove - 0.7) * 10) * 0.17 + (dollarMove - 0.7) * 10 * 0.15 : 0.15)
        let dollarScaleExpr9: CGFloat = dollarMove <= 0.8 ? 0 : (dollarMove > 0.8 && dollarMove <= 0.9 ? (1 - (dollarMove - 0.8) * 10) * 0.17 + (dollarMove - 0.8) * 10 * 0.15 : 0.15)

        //// i1 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr1.x, y: dollarMoveExpr1.y)
        context.scaleBy(x: dollarScaleExpr1, y: dollarScaleExpr1)

        let i1Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let i1Path = UIBezierPath(rect: i1Rect)
        context.saveGState()
        i1Path.addClip()
        context.translateBy(x: floor(i1Rect.minX + 0.5), y: floor(i1Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -rupees.size.height)
        context.draw(rupees.cgImage!, in: CGRect(x: 0, y: 0, width: rupees.size.width, height: rupees.size.height))
        context.restoreGState()

        context.restoreGState()


        //// i2 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr2.x, y: dollarMoveExpr2.y)
        context.scaleBy(x: dollarScaleExpr2, y: dollarScaleExpr2)

        let i2Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let i2Path = UIBezierPath(rect: i2Rect)
        context.saveGState()
        i2Path.addClip()
        context.translateBy(x: floor(i2Rect.minX + 0.5), y: floor(i2Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -rupees.size.height)
        context.draw(rupees.cgImage!, in: CGRect(x: 0, y: 0, width: rupees.size.width, height: rupees.size.height))
        context.restoreGState()

        context.restoreGState()


        //// i3 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr3.x, y: dollarMoveExpr3.y)
        context.scaleBy(x: dollarScaleExpr3, y: dollarScaleExpr3)

        let i3Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let i3Path = UIBezierPath(rect: i3Rect)
        context.saveGState()
        i3Path.addClip()
        context.translateBy(x: floor(i3Rect.minX + 0.5), y: floor(i3Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -rupees.size.height)
        context.draw(rupees.cgImage!, in: CGRect(x: 0, y: 0, width: rupees.size.width, height: rupees.size.height))
        context.restoreGState()

        context.restoreGState()


        //// i4 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr4.x, y: dollarMoveExpr4.y)
        context.scaleBy(x: dollarScaleExpr4, y: dollarScaleExpr4)

        let i4Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let i4Path = UIBezierPath(rect: i4Rect)
        context.saveGState()
        i4Path.addClip()
        context.translateBy(x: floor(i4Rect.minX + 0.5), y: floor(i4Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -rupees.size.height)
        context.draw(rupees.cgImage!, in: CGRect(x: 0, y: 0, width: rupees.size.width, height: rupees.size.height))
        context.restoreGState()

        context.restoreGState()


        //// i5 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr5.x, y: dollarMoveExpr5.y)
        context.scaleBy(x: dollarScaleExpr5, y: dollarScaleExpr5)

        let i5Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let i5Path = UIBezierPath(rect: i5Rect)
        context.saveGState()
        i5Path.addClip()
        context.translateBy(x: floor(i5Rect.minX + 0.5), y: floor(i5Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -rupees.size.height)
        context.draw(rupees.cgImage!, in: CGRect(x: 0, y: 0, width: rupees.size.width, height: rupees.size.height))
        context.restoreGState()

        context.restoreGState()


        //// i6 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr6.x, y: dollarMoveExpr6.y)
        context.scaleBy(x: dollarScaleExpr6, y: dollarScaleExpr6)

        let i6Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let i6Path = UIBezierPath(rect: i6Rect)
        context.saveGState()
        i6Path.addClip()
        context.translateBy(x: floor(i6Rect.minX + 0.5), y: floor(i6Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -rupees.size.height)
        context.draw(rupees.cgImage!, in: CGRect(x: 0, y: 0, width: rupees.size.width, height: rupees.size.height))
        context.restoreGState()

        context.restoreGState()


        //// i7 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr7.x, y: dollarMoveExpr7.y)
        context.scaleBy(x: dollarScaleExpr7, y: dollarScaleExpr7)

        let i7Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let i7Path = UIBezierPath(rect: i7Rect)
        context.saveGState()
        i7Path.addClip()
        context.translateBy(x: floor(i7Rect.minX + 0.5), y: floor(i7Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -rupees.size.height)
        context.draw(rupees.cgImage!, in: CGRect(x: 0, y: 0, width: rupees.size.width, height: rupees.size.height))
        context.restoreGState()

        context.restoreGState()


        //// i8 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr8.x, y: dollarMoveExpr8.y)
        context.scaleBy(x: dollarScaleExpr8, y: dollarScaleExpr8)

        let i8Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let i8Path = UIBezierPath(rect: i8Rect)
        context.saveGState()
        i8Path.addClip()
        context.translateBy(x: floor(i8Rect.minX + 0.5), y: floor(i8Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -rupees.size.height)
        context.draw(rupees.cgImage!, in: CGRect(x: 0, y: 0, width: rupees.size.width, height: rupees.size.height))
        context.restoreGState()

        context.restoreGState()


        //// i9 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr9.x, y: dollarMoveExpr9.y)
        context.scaleBy(x: dollarScaleExpr9, y: dollarScaleExpr9)

        let i9Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let i9Path = UIBezierPath(rect: i9Rect)
        context.saveGState()
        i9Path.addClip()
        context.translateBy(x: floor(i9Rect.minX + 0.5), y: floor(i9Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -rupees.size.height)
        context.draw(rupees.cgImage!, in: CGRect(x: 0, y: 0, width: rupees.size.width, height: rupees.size.height))
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawThickPoundPack(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 40), resizing: ResizingBehavior = .aspectFit, dollarMove: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 40), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 40)



        //// Image Declarations
        let pound = UIImage(named: "pound.png")!

        //// Variable Declarations
        let dollarMoveExpr1 = dollarMove <= 0.1 ? CGPoint(x: (1 - dollarMove * 10) * 65 + dollarMove * 10, y: (1 - dollarMove * 10) * 0 + dollarMove * 10 * 20) : CGPoint(x: 1, y: 20)
        let dollarMoveExpr2 = dollarMove <= 0.1 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.1 && dollarMove <= 0.2 ? CGPoint(x: (1 - (dollarMove - 0.1) * 10) * 65 + (dollarMove - 0.1) * 10, y: (1 - (dollarMove - 0.1) * 10) * 0 + (dollarMove - 0.1) * 10 * 18) : CGPoint(x: 1, y: 18))
        let dollarMoveExpr3 = dollarMove <= 0.2 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.2 && dollarMove <= 0.3 ? CGPoint(x: (1 - (dollarMove - 0.2) * 10) * 65 + (dollarMove - 0.2) * 10, y: (1 - (dollarMove - 0.2) * 10) * 0 + (dollarMove - 0.2) * 10 * 16) : CGPoint(x: 1, y: 16))
        let dollarMoveExpr4 = dollarMove <= 0.3 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.3 && dollarMove <= 0.4 ? CGPoint(x: (1 - (dollarMove - 0.3) * 10) * 65 + (dollarMove - 0.3) * 10, y: (1 - (dollarMove - 0.3) * 10) * 0 + (dollarMove - 0.3) * 10 * 14) : CGPoint(x: 1, y: 14))
        let dollarMoveExpr5 = dollarMove <= 0.4 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.4 && dollarMove <= 0.5 ? CGPoint(x: (1 - (dollarMove - 0.4) * 10) * 65 + (dollarMove - 0.4) * 10, y: (1 - (dollarMove - 0.4) * 10) * 0 + (dollarMove - 0.4) * 10 * 12) : CGPoint(x: 1, y: 12))
        let dollarMoveExpr6 = dollarMove <= 0.5 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.5 && dollarMove <= 0.6 ? CGPoint(x: (1 - (dollarMove - 0.5) * 10) * 65 + (dollarMove - 0.5) * 10, y: (1 - (dollarMove - 0.5) * 10) * 0 + (dollarMove - 0.5) * 10 * 10) : CGPoint(x: 1, y: 10))
        let dollarMoveExpr7 = dollarMove <= 0.6 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.6 && dollarMove <= 0.7 ? CGPoint(x: (1 - (dollarMove - 0.6) * 10) * 65 + (dollarMove - 0.6) * 10, y: (1 - (dollarMove - 0.6) * 10) * 0 + (dollarMove - 0.6) * 10 * 8) : CGPoint(x: 1, y: 8))
        let dollarMoveExpr8 = dollarMove <= 0.7 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.7 && dollarMove <= 0.8 ? CGPoint(x: (1 - (dollarMove - 0.7) * 10) * 65 + (dollarMove - 0.7) * 10, y: (1 - (dollarMove - 0.7) * 10) * 0 + (dollarMove - 0.7) * 10 * 6) : CGPoint(x: 1, y: 6))
        let dollarMoveExpr9 = dollarMove <= 0.8 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.8 && dollarMove <= 0.9 ? CGPoint(x: (1 - (dollarMove - 0.8) * 10) * 65 + (dollarMove - 0.9) * 10, y: (1 - (dollarMove - 0.8) * 10) * 0 + (dollarMove - 0.9) * 10 * 2) : CGPoint(x: 1, y: 4))
        let dollarScaleExpr1: CGFloat = dollarMove <= 0.1 ? (1 - dollarMove * 10) * 0.17 + dollarMove * 10 * 0.15 : 0.15
        let dollarScaleExpr2: CGFloat = dollarMove <= 0.1 ? 0 : (dollarMove > 0.1 && dollarMove <= 0.2 ? (1 - (dollarMove - 0.1) * 10) * 0.17 + (dollarMove - 0.1) * 10 * 0.15 : 0.15)
        let dollarScaleExpr3: CGFloat = dollarMove <= 0.2 ? 0 : (dollarMove > 0.2 && dollarMove <= 0.3 ? (1 - (dollarMove - 0.2) * 10) * 0.17 + (dollarMove - 0.2) * 10 * 0.15 : 0.15)
        let dollarScaleExpr4: CGFloat = dollarMove <= 0.3 ? 0 : (dollarMove > 0.3 && dollarMove <= 0.4 ? (1 - (dollarMove - 0.3) * 10) * 0.17 + (dollarMove - 0.3) * 10 * 0.15 : 0.15)
        let dollarScaleExpr5: CGFloat = dollarMove <= 0.4 ? 0 : (dollarMove > 0.4 && dollarMove <= 0.5 ? (1 - (dollarMove - 0.4) * 10) * 0.17 + (dollarMove - 0.4) * 10 * 0.15 : 0.15)
        let dollarScaleExpr6: CGFloat = dollarMove <= 0.5 ? 0 : (dollarMove > 0.5 && dollarMove <= 0.6 ? (1 - (dollarMove - 0.5) * 10) * 0.17 + (dollarMove - 0.5) * 10 * 0.15 : 0.15)
        let dollarScaleExpr7: CGFloat = dollarMove <= 0.6 ? 0 : (dollarMove > 0.6 && dollarMove <= 0.7 ? (1 - (dollarMove - 0.6) * 10) * 0.17 + (dollarMove - 0.6) * 10 * 0.15 : 0.15)
        let dollarScaleExpr8: CGFloat = dollarMove <= 0.7 ? 0 : (dollarMove > 0.7 && dollarMove <= 0.8 ? (1 - (dollarMove - 0.7) * 10) * 0.17 + (dollarMove - 0.7) * 10 * 0.15 : 0.15)
        let dollarScaleExpr9: CGFloat = dollarMove <= 0.8 ? 0 : (dollarMove > 0.8 && dollarMove <= 0.9 ? (1 - (dollarMove - 0.8) * 10) * 0.17 + (dollarMove - 0.8) * 10 * 0.15 : 0.15)

        //// p1 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr1.x, y: dollarMoveExpr1.y)
        context.scaleBy(x: dollarScaleExpr1, y: dollarScaleExpr1)

        let p1Rect = CGRect(x: 0, y: 0, width: 202, height: 136)
        let p1Path = UIBezierPath(rect: p1Rect)
        context.saveGState()
        p1Path.addClip()
        context.translateBy(x: floor(p1Rect.minX + 0.5), y: floor(p1Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -pound.size.height)
        context.draw(pound.cgImage!, in: CGRect(x: 0, y: 0, width: pound.size.width, height: pound.size.height))
        context.restoreGState()

        context.restoreGState()


        //// p2 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr2.x, y: dollarMoveExpr2.y)
        context.scaleBy(x: dollarScaleExpr2, y: dollarScaleExpr2)

        let p2Rect = CGRect(x: 0, y: 0, width: 202, height: 136)
        let p2Path = UIBezierPath(rect: p2Rect)
        context.saveGState()
        p2Path.addClip()
        context.translateBy(x: floor(p2Rect.minX + 0.5), y: floor(p2Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -pound.size.height)
        context.draw(pound.cgImage!, in: CGRect(x: 0, y: 0, width: pound.size.width, height: pound.size.height))
        context.restoreGState()

        context.restoreGState()


        //// p3 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr3.x, y: dollarMoveExpr3.y)
        context.scaleBy(x: dollarScaleExpr3, y: dollarScaleExpr3)

        let p3Rect = CGRect(x: 0, y: 0, width: 202, height: 136)
        let p3Path = UIBezierPath(rect: p3Rect)
        context.saveGState()
        p3Path.addClip()
        context.translateBy(x: floor(p3Rect.minX + 0.5), y: floor(p3Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -pound.size.height)
        context.draw(pound.cgImage!, in: CGRect(x: 0, y: 0, width: pound.size.width, height: pound.size.height))
        context.restoreGState()

        context.restoreGState()


        //// p4 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr4.x, y: dollarMoveExpr4.y)
        context.scaleBy(x: dollarScaleExpr4, y: dollarScaleExpr4)

        let p4Rect = CGRect(x: 0, y: 0, width: 202, height: 136)
        let p4Path = UIBezierPath(rect: p4Rect)
        context.saveGState()
        p4Path.addClip()
        context.translateBy(x: floor(p4Rect.minX + 0.5), y: floor(p4Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -pound.size.height)
        context.draw(pound.cgImage!, in: CGRect(x: 0, y: 0, width: pound.size.width, height: pound.size.height))
        context.restoreGState()

        context.restoreGState()


        //// p5 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr5.x, y: dollarMoveExpr5.y)
        context.scaleBy(x: dollarScaleExpr5, y: dollarScaleExpr5)

        let p5Rect = CGRect(x: 0, y: 0, width: 202, height: 136)
        let p5Path = UIBezierPath(rect: p5Rect)
        context.saveGState()
        p5Path.addClip()
        context.translateBy(x: floor(p5Rect.minX + 0.5), y: floor(p5Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -pound.size.height)
        context.draw(pound.cgImage!, in: CGRect(x: 0, y: 0, width: pound.size.width, height: pound.size.height))
        context.restoreGState()

        context.restoreGState()


        //// p6 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr6.x, y: dollarMoveExpr6.y)
        context.scaleBy(x: dollarScaleExpr6, y: dollarScaleExpr6)

        let p6Rect = CGRect(x: 0, y: 0, width: 202, height: 136)
        let p6Path = UIBezierPath(rect: p6Rect)
        context.saveGState()
        p6Path.addClip()
        context.translateBy(x: floor(p6Rect.minX + 0.5), y: floor(p6Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -pound.size.height)
        context.draw(pound.cgImage!, in: CGRect(x: 0, y: 0, width: pound.size.width, height: pound.size.height))
        context.restoreGState()

        context.restoreGState()


        //// p7 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr7.x, y: dollarMoveExpr7.y)
        context.scaleBy(x: dollarScaleExpr7, y: dollarScaleExpr7)

        let p7Rect = CGRect(x: 0, y: 0, width: 202, height: 136)
        let p7Path = UIBezierPath(rect: p7Rect)
        context.saveGState()
        p7Path.addClip()
        context.translateBy(x: floor(p7Rect.minX + 0.5), y: floor(p7Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -pound.size.height)
        context.draw(pound.cgImage!, in: CGRect(x: 0, y: 0, width: pound.size.width, height: pound.size.height))
        context.restoreGState()

        context.restoreGState()


        //// p8 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr8.x, y: dollarMoveExpr8.y)
        context.scaleBy(x: dollarScaleExpr8, y: dollarScaleExpr8)

        let p8Rect = CGRect(x: 0, y: 0, width: 202, height: 136)
        let p8Path = UIBezierPath(rect: p8Rect)
        context.saveGState()
        p8Path.addClip()
        context.translateBy(x: floor(p8Rect.minX + 0.5), y: floor(p8Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -pound.size.height)
        context.draw(pound.cgImage!, in: CGRect(x: 0, y: 0, width: pound.size.width, height: pound.size.height))
        context.restoreGState()

        context.restoreGState()


        //// p9 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr9.x, y: dollarMoveExpr9.y)
        context.scaleBy(x: dollarScaleExpr9, y: dollarScaleExpr9)

        let p9Rect = CGRect(x: 0, y: 0, width: 202, height: 136)
        let p9Path = UIBezierPath(rect: p9Rect)
        context.saveGState()
        p9Path.addClip()
        context.translateBy(x: floor(p9Rect.minX + 0.5), y: floor(p9Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -pound.size.height)
        context.draw(pound.cgImage!, in: CGRect(x: 0, y: 0, width: pound.size.width, height: pound.size.height))
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawThickShekelPack(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 40), resizing: ResizingBehavior = .aspectFit, dollarMove: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 40), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 40)



        //// Image Declarations
        let shekel = UIImage(named: "shekel.png")!

        //// Variable Declarations
        let dollarMoveExpr1 = dollarMove <= 0.1 ? CGPoint(x: (1 - dollarMove * 10) * 65 + dollarMove * 10, y: (1 - dollarMove * 10) * 0 + dollarMove * 10 * 20) : CGPoint(x: 1, y: 20)
        let dollarMoveExpr2 = dollarMove <= 0.1 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.1 && dollarMove <= 0.2 ? CGPoint(x: (1 - (dollarMove - 0.1) * 10) * 65 + (dollarMove - 0.1) * 10, y: (1 - (dollarMove - 0.1) * 10) * 0 + (dollarMove - 0.1) * 10 * 18) : CGPoint(x: 1, y: 18))
        let dollarMoveExpr3 = dollarMove <= 0.2 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.2 && dollarMove <= 0.3 ? CGPoint(x: (1 - (dollarMove - 0.2) * 10) * 65 + (dollarMove - 0.2) * 10, y: (1 - (dollarMove - 0.2) * 10) * 0 + (dollarMove - 0.2) * 10 * 16) : CGPoint(x: 1, y: 16))
        let dollarMoveExpr4 = dollarMove <= 0.3 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.3 && dollarMove <= 0.4 ? CGPoint(x: (1 - (dollarMove - 0.3) * 10) * 65 + (dollarMove - 0.3) * 10, y: (1 - (dollarMove - 0.3) * 10) * 0 + (dollarMove - 0.3) * 10 * 14) : CGPoint(x: 1, y: 14))
        let dollarMoveExpr5 = dollarMove <= 0.4 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.4 && dollarMove <= 0.5 ? CGPoint(x: (1 - (dollarMove - 0.4) * 10) * 65 + (dollarMove - 0.4) * 10, y: (1 - (dollarMove - 0.4) * 10) * 0 + (dollarMove - 0.4) * 10 * 12) : CGPoint(x: 1, y: 12))
        let dollarMoveExpr6 = dollarMove <= 0.5 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.5 && dollarMove <= 0.6 ? CGPoint(x: (1 - (dollarMove - 0.5) * 10) * 65 + (dollarMove - 0.5) * 10, y: (1 - (dollarMove - 0.5) * 10) * 0 + (dollarMove - 0.5) * 10 * 10) : CGPoint(x: 1, y: 10))
        let dollarMoveExpr7 = dollarMove <= 0.6 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.6 && dollarMove <= 0.7 ? CGPoint(x: (1 - (dollarMove - 0.6) * 10) * 65 + (dollarMove - 0.6) * 10, y: (1 - (dollarMove - 0.6) * 10) * 0 + (dollarMove - 0.6) * 10 * 8) : CGPoint(x: 1, y: 8))
        let dollarMoveExpr8 = dollarMove <= 0.7 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.7 && dollarMove <= 0.8 ? CGPoint(x: (1 - (dollarMove - 0.7) * 10) * 65 + (dollarMove - 0.7) * 10, y: (1 - (dollarMove - 0.7) * 10) * 0 + (dollarMove - 0.7) * 10 * 6) : CGPoint(x: 1, y: 6))
        let dollarMoveExpr9 = dollarMove <= 0.8 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.8 && dollarMove <= 0.9 ? CGPoint(x: (1 - (dollarMove - 0.8) * 10) * 65 + (dollarMove - 0.9) * 10, y: (1 - (dollarMove - 0.8) * 10) * 0 + (dollarMove - 0.9) * 10 * 2) : CGPoint(x: 1, y: 4))
        let dollarScaleExpr1: CGFloat = dollarMove <= 0.1 ? (1 - dollarMove * 10) * 0.17 + dollarMove * 10 * 0.15 : 0.15
        let dollarScaleExpr2: CGFloat = dollarMove <= 0.1 ? 0 : (dollarMove > 0.1 && dollarMove <= 0.2 ? (1 - (dollarMove - 0.1) * 10) * 0.17 + (dollarMove - 0.1) * 10 * 0.15 : 0.15)
        let dollarScaleExpr3: CGFloat = dollarMove <= 0.2 ? 0 : (dollarMove > 0.2 && dollarMove <= 0.3 ? (1 - (dollarMove - 0.2) * 10) * 0.17 + (dollarMove - 0.2) * 10 * 0.15 : 0.15)
        let dollarScaleExpr4: CGFloat = dollarMove <= 0.3 ? 0 : (dollarMove > 0.3 && dollarMove <= 0.4 ? (1 - (dollarMove - 0.3) * 10) * 0.17 + (dollarMove - 0.3) * 10 * 0.15 : 0.15)
        let dollarScaleExpr5: CGFloat = dollarMove <= 0.4 ? 0 : (dollarMove > 0.4 && dollarMove <= 0.5 ? (1 - (dollarMove - 0.4) * 10) * 0.17 + (dollarMove - 0.4) * 10 * 0.15 : 0.15)
        let dollarScaleExpr6: CGFloat = dollarMove <= 0.5 ? 0 : (dollarMove > 0.5 && dollarMove <= 0.6 ? (1 - (dollarMove - 0.5) * 10) * 0.17 + (dollarMove - 0.5) * 10 * 0.15 : 0.15)
        let dollarScaleExpr7: CGFloat = dollarMove <= 0.6 ? 0 : (dollarMove > 0.6 && dollarMove <= 0.7 ? (1 - (dollarMove - 0.6) * 10) * 0.17 + (dollarMove - 0.6) * 10 * 0.15 : 0.15)
        let dollarScaleExpr8: CGFloat = dollarMove <= 0.7 ? 0 : (dollarMove > 0.7 && dollarMove <= 0.8 ? (1 - (dollarMove - 0.7) * 10) * 0.17 + (dollarMove - 0.7) * 10 * 0.15 : 0.15)
        let dollarScaleExpr9: CGFloat = dollarMove <= 0.8 ? 0 : (dollarMove > 0.8 && dollarMove <= 0.9 ? (1 - (dollarMove - 0.8) * 10) * 0.17 + (dollarMove - 0.8) * 10 * 0.15 : 0.15)

        //// s1 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr1.x, y: dollarMoveExpr1.y)
        context.scaleBy(x: dollarScaleExpr1, y: dollarScaleExpr1)

        let s1Rect = CGRect(x: 0, y: 0, width: 199, height: 134)
        let s1Path = UIBezierPath(rect: s1Rect)
        context.saveGState()
        s1Path.addClip()
        context.translateBy(x: floor(s1Rect.minX + 0.5), y: floor(s1Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -shekel.size.height)
        context.draw(shekel.cgImage!, in: CGRect(x: 0, y: 0, width: shekel.size.width, height: shekel.size.height))
        context.restoreGState()

        context.restoreGState()


        //// s2 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr2.x, y: dollarMoveExpr2.y)
        context.scaleBy(x: dollarScaleExpr2, y: dollarScaleExpr2)

        let s2Rect = CGRect(x: 0, y: 0, width: 199, height: 134)
        let s2Path = UIBezierPath(rect: s2Rect)
        context.saveGState()
        s2Path.addClip()
        context.translateBy(x: floor(s2Rect.minX + 0.5), y: floor(s2Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -shekel.size.height)
        context.draw(shekel.cgImage!, in: CGRect(x: 0, y: 0, width: shekel.size.width, height: shekel.size.height))
        context.restoreGState()

        context.restoreGState()


        //// s3 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr3.x, y: dollarMoveExpr3.y)
        context.scaleBy(x: dollarScaleExpr3, y: dollarScaleExpr3)

        let s3Rect = CGRect(x: 0, y: 0, width: 199, height: 134)
        let s3Path = UIBezierPath(rect: s3Rect)
        context.saveGState()
        s3Path.addClip()
        context.translateBy(x: floor(s3Rect.minX + 0.5), y: floor(s3Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -shekel.size.height)
        context.draw(shekel.cgImage!, in: CGRect(x: 0, y: 0, width: shekel.size.width, height: shekel.size.height))
        context.restoreGState()

        context.restoreGState()


        //// s4 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr4.x, y: dollarMoveExpr4.y)
        context.scaleBy(x: dollarScaleExpr4, y: dollarScaleExpr4)

        let s4Rect = CGRect(x: 0, y: 0, width: 199, height: 134)
        let s4Path = UIBezierPath(rect: s4Rect)
        context.saveGState()
        s4Path.addClip()
        context.translateBy(x: floor(s4Rect.minX + 0.5), y: floor(s4Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -shekel.size.height)
        context.draw(shekel.cgImage!, in: CGRect(x: 0, y: 0, width: shekel.size.width, height: shekel.size.height))
        context.restoreGState()

        context.restoreGState()


        //// s5 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr5.x, y: dollarMoveExpr5.y)
        context.scaleBy(x: dollarScaleExpr5, y: dollarScaleExpr5)

        let s5Rect = CGRect(x: 0, y: 0, width: 199, height: 134)
        let s5Path = UIBezierPath(rect: s5Rect)
        context.saveGState()
        s5Path.addClip()
        context.translateBy(x: floor(s5Rect.minX + 0.5), y: floor(s5Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -shekel.size.height)
        context.draw(shekel.cgImage!, in: CGRect(x: 0, y: 0, width: shekel.size.width, height: shekel.size.height))
        context.restoreGState()

        context.restoreGState()


        //// s6 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr6.x, y: dollarMoveExpr6.y)
        context.scaleBy(x: dollarScaleExpr6, y: dollarScaleExpr6)

        let s6Rect = CGRect(x: 0, y: 0, width: 199, height: 134)
        let s6Path = UIBezierPath(rect: s6Rect)
        context.saveGState()
        s6Path.addClip()
        context.translateBy(x: floor(s6Rect.minX + 0.5), y: floor(s6Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -shekel.size.height)
        context.draw(shekel.cgImage!, in: CGRect(x: 0, y: 0, width: shekel.size.width, height: shekel.size.height))
        context.restoreGState()

        context.restoreGState()


        //// s7 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr7.x, y: dollarMoveExpr7.y)
        context.scaleBy(x: dollarScaleExpr7, y: dollarScaleExpr7)

        let s7Rect = CGRect(x: 0, y: 0, width: 199, height: 134)
        let s7Path = UIBezierPath(rect: s7Rect)
        context.saveGState()
        s7Path.addClip()
        context.translateBy(x: floor(s7Rect.minX + 0.5), y: floor(s7Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -shekel.size.height)
        context.draw(shekel.cgImage!, in: CGRect(x: 0, y: 0, width: shekel.size.width, height: shekel.size.height))
        context.restoreGState()

        context.restoreGState()


        //// s8 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr8.x, y: dollarMoveExpr8.y)
        context.scaleBy(x: dollarScaleExpr8, y: dollarScaleExpr8)

        let s8Rect = CGRect(x: 0, y: 0, width: 199, height: 134)
        let s8Path = UIBezierPath(rect: s8Rect)
        context.saveGState()
        s8Path.addClip()
        context.translateBy(x: floor(s8Rect.minX + 0.5), y: floor(s8Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -shekel.size.height)
        context.draw(shekel.cgImage!, in: CGRect(x: 0, y: 0, width: shekel.size.width, height: shekel.size.height))
        context.restoreGState()

        context.restoreGState()


        //// s9 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr9.x, y: dollarMoveExpr9.y)
        context.scaleBy(x: dollarScaleExpr9, y: dollarScaleExpr9)

        let s9Rect = CGRect(x: 0, y: 0, width: 199, height: 134)
        let s9Path = UIBezierPath(rect: s9Rect)
        context.saveGState()
        s9Path.addClip()
        context.translateBy(x: floor(s9Rect.minX + 0.5), y: floor(s9Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -shekel.size.height)
        context.draw(shekel.cgImage!, in: CGRect(x: 0, y: 0, width: shekel.size.width, height: shekel.size.height))
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawThickEuroPack(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 40), resizing: ResizingBehavior = .aspectFit, dollarMove: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 40), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 40)



        //// Image Declarations
        let euro = UIImage(named: "euro.png")!

        //// Variable Declarations
        let dollarMoveExpr1 = dollarMove <= 0.1 ? CGPoint(x: (1 - dollarMove * 10) * 65 + dollarMove * 10, y: (1 - dollarMove * 10) * 0 + dollarMove * 10 * 20) : CGPoint(x: 1, y: 20)
        let dollarMoveExpr2 = dollarMove <= 0.1 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.1 && dollarMove <= 0.2 ? CGPoint(x: (1 - (dollarMove - 0.1) * 10) * 65 + (dollarMove - 0.1) * 10, y: (1 - (dollarMove - 0.1) * 10) * 0 + (dollarMove - 0.1) * 10 * 18) : CGPoint(x: 1, y: 18))
        let dollarMoveExpr3 = dollarMove <= 0.2 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.2 && dollarMove <= 0.3 ? CGPoint(x: (1 - (dollarMove - 0.2) * 10) * 65 + (dollarMove - 0.2) * 10, y: (1 - (dollarMove - 0.2) * 10) * 0 + (dollarMove - 0.2) * 10 * 16) : CGPoint(x: 1, y: 16))
        let dollarMoveExpr4 = dollarMove <= 0.3 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.3 && dollarMove <= 0.4 ? CGPoint(x: (1 - (dollarMove - 0.3) * 10) * 65 + (dollarMove - 0.3) * 10, y: (1 - (dollarMove - 0.3) * 10) * 0 + (dollarMove - 0.3) * 10 * 14) : CGPoint(x: 1, y: 14))
        let dollarMoveExpr5 = dollarMove <= 0.4 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.4 && dollarMove <= 0.5 ? CGPoint(x: (1 - (dollarMove - 0.4) * 10) * 65 + (dollarMove - 0.4) * 10, y: (1 - (dollarMove - 0.4) * 10) * 0 + (dollarMove - 0.4) * 10 * 12) : CGPoint(x: 1, y: 12))
        let dollarMoveExpr6 = dollarMove <= 0.5 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.5 && dollarMove <= 0.6 ? CGPoint(x: (1 - (dollarMove - 0.5) * 10) * 65 + (dollarMove - 0.5) * 10, y: (1 - (dollarMove - 0.5) * 10) * 0 + (dollarMove - 0.5) * 10 * 10) : CGPoint(x: 1, y: 10))
        let dollarMoveExpr7 = dollarMove <= 0.6 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.6 && dollarMove <= 0.7 ? CGPoint(x: (1 - (dollarMove - 0.6) * 10) * 65 + (dollarMove - 0.6) * 10, y: (1 - (dollarMove - 0.6) * 10) * 0 + (dollarMove - 0.6) * 10 * 8) : CGPoint(x: 1, y: 8))
        let dollarMoveExpr8 = dollarMove <= 0.7 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.7 && dollarMove <= 0.8 ? CGPoint(x: (1 - (dollarMove - 0.7) * 10) * 65 + (dollarMove - 0.7) * 10, y: (1 - (dollarMove - 0.7) * 10) * 0 + (dollarMove - 0.7) * 10 * 6) : CGPoint(x: 1, y: 6))
        let dollarMoveExpr9 = dollarMove <= 0.8 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.8 && dollarMove <= 0.9 ? CGPoint(x: (1 - (dollarMove - 0.8) * 10) * 65 + (dollarMove - 0.9) * 10, y: (1 - (dollarMove - 0.8) * 10) * 0 + (dollarMove - 0.9) * 10 * 2) : CGPoint(x: 1, y: 4))
        let dollarScaleExpr1: CGFloat = dollarMove <= 0.1 ? (1 - dollarMove * 10) * 0.17 + dollarMove * 10 * 0.15 : 0.15
        let dollarScaleExpr2: CGFloat = dollarMove <= 0.1 ? 0 : (dollarMove > 0.1 && dollarMove <= 0.2 ? (1 - (dollarMove - 0.1) * 10) * 0.17 + (dollarMove - 0.1) * 10 * 0.15 : 0.15)
        let dollarScaleExpr3: CGFloat = dollarMove <= 0.2 ? 0 : (dollarMove > 0.2 && dollarMove <= 0.3 ? (1 - (dollarMove - 0.2) * 10) * 0.17 + (dollarMove - 0.2) * 10 * 0.15 : 0.15)
        let dollarScaleExpr4: CGFloat = dollarMove <= 0.3 ? 0 : (dollarMove > 0.3 && dollarMove <= 0.4 ? (1 - (dollarMove - 0.3) * 10) * 0.17 + (dollarMove - 0.3) * 10 * 0.15 : 0.15)
        let dollarScaleExpr5: CGFloat = dollarMove <= 0.4 ? 0 : (dollarMove > 0.4 && dollarMove <= 0.5 ? (1 - (dollarMove - 0.4) * 10) * 0.17 + (dollarMove - 0.4) * 10 * 0.15 : 0.15)
        let dollarScaleExpr6: CGFloat = dollarMove <= 0.5 ? 0 : (dollarMove > 0.5 && dollarMove <= 0.6 ? (1 - (dollarMove - 0.5) * 10) * 0.17 + (dollarMove - 0.5) * 10 * 0.15 : 0.15)
        let dollarScaleExpr7: CGFloat = dollarMove <= 0.6 ? 0 : (dollarMove > 0.6 && dollarMove <= 0.7 ? (1 - (dollarMove - 0.6) * 10) * 0.17 + (dollarMove - 0.6) * 10 * 0.15 : 0.15)
        let dollarScaleExpr8: CGFloat = dollarMove <= 0.7 ? 0 : (dollarMove > 0.7 && dollarMove <= 0.8 ? (1 - (dollarMove - 0.7) * 10) * 0.17 + (dollarMove - 0.7) * 10 * 0.15 : 0.15)
        let dollarScaleExpr9: CGFloat = dollarMove <= 0.8 ? 0 : (dollarMove > 0.8 && dollarMove <= 0.9 ? (1 - (dollarMove - 0.8) * 10) * 0.17 + (dollarMove - 0.8) * 10 * 0.15 : 0.15)

        //// e1 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr1.x, y: dollarMoveExpr1.y)
        context.scaleBy(x: dollarScaleExpr1, y: dollarScaleExpr1)

        let e1Rect = CGRect(x: 0, y: 0, width: 196, height: 129)
        let e1Path = UIBezierPath(rect: e1Rect)
        context.saveGState()
        e1Path.addClip()
        context.translateBy(x: floor(e1Rect.minX + 0.5), y: floor(e1Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -euro.size.height)
        context.draw(euro.cgImage!, in: CGRect(x: 0, y: 0, width: euro.size.width, height: euro.size.height))
        context.restoreGState()

        context.restoreGState()


        //// e2 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr2.x, y: dollarMoveExpr2.y)
        context.scaleBy(x: dollarScaleExpr2, y: dollarScaleExpr2)

        let e2Rect = CGRect(x: 0, y: 0, width: 196, height: 129)
        let e2Path = UIBezierPath(rect: e2Rect)
        context.saveGState()
        e2Path.addClip()
        context.translateBy(x: floor(e2Rect.minX + 0.5), y: floor(e2Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -euro.size.height)
        context.draw(euro.cgImage!, in: CGRect(x: 0, y: 0, width: euro.size.width, height: euro.size.height))
        context.restoreGState()

        context.restoreGState()


        //// e3 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr3.x, y: dollarMoveExpr3.y)
        context.scaleBy(x: dollarScaleExpr3, y: dollarScaleExpr3)

        let e3Rect = CGRect(x: 0, y: 0, width: 196, height: 129)
        let e3Path = UIBezierPath(rect: e3Rect)
        context.saveGState()
        e3Path.addClip()
        context.translateBy(x: floor(e3Rect.minX + 0.5), y: floor(e3Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -euro.size.height)
        context.draw(euro.cgImage!, in: CGRect(x: 0, y: 0, width: euro.size.width, height: euro.size.height))
        context.restoreGState()

        context.restoreGState()


        //// e4 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr4.x, y: dollarMoveExpr4.y)
        context.scaleBy(x: dollarScaleExpr4, y: dollarScaleExpr4)

        let e4Rect = CGRect(x: 0, y: 0, width: 196, height: 129)
        let e4Path = UIBezierPath(rect: e4Rect)
        context.saveGState()
        e4Path.addClip()
        context.translateBy(x: floor(e4Rect.minX + 0.5), y: floor(e4Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -euro.size.height)
        context.draw(euro.cgImage!, in: CGRect(x: 0, y: 0, width: euro.size.width, height: euro.size.height))
        context.restoreGState()

        context.restoreGState()


        //// e5 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr5.x, y: dollarMoveExpr5.y)
        context.scaleBy(x: dollarScaleExpr5, y: dollarScaleExpr5)

        let e5Rect = CGRect(x: 0, y: 0, width: 196, height: 129)
        let e5Path = UIBezierPath(rect: e5Rect)
        context.saveGState()
        e5Path.addClip()
        context.translateBy(x: floor(e5Rect.minX + 0.5), y: floor(e5Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -euro.size.height)
        context.draw(euro.cgImage!, in: CGRect(x: 0, y: 0, width: euro.size.width, height: euro.size.height))
        context.restoreGState()

        context.restoreGState()


        //// e6 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr6.x, y: dollarMoveExpr6.y)
        context.scaleBy(x: dollarScaleExpr6, y: dollarScaleExpr6)

        let e6Rect = CGRect(x: 0, y: 0, width: 196, height: 129)
        let e6Path = UIBezierPath(rect: e6Rect)
        context.saveGState()
        e6Path.addClip()
        context.translateBy(x: floor(e6Rect.minX + 0.5), y: floor(e6Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -euro.size.height)
        context.draw(euro.cgImage!, in: CGRect(x: 0, y: 0, width: euro.size.width, height: euro.size.height))
        context.restoreGState()

        context.restoreGState()


        //// e7 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr7.x, y: dollarMoveExpr7.y)
        context.scaleBy(x: dollarScaleExpr7, y: dollarScaleExpr7)

        let e7Rect = CGRect(x: 0, y: 0, width: 196, height: 129)
        let e7Path = UIBezierPath(rect: e7Rect)
        context.saveGState()
        e7Path.addClip()
        context.translateBy(x: floor(e7Rect.minX + 0.5), y: floor(e7Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -euro.size.height)
        context.draw(euro.cgImage!, in: CGRect(x: 0, y: 0, width: euro.size.width, height: euro.size.height))
        context.restoreGState()

        context.restoreGState()


        //// e8 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr8.x, y: dollarMoveExpr8.y)
        context.scaleBy(x: dollarScaleExpr8, y: dollarScaleExpr8)

        let e8Rect = CGRect(x: 0, y: 0, width: 196, height: 129)
        let e8Path = UIBezierPath(rect: e8Rect)
        context.saveGState()
        e8Path.addClip()
        context.translateBy(x: floor(e8Rect.minX + 0.5), y: floor(e8Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -euro.size.height)
        context.draw(euro.cgImage!, in: CGRect(x: 0, y: 0, width: euro.size.width, height: euro.size.height))
        context.restoreGState()

        context.restoreGState()


        //// e9 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr9.x, y: dollarMoveExpr9.y)
        context.scaleBy(x: dollarScaleExpr9, y: dollarScaleExpr9)

        let e9Rect = CGRect(x: 0, y: 0, width: 196, height: 129)
        let e9Path = UIBezierPath(rect: e9Rect)
        context.saveGState()
        e9Path.addClip()
        context.translateBy(x: floor(e9Rect.minX + 0.5), y: floor(e9Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -euro.size.height)
        context.draw(euro.cgImage!, in: CGRect(x: 0, y: 0, width: euro.size.width, height: euro.size.height))
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawThickRublePack(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 40), resizing: ResizingBehavior = .aspectFit, dollarMove: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 40), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 40)



        //// Image Declarations
        let ruble = UIImage(named: "ruble.png")!

        //// Variable Declarations
        let dollarMoveExpr1 = dollarMove <= 0.1 ? CGPoint(x: (1 - dollarMove * 10) * 65 + dollarMove * 10, y: (1 - dollarMove * 10) * 0 + dollarMove * 10 * 20) : CGPoint(x: 1, y: 20)
        let dollarMoveExpr2 = dollarMove <= 0.1 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.1 && dollarMove <= 0.2 ? CGPoint(x: (1 - (dollarMove - 0.1) * 10) * 65 + (dollarMove - 0.1) * 10, y: (1 - (dollarMove - 0.1) * 10) * 0 + (dollarMove - 0.1) * 10 * 18) : CGPoint(x: 1, y: 18))
        let dollarMoveExpr3 = dollarMove <= 0.2 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.2 && dollarMove <= 0.3 ? CGPoint(x: (1 - (dollarMove - 0.2) * 10) * 65 + (dollarMove - 0.2) * 10, y: (1 - (dollarMove - 0.2) * 10) * 0 + (dollarMove - 0.2) * 10 * 16) : CGPoint(x: 1, y: 16))
        let dollarMoveExpr4 = dollarMove <= 0.3 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.3 && dollarMove <= 0.4 ? CGPoint(x: (1 - (dollarMove - 0.3) * 10) * 65 + (dollarMove - 0.3) * 10, y: (1 - (dollarMove - 0.3) * 10) * 0 + (dollarMove - 0.3) * 10 * 14) : CGPoint(x: 1, y: 14))
        let dollarMoveExpr5 = dollarMove <= 0.4 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.4 && dollarMove <= 0.5 ? CGPoint(x: (1 - (dollarMove - 0.4) * 10) * 65 + (dollarMove - 0.4) * 10, y: (1 - (dollarMove - 0.4) * 10) * 0 + (dollarMove - 0.4) * 10 * 12) : CGPoint(x: 1, y: 12))
        let dollarMoveExpr6 = dollarMove <= 0.5 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.5 && dollarMove <= 0.6 ? CGPoint(x: (1 - (dollarMove - 0.5) * 10) * 65 + (dollarMove - 0.5) * 10, y: (1 - (dollarMove - 0.5) * 10) * 0 + (dollarMove - 0.5) * 10 * 10) : CGPoint(x: 1, y: 10))
        let dollarMoveExpr7 = dollarMove <= 0.6 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.6 && dollarMove <= 0.7 ? CGPoint(x: (1 - (dollarMove - 0.6) * 10) * 65 + (dollarMove - 0.6) * 10, y: (1 - (dollarMove - 0.6) * 10) * 0 + (dollarMove - 0.6) * 10 * 8) : CGPoint(x: 1, y: 8))
        let dollarMoveExpr8 = dollarMove <= 0.7 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.7 && dollarMove <= 0.8 ? CGPoint(x: (1 - (dollarMove - 0.7) * 10) * 65 + (dollarMove - 0.7) * 10, y: (1 - (dollarMove - 0.7) * 10) * 0 + (dollarMove - 0.7) * 10 * 6) : CGPoint(x: 1, y: 6))
        let dollarMoveExpr9 = dollarMove <= 0.8 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.8 && dollarMove <= 0.9 ? CGPoint(x: (1 - (dollarMove - 0.8) * 10) * 65 + (dollarMove - 0.9) * 10, y: (1 - (dollarMove - 0.8) * 10) * 0 + (dollarMove - 0.9) * 10 * 2) : CGPoint(x: 1, y: 4))
        let dollarScaleExpr1: CGFloat = dollarMove <= 0.1 ? (1 - dollarMove * 10) * 0.17 + dollarMove * 10 * 0.15 : 0.15
        let dollarScaleExpr2: CGFloat = dollarMove <= 0.1 ? 0 : (dollarMove > 0.1 && dollarMove <= 0.2 ? (1 - (dollarMove - 0.1) * 10) * 0.17 + (dollarMove - 0.1) * 10 * 0.15 : 0.15)
        let dollarScaleExpr3: CGFloat = dollarMove <= 0.2 ? 0 : (dollarMove > 0.2 && dollarMove <= 0.3 ? (1 - (dollarMove - 0.2) * 10) * 0.17 + (dollarMove - 0.2) * 10 * 0.15 : 0.15)
        let dollarScaleExpr4: CGFloat = dollarMove <= 0.3 ? 0 : (dollarMove > 0.3 && dollarMove <= 0.4 ? (1 - (dollarMove - 0.3) * 10) * 0.17 + (dollarMove - 0.3) * 10 * 0.15 : 0.15)
        let dollarScaleExpr5: CGFloat = dollarMove <= 0.4 ? 0 : (dollarMove > 0.4 && dollarMove <= 0.5 ? (1 - (dollarMove - 0.4) * 10) * 0.17 + (dollarMove - 0.4) * 10 * 0.15 : 0.15)
        let dollarScaleExpr6: CGFloat = dollarMove <= 0.5 ? 0 : (dollarMove > 0.5 && dollarMove <= 0.6 ? (1 - (dollarMove - 0.5) * 10) * 0.17 + (dollarMove - 0.5) * 10 * 0.15 : 0.15)
        let dollarScaleExpr7: CGFloat = dollarMove <= 0.6 ? 0 : (dollarMove > 0.6 && dollarMove <= 0.7 ? (1 - (dollarMove - 0.6) * 10) * 0.17 + (dollarMove - 0.6) * 10 * 0.15 : 0.15)
        let dollarScaleExpr8: CGFloat = dollarMove <= 0.7 ? 0 : (dollarMove > 0.7 && dollarMove <= 0.8 ? (1 - (dollarMove - 0.7) * 10) * 0.17 + (dollarMove - 0.7) * 10 * 0.15 : 0.15)
        let dollarScaleExpr9: CGFloat = dollarMove <= 0.8 ? 0 : (dollarMove > 0.8 && dollarMove <= 0.9 ? (1 - (dollarMove - 0.8) * 10) * 0.17 + (dollarMove - 0.8) * 10 * 0.15 : 0.15)

        //// ru1 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr1.x, y: dollarMoveExpr1.y)
        context.scaleBy(x: dollarScaleExpr1, y: dollarScaleExpr1)

        let ru1Rect = CGRect(x: 0, y: 0, width: 209, height: 138)
        let ru1Path = UIBezierPath(rect: ru1Rect)
        context.saveGState()
        ru1Path.addClip()
        context.translateBy(x: floor(ru1Rect.minX + 0.5), y: floor(ru1Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -ruble.size.height)
        context.draw(ruble.cgImage!, in: CGRect(x: 0, y: 0, width: ruble.size.width, height: ruble.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ru2 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr2.x, y: dollarMoveExpr2.y)
        context.scaleBy(x: dollarScaleExpr2, y: dollarScaleExpr2)

        let ru2Rect = CGRect(x: 0, y: 0, width: 209, height: 138)
        let ru2Path = UIBezierPath(rect: ru2Rect)
        context.saveGState()
        ru2Path.addClip()
        context.translateBy(x: floor(ru2Rect.minX + 0.5), y: floor(ru2Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -ruble.size.height)
        context.draw(ruble.cgImage!, in: CGRect(x: 0, y: 0, width: ruble.size.width, height: ruble.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ru3 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr3.x, y: dollarMoveExpr3.y)
        context.scaleBy(x: dollarScaleExpr3, y: dollarScaleExpr3)

        let ru3Rect = CGRect(x: 0, y: 0, width: 209, height: 138)
        let ru3Path = UIBezierPath(rect: ru3Rect)
        context.saveGState()
        ru3Path.addClip()
        context.translateBy(x: floor(ru3Rect.minX + 0.5), y: floor(ru3Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -ruble.size.height)
        context.draw(ruble.cgImage!, in: CGRect(x: 0, y: 0, width: ruble.size.width, height: ruble.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ru4 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr4.x, y: dollarMoveExpr4.y)
        context.scaleBy(x: dollarScaleExpr4, y: dollarScaleExpr4)

        let ru4Rect = CGRect(x: 0, y: 0, width: 209, height: 138)
        let ru4Path = UIBezierPath(rect: ru4Rect)
        context.saveGState()
        ru4Path.addClip()
        context.translateBy(x: floor(ru4Rect.minX + 0.5), y: floor(ru4Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -ruble.size.height)
        context.draw(ruble.cgImage!, in: CGRect(x: 0, y: 0, width: ruble.size.width, height: ruble.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ru5 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr5.x, y: dollarMoveExpr5.y)
        context.scaleBy(x: dollarScaleExpr5, y: dollarScaleExpr5)

        let ru5Rect = CGRect(x: 0, y: 0, width: 209, height: 138)
        let ru5Path = UIBezierPath(rect: ru5Rect)
        context.saveGState()
        ru5Path.addClip()
        context.translateBy(x: floor(ru5Rect.minX + 0.5), y: floor(ru5Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -ruble.size.height)
        context.draw(ruble.cgImage!, in: CGRect(x: 0, y: 0, width: ruble.size.width, height: ruble.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ru6 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr6.x, y: dollarMoveExpr6.y)
        context.scaleBy(x: dollarScaleExpr6, y: dollarScaleExpr6)

        let ru6Rect = CGRect(x: 0, y: 0, width: 209, height: 138)
        let ru6Path = UIBezierPath(rect: ru6Rect)
        context.saveGState()
        ru6Path.addClip()
        context.translateBy(x: floor(ru6Rect.minX + 0.5), y: floor(ru6Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -ruble.size.height)
        context.draw(ruble.cgImage!, in: CGRect(x: 0, y: 0, width: ruble.size.width, height: ruble.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ru7 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr7.x, y: dollarMoveExpr7.y)
        context.scaleBy(x: dollarScaleExpr7, y: dollarScaleExpr7)

        let ru7Rect = CGRect(x: 0, y: 0, width: 209, height: 138)
        let ru7Path = UIBezierPath(rect: ru7Rect)
        context.saveGState()
        ru7Path.addClip()
        context.translateBy(x: floor(ru7Rect.minX + 0.5), y: floor(ru7Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -ruble.size.height)
        context.draw(ruble.cgImage!, in: CGRect(x: 0, y: 0, width: ruble.size.width, height: ruble.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ru8 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr8.x, y: dollarMoveExpr8.y)
        context.scaleBy(x: dollarScaleExpr8, y: dollarScaleExpr8)

        let ru8Rect = CGRect(x: 0, y: 0, width: 209, height: 138)
        let ru8Path = UIBezierPath(rect: ru8Rect)
        context.saveGState()
        ru8Path.addClip()
        context.translateBy(x: floor(ru8Rect.minX + 0.5), y: floor(ru8Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -ruble.size.height)
        context.draw(ruble.cgImage!, in: CGRect(x: 0, y: 0, width: ruble.size.width, height: ruble.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ru9 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr9.x, y: (dollarMoveExpr9.y + 0.3))
        context.scaleBy(x: dollarScaleExpr9, y: dollarScaleExpr9)

        let ru9Rect = CGRect(x: 0, y: 0, width: 209, height: 138)
        let ru9Path = UIBezierPath(rect: ru9Rect)
        context.saveGState()
        ru9Path.addClip()
        context.translateBy(x: floor(ru9Rect.minX + 0.5), y: floor(ru9Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -ruble.size.height)
        context.draw(ruble.cgImage!, in: CGRect(x: 0, y: 0, width: ruble.size.width, height: ruble.size.height))
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawThickIenaPack(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 100, height: 40), resizing: ResizingBehavior = .aspectFit, dollarMove: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 100, height: 40), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 40)



        //// Image Declarations
        let iena = UIImage(named: "iena.png")!

        //// Variable Declarations
        let dollarMoveExpr1 = dollarMove <= 0.1 ? CGPoint(x: (1 - dollarMove * 10) * 65 + dollarMove * 10, y: (1 - dollarMove * 10) * 0 + dollarMove * 10 * 20) : CGPoint(x: 1, y: 20)
        let dollarMoveExpr2 = dollarMove <= 0.1 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.1 && dollarMove <= 0.2 ? CGPoint(x: (1 - (dollarMove - 0.1) * 10) * 65 + (dollarMove - 0.1) * 10, y: (1 - (dollarMove - 0.1) * 10) * 0 + (dollarMove - 0.1) * 10 * 18) : CGPoint(x: 1, y: 18))
        let dollarMoveExpr3 = dollarMove <= 0.2 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.2 && dollarMove <= 0.3 ? CGPoint(x: (1 - (dollarMove - 0.2) * 10) * 65 + (dollarMove - 0.2) * 10, y: (1 - (dollarMove - 0.2) * 10) * 0 + (dollarMove - 0.2) * 10 * 16) : CGPoint(x: 1, y: 16))
        let dollarMoveExpr4 = dollarMove <= 0.3 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.3 && dollarMove <= 0.4 ? CGPoint(x: (1 - (dollarMove - 0.3) * 10) * 65 + (dollarMove - 0.3) * 10, y: (1 - (dollarMove - 0.3) * 10) * 0 + (dollarMove - 0.3) * 10 * 14) : CGPoint(x: 1, y: 14))
        let dollarMoveExpr5 = dollarMove <= 0.4 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.4 && dollarMove <= 0.5 ? CGPoint(x: (1 - (dollarMove - 0.4) * 10) * 65 + (dollarMove - 0.4) * 10, y: (1 - (dollarMove - 0.4) * 10) * 0 + (dollarMove - 0.4) * 10 * 12) : CGPoint(x: 1, y: 12))
        let dollarMoveExpr6 = dollarMove <= 0.5 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.5 && dollarMove <= 0.6 ? CGPoint(x: (1 - (dollarMove - 0.5) * 10) * 65 + (dollarMove - 0.5) * 10, y: (1 - (dollarMove - 0.5) * 10) * 0 + (dollarMove - 0.5) * 10 * 10) : CGPoint(x: 1, y: 10))
        let dollarMoveExpr7 = dollarMove <= 0.6 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.6 && dollarMove <= 0.7 ? CGPoint(x: (1 - (dollarMove - 0.6) * 10) * 65 + (dollarMove - 0.6) * 10, y: (1 - (dollarMove - 0.6) * 10) * 0 + (dollarMove - 0.6) * 10 * 8) : CGPoint(x: 1, y: 8))
        let dollarMoveExpr8 = dollarMove <= 0.7 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.7 && dollarMove <= 0.8 ? CGPoint(x: (1 - (dollarMove - 0.7) * 10) * 65 + (dollarMove - 0.7) * 10, y: (1 - (dollarMove - 0.7) * 10) * 0 + (dollarMove - 0.7) * 10 * 6) : CGPoint(x: 1, y: 6))
        let dollarMoveExpr9 = dollarMove <= 0.8 ? CGPoint(x: 65, y: 0) : (dollarMove > 0.8 && dollarMove <= 0.9 ? CGPoint(x: (1 - (dollarMove - 0.8) * 10) * 65 + (dollarMove - 0.9) * 10, y: (1 - (dollarMove - 0.8) * 10) * 0 + (dollarMove - 0.9) * 10 * 2) : CGPoint(x: 1, y: 4))
        let dollarScaleExpr1: CGFloat = dollarMove <= 0.1 ? (1 - dollarMove * 10) * 0.17 + dollarMove * 10 * 0.15 : 0.15
        let dollarScaleExpr2: CGFloat = dollarMove <= 0.1 ? 0 : (dollarMove > 0.1 && dollarMove <= 0.2 ? (1 - (dollarMove - 0.1) * 10) * 0.17 + (dollarMove - 0.1) * 10 * 0.15 : 0.15)
        let dollarScaleExpr3: CGFloat = dollarMove <= 0.2 ? 0 : (dollarMove > 0.2 && dollarMove <= 0.3 ? (1 - (dollarMove - 0.2) * 10) * 0.17 + (dollarMove - 0.2) * 10 * 0.15 : 0.15)
        let dollarScaleExpr4: CGFloat = dollarMove <= 0.3 ? 0 : (dollarMove > 0.3 && dollarMove <= 0.4 ? (1 - (dollarMove - 0.3) * 10) * 0.17 + (dollarMove - 0.3) * 10 * 0.15 : 0.15)
        let dollarScaleExpr5: CGFloat = dollarMove <= 0.4 ? 0 : (dollarMove > 0.4 && dollarMove <= 0.5 ? (1 - (dollarMove - 0.4) * 10) * 0.17 + (dollarMove - 0.4) * 10 * 0.15 : 0.15)
        let dollarScaleExpr6: CGFloat = dollarMove <= 0.5 ? 0 : (dollarMove > 0.5 && dollarMove <= 0.6 ? (1 - (dollarMove - 0.5) * 10) * 0.17 + (dollarMove - 0.5) * 10 * 0.15 : 0.15)
        let dollarScaleExpr7: CGFloat = dollarMove <= 0.6 ? 0 : (dollarMove > 0.6 && dollarMove <= 0.7 ? (1 - (dollarMove - 0.6) * 10) * 0.17 + (dollarMove - 0.6) * 10 * 0.15 : 0.15)
        let dollarScaleExpr8: CGFloat = dollarMove <= 0.7 ? 0 : (dollarMove > 0.7 && dollarMove <= 0.8 ? (1 - (dollarMove - 0.7) * 10) * 0.17 + (dollarMove - 0.7) * 10 * 0.15 : 0.15)
        let dollarScaleExpr9: CGFloat = dollarMove <= 0.8 ? 0 : (dollarMove > 0.8 && dollarMove <= 0.9 ? (1 - (dollarMove - 0.8) * 10) * 0.17 + (dollarMove - 0.8) * 10 * 0.15 : 0.15)

        //// ie1 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr1.x, y: dollarMoveExpr1.y)
        context.scaleBy(x: dollarScaleExpr1, y: dollarScaleExpr1)

        let ie1Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let ie1Path = UIBezierPath(rect: ie1Rect)
        context.saveGState()
        ie1Path.addClip()
        context.translateBy(x: floor(ie1Rect.minX + 0.5), y: floor(ie1Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -iena.size.height)
        context.draw(iena.cgImage!, in: CGRect(x: 0, y: 0, width: iena.size.width, height: iena.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ie 2 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr2.x, y: dollarMoveExpr2.y)
        context.scaleBy(x: dollarScaleExpr2, y: dollarScaleExpr2)

        let ie2Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let ie2Path = UIBezierPath(rect: ie2Rect)
        context.saveGState()
        ie2Path.addClip()
        context.translateBy(x: floor(ie2Rect.minX + 0.5), y: floor(ie2Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -iena.size.height)
        context.draw(iena.cgImage!, in: CGRect(x: 0, y: 0, width: iena.size.width, height: iena.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ie 3 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr3.x, y: dollarMoveExpr3.y)
        context.scaleBy(x: dollarScaleExpr3, y: dollarScaleExpr3)

        let ie3Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let ie3Path = UIBezierPath(rect: ie3Rect)
        context.saveGState()
        ie3Path.addClip()
        context.translateBy(x: floor(ie3Rect.minX + 0.5), y: floor(ie3Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -iena.size.height)
        context.draw(iena.cgImage!, in: CGRect(x: 0, y: 0, width: iena.size.width, height: iena.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ie 4 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr4.x, y: dollarMoveExpr4.y)
        context.scaleBy(x: dollarScaleExpr4, y: dollarScaleExpr4)

        let ie4Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let ie4Path = UIBezierPath(rect: ie4Rect)
        context.saveGState()
        ie4Path.addClip()
        context.translateBy(x: floor(ie4Rect.minX + 0.5), y: floor(ie4Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -iena.size.height)
        context.draw(iena.cgImage!, in: CGRect(x: 0, y: 0, width: iena.size.width, height: iena.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ie 5 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr5.x, y: dollarMoveExpr5.y)
        context.scaleBy(x: dollarScaleExpr5, y: dollarScaleExpr5)

        let ie5Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let ie5Path = UIBezierPath(rect: ie5Rect)
        context.saveGState()
        ie5Path.addClip()
        context.translateBy(x: floor(ie5Rect.minX + 0.5), y: floor(ie5Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -iena.size.height)
        context.draw(iena.cgImage!, in: CGRect(x: 0, y: 0, width: iena.size.width, height: iena.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ie 6 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr6.x, y: dollarMoveExpr6.y)
        context.scaleBy(x: dollarScaleExpr6, y: dollarScaleExpr6)

        let ie6Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let ie6Path = UIBezierPath(rect: ie6Rect)
        context.saveGState()
        ie6Path.addClip()
        context.translateBy(x: floor(ie6Rect.minX + 0.5), y: floor(ie6Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -iena.size.height)
        context.draw(iena.cgImage!, in: CGRect(x: 0, y: 0, width: iena.size.width, height: iena.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ie 7 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr7.x, y: dollarMoveExpr7.y)
        context.scaleBy(x: dollarScaleExpr7, y: dollarScaleExpr7)

        let ie7Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let ie7Path = UIBezierPath(rect: ie7Rect)
        context.saveGState()
        ie7Path.addClip()
        context.translateBy(x: floor(ie7Rect.minX + 0.5), y: floor(ie7Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -iena.size.height)
        context.draw(iena.cgImage!, in: CGRect(x: 0, y: 0, width: iena.size.width, height: iena.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ie 8 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr8.x, y: dollarMoveExpr8.y)
        context.scaleBy(x: dollarScaleExpr8, y: dollarScaleExpr8)

        let ie8Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let ie8Path = UIBezierPath(rect: ie8Rect)
        context.saveGState()
        ie8Path.addClip()
        context.translateBy(x: floor(ie8Rect.minX + 0.5), y: floor(ie8Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -iena.size.height)
        context.draw(iena.cgImage!, in: CGRect(x: 0, y: 0, width: iena.size.width, height: iena.size.height))
        context.restoreGState()

        context.restoreGState()


        //// ie9 Drawing
        context.saveGState()
        context.translateBy(x: dollarMoveExpr9.x, y: dollarMoveExpr9.y)
        context.scaleBy(x: dollarScaleExpr9, y: dollarScaleExpr9)

        let ie9Rect = CGRect(x: 0, y: 0, width: 201, height: 135)
        let ie9Path = UIBezierPath(rect: ie9Rect)
        context.saveGState()
        ie9Path.addClip()
        context.translateBy(x: floor(ie9Rect.minX + 0.5), y: floor(ie9Rect.minY + 0.5))
        context.scaleBy(x: 1, y: -1)
        context.translateBy(x: 0, y: -iena.size.height)
        context.draw(iena.cgImage!, in: CGRect(x: 0, y: 0, width: iena.size.width, height: iena.size.height))
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }




    @objc(CommonKitResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}



private extension UIColor {
    func blended(withFraction fraction: CGFloat, of color: UIColor) -> UIColor {
        var r1: CGFloat = 1, g1: CGFloat = 1, b1: CGFloat = 1, a1: CGFloat = 1
        var r2: CGFloat = 1, g2: CGFloat = 1, b2: CGFloat = 1, a2: CGFloat = 1

        self.getRed(&r1, green: &g1, blue: &b1, alpha: &a1)
        color.getRed(&r2, green: &g2, blue: &b2, alpha: &a2)

        return UIColor(red: r1 * (1 - fraction) + r2 * fraction,
            green: g1 * (1 - fraction) + g2 * fraction,
            blue: b1 * (1 - fraction) + b2 * fraction,
            alpha: a1 * (1 - fraction) + a2 * fraction);
    }
}
